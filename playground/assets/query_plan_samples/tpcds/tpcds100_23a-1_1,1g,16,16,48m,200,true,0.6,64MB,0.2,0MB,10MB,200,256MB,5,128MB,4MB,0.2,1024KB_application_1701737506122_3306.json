{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -841802732,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187] "
        },
        "34" : {
          "sign" : 260124862,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7701230628,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#228 = c_customer_sk#249) "
        },
        "67" : {
          "sign" : 1581162459,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#295, d_date_id#296, d_date#297, d_month_seq#298, d_week_seq#299, d_quarter_seq#300, d_year#301, d_dow#302, d_moy#303, d_dom#304, d_qoy#305, d_fy_year#306, d_fy_quarter_seq#307, d_fy_week_seq#308, d_day_name#309, d_quarter_name#310, d_holiday#311, d_weekend#312, d_following_holiday#313, d_first_dom#314, d_last_dom#315, d_same_day_ly#316, d_same_day_lq#317, d_current_day#318, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "12" : {
          "sign" : 707082671,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#273) AND isnotnull(d_moy#275)) AND ((d_year#273 = 1999) AND (d_moy#275 = 1))) AND isnotnull(d_date_sk#267)) "
        },
        "66" : {
          "sign" : -2074867860,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#301) AND isnotnull(d_moy#303)) AND ((d_year#301 = 1999) AND (d_moy#303 = 1))) AND isnotnull(d_date_sk#295)) "
        },
        "51" : {
          "sign" : -838854454,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 355962,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198)) "
        },
        "8" : {
          "sign" : 1224322716,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4584736544,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
        },
        "73" : {
          "sign" : 797607862,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4248649360,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
        },
        "19" : {
          "sign" : -833442568,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4248649360,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
        },
        "23" : {
          "sign" : 437822322,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "62" : {
          "sign" : 298797713,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2303475968,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
        },
        "4" : {
          "sign" : 798006540,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3438552408,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
        },
        "40" : {
          "sign" : -452187342,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#249, c_customer_id#250, c_current_cdemo_sk#251, c_current_hdemo_sk#252, c_current_addr_sk#253, c_first_shipto_date_sk#254, c_first_sales_date_sk#255, c_salutation#256, c_first_name#257, c_last_name#258, c_preferred_cust_flag#259, c_birth_day#260, c_birth_month#261, c_birth_year#262, c_birth_country#263, c_login#264, c_email_address#265, c_last_review_date#266], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "15" : {
          "sign" : -1747955944,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (cnt#9L > 4) "
        },
        "11" : {
          "sign" : -982507560,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#267] "
        },
        "9" : {
          "sign" : -1702349002,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#140) AND dynamicpruning#348 [cs_sold_date_sk#140]) "
        },
        "44" : {
          "sign" : -1834382553,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7701230628,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#177 = c_customer_sk#89) "
        },
        "33" : {
          "sign" : 185242800,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601054824,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#235, ss_sales_price#238, c_customer_sk#249] "
        },
        "22" : {
          "sign" : 1064076512,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#343 [ss_sold_date_sk#38]) "
        },
        "56" : {
          "sign" : -1386449860,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1111929680,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#3] "
        },
        "55" : {
          "sign" : -576393737,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "26" : {
          "sign" : 1227723257,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "50" : {
          "sign" : -859196700,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 17364,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#198] "
        },
        "37" : {
          "sign" : 173275759,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 43776970976,
          "rowCount" : 288006388,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#226, ss_item_sk#227, ss_customer_sk#228, ss_cdemo_sk#229, ss_hdemo_sk#230, ss_addr_sk#231, ss_store_sk#232, ss_promo_sk#233, ss_ticket_number#234L, ss_quantity#235, ss_wholesale_cost#236, ss_list_price#237, ss_sales_price#238, ss_ext_discount_amt#239, ss_ext_sales_price#240, ss_ext_wholesale_cost#241, ss_ext_list_price#242, ss_ext_tax#243, ss_coupon_amt#244, ss_net_paid#245, ss_net_paid_inc_tax#246, ss_net_profit#247, ss_sold_date_sk#248], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "68" : {
          "sign" : -424355241,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3447095052,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [item_sk#7] "
        },
        "61" : {
          "sign" : 1598919968,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2303475968,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#7) "
        },
        "13" : {
          "sign" : -1222183879,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#267, d_date_id#268, d_date#269, d_month_seq#270, d_week_seq#271, d_quarter_seq#272, d_year#273, d_dow#274, d_moy#275, d_dom#276, d_qoy#277, d_fy_year#278, d_fy_quarter_seq#279, d_fy_week_seq#280, d_day_name#281, d_quarter_name#282, d_holiday#283, d_weekend#284, d_following_holiday#285, d_first_dom#286, d_last_dom#287, d_same_day_ly#288, d_same_day_lq#289, d_current_day#290, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "46" : {
          "sign" : 1935968975,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#197 = d_date_sk#198) "
        },
        "24" : {
          "sign" : 886815593,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23152,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
        },
        "35" : {
          "sign" : -1560061009,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601125024,
          "rowCount" : 275046876,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238] "
        },
        "16" : {
          "sign" : -2090436796,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#342, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L] "
        },
        "5" : {
          "sign" : 1616311279,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4011644476,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#249) "
        },
        "72" : {
          "sign" : 1370708882,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 38205303493,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
        },
        "10" : {
          "sign" : 1536480445,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#107, cs_ship_date_sk#108, cs_bill_customer_sk#109, cs_bill_cdemo_sk#110, cs_bill_hdemo_sk#111, cs_bill_addr_sk#112, cs_ship_customer_sk#113, cs_ship_cdemo_sk#114, cs_ship_hdemo_sk#115, cs_ship_addr_sk#116, cs_call_center_sk#117, cs_catalog_page_sk#118, cs_ship_mode_sk#119, cs_warehouse_sk#120, cs_item_sk#121, cs_promo_sk#122, cs_order_number#123L, cs_quantity#124, cs_wholesale_cost#125, cs_list_price#126, cs_sales_price#127, cs_ext_discount_amt#128, cs_ext_sales_price#129, cs_ext_wholesale_cost#130, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "59" : {
          "sign" : 296060714,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2015541472,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#249) "
        },
        "48" : {
          "sign" : -1572622176,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925696056,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#344 [ss_sold_date_sk#197]) "
        },
        "21" : {
          "sign" : -875569714,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
        },
        "76" : {
          "sign" : -26940830,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#345 [ss_sold_date_sk#38]) "
        },
        "54" : {
          "sign" : -337975679,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
        },
        "43" : {
          "sign" : -519454677,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601054824,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#184, ss_sales_price#187, c_customer_sk#89] "
        },
        "65" : {
          "sign" : 1015409946,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#295] "
        },
        "71" : {
          "sign" : 484368894,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 10341285156,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#342] "
        },
        "57" : {
          "sign" : 668786725,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1945876940,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#295) "
        },
        "32" : {
          "sign" : -689210676,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 55561772,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12] "
        },
        "49" : {
          "sign" : 174504602,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#175, ss_item_sk#176, ss_customer_sk#177, ss_cdemo_sk#178, ss_hdemo_sk#179, ss_addr_sk#180, ss_store_sk#181, ss_promo_sk#182, ss_ticket_number#183L, ss_quantity#184, ss_wholesale_cost#185, ss_list_price#186, ss_sales_price#187, ss_ext_discount_amt#188, ss_ext_sales_price#189, ss_ext_wholesale_cost#190, ss_ext_list_price#191, ss_ext_tax#192, ss_coupon_amt#193, ss_net_paid#194, ss_net_paid_inc_tax#195, ss_net_profit#196, ss_sold_date_sk#197], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : 1874995751,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4011644476,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
        },
        "36" : {
          "sign" : -625726851,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41807125152,
          "rowCount" : 275046876,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ss_customer_sk#228) "
        },
        "1" : {
          "sign" : -272767323,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 3328189872,
          "rowCount" : 208011867,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "39" : {
          "sign" : 959302974,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#249) "
        },
        "17" : {
          "sign" : 704265920,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 10341285156,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#342] "
        },
        "25" : {
          "sign" : 1327533026,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 355962,
          "rowCount" : 1447,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
        },
        "60" : {
          "sign" : 1067379643,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2015541472,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
        },
        "14" : {
          "sign" : -1787766631,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3447095052,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [item_sk#7] "
        },
        "47" : {
          "sign" : 510617992,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354733484,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197] "
        },
        "31" : {
          "sign" : 304203484,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 55561772,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 []))) "
        },
        "69" : {
          "sign" : -1973202602,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (cnt#9L > 4) "
        },
        "58" : {
          "sign" : 2058775311,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1727606976,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
        },
        "64" : {
          "sign" : 2108049380,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#141, ws_ship_date_sk#142, ws_item_sk#143, ws_bill_customer_sk#144, ws_bill_cdemo_sk#145, ws_bill_hdemo_sk#146, ws_bill_addr_sk#147, ws_ship_customer_sk#148, ws_ship_cdemo_sk#149, ws_ship_hdemo_sk#150, ws_ship_addr_sk#151, ws_web_page_sk#152, ws_web_site_sk#153, ws_ship_mode_sk#154, ws_warehouse_sk#155, ws_promo_sk#156, ws_order_number#157L, ws_quantity#158, ws_wholesale_cost#159, ws_list_price#160, ws_sales_price#161, ws_ext_discount_amt#162, ws_ext_sales_price#163, ws_ext_wholesale_cost#164, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "53" : {
          "sign" : 1085635783,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
        },
        "42" : {
          "sign" : -1600253220,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 47624376,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10] "
        },
        "75" : {
          "sign" : -1495134128,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
        },
        "0" : {
          "sign" : -1884832075,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 24,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [sum(sales#0) AS sum(sales)#340] "
        },
        "20" : {
          "sign" : -2088370312,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
        },
        "27" : {
          "sign" : -825358377,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 25500000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#67, i_item_desc#71] "
        },
        "70" : {
          "sign" : -1758701054,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 5745158420,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#342, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L] "
        },
        "2" : {
          "sign" : 1406465455,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2216260192,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#0] "
        },
        "38" : {
          "sign" : -1208300746,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 24000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#249] "
        },
        "18" : {
          "sign" : -977528876,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 38205303493,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
        },
        "30" : {
          "sign" : -995444434,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23812188,
          "rowCount" : 1984349,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#249] "
        },
        "7" : {
          "sign" : -491363289,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4584736544,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#7) "
        },
        "29" : {
          "sign" : 1444627727,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "41" : {
          "sign" : -360205298,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 24,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [max(csales#10) AS tpcds_cmax#11] "
        },
        "63" : {
          "sign" : 333996484,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#174) AND dynamicpruning#350 [ws_sold_date_sk#174]) "
        },
        "3" : {
          "sign" : 544510430,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3878455336,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#267) "
        },
        "74" : {
          "sign" : 909453818,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
        },
        "52" : {
          "sign" : -1200914412,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#198, d_date_id#199, d_date#200, d_month_seq#201, d_week_seq#202, d_quarter_seq#203, d_year#204, d_dow#205, d_moy#206, d_dom#207, d_qoy#208, d_fy_year#209, d_fy_quarter_seq#210, d_fy_week_seq#211, d_day_name#212, d_quarter_name#213, d_holiday#214, d_weekend#215, d_following_holiday#216, d_first_dom#217, d_last_dom#218, d_same_day_ly#219, d_same_day_lq#220, d_current_day#221, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "28" : {
          "sign" : -1751086968,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#67) "
        }
      },
      "links" : [ {
        "fromId" : 10,
        "fromName" : "LogicalRelation",
        "toId" : 9,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "LogicalRelation",
        "toId" : 12,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Filter",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 9,
        "fromName" : "Filter",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Join",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 18,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "LogicalRelation",
        "toId" : 28,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Filter",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 18,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Join",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Aggregate",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Filter",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "LogicalRelation",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Filter",
        "toId" : 35,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Join",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Aggregate",
        "toId" : 31,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "LogicalRelation",
        "toId" : 48,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "LogicalRelation",
        "toId" : 51,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Filter",
        "toId" : 50,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Project",
        "toId" : 48,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 48,
        "fromName" : "Filter",
        "toId" : 47,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Join",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "LogicalRelation",
        "toId" : 54,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Filter",
        "toId" : 53,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Join",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 42,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Aggregate",
        "toId" : 41,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Aggregate",
        "toId" : 31,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 31,
        "fromName" : "Filter",
        "toId" : 30,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Join",
        "toId" : 2,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Project",
        "toId" : 1,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "LogicalRelation",
        "toId" : 63,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "LogicalRelation",
        "toId" : 66,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "Filter",
        "toId" : 65,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Project",
        "toId" : 63,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 63,
        "fromName" : "Filter",
        "toId" : 62,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Project",
        "toId" : 61,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 76,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 76,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 76,
        "fromName" : "Filter",
        "toId" : 75,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "Project",
        "toId" : 74,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 74,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 74,
        "fromName" : "Join",
        "toId" : 73,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Join",
        "toId" : 71,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Project",
        "toId" : 70,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Aggregate",
        "toId" : 69,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Filter",
        "toId" : 68,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Project",
        "toId" : 61,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Join",
        "toId" : 60,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "Join",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Join",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 1,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "Union",
        "toId" : 0,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "Aggregate [sum(sales#0) AS sum(sales)#340]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#0]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#267)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#249)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#7)\n   :     :     :     :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :     :  +- Filter (isnotnull(cs_sold_date_sk#140) AND dynamicpruning#348 [cs_sold_date_sk#140])\n   :     :     :     :     :  +- Project [d_date_sk#267]\n   :     :     :     :     :     +- Filter (((isnotnull(d_year#273) AND isnotnull(d_moy#275)) AND ((d_year#273 = 1999) AND (d_moy#275 = 1))) AND isnotnull(d_date_sk#267))\n   :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#267,d_date_id#268,d_date#269,d_month_seq#270,d_week_seq#271,d_quarter_seq#272,d_year#273,d_dow#274,d_moy#275,d_dom#276,d_qoy#277,d_fy_year#278,d_fy_quarter_seq#279,d_fy_week_seq#280,d_day_name#281,d_quarter_name#282,d_holiday#283,d_weekend#284,d_following_holiday#285,d_first_dom#286,d_last_dom#287,d_same_day_ly#288,d_same_day_lq#289,d_current_day#290,... 4 more fields] parquet\n   :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n   :     :     :     +- Project [item_sk#7]\n   :     :     :        +- Filter (cnt#9L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#342, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#342]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- Project [ss_item_sk#17, d_date#41]\n   :     :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :     :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :     :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#343 [ss_sold_date_sk#38])\n   :     :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   :     :     :                    :     +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    +- Project [i_item_sk#67, i_item_desc#71]\n   :     :     :                       +- Filter isnotnull(i_item_sk#67)\n   :     :     :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n   :     :     +- Project [c_customer_sk#249]\n   :     :        +- Filter (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 [])))\n   :     :           :  +- Aggregate [max(csales#10) AS tpcds_cmax#11]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10]\n   :     :           :        +- Project [ss_quantity#184, ss_sales_price#187, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#177 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#197 = d_date_sk#198)\n   :     :           :              :     :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#344 [ss_sold_date_sk#197])\n   :     :           :              :     :     :  +- Project [d_date_sk#198]\n   :     :           :              :     :     :     +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#175,ss_item_sk#176,ss_customer_sk#177,ss_cdemo_sk#178,ss_hdemo_sk#179,ss_addr_sk#180,ss_store_sk#181,ss_promo_sk#182,ss_ticket_number#183L,ss_quantity#184,ss_wholesale_cost#185,ss_list_price#186,ss_sales_price#187,ss_ext_discount_amt#188,ss_ext_sales_price#189,ss_ext_wholesale_cost#190,ss_ext_list_price#191,ss_ext_tax#192,ss_coupon_amt#193,ss_net_paid#194,ss_net_paid_inc_tax#195,ss_net_profit#196,ss_sold_date_sk#197] parquet\n   :     :           :              :     +- Project [d_date_sk#198]\n   :     :           :              :        +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12]\n   :     :              +- Project [ss_quantity#235, ss_sales_price#238, c_customer_sk#249]\n   :     :                 +- Join Inner, (ss_customer_sk#228 = c_customer_sk#249)\n   :     :                    :- Project [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238]\n   :     :                    :  +- Filter isnotnull(ss_customer_sk#228)\n   :     :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#226,ss_item_sk#227,ss_customer_sk#228,ss_cdemo_sk#229,ss_hdemo_sk#230,ss_addr_sk#231,ss_store_sk#232,ss_promo_sk#233,ss_ticket_number#234L,ss_quantity#235,ss_wholesale_cost#236,ss_list_price#237,ss_sales_price#238,ss_ext_discount_amt#239,ss_ext_sales_price#240,ss_ext_wholesale_cost#241,ss_ext_list_price#242,ss_ext_tax#243,ss_coupon_amt#244,ss_net_paid#245,ss_net_paid_inc_tax#246,ss_net_profit#247,ss_sold_date_sk#248] parquet\n   :     :                    +- Project [c_customer_sk#249]\n   :     :                       +- Filter isnotnull(c_customer_sk#249)\n   :     :                          +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#249,c_customer_id#250,c_current_cdemo_sk#251,c_current_hdemo_sk#252,c_current_addr_sk#253,c_first_shipto_date_sk#254,c_first_sales_date_sk#255,c_salutation#256,c_first_name#257,c_last_name#258,c_preferred_cust_flag#259,c_birth_day#260,c_birth_month#261,c_birth_year#262,c_birth_country#263,c_login#264,c_email_address#265,c_last_review_date#266] parquet\n   :     +- Project [d_date_sk#267]\n   :        +- Filter (((isnotnull(d_year#273) AND isnotnull(d_moy#275)) AND ((d_year#273 = 1999) AND (d_moy#275 = 1))) AND isnotnull(d_date_sk#267))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#267,d_date_id#268,d_date#269,d_month_seq#270,d_week_seq#271,d_quarter_seq#272,d_year#273,d_dow#274,d_moy#275,d_dom#276,d_qoy#277,d_fy_year#278,d_fy_quarter_seq#279,d_fy_week_seq#280,d_day_name#281,d_quarter_name#282,d_holiday#283,d_weekend#284,d_following_holiday#285,d_first_dom#286,d_last_dom#287,d_same_day_ly#288,d_same_day_lq#289,d_current_day#290,... 4 more fields] parquet\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#3]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#295)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#249)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#7)\n         :     :     :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :     :  +- Filter (isnotnull(ws_sold_date_sk#174) AND dynamicpruning#350 [ws_sold_date_sk#174])\n         :     :     :     :  +- Project [d_date_sk#295]\n         :     :     :     :     +- Filter (((isnotnull(d_year#301) AND isnotnull(d_moy#303)) AND ((d_year#301 = 1999) AND (d_moy#303 = 1))) AND isnotnull(d_date_sk#295))\n         :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#295,d_date_id#296,d_date#297,d_month_seq#298,d_week_seq#299,d_quarter_seq#300,d_year#301,d_dow#302,d_moy#303,d_dom#304,d_qoy#305,d_fy_year#306,d_fy_quarter_seq#307,d_fy_week_seq#308,d_day_name#309,d_quarter_name#310,d_holiday#311,d_weekend#312,d_following_holiday#313,d_first_dom#314,d_last_dom#315,d_same_day_ly#316,d_same_day_lq#317,d_current_day#318,... 4 more fields] parquet\n         :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n         :     :     +- Project [item_sk#7]\n         :     :        +- Filter (cnt#9L > 4)\n         :     :           +- Aggregate [_groupingexpression#342, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#7, count(1) AS cnt#9L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#342]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- Project [ss_item_sk#17, d_date#41]\n         :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#345 [ss_sold_date_sk#38])\n         :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :     :                    :     +- Project [d_date_sk#39, d_date#41]\n         :     :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    +- Project [i_item_sk#67, i_item_desc#71]\n         :     :                       +- Filter isnotnull(i_item_sk#67)\n         :     :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n         :     +- Project [c_customer_sk#249]\n         :        +- Filter (isnotnull(ssales#12) AND (cast(ssales#12 as decimal(38,8)) > (0.950000 * scalar-subquery#13 [])))\n         :           :  +- Aggregate [max(csales#10) AS tpcds_cmax#11]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#184 as decimal(10,0)) * ss_sales_price#187)) AS csales#10]\n         :           :        +- Project [ss_quantity#184, ss_sales_price#187, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#177 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#197 = d_date_sk#198)\n         :           :              :     :- Project [ss_customer_sk#177, ss_quantity#184, ss_sales_price#187, ss_sold_date_sk#197]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#177) AND isnotnull(ss_sold_date_sk#197)) AND dynamicpruning#344 [ss_sold_date_sk#197])\n         :           :              :     :     :  +- Project [d_date_sk#198]\n         :           :              :     :     :     +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#175,ss_item_sk#176,ss_customer_sk#177,ss_cdemo_sk#178,ss_hdemo_sk#179,ss_addr_sk#180,ss_store_sk#181,ss_promo_sk#182,ss_ticket_number#183L,ss_quantity#184,ss_wholesale_cost#185,ss_list_price#186,ss_sales_price#187,ss_ext_discount_amt#188,ss_ext_sales_price#189,ss_ext_wholesale_cost#190,ss_ext_list_price#191,ss_ext_tax#192,ss_coupon_amt#193,ss_net_paid#194,ss_net_paid_inc_tax#195,ss_net_profit#196,ss_sold_date_sk#197] parquet\n         :           :              :     +- Project [d_date_sk#198]\n         :           :              :        +- Filter (d_year#204 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#198))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#198,d_date_id#199,d_date#200,d_month_seq#201,d_week_seq#202,d_quarter_seq#203,d_year#204,d_dow#205,d_moy#206,d_dom#207,d_qoy#208,d_fy_year#209,d_fy_quarter_seq#210,d_fy_week_seq#211,d_day_name#212,d_quarter_name#213,d_holiday#214,d_weekend#215,d_following_holiday#216,d_first_dom#217,d_last_dom#218,d_same_day_ly#219,d_same_day_lq#220,d_current_day#221,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#249], [c_customer_sk#249, sum((cast(ss_quantity#235 as decimal(10,0)) * ss_sales_price#238)) AS ssales#12]\n         :              +- Project [ss_quantity#235, ss_sales_price#238, c_customer_sk#249]\n         :                 +- Join Inner, (ss_customer_sk#228 = c_customer_sk#249)\n         :                    :- Project [ss_customer_sk#228, ss_quantity#235, ss_sales_price#238]\n         :                    :  +- Filter isnotnull(ss_customer_sk#228)\n         :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#226,ss_item_sk#227,ss_customer_sk#228,ss_cdemo_sk#229,ss_hdemo_sk#230,ss_addr_sk#231,ss_store_sk#232,ss_promo_sk#233,ss_ticket_number#234L,ss_quantity#235,ss_wholesale_cost#236,ss_list_price#237,ss_sales_price#238,ss_ext_discount_amt#239,ss_ext_sales_price#240,ss_ext_wholesale_cost#241,ss_ext_list_price#242,ss_ext_tax#243,ss_coupon_amt#244,ss_net_paid#245,ss_net_paid_inc_tax#246,ss_net_profit#247,ss_sold_date_sk#248] parquet\n         :                    +- Project [c_customer_sk#249]\n         :                       +- Filter isnotnull(c_customer_sk#249)\n         :                          +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#249,c_customer_id#250,c_current_cdemo_sk#251,c_current_hdemo_sk#252,c_current_addr_sk#253,c_first_shipto_date_sk#254,c_first_sales_date_sk#255,c_salutation#256,c_first_name#257,c_last_name#258,c_preferred_cust_flag#259,c_birth_day#260,c_birth_month#261,c_birth_year#262,c_birth_country#263,c_login#264,c_email_address#265,c_last_review_date#266] parquet\n         +- Project [d_date_sk#295]\n            +- Filter (((isnotnull(d_year#301) AND isnotnull(d_moy#303)) AND ((d_year#301 = 1999) AND (d_moy#303 = 1))) AND isnotnull(d_date_sk#295))\n               +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#295,d_date_id#296,d_date#297,d_month_seq#298,d_week_seq#299,d_quarter_seq#300,d_year#301,d_dow#302,d_moy#303,d_dom#304,d_qoy#305,d_fy_year#306,d_fy_quarter_seq#307,d_fy_week_seq#308,d_day_name#309,d_quarter_name#310,d_holiday#311,d_weekend#312,d_following_holiday#313,d_first_dom#314,d_last_dom#315,d_same_day_ly#316,d_same_day_lq#317,d_current_day#318,... 4 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 217186798808,
      "inputRowCount" : 1346060319
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40438224,
            "rowCount" : 842463,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1615724710272000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 731257884,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 538574903424000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26958816,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1795249678080000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1795249678080000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 538574903424000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1615724710272000,
            "rowCount" : 44881241952000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1115659744,
            "rowCount" : 69728734,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 417861648,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 897624839040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45019232,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20219112,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 28389561856,
        "inputRowCount" : 996763304
      },
      "PD" : {
        "4" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94791, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92854, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96819, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "5" : [ 6049721, 6030087, 6204013, 6143364, 6417576, 6042564, 6427913, 5778625, 5802410, 6411635, 6422810, 5944342, 6367492, 5961967, 6243307, 5978402, 6191850, 6371424, 6587778, 6447297, 6313620, 6422810, 6028759, 5986266, 6421901, 6258983, 6233722, 6298395, 6109356, 6084514, 6507783, 6147943, 6449506, 5943635, 6244334, 6411910, 6019024, 5910282, 5905669, 6426226, 6101492, 6107347, 5950904, 6407585, 6150044, 6285611, 6391406, 6019593, 5851354, 6052555, 6657567, 6402396, 6214507, 6340497, 6127688, 6436563, 6457410, 6417576, 6044880, 6353092, 6106752, 6341799, 6132922, 6412342, 5860767, 6165654, 6422810, 6223170, 6422423, 6411910, 6397594, 5872911, 6362735, 6382717, 6145732, 6258506, 5834571, 6414643, 6350965, 6122454, 6278991, 5887337, 6381892, 6294693, 6432891, 6137679, 6015092, 6454484, 6422810, 6113288, 6422810, 6167074, 6333110, 5741320, 6417576, 6407108, 5994751, 6045789, 6451622, 5926010, 6167807, 6423588, 6126386, 6427135, 6157732, 6380938, 6300275, 6530871, 5845065, 6187918, 6157790, 6327399, 5858511, 6427135, 5971840, 6316931, 6144692, 5996734, 5858511, 6365713, 6104122, 6334889, 6597081, 6381892, 6266847, 6376181, 6316106, 5889475, 6351790, 6040974, 6187918, 6386649, 6257348, 6272906, 6037330, 6211400, 6013764, 6417576, 6407108, 6096651, 6396640, 5930563, 6397117, 6422810, 6035347, 6407585, 6135526, 6112607, 6422810, 6412342, 6102794, 5760780, 6370947, 6234115, 6330983, 6517864, 6360249, 6289936, 6154709, 5842783, 5890648, 6428566, 6350011, 6397117, 6417576, 6341799, 6341406, 5878878, 6392360, 6043185, 6061289, 6427135, 6386649, 6229339, 6407585, 6115892, 5486094, 5850647, 6071076, 6269909, 6260659, 6081151, 6223647, 5969236, 6560397, 6432891, 6152472, 6261961, 6224556, 5905074, 6235024, 5960070, 6279468, 5841958, 6357978, 5867677, 6180649, 5920069, 6445866, 6427135 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ],
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226738615,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 154554,
        "IOBytes" : {
          "Total" : 15067660623,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 2590110123
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 36401675600,
            "rowCount" : 2275104725,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45019232,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24188856080,
        "inputRowCount" : 1158973459
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 174,
        "FinishedTasksTotalTimeInMs" : 204062.0,
        "FinishedTasksDistributionInMs" : [ 197.0, 795.0, 873.0, 1014.0, 7807.0 ]
      },
      "StartTimeInMs" : 1702226731745,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 161424,
        "IOBytes" : {
          "Total" : 21576559805,
          "Details" : {
            "IR" : 2883481429,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7069212737
          }
        }
      }
    },
    "19" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -199590637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5360,
            "rowCount" : 134,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [sum(sales#351) AS sum(sales)#526], HashAggregate(keys=[], functions=[sum(sales#351)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [sum(sales#351) AS sum(sales)#526], HashAggregate(keys=[], functions=[sum(sales#351)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5360,
        "inputRowCount" : 134
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226892961,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 208,
        "IOBytes" : {
          "Total" : 9134,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9134,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "67" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "12" : {
            "sign" : -650698991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "66" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "51" : {
            "sign" : 1704769460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "23" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "62" : {
            "sign" : 1390348033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38]) "
          },
          "4" : {
            "sign" : -1434356976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "15" : {
            "sign" : 1864782301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "11" : {
            "sign" : -1935518234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -1934588274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "33" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "22" : {
            "sign" : 841802622,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1 "
          },
          "56" : {
            "sign" : 708715053,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "55" : {
            "sign" : 1164239073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "26" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "50" : {
            "sign" : -2126390384,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "37" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "68" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "61" : {
            "sign" : -1938606481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "13" : {
            "sign" : -614994623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "24" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "35" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "16" : {
            "sign" : 891416984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "5" : {
            "sign" : -1170716225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "72" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "10" : {
            "sign" : -1651107744,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : -791962203,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "48" : {
            "sign" : -1352027348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "21" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : 1270628421,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "43" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "65" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "71" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "57" : {
            "sign" : 1766834448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "32" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "49" : {
            "sign" : -34240123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1366717861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "1" : {
            "sign" : -164765018,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 106767293936,
            "rowCount" : 6672955871,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1052145578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38]) "
          },
          "25" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "60" : {
            "sign" : 88305869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "14" : {
            "sign" : -1469215805,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "47" : {
            "sign" : 1344785826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "31" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "69" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "58" : {
            "sign" : 2008747122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "64" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "53" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "42" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -162323483,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "27" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "70" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "2" : {
            "sign" : -1704554632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71063416432,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "18" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "7" : {
            "sign" : -1197187619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "41" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "63" : {
            "sign" : 841802839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : -871438760,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 124360978756,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : -1975391067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "28" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 66,
          "fromName" : "Filter",
          "toId" : 65,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- Project [ss_item_sk#17, d_date#41]\n   :     :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :     :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :     :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n   :     :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   :     :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- Project [ss_item_sk#17, d_date#41]\n         :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38])\n         :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 103806598672,
        "inputRowCount" : 1319852055
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 700.0,
        "FinishedTasksDistributionInMs" : [ 167.0, 167.0, 533.0, 533.0, 533.0 ]
      },
      "StartTimeInMs" : 1702226712725,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 180444,
        "IOBytes" : {
          "Total" : 21638833214,
          "Details" : {
            "IR" : 2906451848,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7108515727
          }
        }
      }
    },
    "15" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -1428109778,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33698520,
            "rowCount" : 842463,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 21 "
          },
          "12" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "8" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "19" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "23" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "4" : {
            "sign" : 588410799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "15" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "11" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "9" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "33" : {
            "sign" : -1210625870,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "22" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "37" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "13" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "24" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "35" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "16" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "5" : {
            "sign" : 936389752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "21" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "32" : {
            "sign" : 835604977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20219112,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1540421990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56274040,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 20 "
          },
          "36" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "1" : {
            "sign" : 361976013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1115659744,
            "rowCount" : 69728734,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "17" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "25" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "31" : {
            "sign" : 1227121684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 731257884,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "42" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "0" : {
            "sign" : 831392636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "27" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "2" : {
            "sign" : -1097786475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "18" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "30" : {
            "sign" : -1726568896,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 417861648,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "7" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "29" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "41" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "3" : {
            "sign" : 1297955947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "28" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalRelation",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Filter",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 20\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- LogicalQueryStage Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 21\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17759070272,
        "inputRowCount" : 556343128
      },
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "7" : [ 75566, 77024, 80363, 70048, 71766, 84690, 75203, 81923, 80327, 78113, 71073, 73119, 80363, 87565, 80396, 74144, 81557, 81565, 71040, 77021, 73748, 76259, 77381, 69656, 79964, 78872, 78836, 88281, 78251, 73715, 79892, 68092, 79340, 82291, 76658, 78476, 75200, 75566, 77747, 74510, 77747, 83560, 72989, 76001, 77678, 83810, 70347, 78440, 78151, 78731, 71999, 70943, 78179, 78916, 78110, 72692, 78509, 74804, 71339, 78113, 76361, 79166, 74477, 71339, 78187, 84041, 72662, 76985, 83012, 78908, 76553, 73781, 75203, 78803, 81008, 81199, 80690, 76622, 89642, 78839, 76771, 80690, 83452, 73418, 77054, 78875, 77711, 75599, 77453, 81524, 79601, 73879, 76691, 79964, 74078, 79453, 82368, 74837, 78839, 76952, 75860, 78905, 83565, 67734, 77420, 76589, 76292, 80000, 76292, 78944, 81161, 78803, 78875, 78440, 73520, 72989, 78911, 72362, 73817, 75170, 78509, 81158, 79964, 81959, 86327, 80867, 76622, 81238, 80036, 77783, 77642, 72032, 75203, 75530, 74771, 81851, 73551, 83887, 80726, 75566, 70281, 81887, 73653, 81125, 76223, 76655, 76226, 76292, 74543, 83084, 78473, 78005, 78110, 77420, 77816, 74510, 90123, 77714, 72725, 80041, 71733, 71999, 76331, 72063, 80102, 84839, 75267, 78074, 79670, 89046, 76295, 73022, 76259, 74078, 83810, 83488, 78803, 77714, 71106, 75896, 72431, 84721, 82649, 77057, 75569, 76622, 78113, 73418, 69082, 82327, 79565, 84649, 78440, 78113, 72756, 82363, 73484, 74474, 77351, 77384 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "6" : [ 124106, 128619, 123941, 122838, 118791, 119954, 137626, 122773, 127392, 126979, 124531, 125115, 123304, 128212, 119800, 129439, 131250, 122189, 124531, 131132, 120490, 129964, 124531, 128737, 122720, 122720, 121080, 122136, 127569, 125752, 127569, 128153, 127510, 133184, 122248, 130023, 128094, 129964, 130666, 128678, 119269, 124472, 171276, 121605, 123475, 133243, 125056, 130548, 127569, 124472, 120490, 120437, 127091, 128153, 124531, 124584, 126926, 123304, 118791, 129321, 122189, 126454, 124000, 125699, 131893, 123947, 125699, 124578, 124531, 123947, 129439, 125699, 128094, 119800, 129321, 121021, 127156, 124649, 119853, 124584, 133120, 128153, 123888, 127569, 126401, 124472, 122720, 131250, 131775, 128855, 129380, 122773, 122189, 115340, 131309, 133120, 113317, 122189, 122720, 130548, 129964, 132477, 120437, 123475, 125699, 126342, 125115, 112685, 133120, 125056, 121664, 132418, 130489, 116402, 127569, 126342, 126224, 123357, 121605, 133061, 119375, 134347, 135633, 124531, 129321, 133886, 130023, 123422, 121658, 128737, 128678, 129964, 125699, 125115, 133243, 126985, 127510, 124584, 130607, 122195, 133061, 118260, 127569, 129444, 128737, 125115, 128737, 122779, 122189, 127451, 135049, 115977, 126342, 123363, 125174, 121711, 125817, 136340, 124525, 128801, 122832, 128153, 126808, 125233, 129321, 128153, 133881, 131250, 124472, 126867, 124531, 134347, 117682, 130607, 118839, 123357, 127510, 126401, 133120, 131893, 131893, 129321, 124584, 124059, 124472, 131314, 137562, 119322, 132595, 121021, 122136, 128153, 114809, 133179, 130082, 122720, 131250, 125699, 123947, 120490 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226845633,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 47536,
        "IOBytes" : {
          "Total" : 12579345636,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 9174452030,
            "SW" : 2551208745
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40438224,
            "rowCount" : 842463,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 731257884,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26958816,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1115659744,
            "rowCount" : 69728734,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 417861648,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45019232,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20219112,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 26326568352,
        "inputRowCount" : 1087832298
      },
      "PD" : {
        "4" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94791, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92854, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96819, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ],
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226731974,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 161195,
        "IOBytes" : {
          "Total" : 17147347345,
          "Details" : {
            "IR" : 1748895534,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 3774586172
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 36401675600,
            "rowCount" : 2275104725,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45019232,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24188856080,
        "inputRowCount" : 1158973459
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 175,
        "FinishedTasksTotalTimeInMs" : 204355.0,
        "FinishedTasksDistributionInMs" : [ 197.0, 795.0, 871.0, 1014.0, 7807.0 ]
      },
      "StartTimeInMs" : 1702226731806,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 161363,
        "IOBytes" : {
          "Total" : 21576559805,
          "Details" : {
            "IR" : 2883481429,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7069212737
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -1428109778,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 21 "
          },
          "12" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "8" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "19" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "23" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "4" : {
            "sign" : 588410799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "15" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "11" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "9" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "33" : {
            "sign" : -1210625870,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "22" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "37" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "13" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "24" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "35" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "16" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "5" : {
            "sign" : 936389752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "21" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "32" : {
            "sign" : 835604977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1540421990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 20 "
          },
          "36" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "1" : {
            "sign" : 361976013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 106767293936,
            "rowCount" : 6672955871,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "17" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "25" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "31" : {
            "sign" : 1227121684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "42" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "0" : {
            "sign" : 831392636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "27" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "2" : {
            "sign" : -1097786475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71063416432,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "18" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "30" : {
            "sign" : -1726568896,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "7" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "29" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "41" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "3" : {
            "sign" : 1297955947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 124360978756,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "28" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalRelation",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Filter",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 20\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- LogicalQueryStage Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 21\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23696283660,
        "inputRowCount" : 769350455
      },
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226739229,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 153940,
        "IOBytes" : {
          "Total" : 15067660623,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 2590110123
          }
        }
      }
    },
    "16" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1154066674,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#390], BroadcastQueryStage 0 "
          },
          "8" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -1325556933,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9210227674392,
            "rowCount" : 383759486433,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "15" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "13" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "5" : {
            "sign" : 1651549199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12280303565856,
            "rowCount" : 383759486433,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "10" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "6" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "1" : {
            "sign" : -870308747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "14" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "0" : {
            "sign" : 735726719,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "2" : {
            "sign" : -1017464959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "7" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "3" : {
            "sign" : 1659723525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalRelation",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [max(csales#361) AS tpcds_cmax#362]\n+- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n      +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :     :     :  +- Project [d_date_sk#390]\n         :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :     +- LogicalQueryStage Project [d_date_sk#390], BroadcastQueryStage 0\n         +- Project [c_customer_sk#89]\n            +- Filter isnotnull(c_customer_sk#89)\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42307953920,
        "inputRowCount" : 277046814
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226845924,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 47245,
        "IOBytes" : {
          "Total" : 12579252074,
          "Details" : {
            "IR" : 853591299,
            "IW" : 0,
            "SR" : 9174452030,
            "SW" : 2551208745
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "67" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "12" : {
            "sign" : -650698991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2951122218823152000,
            "rowCount" : 81975617189532000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "66" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "51" : {
            "sign" : 1704769460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "23" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "62" : {
            "sign" : 1390348033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38]) "
          },
          "4" : {
            "sign" : -1434356976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "15" : {
            "sign" : 1864782301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9644190257592,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "11" : {
            "sign" : -1935518234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1639512343790640000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -1934588274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 983707406274384000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "33" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "22" : {
            "sign" : 841802622,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1 "
          },
          "56" : {
            "sign" : 708715053,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1639512343790640000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "55" : {
            "sign" : 1164239073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1639512343790640000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "26" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "50" : {
            "sign" : -2126390384,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "37" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "68" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "61" : {
            "sign" : -1938606481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "13" : {
            "sign" : -614994623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3279024687581280000,
            "rowCount" : 81975617189532000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "24" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "35" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "16" : {
            "sign" : 891416984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "5" : {
            "sign" : -1170716225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "72" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "10" : {
            "sign" : -1651107744,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1639512343790640000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : -791962203,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6429460171728,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "48" : {
            "sign" : -1352027348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "21" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : 1270628421,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 983707406274384000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "43" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "65" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "71" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "57" : {
            "sign" : 1766834448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2951122218823152000,
            "rowCount" : 81975617189532000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "32" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "49" : {
            "sign" : -34240123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1366717861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "1" : {
            "sign" : -164765018,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 106767293936,
            "rowCount" : 6672955871,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1052145578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38]) "
          },
          "25" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "60" : {
            "sign" : 88305869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9644190257592,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "14" : {
            "sign" : -1469215805,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6429460171728,
            "rowCount" : 401841260733,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "47" : {
            "sign" : 1344785826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "31" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "69" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "58" : {
            "sign" : 2008747122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3279024687581280000,
            "rowCount" : 81975617189532000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "64" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "53" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "42" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -162323483,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "27" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "70" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "2" : {
            "sign" : -1704554632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71063416432,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "18" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "7" : {
            "sign" : -1197187619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "41" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "63" : {
            "sign" : 841802839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : -871438760,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 124360978756,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : -1975391067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "28" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 66,
          "fromName" : "Filter",
          "toId" : 65,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- Project [ss_item_sk#17, d_date#41]\n   :     :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :     :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :     :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n   :     :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   :     :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- Project [ss_item_sk#17, d_date#41]\n         :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38])\n         :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 103808672896,
        "inputRowCount" : 1319852083
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 8,
        "FinishedTasksTotalTimeInMs" : 18330.0,
        "FinishedTasksDistributionInMs" : [ 167.0, 811.0, 942.0, 5902.0, 5906.0 ]
      },
      "StartTimeInMs" : 1702226717495,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 175674,
        "IOBytes" : {
          "Total" : 21638659553,
          "Details" : {
            "IR" : 2906278187,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7108515727
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 40438224,
            "rowCount" : 842463,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 731257884,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 26958816,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1115659744,
            "rowCount" : 69728734,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 417861648,
            "rowCount" : 26116353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23588964,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45019232,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20219112,
            "rowCount" : 842463,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 21925818336,
        "inputRowCount" : 1087832298
      },
      "PD" : {
        "4" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94791, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92854, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96819, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226731921,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 161248,
        "IOBytes" : {
          "Total" : 17147347345,
          "Details" : {
            "IR" : 1748895534,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 3774586172
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 106767293936,
            "rowCount" : 6672955871,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71063416432,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 124360978756,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 28690063776,
        "inputRowCount" : 1300839625
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 8,
        "FinishedTasksTotalTimeInMs" : 18330.0,
        "FinishedTasksDistributionInMs" : [ 167.0, 811.0, 942.0, 5902.0, 5906.0 ]
      },
      "StartTimeInMs" : 1702226717720,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 175449,
        "IOBytes" : {
          "Total" : 21638659553,
          "Details" : {
            "IR" : 2906278187,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7108515727
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1627019651,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 1 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 1\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1048824,
        "inputRowCount" : 31
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226711166,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 182003,
        "IOBytes" : {
          "Total" : 21667206586,
          "Details" : {
            "IR" : 2918066563,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7125274384
          }
        }
      }
    },
    "17" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1372935351,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6874337696,
            "rowCount" : 214823053,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "6" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : -370983563,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 45673296,
            "rowCount" : 1903054,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "0" : {
            "sign" : -1066312273,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "2" : {
            "sign" : 557091377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10311506544000000,
            "rowCount" : 429646106000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "7" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : 583221765,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12030090968000000,
            "rowCount" : 429646106000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalRelation",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [max(csales#361) AS tpcds_cmax#362]\n+- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n      +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :- LogicalQueryStage Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379], ShuffleQueryStage 3\n         +- Project [c_customer_sk#89]\n            +- Filter isnotnull(c_customer_sk#89)\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7374337696,
        "inputRowCount" : 216823053
      },
      "PD" : {
        "8" : [ 13518805, 13453589, 13244444, 13359211, 13334313, 13454772, 13250578, 13170495, 13357335, 13447677, 13503666, 13324214, 13562427, 13501341, 13377100, 13328374, 13524888, 13698935, 13411939, 13437088, 13333302, 13396301, 13492036, 13443102, 13360848, 13401763, 13341042, 13607509, 13350502, 13325306, 13134478, 13298492, 13468524, 13201764, 13481859, 13477878, 13276805, 13201006, 13207319, 13289840, 13192378, 13384318, 13140961, 13476653, 13490551, 13198963, 13483420, 13433757, 13407896, 13420802, 13580576, 13476504, 13311076, 13431586, 13330027, 13378376, 13325364, 13123863, 13288418, 13349342, 13254973, 13643407, 13280137, 13354979, 13226253, 13605744, 13511258, 13295966, 13365220, 13544486, 13459959, 13271520, 13203431, 13477268, 13449617, 13508588, 13668380, 13476857, 13423671, 13435861, 13390337, 13600153, 13666693, 13080514, 13254074, 13254064, 13270074, 13373516, 13351864, 13592141, 13333393, 13441875, 13477448, 13317687, 13457044, 13737739, 13138463, 13196181, 13329856, 13156576, 13019198, 13432780, 13379316, 13180598, 13338896, 13588770, 13394637, 13761908, 13083411, 13224117, 13269821, 13397912, 13588705, 13325171, 13412799, 13337353, 13110802, 13147287, 13371949, 13335067, 13318828, 13475125, 13555274, 13387686, 13442857, 13641088, 13268376, 13177576, 13320860, 13140679, 13521565, 13536271, 13428423, 13400206, 13183593, 13238409, 13439175, 13536432, 13467465, 13478623, 13335492, 13123909, 13223986, 13525933, 13462980, 13565528, 13726933, 13352624, 13387610, 13375496, 13577508, 13387078, 13616253, 13532324, 13528405, 13531530, 13320755, 13434294, 13668517, 13144492, 13167361, 13156043, 13525608, 13257451, 13475026, 13355739, 13356302, 13511942, 13448909, 13194984, 13509002, 13704877, 13487601, 13439271, 13482180, 13219680, 13497123, 13204110, 13388364, 13320424, 13234720, 13423920, 13262170, 13300638, 13721653, 13571015, 13739066, 13518734, 13287964, 13409637, 13505738, 13357001, 13300338, 13156416, 13514328, 13618399, 13345482, 13403682, 13516533, 13195070 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226855591,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 37578,
        "IOBytes" : {
          "Total" : 9174464430,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9174452030,
            "SW" : 12400
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -1428109778,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 21 "
          },
          "12" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "8" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "19" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "23" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "4" : {
            "sign" : 588410799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "15" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "11" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "9" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "33" : {
            "sign" : -1210625870,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "22" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "37" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "13" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "24" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "35" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "16" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "5" : {
            "sign" : 936389752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "21" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "32" : {
            "sign" : 835604977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1540421990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56274040,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 20 "
          },
          "36" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "1" : {
            "sign" : 361976013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 36401675600,
            "rowCount" : 2275104725,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15402625056000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "17" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "25" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "31" : {
            "sign" : 1227121684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "42" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "0" : {
            "sign" : 831392636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "27" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "2" : {
            "sign" : -1097786475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13202250048000000,
            "rowCount" : 550093752000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "18" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "30" : {
            "sign" : -1726568896,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "7" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601125024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "29" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "41" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "3" : {
            "sign" : 1297955947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "28" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalRelation",
          "toId" : 24,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Filter",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalRelation",
          "toId" : 27,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Filter",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 20\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- LogicalQueryStage Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 21\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 19740913224,
        "inputRowCount" : 627484289
      },
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "6" : [ 124106, 128619, 123941, 122838, 118791, 119954, 137626, 122773, 127392, 126979, 124531, 125115, 123304, 128212, 119800, 129439, 131250, 122189, 124531, 131132, 120490, 129964, 124531, 128737, 122720, 122720, 121080, 122136, 127569, 125752, 127569, 128153, 127510, 133184, 122248, 130023, 128094, 129964, 130666, 128678, 119269, 124472, 171276, 121605, 123475, 133243, 125056, 130548, 127569, 124472, 120490, 120437, 127091, 128153, 124531, 124584, 126926, 123304, 118791, 129321, 122189, 126454, 124000, 125699, 131893, 123947, 125699, 124578, 124531, 123947, 129439, 125699, 128094, 119800, 129321, 121021, 127156, 124649, 119853, 124584, 133120, 128153, 123888, 127569, 126401, 124472, 122720, 131250, 131775, 128855, 129380, 122773, 122189, 115340, 131309, 133120, 113317, 122189, 122720, 130548, 129964, 132477, 120437, 123475, 125699, 126342, 125115, 112685, 133120, 125056, 121664, 132418, 130489, 116402, 127569, 126342, 126224, 123357, 121605, 133061, 119375, 134347, 135633, 124531, 129321, 133886, 130023, 123422, 121658, 128737, 128678, 129964, 125699, 125115, 133243, 126985, 127510, 124584, 130607, 122195, 133061, 118260, 127569, 129444, 128737, 125115, 128737, 122779, 122189, 127451, 135049, 115977, 126342, 123363, 125174, 121711, 125817, 136340, 124525, 128801, 122832, 128153, 126808, 125233, 129321, 128153, 133881, 131250, 124472, 126867, 124531, 134347, 117682, 130607, 118839, 123357, 127510, 126401, 133120, 131893, 131893, 129321, 124584, 124059, 124472, 131314, 137562, 119322, 132595, 121021, 122136, 128153, 114809, 133179, 130082, 122720, 131250, 125699, 123947, 120490 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226801535,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 91634,
        "IOBytes" : {
          "Total" : 13813390253,
          "Details" : {
            "IR" : 853684861,
            "IW" : 0,
            "SR" : 10393699134,
            "SW" : 2566006258
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "67" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "12" : {
            "sign" : -650698991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "66" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "51" : {
            "sign" : 1704769460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "23" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "62" : {
            "sign" : 1390348033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38]) "
          },
          "4" : {
            "sign" : -1434356976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "15" : {
            "sign" : 1864782301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "11" : {
            "sign" : -1935518234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -1934588274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "33" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "22" : {
            "sign" : 841802622,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1 "
          },
          "56" : {
            "sign" : 708715053,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "55" : {
            "sign" : 1164239073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "26" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "50" : {
            "sign" : -2126390384,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "37" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "68" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "61" : {
            "sign" : -1938606481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "13" : {
            "sign" : -614994623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "24" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "35" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "16" : {
            "sign" : 891416984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "5" : {
            "sign" : -1170716225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "72" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "10" : {
            "sign" : -1651107744,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : -791962203,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "48" : {
            "sign" : -1352027348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "21" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : 1270628421,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "43" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "65" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "71" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "57" : {
            "sign" : 1766834448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "32" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "49" : {
            "sign" : -34240123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1366717861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "1" : {
            "sign" : -164765018,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 106767293936,
            "rowCount" : 6672955871,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1052145578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38]) "
          },
          "25" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "60" : {
            "sign" : 88305869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "14" : {
            "sign" : -1469215805,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "47" : {
            "sign" : 1344785826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "31" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "69" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "58" : {
            "sign" : 2008747122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "64" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "53" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "42" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -162323483,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "27" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "70" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "2" : {
            "sign" : -1704554632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71063416432,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "18" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "7" : {
            "sign" : -1197187619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "41" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "63" : {
            "sign" : 841802839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : -871438760,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 124360978756,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : -1975391067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "28" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 66,
          "fromName" : "Filter",
          "toId" : 65,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- Project [ss_item_sk#17, d_date#41]\n   :     :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :     :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :     :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n   :     :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   :     :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- Project [ss_item_sk#17, d_date#41]\n         :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38])\n         :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 103805393824,
        "inputRowCount" : 1319852055
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 533.0,
        "FinishedTasksDistributionInMs" : [ 533.0, 533.0, 533.0, 533.0, 533.0 ]
      },
      "StartTimeInMs" : 1702226711874,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 181295,
        "IOBytes" : {
          "Total" : 21667206586,
          "Details" : {
            "IR" : 2918066563,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7125274384
          }
        }
      }
    },
    "18" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -502312749,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1472,
            "rowCount" : 46,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [max(csales#361) AS tpcds_cmax#362], HashAggregate(keys=[], functions=[max(csales#361)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [max(csales#361) AS tpcds_cmax#362], HashAggregate(keys=[], functions=[max(csales#361)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1472,
        "inputRowCount" : 46
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226869906,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 23263,
        "IOBytes" : {
          "Total" : 6612893628,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 6612884494,
            "SW" : 9134
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "34" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : 1436844534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "51" : {
            "sign" : -1070536462,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19 "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "23" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "4" : {
            "sign" : 1372545687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33764424,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : 398846067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "15" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "11" : {
            "sign" : 2024407737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -178595167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : 1805513924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "33" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "22" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "56" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "55" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "26" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "50" : {
            "sign" : -1499434931,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "37" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 843532244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1996753440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "24" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "35" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "16" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "5" : {
            "sign" : 1335682222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -431919867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "48" : {
            "sign" : 209193864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "21" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "54" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "43" : {
            "sign" : -501272305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "57" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "32" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "49" : {
            "sign" : 1006231599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 1832264366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39391828,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "1" : {
            "sign" : 395035396,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 36401675600,
            "rowCount" : 2275104725,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 612968981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "17" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "25" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "60" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "14" : {
            "sign" : -1070536524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17 "
          },
          "47" : {
            "sign" : -1388122752,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "31" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "58" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "53" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "42" : {
            "sign" : 259336861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : -1888477879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "27" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : -1908252003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 697798096,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "18" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "30" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "7" : {
            "sign" : -1320788926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 45019232,
            "rowCount" : 1406851,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "41" : {
            "sign" : 950438188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "3" : {
            "sign" : -544008773,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1221146668,
            "rowCount" : 43612381,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "28" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalRelation",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 30,
          "fromName" : "Filter",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Aggregate",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Filter",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 17\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- LogicalQueryStage Project [ss_item_sk#17, d_date#41], ShuffleQueryStage 19\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24172856080,
        "inputRowCount" : 1158973459
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 29,
        "FinishedTasksTotalTimeInMs" : 30437.0,
        "FinishedTasksDistributionInMs" : [ 708.0, 765.0, 878.0, 1194.0, 3596.0 ]
      },
      "StartTimeInMs" : 1702226722160,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 171009,
        "IOBytes" : {
          "Total" : 21595071356,
          "Details" : {
            "IR" : 2891621789,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7079583928
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -576393737,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#89, c_customer_id#90, c_current_cdemo_sk#91, c_current_hdemo_sk#92, c_current_addr_sk#93, c_first_shipto_date_sk#94, c_first_sales_date_sk#95, c_salutation#96, c_first_name#97, c_last_name#98, c_preferred_cust_flag#99, c_birth_day#100, c_birth_month#101, c_birth_year#102, c_birth_country#103, c_login#104, c_email_address#105, c_last_review_date#106], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          },
          "67" : {
            "sign" : 1441135791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "12" : {
            "sign" : -650698991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "66" : {
            "sign" : 1616076229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "51" : {
            "sign" : 1704769460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "8" : {
            "sign" : -938487710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0 "
          },
          "19" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "23" : {
            "sign" : 1120906919,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2 "
          },
          "62" : {
            "sign" : 1390348033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38]) "
          },
          "4" : {
            "sign" : -1434356976,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "40" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "15" : {
            "sign" : 1864782301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "11" : {
            "sign" : -1935518234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "9" : {
            "sign" : -1934588274,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "44" : {
            "sign" : -337975679,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#89) "
          },
          "33" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "22" : {
            "sign" : 841802622,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1 "
          },
          "56" : {
            "sign" : 708715053,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "55" : {
            "sign" : 1164239073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "26" : {
            "sign" : -1686208522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "50" : {
            "sign" : -2126390384,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "37" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "68" : {
            "sign" : -323214689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "61" : {
            "sign" : -1938606481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "13" : {
            "sign" : -614994623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "46" : {
            "sign" : 1627019775,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#459], BroadcastQueryStage 5 "
          },
          "24" : {
            "sign" : 1607063070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "35" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "16" : {
            "sign" : 891416984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "5" : {
            "sign" : -1170716225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "72" : {
            "sign" : 505532630,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#487], BroadcastQueryStage 16 "
          },
          "10" : {
            "sign" : -1651107744,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1083405586800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          },
          "59" : {
            "sign" : -791962203,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "48" : {
            "sign" : -1352027348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62481785632,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "21" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : 1270628421,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 650043352080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "43" : {
            "sign" : 1085635783,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#89] "
          },
          "65" : {
            "sign" : -99526441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "71" : {
            "sign" : 1330085533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 14 "
          },
          "57" : {
            "sign" : 1766834448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "32" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "49" : {
            "sign" : -34240123,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "6" : {
            "sign" : -1366717861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "36" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "1" : {
            "sign" : -164765018,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 106767293936,
            "rowCount" : 6672955871,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "39" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1052145578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38]) "
          },
          "25" : {
            "sign" : -208757748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "60" : {
            "sign" : 88305869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "14" : {
            "sign" : -1469215805,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "47" : {
            "sign" : 1344785826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35703877504,
            "rowCount" : 2231492344,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "31" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "69" : {
            "sign" : -857011292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "58" : {
            "sign" : 2008747122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2166811173600000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "64" : {
            "sign" : 388376348,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10 "
          },
          "53" : {
            "sign" : 1998786543,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6 "
          },
          "42" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -162323483,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "20" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "27" : {
            "sign" : -108798106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "70" : {
            "sign" : 1606711728,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12 "
          },
          "2" : {
            "sign" : -1704554632,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71063416432,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "38" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          },
          "18" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 458548032,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#441], ShuffleQueryStage 4 "
          },
          "7" : {
            "sign" : -1197187619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "29" : {
            "sign" : -225265232,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3 "
          },
          "41" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 355962,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "63" : {
            "sign" : 841802839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : -871438760,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 124360978756,
            "rowCount" : 4441463527,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          },
          "52" : {
            "sign" : -1975391067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "28" : {
            "sign" : -1069434837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 69,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Join",
          "toId" : 68,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Aggregate",
          "toId" : 66,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 66,
          "fromName" : "Filter",
          "toId" : 65,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 48,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140], ShuffleQueryStage 0\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- Project [ss_item_sk#17, d_date#41]\n   :     :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :     :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :     :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n   :     :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   :     :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 1\n   :     :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 2\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 3\n   :     :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 4\n   :     +- LogicalQueryStage Project [d_date_sk#459], BroadcastQueryStage 5\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- LogicalQueryStage Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174], ShuffleQueryStage 6\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- Project [ss_item_sk#17, d_date#41]\n         :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38])\n         :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :     :                    :     +- LogicalQueryStage Project [d_date_sk#39, d_date#41], BroadcastQueryStage 8\n         :     :                    +- LogicalQueryStage Project [i_item_sk#67, i_item_desc#71], ShuffleQueryStage 10\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- LogicalQueryStage Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], ShuffleQueryStage 12\n         :                    +- LogicalQueryStage Project [c_customer_sk#441], ShuffleQueryStage 14\n         +- LogicalQueryStage Project [d_date_sk#487], BroadcastQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 103806598672,
        "inputRowCount" : 1319852055
      },
      "PD" : {
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 700.0,
        "FinishedTasksDistributionInMs" : [ 167.0, 167.0, 533.0, 533.0, 533.0 ]
      },
      "StartTimeInMs" : 1702226712635,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 180534,
        "IOBytes" : {
          "Total" : 21638833214,
          "Details" : {
            "IR" : 2906451848,
            "IW" : 0,
            "SR" : 11623865639,
            "SW" : 7108515727
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 416194431,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [max(csales#361) AS tpcds_cmax#362] "
          },
          "1" : {
            "sign" : 346367309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 47624376,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 47624376,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361] "
          },
          "2" : {
            "sign" : -2011036159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          },
          "3" : {
            "sign" : 725745885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#369 = c_customer_sk#89) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [max(csales#361) AS tpcds_cmax#362]\n+- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n      +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :     :     :  +- Project [d_date_sk#390]\n         :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :     +- Project [d_date_sk#390]\n         :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         +- Project [c_customer_sk#89]\n            +- Filter isnotnull(c_customer_sk#89)\n               +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -392779128,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#89] Arguments: 2 "
          },
          "4" : {
            "sign" : -290132975,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#369] Right keys [1]: [c_customer_sk#89] Join type: Inner Join condition: None "
          },
          "5" : {
            "sign" : -515223253,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] Arguments: [ss_customer_sk#369 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1353135900,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 6874337696,
            "rowCount" : 214823053,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] Arguments: 3 "
          },
          "1" : {
            "sign" : -1446262969,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#89, sum#551, isEmpty#552] Keys [1]: [c_customer_sk#89] Functions [1]: [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))] Aggregate Attributes [1]: [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))#519] Results [1]: [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))#519 AS csales#361] "
          },
          "0" : {
            "sign" : 2001762659,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [1]: [csales#361] Keys: [] Functions [1]: [partial_max(csales#361)] Aggregate Attributes [1]: [max#547] Results [1]: [max#548] "
          },
          "2" : {
            "sign" : 1123463179,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 47624376,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] Keys [1]: [c_customer_sk#89] Functions [1]: [partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))] Aggregate Attributes [2]: [sum#549, isEmpty#550] Results [3]: [c_customer_sk#89, sum#551, isEmpty#552] "
          },
          "7" : {
            "sign" : -144086683,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#89] Arguments: [c_customer_sk#89 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : -1172351307,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#376, ss_sales_price#379, c_customer_sk#89] Input [4]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, c_customer_sk#89] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n+- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n   +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n      +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         +- SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n            :- Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n            :  +- ShuffleQueryStage 3\n            :     +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=5217]\n            :        +- *(3) Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n            :           +- *(3) BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n            :              :- *(3) Filter isnotnull(ss_customer_sk#369)\n            :              :  +- *(3) ColumnarToRow\n            :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n            :              :           +- SubqueryBroadcast dynamicpruning#530, 0, [d_date_sk#390], [id=#5191]\n            :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                BroadcastQueryStage 1\n                                                +- ReusedExchange [d_date_sk#390], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                                             +- == Initial Plan ==\n                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5188]\n                                                +- Project [d_date_sk#390]\n                                                   +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n            :              +- BroadcastQueryStage 0\n            :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n            :                    +- *(1) Project [d_date_sk#390]\n            :                       +- *(1) Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n            :                          +- *(1) ColumnarToRow\n            :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n            +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n               +- ShuffleQueryStage 2\n                  +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6906337696,
        "inputRowCount" : 216823053
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "8" : [ 13518805, 13453589, 13244444, 13359211, 13334313, 13454772, 13250578, 13170495, 13357335, 13447677, 13503666, 13324214, 13562427, 13501341, 13377100, 13328374, 13524888, 13698935, 13411939, 13437088, 13333302, 13396301, 13492036, 13443102, 13360848, 13401763, 13341042, 13607509, 13350502, 13325306, 13134478, 13298492, 13468524, 13201764, 13481859, 13477878, 13276805, 13201006, 13207319, 13289840, 13192378, 13384318, 13140961, 13476653, 13490551, 13198963, 13483420, 13433757, 13407896, 13420802, 13580576, 13476504, 13311076, 13431586, 13330027, 13378376, 13325364, 13123863, 13288418, 13349342, 13254973, 13643407, 13280137, 13354979, 13226253, 13605744, 13511258, 13295966, 13365220, 13544486, 13459959, 13271520, 13203431, 13477268, 13449617, 13508588, 13668380, 13476857, 13423671, 13435861, 13390337, 13600153, 13666693, 13080514, 13254074, 13254064, 13270074, 13373516, 13351864, 13592141, 13333393, 13441875, 13477448, 13317687, 13457044, 13737739, 13138463, 13196181, 13329856, 13156576, 13019198, 13432780, 13379316, 13180598, 13338896, 13588770, 13394637, 13761908, 13083411, 13224117, 13269821, 13397912, 13588705, 13325171, 13412799, 13337353, 13110802, 13147287, 13371949, 13335067, 13318828, 13475125, 13555274, 13387686, 13442857, 13641088, 13268376, 13177576, 13320860, 13140679, 13521565, 13536271, 13428423, 13400206, 13183593, 13238409, 13439175, 13536432, 13467465, 13478623, 13335492, 13123909, 13223986, 13525933, 13462980, 13565528, 13726933, 13352624, 13387610, 13375496, 13577508, 13387078, 13616253, 13532324, 13528405, 13531530, 13320755, 13434294, 13668517, 13144492, 13167361, 13156043, 13525608, 13257451, 13475026, 13355739, 13356302, 13511942, 13448909, 13194984, 13509002, 13704877, 13487601, 13439271, 13482180, 13219680, 13497123, 13204110, 13388364, 13320424, 13234720, 13423920, 13262170, 13300638, 13721653, 13571015, 13739066, 13518734, 13287964, 13409637, 13505738, 13357001, 13300338, 13156416, 13514328, 13618399, 13345482, 13403682, 13516533, 13195070 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 21 ],
      "Objectives" : {
        "DurationInMs" : 14195,
        "TotalTasksDurationInMs" : 208289,
        "IOBytes" : {
          "Total" : 2561570802,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2561567536,
            "SW" : 3266
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 798962607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "5" : {
            "sign" : -1658064468,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : -505021622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "1" : {
            "sign" : -827737859,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4584736544,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 4584736544,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_item_sk#121 = item_sk#358) "
          },
          "0" : {
            "sign" : 1482967651,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4011644476,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 4011644476,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "2" : {
            "sign" : -785557993,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "3" : {
            "sign" : 1636469691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n+- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :  +- Filter (isnotnull(cs_sold_date_sk#140) AND dynamicpruning#534 [cs_sold_date_sk#140])\n   :     :  +- Project [d_date_sk#459]\n   :     :     +- Filter (((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND ((d_year#465 = 1999) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_date_id#460,d_date#461,d_month_seq#462,d_week_seq#463,d_quarter_seq#464,d_year#465,d_dow#466,d_moy#467,d_dom#468,d_qoy#469,d_fy_year#470,d_fy_quarter_seq#471,d_fy_week_seq#472,d_day_name#473,d_quarter_name#474,d_holiday#475,d_weekend#476,d_following_holiday#477,d_first_dom#478,d_last_dom#479,d_same_day_ly#480,d_same_day_lq#481,d_current_day#482,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n   +- Project [item_sk#358]\n      +- Filter (cnt#360L > 4)\n         +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n            +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n               +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :- Project [ss_item_sk#17, d_date#41]\n                  :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n                  :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     +- Project [d_date_sk#39, d_date#41]\n                  :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  +- Project [i_item_sk#67, i_item_desc#71]\n                     +- Filter isnotnull(i_item_sk#67)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 1255106987,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ss_item_sk#17, d_date#41] Arguments: 17 "
          },
          "8" : {
            "sign" : 319621054,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [d_date#41, i_item_sk#67, _groupingexpression#528] Keys [3]: [_groupingexpression#528, i_item_sk#67, d_date#41] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#541L] Results [4]: [_groupingexpression#528, i_item_sk#67, d_date#41, count#542L] "
          },
          "4" : {
            "sign" : -1984294484,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [item_sk#358] Arguments: [item_sk#358 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : 346990965,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ss_item_sk#17, d_date#41] Arguments: [ss_item_sk#17 ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : -1961577405,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] Input [4]: [ss_item_sk#17, d_date#41, i_item_sk#67, i_item_desc#71] "
          },
          "13" : {
            "sign" : 81886979,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [i_item_sk#67, i_item_desc#71] Arguments: [i_item_sk#67 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : -1586321053,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [item_sk#358] Input [2]: [item_sk#358, cnt#360L] "
          },
          "10" : {
            "sign" : 1159361783,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#17] Right keys [1]: [i_item_sk#67] Join type: Inner Join condition: None "
          },
          "6" : {
            "sign" : 1665700907,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [item_sk#358, cnt#360L] Condition : (cnt#360L > 4) "
          },
          "1" : {
            "sign" : 1440493816,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_item_sk#121] Right keys [1]: [item_sk#358] Join type: LeftSemi Join condition: None "
          },
          "14" : {
            "sign" : 134855955,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_sk#67, i_item_desc#71] Arguments: 2 "
          },
          "0" : {
            "sign" : 107750866,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Input [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "2" : {
            "sign" : 749882091,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: [cs_item_sk#121 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : 124440011,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [_groupingexpression#528, i_item_sk#67, d_date#41, count#542L] Keys [3]: [_groupingexpression#528, i_item_sk#67, d_date#41] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#365L] Results [2]: [i_item_sk#67 AS item_sk#358, count(1)#365L AS cnt#360L] "
          },
          "3" : {
            "sign" : -1996360559,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 67528848,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: 0 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 11,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "ShuffleQueryStage",
          "toId" : 13,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "SortMergeJoin",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "HashAggregate",
          "toId" : 7,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "HashAggregate",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "SortMergeJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n+- SortMergeJoin [cs_item_sk#121], [item_sk#358], LeftSemi\n   :- Sort [cs_item_sk#121 ASC NULLS FIRST], false, 0\n   :  +- ShuffleQueryStage 0\n   :     +- Exchange hashpartitioning(cs_item_sk#121, 200), ENSURE_REQUIREMENTS, [plan_id=826]\n   :        +- *(1) ColumnarToRow\n   :           +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n   :                 +- SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n   :                    +- AdaptiveSparkPlan isFinalPlan=true\n                           +- == Final Plan ==\n                              BroadcastQueryStage 1\n                              +- ReusedExchange [d_date_sk#459], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n                           +- == Initial Plan ==\n                              BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=813]\n                              +- Project [d_date_sk#459]\n                                 +- Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- Sort [item_sk#358 ASC NULLS FIRST], false, 0\n      +- Project [item_sk#358]\n         +- Filter (cnt#360L > 4)\n            +- HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#358, cnt#360L])\n               +- HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#528, i_item_sk#67, d_date#41, count#542L])\n                  +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n                     +- SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n                        :- Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n                        :  +- ShuffleQueryStage 17\n                        :     +- Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n                        :        +- *(13) Project [ss_item_sk#17, d_date#41]\n                        :           +- *(13) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n                        :              :- *(13) Filter isnotnull(ss_item_sk#17)\n                        :              :  +- *(13) ColumnarToRow\n                        :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#529)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n                        :              :           +- SubqueryBroadcast dynamicpruning#529, 0, [d_date_sk#39], [id=#2466]\n                        :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#39, d_date#41], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2463]\n                                                            +- Project [d_date_sk#39, d_date#41]\n                                                               +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n                        :              +- BroadcastQueryStage 1\n                        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n                        :                    +- *(2) Project [d_date_sk#39, d_date#41]\n                        :                       +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                        :                          +- *(2) ColumnarToRow\n                        :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n                        +- Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n                           +- ShuffleQueryStage 2\n                              +- Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=864]\n                                 +- *(3) Filter isnotnull(i_item_sk#67)\n                                    +- *(3) ColumnarToRow\n                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5373777384,
        "inputRowCount" : 221616939
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 6049721, 6030087, 6204013, 6143364, 6417576, 6042564, 6427913, 5778625, 5802410, 6411635, 6422810, 5944342, 6367492, 5961967, 6243307, 5978402, 6191850, 6371424, 6587778, 6447297, 6313620, 6422810, 6028759, 5986266, 6421901, 6258983, 6233722, 6298395, 6109356, 6084514, 6507783, 6147943, 6449506, 5943635, 6244334, 6411910, 6019024, 5910282, 5905669, 6426226, 6101492, 6107347, 5950904, 6407585, 6150044, 6285611, 6391406, 6019593, 5851354, 6052555, 6657567, 6402396, 6214507, 6340497, 6127688, 6436563, 6457410, 6417576, 6044880, 6353092, 6106752, 6341799, 6132922, 6412342, 5860767, 6165654, 6422810, 6223170, 6422423, 6411910, 6397594, 5872911, 6362735, 6382717, 6145732, 6258506, 5834571, 6414643, 6350965, 6122454, 6278991, 5887337, 6381892, 6294693, 6432891, 6137679, 6015092, 6454484, 6422810, 6113288, 6422810, 6167074, 6333110, 5741320, 6417576, 6407108, 5994751, 6045789, 6451622, 5926010, 6167807, 6423588, 6126386, 6427135, 6157732, 6380938, 6300275, 6530871, 5845065, 6187918, 6157790, 6327399, 5858511, 6427135, 5971840, 6316931, 6144692, 5996734, 5858511, 6365713, 6104122, 6334889, 6597081, 6381892, 6266847, 6376181, 6316106, 5889475, 6351790, 6040974, 6187918, 6386649, 6257348, 6272906, 6037330, 6211400, 6013764, 6417576, 6407108, 6096651, 6396640, 5930563, 6397117, 6422810, 6035347, 6407585, 6135526, 6112607, 6422810, 6412342, 6102794, 5760780, 6370947, 6234115, 6330983, 6517864, 6360249, 6289936, 6154709, 5842783, 5890648, 6428566, 6350011, 6397117, 6417576, 6341799, 6341406, 5878878, 6392360, 6043185, 6061289, 6427135, 6386649, 6229339, 6407585, 6115892, 5486094, 5850647, 6071076, 6269909, 6260659, 6081151, 6223647, 5969236, 6560397, 6432891, 6152472, 6261961, 6224556, 5905074, 6235024, 5960070, 6279468, 5841958, 6357978, 5867677, 6180649, 5920069, 6445866, 6427135 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ],
        "0" : [ 146748, 148545, 163209, 148062, 157032, 155997, 163807, 145655, 137010, 150715, 166912, 152682, 147977, 149316, 147458, 147452, 146578, 149316, 154962, 146511, 149571, 154021, 147977, 142671, 163713, 148833, 153080, 151198, 141384, 155903, 150342, 143527, 165279, 155997, 151301, 155420, 154962, 155493, 149401, 149580, 147434, 146681, 151386, 150715, 147604, 149486, 162678, 148062, 143527, 136154, 167947, 150342, 157302, 154962, 147121, 154021, 158337, 152139, 156844, 150342, 155903, 152139, 155921, 160702, 134182, 153080, 152691, 147537, 165373, 160292, 151198, 144383, 156844, 152139, 147434, 161254, 142231, 165783, 155514, 150809, 147036, 146663, 150360, 148079, 159351, 149932, 150342, 148545, 161925, 153623, 160386, 164748, 148478, 137528, 156938, 163713, 145324, 147036, 155997, 145239, 152597, 155903, 147036, 150715, 152597, 149774, 158337, 156938, 139162, 151656, 144298, 149316, 142231, 158900, 151656, 159667, 146748, 148918, 147604, 157879, 145324, 150715, 157375, 153080, 154962, 150809, 153080, 158820, 154021, 151198, 152139, 159761, 146095, 148918, 147036, 143527, 141978, 162866, 155056, 155420, 160796, 147036, 152242, 155997, 151741, 157785, 153080, 153538, 153538, 156361, 144951, 134977, 152691, 154106, 151656, 154962, 157396, 142298, 158431, 137944, 155056, 164244, 158820, 162362, 151656, 151814, 152139, 149003, 149316, 154021, 155420, 159761, 149868, 157302, 153165, 153080, 137450, 139240, 152597, 157302, 153538, 141357, 152597, 141044, 152597, 156091, 151826, 147036, 151741, 147977, 152224, 146265, 143442, 136594, 156844, 148833, 149401, 143925, 147977, 160796 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 62432,
        "TotalTasksDurationInMs" : 715215,
        "IOBytes" : {
          "Total" : 1254270370,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1230166505,
            "SW" : 24103865
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1422314458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601125024,
                "rowCount" : 275046876
              },
              "compileTime" : {
                "sizeInBytes" : 6601125024,
                "rowCount" : 275046876
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430] "
          },
          "1" : {
            "sign" : 1217615963,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41807125152,
                "rowCount" : 275046876
              },
              "compileTime" : {
                "sizeInBytes" : 41807125152,
                "rowCount" : 275046876
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_customer_sk#420) "
          },
          "2" : {
            "sign" : -1508820217,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              },
              "compileTime" : {
                "sizeInBytes" : 43776970976,
                "rowCount" : 288006388
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#418, ss_item_sk#419, ss_customer_sk#420, ss_cdemo_sk#421, ss_hdemo_sk#422, ss_addr_sk#423, ss_store_sk#424, ss_promo_sk#425, ss_ticket_number#426L, ss_quantity#427, ss_wholesale_cost#428, ss_list_price#429, ss_sales_price#430, ss_ext_discount_amt#431, ss_ext_sales_price#432, ss_ext_wholesale_cost#433, ss_ext_list_price#434, ss_ext_tax#435, ss_coupon_amt#436, ss_net_paid#437, ss_net_paid_inc_tax#438, ss_net_profit#439, ss_sold_date_sk#440], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430]\n+- Filter isnotnull(ss_customer_sk#420)\n   +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#418,ss_item_sk#419,ss_customer_sk#420,ss_cdemo_sk#421,ss_hdemo_sk#422,ss_addr_sk#423,ss_store_sk#424,ss_promo_sk#425,ss_ticket_number#426L,ss_quantity#427,ss_wholesale_cost#428,ss_list_price#429,ss_sales_price#430,ss_ext_discount_amt#431,ss_ext_sales_price#432,ss_ext_wholesale_cost#433,ss_ext_list_price#434,ss_ext_tax#435,ss_coupon_amt#436,ss_net_paid#437,ss_net_paid_inc_tax#438,ss_net_profit#439,ss_sold_date_sk#440] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -248577430,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430] Input [4]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430, ss_sold_date_sk#440] "
          },
          "1" : {
            "sign" : -1439550049,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430, ss_sold_date_sk#440] Condition : isnotnull(ss_customer_sk#420) "
          },
          "2" : {
            "sign" : 533617739,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6601125024,
            "rowCount" : 275046876,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430, ss_sold_date_sk#440] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430]\n+- Filter isnotnull(ss_customer_sk#420)\n   +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#420,ss_quantity#427,ss_sales_price#430,ss_sold_date_sk#440] Batched: true, DataFilters: [isnotnull(ss_customer_sk#420)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6601125024,
        "inputRowCount" : 275046876
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 20231,
        "TotalTasksDurationInMs" : 201238,
        "IOBytes" : {
          "Total" : 4402752936,
          "Details" : {
            "IR" : 1126138769,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3276614167
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -199590637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5360,
                "rowCount" : 134
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [sum(sales#351) AS sum(sales)#526], HashAggregate(keys=[], functions=[sum(sales#351)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [sum(sales#351) AS sum(sales)#526], HashAggregate(keys=[], functions=[sum(sales#351)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2133377127,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5360,
            "rowCount" : 134,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [sum#539, isEmpty#540] Keys: [] Functions [1]: [sum(sales#351)] Aggregate Attributes [1]: [sum(sales#351)#525] Results [1]: [sum(sales#351)#525 AS sum(sales)#526] "
          },
          "1" : {
            "sign" : 1638373082,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [sum#539, isEmpty#540] Arguments: 22 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[sum(sales#351)], output=[sum(sales)#526])\n+- ShuffleQueryStage 22\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=4932]\n      +- *(35) HashAggregate(keys=[], functions=[partial_sum(sales#351)], output=[sum#539, isEmpty#540])\n         +- Union\n            :- *(29) Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n            :  +- *(29) BroadcastHashJoin [cs_sold_date_sk#140], [d_date_sk#459], Inner, BuildRight, false\n            :     :- *(29) Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n            :     :  +- *(29) SortMergeJoin [cs_bill_customer_sk#109], [c_customer_sk#441], LeftSemi\n            :     :     :- *(25) Sort [cs_bill_customer_sk#109 ASC NULLS FIRST], false, 0\n            :     :     :  +- AQEShuffleRead coalesced\n            :     :     :     +- ShuffleQueryStage 20\n            :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#109, 200), ENSURE_REQUIREMENTS, [plan_id=4268]\n            :     :     :           +- *(19) Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n            :     :     :              +- *(19) SortMergeJoin [cs_item_sk#121], [item_sk#358], LeftSemi\n            :     :     :                 :- *(15) Sort [cs_item_sk#121 ASC NULLS FIRST], false, 0\n            :     :     :                 :  +- AQEShuffleRead coalesced\n            :     :     :                 :     +- ShuffleQueryStage 0\n            :     :     :                 :        +- Exchange hashpartitioning(cs_item_sk#121, 200), ENSURE_REQUIREMENTS, [plan_id=826]\n            :     :     :                 :           +- *(1) ColumnarToRow\n            :     :     :                 :              +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n            :     :     :                 :                    +- SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n            :     :     :                 :                       +- AdaptiveSparkPlan isFinalPlan=true\n                                                                     +- == Final Plan ==\n                                                                        BroadcastQueryStage 1\n                                                                        +- ReusedExchange [d_date_sk#459], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n                                                                     +- == Initial Plan ==\n                                                                        BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=813]\n                                                                        +- Project [d_date_sk#459]\n                                                                           +- Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n            :     :     :                 +- *(18) Sort [item_sk#358 ASC NULLS FIRST], false, 0\n            :     :     :                    +- *(18) Project [item_sk#358]\n            :     :     :                       +- *(18) Filter (cnt#360L > 4)\n            :     :     :                          +- *(18) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#358, cnt#360L])\n            :     :     :                             +- *(18) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#528, i_item_sk#67, d_date#41, count#542L])\n            :     :     :                                +- *(18) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n            :     :     :                                   +- *(18) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n            :     :     :                                      :- *(16) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n            :     :     :                                      :  +- AQEShuffleRead coalesced\n            :     :     :                                      :     +- ShuffleQueryStage 17\n            :     :     :                                      :        +- Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n            :     :     :                                      :           +- *(13) Project [ss_item_sk#17, d_date#41]\n            :     :     :                                      :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n            :     :     :                                      :                 :- *(13) Filter isnotnull(ss_item_sk#17)\n            :     :     :                                      :                 :  +- *(13) ColumnarToRow\n            :     :     :                                      :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#529)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n            :     :     :                                      :                 :           +- SubqueryBroadcast dynamicpruning#529, 0, [d_date_sk#39], [id=#2466]\n            :     :     :                                      :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                   +- == Final Plan ==\n                                                                                                      BroadcastQueryStage 1\n                                                                                                      +- ReusedExchange [d_date_sk#39, d_date#41], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n                                                                                                   +- == Initial Plan ==\n                                                                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2463]\n                                                                                                      +- Project [d_date_sk#39, d_date#41]\n                                                                                                         +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                                                                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n            :     :     :                                      :                 +- BroadcastQueryStage 1\n            :     :     :                                      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n            :     :     :                                      :                       +- *(2) Project [d_date_sk#39, d_date#41]\n            :     :     :                                      :                          +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n            :     :     :                                      :                             +- *(2) ColumnarToRow\n            :     :     :                                      :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n            :     :     :                                      +- *(17) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n            :     :     :                                         +- AQEShuffleRead coalesced\n            :     :     :                                            +- ShuffleQueryStage 2\n            :     :     :                                               +- Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=864]\n            :     :     :                                                  +- *(3) Filter isnotnull(i_item_sk#67)\n            :     :     :                                                     +- *(3) ColumnarToRow\n            :     :     :                                                        +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n            :     :     +- *(28) Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n            :     :        +- *(28) Project [c_customer_sk#441]\n            :     :           +- *(28) Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * Subquery subquery#364, [id=#364])))\n            :     :              :  +- Subquery subquery#364, [id=#364]\n            :     :              :     +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             *(7) HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n                                             +- ShuffleQueryStage 4\n                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=5337]\n                                                   +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n                                                      +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n                                                         +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n                                                            +- *(6) Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n                                                               +- *(6) SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n                                                                  :- *(4) Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n                                                                  :  +- AQEShuffleRead coalesced\n                                                                  :     +- ShuffleQueryStage 3\n                                                                  :        +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=5217]\n                                                                  :           +- *(3) Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n                                                                  :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n                                                                  :                 :- *(3) Filter isnotnull(ss_customer_sk#369)\n                                                                  :                 :  +- *(3) ColumnarToRow\n                                                                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                  :                 :           +- SubqueryBroadcast dynamicpruning#530, 0, [d_date_sk#390], [id=#5191]\n                                                                  :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#390], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5188]\n                                                            +- Project [d_date_sk#390]\n                                                               +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  :                 +- BroadcastQueryStage 0\n                                                                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                                                                  :                       +- *(1) Project [d_date_sk#390]\n                                                                  :                          +- *(1) Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                                  :                             +- *(1) ColumnarToRow\n                                                                  :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                     +- AQEShuffleRead coalesced\n                                                                        +- ShuffleQueryStage 2\n                                                                           +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n                                          +- == Initial Plan ==\n                                             HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n                                             +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=362]\n                                                +- HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n                                                   +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n                                                      +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n                                                         +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n                                                            +- SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n                                                               :- Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n                                                               :  +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=352]\n                                                               :     +- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n                                                               :        +- BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n                                                               :           :- Filter isnotnull(ss_customer_sk#369)\n                                                               :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                               :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#530, 0, true, Project [d_date_sk#390], [d_date_sk#390]\n                                                               :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                               :           :              +- Project [d_date_sk#390]\n                                                               :           :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                               :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=347]\n                                                               :              +- Project [d_date_sk#390]\n                                                               :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                               :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                  +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=353]\n                                                                     +- Filter isnotnull(c_customer_sk#89)\n                                                                        +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n            :     :              +- *(28) HashAggregate(keys=[c_customer_sk#441], functions=[sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, ssales#363])\n            :     :                 +- *(28) HashAggregate(keys=[c_customer_sk#441], functions=[partial_sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, sum#545, isEmpty#546])\n            :     :                    +- *(28) Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n            :     :                       +- *(28) SortMergeJoin [ss_customer_sk#420], [c_customer_sk#441], Inner\n            :     :                          :- *(26) Sort [ss_customer_sk#420 ASC NULLS FIRST], false, 0\n            :     :                          :  +- AQEShuffleRead coalesced\n            :     :                          :     +- ShuffleQueryStage 3\n            :     :                          :        +- Exchange hashpartitioning(ss_customer_sk#420, 200), ENSURE_REQUIREMENTS, [plan_id=894]\n            :     :                          :           +- *(4) Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430]\n            :     :                          :              +- *(4) Filter isnotnull(ss_customer_sk#420)\n            :     :                          :                 +- *(4) ColumnarToRow\n            :     :                          :                    +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#420,ss_quantity#427,ss_sales_price#430,ss_sold_date_sk#440] Batched: true, DataFilters: [isnotnull(ss_customer_sk#420)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n            :     :                          +- *(27) Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n            :     :                             +- AQEShuffleRead coalesced\n            :     :                                +- ShuffleQueryStage 4\n            :     :                                   +- Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n            :     :                                      +- *(5) Filter isnotnull(c_customer_sk#441)\n            :     :                                         +- *(5) ColumnarToRow\n            :     :                                            +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#441] Batched: true, DataFilters: [isnotnull(c_customer_sk#441)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n            :     +- BroadcastQueryStage 5\n            :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n            :           +- *(6) Project [d_date_sk#459]\n            :              +- *(6) Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n            :                 +- *(6) ColumnarToRow\n            :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n            +- *(34) Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n               +- *(34) BroadcastHashJoin [ws_sold_date_sk#174], [d_date_sk#487], Inner, BuildRight, false\n                  :- *(34) Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :  +- *(34) SortMergeJoin [ws_bill_customer_sk#144], [c_customer_sk#441], LeftSemi\n                  :     :- *(30) Sort [ws_bill_customer_sk#144 ASC NULLS FIRST], false, 0\n                  :     :  +- AQEShuffleRead coalesced\n                  :     :     +- ShuffleQueryStage 21\n                  :     :        +- Exchange hashpartitioning(ws_bill_customer_sk#144, 200), ENSURE_REQUIREMENTS, [plan_id=4356]\n                  :     :           +- *(24) Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n                  :     :              +- *(24) SortMergeJoin [ws_item_sk#143], [item_sk#358], LeftSemi\n                  :     :                 :- *(20) Sort [ws_item_sk#143 ASC NULLS FIRST], false, 0\n                  :     :                 :  +- AQEShuffleRead coalesced\n                  :     :                 :     +- ShuffleQueryStage 6\n                  :     :                 :        +- Exchange hashpartitioning(ws_item_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=968]\n                  :     :                 :           +- *(7) ColumnarToRow\n                  :     :                 :              +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n                  :     :                 :                    +- ReusedSubquery SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n                  :     :                 +- *(23) Sort [item_sk#358 ASC NULLS FIRST], false, 0\n                  :     :                    +- *(23) Project [item_sk#358]\n                  :     :                       +- *(23) Filter (cnt#360L > 4)\n                  :     :                          +- *(23) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#358, cnt#360L])\n                  :     :                             +- *(23) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#528, i_item_sk#67, d_date#41, count#542L])\n                  :     :                                +- *(23) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n                  :     :                                   +- *(23) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n                  :     :                                      :- *(21) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n                  :     :                                      :  +- AQEShuffleRead coalesced\n                  :     :                                      :     +- ShuffleQueryStage 19\n                  :     :                                      :        +- ReusedExchange [ss_item_sk#17, d_date#41], Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n                  :     :                                      +- *(22) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n                  :     :                                         +- AQEShuffleRead coalesced\n                  :     :                                            +- ShuffleQueryStage 10\n                  :     :                                               +- ReusedExchange [i_item_sk#67, i_item_desc#71], Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=864]\n                  :     +- *(33) Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n                  :        +- *(33) Project [c_customer_sk#441]\n                  :           +- *(33) Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * Subquery subquery#364, [id=#364])))\n                  :              :  +- Subquery subquery#364, [id=#364]\n                  :              :     +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             *(7) HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n                                             +- ShuffleQueryStage 4\n                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=5337]\n                                                   +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n                                                      +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n                                                         +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n                                                            +- *(6) Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n                                                               +- *(6) SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n                                                                  :- *(4) Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n                                                                  :  +- AQEShuffleRead coalesced\n                                                                  :     +- ShuffleQueryStage 3\n                                                                  :        +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=5217]\n                                                                  :           +- *(3) Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n                                                                  :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n                                                                  :                 :- *(3) Filter isnotnull(ss_customer_sk#369)\n                                                                  :                 :  +- *(3) ColumnarToRow\n                                                                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                                  :                 :           +- SubqueryBroadcast dynamicpruning#530, 0, [d_date_sk#390], [id=#5191]\n                                                                  :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#390], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5188]\n                                                            +- Project [d_date_sk#390]\n                                                               +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  :                 +- BroadcastQueryStage 0\n                                                                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                                                                  :                       +- *(1) Project [d_date_sk#390]\n                                                                  :                          +- *(1) Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                                  :                             +- *(1) ColumnarToRow\n                                                                  :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                                  +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                     +- AQEShuffleRead coalesced\n                                                                        +- ShuffleQueryStage 2\n                                                                           +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n                                          +- == Initial Plan ==\n                                             HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n                                             +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=362]\n                                                +- HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n                                                   +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n                                                      +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n                                                         +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n                                                            +- SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n                                                               :- Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n                                                               :  +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=352]\n                                                               :     +- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n                                                               :        +- BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n                                                               :           :- Filter isnotnull(ss_customer_sk#369)\n                                                               :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                               :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#530, 0, true, Project [d_date_sk#390], [d_date_sk#390]\n                                                               :           :           +- AdaptiveSparkPlan isFinalPlan=false\n                                                               :           :              +- Project [d_date_sk#390]\n                                                               :           :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                               :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=347]\n                                                               :              +- Project [d_date_sk#390]\n                                                               :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                               :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                                               +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                                                                  +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=353]\n                                                                     +- Filter isnotnull(c_customer_sk#89)\n                                                                        +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n                  :              +- *(33) HashAggregate(keys=[c_customer_sk#441], functions=[sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, ssales#363])\n                  :                 +- *(33) HashAggregate(keys=[c_customer_sk#441], functions=[partial_sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, sum#545, isEmpty#546])\n                  :                    +- *(33) Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n                  :                       +- *(33) SortMergeJoin [ss_customer_sk#420], [c_customer_sk#441], Inner\n                  :                          :- *(31) Sort [ss_customer_sk#420 ASC NULLS FIRST], false, 0\n                  :                          :  +- AQEShuffleRead coalesced\n                  :                          :     +- ShuffleQueryStage 12\n                  :                          :        +- ReusedExchange [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], Exchange hashpartitioning(ss_customer_sk#420, 200), ENSURE_REQUIREMENTS, [plan_id=894]\n                  :                          +- *(32) Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n                  :                             +- AQEShuffleRead coalesced\n                  :                                +- ShuffleQueryStage 14\n                  :                                   +- ReusedExchange [c_customer_sk#441], Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n                  +- BroadcastQueryStage 16\n                     +- ReusedExchange [d_date_sk#487], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5360,
        "inputRowCount" : 134
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "10" : [ 9776 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 44 ],
      "Objectives" : {
        "DurationInMs" : 47,
        "TotalTasksDurationInMs" : 40,
        "IOBytes" : {
          "Total" : 9134,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9134,
            "SW" : 0
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1442297811,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#367, ss_item_sk#368, ss_customer_sk#369, ss_cdemo_sk#370, ss_hdemo_sk#371, ss_addr_sk#372, ss_store_sk#373, ss_promo_sk#374, ss_ticket_number#375L, ss_quantity#376, ss_wholesale_cost#377, ss_list_price#378, ss_sales_price#379, ss_ext_discount_amt#380, ss_ext_sales_price#381, ss_ext_wholesale_cost#382, ss_ext_list_price#383, ss_ext_tax#384, ss_coupon_amt#385, ss_net_paid#386, ss_net_paid_inc_tax#387, ss_net_profit#388, ss_sold_date_sk#389], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 958776579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#389 = d_date_sk#390) "
          },
          "0" : {
            "sign" : 616120251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] "
          },
          "2" : {
            "sign" : 1191900617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354733484,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 7354733484,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] "
          },
          "3" : {
            "sign" : 862071621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n+- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :  +- Project [d_date_sk#390]\n   :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   +- Project [d_date_sk#390]\n      +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -2097597933,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#390] Arguments: 0 "
          },
          "1" : {
            "sign" : 1963102901,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#389] Right keys [1]: [d_date_sk#390] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1258630017,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379] Input [5]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389, d_date_sk#390] "
          },
          "2" : {
            "sign" : -682514906,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] Condition : isnotnull(ss_customer_sk#369) "
          },
          "3" : {
            "sign" : -1317600322,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354733484,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#530)] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n+- BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n   :- Filter isnotnull(ss_customer_sk#369)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#530, 0, [d_date_sk#390], [id=#5191]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5188]\n   :                 +- Project [d_date_sk#390]\n   :                    +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n         +- *(1) Project [d_date_sk#390]\n            +- *(1) Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7355793748,
        "inputRowCount" : 262670514
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 9578,
        "TotalTasksDurationInMs" : 148622,
        "IOBytes" : {
          "Total" : 3404787644,
          "Details" : {
            "IR" : 853591299,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2551196345
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1828527304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L] "
          },
          "5" : {
            "sign" : -2039396619,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 10341285156,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] "
          },
          "6" : {
            "sign" : 729908819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 38205303493,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#67) "
          },
          "1" : {
            "sign" : 1167878191,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2303475968,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 2303475968,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_item_sk#143 = item_sk#358) "
          },
          "0" : {
            "sign" : 1204409810,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015541472,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 2015541472,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "2" : {
            "sign" : -138712544,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 3447095052,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_sk#358] "
          },
          "3" : {
            "sign" : 1193616772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (cnt#360L > 4) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n+- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n   :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n   :  +- Filter (isnotnull(ws_sold_date_sk#174) AND dynamicpruning#536 [ws_sold_date_sk#174])\n   :     :  +- Project [d_date_sk#487]\n   :     :     +- Filter (((isnotnull(d_year#493) AND isnotnull(d_moy#495)) AND ((d_year#493 = 1999) AND (d_moy#495 = 1))) AND isnotnull(d_date_sk#487))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#487,d_date_id#488,d_date#489,d_month_seq#490,d_week_seq#491,d_quarter_seq#492,d_year#493,d_dow#494,d_moy#495,d_dom#496,d_qoy#497,d_fy_year#498,d_fy_quarter_seq#499,d_fy_week_seq#500,d_day_name#501,d_quarter_name#502,d_holiday#503,d_weekend#504,d_following_holiday#505,d_first_dom#506,d_last_dom#507,d_same_day_ly#508,d_same_day_lq#509,d_current_day#510,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n   +- Project [item_sk#358]\n      +- Filter (cnt#360L > 4)\n         +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n            +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n               +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n                  :- Project [ss_item_sk#17, d_date#41]\n                  :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n                  :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n                  :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38])\n                  :     :     :  +- Project [d_date_sk#39, d_date#41]\n                  :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n                  :     +- Project [d_date_sk#39, d_date#41]\n                  :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n                  +- Project [i_item_sk#67, i_item_desc#71]\n                     +- Filter isnotnull(i_item_sk#67)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -860016975,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 5280146112,
            "rowCount" : 220006088,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ss_item_sk#17, d_date#41] Arguments: 19 "
          },
          "8" : {
            "sign" : -778600161,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [d_date#41, i_item_sk#67, _groupingexpression#528] Keys [3]: [_groupingexpression#528, i_item_sk#67, d_date#41] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#541L] Results [4]: [_groupingexpression#528, i_item_sk#67, d_date#41, count#542L] "
          },
          "4" : {
            "sign" : -1642260623,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [item_sk#358] Arguments: [item_sk#358 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : 338227821,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ss_item_sk#17, d_date#41] Arguments: [ss_item_sk#17 ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : 251035232,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10341285156,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528] Input [4]: [ss_item_sk#17, d_date#41, i_item_sk#67, i_item_desc#71] "
          },
          "13" : {
            "sign" : 222948058,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [i_item_sk#67, i_item_desc#71] Arguments: [i_item_sk#67 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 1753551808,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3447095052,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [item_sk#358] Input [2]: [item_sk#358, cnt#360L] "
          },
          "10" : {
            "sign" : -2020519994,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 38205303493,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#17] Right keys [1]: [i_item_sk#67] Join type: Inner Join condition: None "
          },
          "6" : {
            "sign" : -1030554990,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [item_sk#358, cnt#360L] Condition : (cnt#360L > 4) "
          },
          "1" : {
            "sign" : -1660609496,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_item_sk#143] Right keys [1]: [item_sk#358] Join type: LeftSemi Join condition: None "
          },
          "14" : {
            "sign" : -2098515544,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 26102424,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_sk#67, i_item_desc#71] Arguments: 10 "
          },
          "0" : {
            "sign" : -1905495391,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Input [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "2" : {
            "sign" : -1111128324,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: [ws_item_sk#143 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : 1132084504,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [4]: [_groupingexpression#528, i_item_sk#67, d_date#41, count#542L] Keys [3]: [_groupingexpression#528, i_item_sk#67, d_date#41] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#365L] Results [2]: [i_item_sk#67 AS item_sk#358, count(1)#365L AS cnt#360L] "
          },
          "3" : {
            "sign" : -1230627554,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 40438224,
            "rowCount" : 842463,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: 6 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 11,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "ShuffleQueryStage",
          "toId" : 13,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Sort",
          "toId" : 10,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "SortMergeJoin",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "HashAggregate",
          "toId" : 7,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "HashAggregate",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "SortMergeJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n+- SortMergeJoin [ws_item_sk#143], [item_sk#358], LeftSemi\n   :- Sort [ws_item_sk#143 ASC NULLS FIRST], false, 0\n   :  +- ShuffleQueryStage 6\n   :     +- Exchange hashpartitioning(ws_item_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=968]\n   :        +- *(7) ColumnarToRow\n   :           +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n   :                 +- ReusedSubquery SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n   +- Sort [item_sk#358 ASC NULLS FIRST], false, 0\n      +- Project [item_sk#358]\n         +- Filter (cnt#360L > 4)\n            +- HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#358, cnt#360L])\n               +- HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#528, i_item_sk#67, d_date#41, count#542L])\n                  +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n                     +- SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n                        :- Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n                        :  +- ShuffleQueryStage 19\n                        :     +- ReusedExchange [ss_item_sk#17, d_date#41], Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n                        +- Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n                           +- ShuffleQueryStage 10\n                              +- ReusedExchange [i_item_sk#67, i_item_desc#71], Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=864]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5346686760,
        "inputRowCount" : 221052551
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 6049721, 6030087, 6204013, 6143364, 6417576, 6042564, 6427913, 5778625, 5802410, 6411635, 6422810, 5944342, 6367492, 5961967, 6243307, 5978402, 6191850, 6371424, 6587778, 6447297, 6313620, 6422810, 6028759, 5986266, 6421901, 6258983, 6233722, 6298395, 6109356, 6084514, 6507783, 6147943, 6449506, 5943635, 6244334, 6411910, 6019024, 5910282, 5905669, 6426226, 6101492, 6107347, 5950904, 6407585, 6150044, 6285611, 6391406, 6019593, 5851354, 6052555, 6657567, 6402396, 6214507, 6340497, 6127688, 6436563, 6457410, 6417576, 6044880, 6353092, 6106752, 6341799, 6132922, 6412342, 5860767, 6165654, 6422810, 6223170, 6422423, 6411910, 6397594, 5872911, 6362735, 6382717, 6145732, 6258506, 5834571, 6414643, 6350965, 6122454, 6278991, 5887337, 6381892, 6294693, 6432891, 6137679, 6015092, 6454484, 6422810, 6113288, 6422810, 6167074, 6333110, 5741320, 6417576, 6407108, 5994751, 6045789, 6451622, 5926010, 6167807, 6423588, 6126386, 6427135, 6157732, 6380938, 6300275, 6530871, 5845065, 6187918, 6157790, 6327399, 5858511, 6427135, 5971840, 6316931, 6144692, 5996734, 5858511, 6365713, 6104122, 6334889, 6597081, 6381892, 6266847, 6376181, 6316106, 5889475, 6351790, 6040974, 6187918, 6386649, 6257348, 6272906, 6037330, 6211400, 6013764, 6417576, 6407108, 6096651, 6396640, 5930563, 6397117, 6422810, 6035347, 6407585, 6135526, 6112607, 6422810, 6412342, 6102794, 5760780, 6370947, 6234115, 6330983, 6517864, 6360249, 6289936, 6154709, 5842783, 5890648, 6428566, 6350011, 6397117, 6417576, 6341799, 6341406, 5878878, 6392360, 6043185, 6061289, 6427135, 6386649, 6229339, 6407585, 6115892, 5486094, 5850647, 6071076, 6269909, 6260659, 6081151, 6223647, 5969236, 6560397, 6432891, 6152472, 6261961, 6224556, 5905074, 6235024, 5960070, 6279468, 5841958, 6357978, 5867677, 6180649, 5920069, 6445866, 6427135 ],
        "4" : [ 92897, 90784, 103761, 90428, 98316, 97427, 101149, 90784, 84788, 92742, 102014, 97350, 92721, 91819, 94834, 93337, 90456, 91442, 93321, 90784, 92393, 96288, 88877, 91845, 104847, 93804, 94191, 93687, 87972, 94260, 96819, 89988, 101560, 98948, 95408, 96771, 95805, 97937, 94674, 92881, 91931, 90413, 93316, 92721, 91267, 93799, 97785, 93799, 88895, 84890, 104191, 94351, 97233, 94309, 93847, 98364, 96771, 94282, 95322, 95413, 96819, 94834, 93777, 97350, 80847, 96867, 92833, 91315, 101555, 98799, 94791, 91931, 99407, 98316, 91707, 98900, 90497, 108866, 96219, 94743, 94818, 94791, 91470, 93777, 100063, 93407, 96723, 92436, 101000, 91819, 97833, 99813, 94330, 89447, 99282, 102062, 90789, 90301, 99917, 88480, 92281, 98407, 93826, 91267, 97302, 98895, 97446, 99236, 85251, 91931, 91336, 89973, 89378, 99551, 95805, 95317, 90461, 92350, 91358, 98924, 90519, 94260, 99028, 93156, 100474, 96379, 93295, 95226, 96944, 92860, 93337, 97302, 89866, 91336, 90987, 89007, 89973, 99455, 97302, 98799, 102747, 89952, 96288, 99938, 93428, 95301, 92376, 95512, 95274, 95365, 92790, 85795, 95875, 96920, 94308, 92484, 95930, 89093, 97422, 86253, 96219, 102379, 98489, 102784, 96331, 96379, 92854, 93316, 92785, 93916, 94791, 102115, 94469, 96793, 95805, 96867, 89581, 88981, 94399, 98489, 98220, 89472, 93708, 89292, 96819, 95848, 95274, 90875, 94871, 92345, 94834, 92238, 91798, 83153, 95205, 93471, 96422, 89533, 96750, 101101 ],
        "1" : [ 84280, 84280, 84280, 92709, 92709, 84280, 92709, 84280, 76619, 92709, 92709, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 92709, 84280, 92709, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 92709, 92709, 92709, 76619, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 92709, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 84280, 84280, 92709, 84280, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 92709, 84280, 84280, 84280, 92709, 92709, 92709, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 84280, 92709, 92709, 84280, 84280, 84280, 84280, 92709, 84280, 84280, 84280, 84280, 84280, 84280, 84280, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 106391,
        "TotalTasksDurationInMs" : 568315,
        "IOBytes" : {
          "Total" : 1234044617,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1219247104,
            "SW" : 14797513
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -502312749,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1472,
                "rowCount" : 46
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [max(csales#361) AS tpcds_cmax#362], HashAggregate(keys=[], functions=[max(csales#361)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [max(csales#361) AS tpcds_cmax#362], HashAggregate(keys=[], functions=[max(csales#361)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1288323194,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1472,
            "rowCount" : 46,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [max#548] Keys: [] Functions [1]: [max(csales#361)] Aggregate Attributes [1]: [max(csales#361)#521] Results [1]: [max(csales#361)#521 AS tpcds_cmax#362] "
          },
          "1" : {
            "sign" : 1766818792,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [max#548] Arguments: 4 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n+- ShuffleQueryStage 4\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=5337]\n      +- *(6) HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n         +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n            +- *(6) HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n               +- *(6) Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n                  +- *(6) SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n                     :- *(4) Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n                     :  +- AQEShuffleRead coalesced\n                     :     +- ShuffleQueryStage 3\n                     :        +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=5217]\n                     :           +- *(3) Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n                     :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n                     :                 :- *(3) Filter isnotnull(ss_customer_sk#369)\n                     :                 :  +- *(3) ColumnarToRow\n                     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                     :                 :           +- SubqueryBroadcast dynamicpruning#530, 0, [d_date_sk#390], [id=#5191]\n                     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#390], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5188]\n                                                            +- Project [d_date_sk#390]\n                                                               +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     :                 +- BroadcastQueryStage 0\n                     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5062]\n                     :                       +- *(1) Project [d_date_sk#390]\n                     :                          +- *(1) Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n                     :                             +- *(1) ColumnarToRow\n                     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     +- *(5) Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 2\n                              +- ReusedExchange [c_customer_sk#89], Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1472,
        "inputRowCount" : 46
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "9" : [ 3312 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 25 ],
      "Objectives" : {
        "DurationInMs" : 42,
        "TotalTasksDurationInMs" : 37,
        "IOBytes" : {
          "Total" : 3266,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3266,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -908292725,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 24000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "1" : {
            "sign" : 1842462233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#441) "
          },
          "2" : {
            "sign" : -519982393,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#441, c_customer_id#442, c_current_cdemo_sk#443, c_current_hdemo_sk#444, c_current_addr_sk#445, c_first_shipto_date_sk#446, c_first_sales_date_sk#447, c_salutation#448, c_first_name#449, c_last_name#450, c_preferred_cust_flag#451, c_birth_day#452, c_birth_month#453, c_birth_year#454, c_birth_country#455, c_login#456, c_email_address#457, c_last_review_date#458], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#441]\n+- Filter isnotnull(c_customer_sk#441)\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#441,c_customer_id#442,c_current_cdemo_sk#443,c_current_hdemo_sk#444,c_current_addr_sk#445,c_first_shipto_date_sk#446,c_first_sales_date_sk#447,c_salutation#448,c_first_name#449,c_last_name#450,c_preferred_cust_flag#451,c_birth_day#452,c_birth_month#453,c_birth_year#454,c_birth_country#455,c_login#456,c_email_address#457,c_last_review_date#458] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -281827690,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [1]: [c_customer_sk#441] Condition : isnotnull(c_customer_sk#441) "
          },
          "1" : {
            "sign" : -1996982716,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 24000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [1]: [c_customer_sk#441] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk)] ReadSchema: struct<c_customer_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(c_customer_sk#441)\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#441] Batched: true, DataFilters: [isnotnull(c_customer_sk#441)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 24000000,
        "inputRowCount" : 2000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 19976,
        "TotalTasksDurationInMs" : 1487,
        "IOBytes" : {
          "Total" : 18511551,
          "Details" : {
            "IR" : 8140360,
            "IW" : 0,
            "SR" : 0,
            "SW" : 10371191
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -131464270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17364,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 17364,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#390] "
          },
          "1" : {
            "sign" : -285729134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "2" : {
            "sign" : -302311684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#390, d_date_id#391, d_date#392, d_month_seq#393, d_week_seq#394, d_quarter_seq#395, d_year#396, d_dow#397, d_moy#398, d_dom#399, d_qoy#400, d_fy_year#401, d_fy_quarter_seq#402, d_fy_week_seq#403, d_day_name#404, d_quarter_name#405, d_holiday#406, d_weekend#407, d_following_holiday#408, d_first_dom#409, d_last_dom#410, d_same_day_ly#411, d_same_day_lq#412, d_current_day#413, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#390]\n+- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -322634215,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#390] Input [2]: [d_date_sk#390, d_year#396] "
          },
          "1" : {
            "sign" : 1196075257,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#390, d_year#396] Condition : (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390)) "
          },
          "2" : {
            "sign" : -1578673053,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 17364,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#390, d_year#396] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#390]\n+- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17364,
        "inputRowCount" : 1447
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 91,
        "TotalTasksDurationInMs" : 87,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 391033502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2303475968,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 2303475968,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "1" : {
            "sign" : 1717219265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#174) AND dynamicpruning#536 [ws_sold_date_sk#174]) "
          },
          "2" : {
            "sign" : 2108049380,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#141, ws_ship_date_sk#142, ws_item_sk#143, ws_bill_customer_sk#144, ws_bill_cdemo_sk#145, ws_bill_hdemo_sk#146, ws_bill_addr_sk#147, ws_ship_customer_sk#148, ws_ship_cdemo_sk#149, ws_ship_hdemo_sk#150, ws_ship_addr_sk#151, ws_web_page_sk#152, ws_web_site_sk#153, ws_ship_mode_sk#154, ws_warehouse_sk#155, ws_promo_sk#156, ws_order_number#157L, ws_quantity#158, ws_wholesale_cost#159, ws_list_price#160, ws_sales_price#161, ws_ext_discount_amt#162, ws_ext_sales_price#163, ws_ext_wholesale_cost#164, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n+- Filter (isnotnull(ws_sold_date_sk#174) AND dynamicpruning#536 [ws_sold_date_sk#174])\n   :  +- Project [d_date_sk#487]\n   :     +- Filter (((isnotnull(d_year#493) AND isnotnull(d_moy#495)) AND ((d_year#493 = 1999) AND (d_moy#495 = 1))) AND isnotnull(d_date_sk#487))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#487,d_date_id#488,d_date#489,d_month_seq#490,d_week_seq#491,d_quarter_seq#492,d_year#493,d_dow#494,d_moy#495,d_dom#496,d_qoy#497,d_fy_year#498,d_fy_quarter_seq#499,d_fy_week_seq#500,d_day_name#501,d_quarter_name#502,d_holiday#503,d_weekend#504,d_following_holiday#505,d_first_dom#506,d_last_dom#507,d_same_day_ly#508,d_same_day_lq#509,d_current_day#510,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 457774643,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2303475968,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [5]: [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#534)] ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)> "
          }
        },
        "links" : [ ],
        "rawPlan" : "FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n   +- ReusedSubquery SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2303475968,
        "inputRowCount" : 71983624
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 20107,
        "TotalTasksDurationInMs" : 4592,
        "IOBytes" : {
          "Total" : 26459524,
          "Details" : {
            "IR" : 8447126,
            "IW" : 0,
            "SR" : 0,
            "SW" : 18012398
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1095378484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#459] "
          },
          "1" : {
            "sign" : 1422698216,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND ((d_year#465 = 1999) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459)) "
          },
          "2" : {
            "sign" : 1146112461,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#459, d_date_id#460, d_date#461, d_month_seq#462, d_week_seq#463, d_quarter_seq#464, d_year#465, d_dow#466, d_moy#467, d_dom#468, d_qoy#469, d_fy_year#470, d_fy_quarter_seq#471, d_fy_week_seq#472, d_day_name#473, d_quarter_name#474, d_holiday#475, d_weekend#476, d_following_holiday#477, d_first_dom#478, d_last_dom#479, d_same_day_ly#480, d_same_day_lq#481, d_current_day#482, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#459]\n+- Filter (((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND ((d_year#465 = 1999) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_date_id#460,d_date#461,d_month_seq#462,d_week_seq#463,d_quarter_seq#464,d_year#465,d_dow#466,d_moy#467,d_dom#468,d_qoy#469,d_fy_year#470,d_fy_quarter_seq#471,d_fy_week_seq#472,d_day_name#473,d_quarter_name#474,d_holiday#475,d_weekend#476,d_following_holiday#477,d_first_dom#478,d_last_dom#479,d_same_day_ly#480,d_same_day_lq#481,d_current_day#482,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1149221181,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#459] Input [3]: [d_date_sk#459, d_year#465, d_moy#467] "
          },
          "1" : {
            "sign" : -1105495651,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#459, d_year#465, d_moy#467] Condition : ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459)) "
          },
          "2" : {
            "sign" : -577197318,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#459, d_year#465, d_moy#467] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#459]\n+- Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 900,
        "inputRowCount" : 75
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 7767,
        "TotalTasksDurationInMs" : 7760,
        "IOBytes" : {
          "Total" : 173661,
          "Details" : {
            "IR" : 173661,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "12" : {
            "sign" : 776255035,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1945876940,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#174 = d_date_sk#487) "
          },
          "8" : {
            "sign" : -806000893,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363] "
          },
          "4" : {
            "sign" : 649304199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3438552408,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 3438552408,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "11" : {
            "sign" : -1190701799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1111929680,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1111929680,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] "
          },
          "9" : {
            "sign" : 1823330143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 6601054824,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "13" : {
            "sign" : -1317794851,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1727606976,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 1727606976,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "5" : {
            "sign" : 1201340776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4011644476,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 4011644476,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441) "
          },
          "10" : {
            "sign" : -98720018,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 7701230628,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#420 = c_customer_sk#441) "
          },
          "6" : {
            "sign" : 766669275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23812188,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 23812188,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#441] "
          },
          "1" : {
            "sign" : -392542251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3328189872,
                "rowCount" : 208011867
              },
              "compileTime" : {
                "sizeInBytes" : 3328189872,
                "rowCount" : 208011867
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "14" : {
            "sign" : 805846842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015541472,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 2015541472,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441) "
          },
          "0" : {
            "sign" : 137757474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 24,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [sum(sales#351) AS sum(sales)#526] "
          },
          "2" : {
            "sign" : 479090878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2216260192,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 2216260192,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] "
          },
          "7" : {
            "sign" : -160777863,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              },
              "compileTime" : {
                "sizeInBytes" : 55561772,
                "rowCount" : 1984349
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 []))) "
          },
          "3" : {
            "sign" : 919967402,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3878455336,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3878455336,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#140 = d_date_sk#459) "
          }
        },
        "links" : [ {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [sum(sales#351) AS sum(sales)#526]\n+- Union false, false\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- Join Inner, (cs_sold_date_sk#140 = d_date_sk#459)\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- Join LeftSemi, (cs_bill_customer_sk#109 = c_customer_sk#441)\n   :     :     :- Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :  +- Join LeftSemi, (cs_item_sk#121 = item_sk#358)\n   :     :     :     :- Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :     :  +- Filter (isnotnull(cs_sold_date_sk#140) AND dynamicpruning#534 [cs_sold_date_sk#140])\n   :     :     :     :     :  +- Project [d_date_sk#459]\n   :     :     :     :     :     +- Filter (((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND ((d_year#465 = 1999) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459))\n   :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_date_id#460,d_date#461,d_month_seq#462,d_week_seq#463,d_quarter_seq#464,d_year#465,d_dow#466,d_moy#467,d_dom#468,d_qoy#469,d_fy_year#470,d_fy_quarter_seq#471,d_fy_week_seq#472,d_day_name#473,d_quarter_name#474,d_holiday#475,d_weekend#476,d_following_holiday#477,d_first_dom#478,d_last_dom#479,d_same_day_ly#480,d_same_day_lq#481,d_current_day#482,... 4 more fields] parquet\n   :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n   :     :     :     +- Project [item_sk#358]\n   :     :     :        +- Filter (cnt#360L > 4)\n   :     :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n   :     :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n   :     :     :                    :- Project [ss_item_sk#17, d_date#41]\n   :     :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :     :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :     :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n   :     :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   :     :     :                    :     +- Project [d_date_sk#39, d_date#41]\n   :     :     :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     :     :                    +- Project [i_item_sk#67, i_item_desc#71]\n   :     :     :                       +- Filter isnotnull(i_item_sk#67)\n   :     :     :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n   :     :     +- Project [c_customer_sk#441]\n   :     :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n   :     :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n   :     :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n   :     :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n   :     :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n   :     :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n   :     :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n   :     :           :              :     :     :  +- Project [d_date_sk#390]\n   :     :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n   :     :           :              :     +- Project [d_date_sk#390]\n   :     :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n   :     :           :              +- Project [c_customer_sk#89]\n   :     :           :                 +- Filter isnotnull(c_customer_sk#89)\n   :     :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n   :     :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n   :     :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n   :     :                    :- Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430]\n   :     :                    :  +- Filter isnotnull(ss_customer_sk#420)\n   :     :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#418,ss_item_sk#419,ss_customer_sk#420,ss_cdemo_sk#421,ss_hdemo_sk#422,ss_addr_sk#423,ss_store_sk#424,ss_promo_sk#425,ss_ticket_number#426L,ss_quantity#427,ss_wholesale_cost#428,ss_list_price#429,ss_sales_price#430,ss_ext_discount_amt#431,ss_ext_sales_price#432,ss_ext_wholesale_cost#433,ss_ext_list_price#434,ss_ext_tax#435,ss_coupon_amt#436,ss_net_paid#437,ss_net_paid_inc_tax#438,ss_net_profit#439,ss_sold_date_sk#440] parquet\n   :     :                    +- Project [c_customer_sk#441]\n   :     :                       +- Filter isnotnull(c_customer_sk#441)\n   :     :                          +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#441,c_customer_id#442,c_current_cdemo_sk#443,c_current_hdemo_sk#444,c_current_addr_sk#445,c_first_shipto_date_sk#446,c_first_sales_date_sk#447,c_salutation#448,c_first_name#449,c_last_name#450,c_preferred_cust_flag#451,c_birth_day#452,c_birth_month#453,c_birth_year#454,c_birth_country#455,c_login#456,c_email_address#457,c_last_review_date#458] parquet\n   :     +- Project [d_date_sk#459]\n   :        +- Filter (((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND ((d_year#465 = 1999) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_date_id#460,d_date#461,d_month_seq#462,d_week_seq#463,d_quarter_seq#464,d_year#465,d_dow#466,d_moy#467,d_dom#468,d_qoy#469,d_fy_year#470,d_fy_quarter_seq#471,d_fy_week_seq#472,d_day_name#473,d_quarter_name#474,d_holiday#475,d_weekend#476,d_following_holiday#477,d_first_dom#478,d_last_dom#479,d_same_day_ly#480,d_same_day_lq#481,d_current_day#482,... 4 more fields] parquet\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- Join Inner, (ws_sold_date_sk#174 = d_date_sk#487)\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- Join LeftSemi, (ws_bill_customer_sk#144 = c_customer_sk#441)\n         :     :- Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :  +- Join LeftSemi, (ws_item_sk#143 = item_sk#358)\n         :     :     :- Project [ws_item_sk#143, ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :     :  +- Filter (isnotnull(ws_sold_date_sk#174) AND dynamicpruning#536 [ws_sold_date_sk#174])\n         :     :     :     :  +- Project [d_date_sk#487]\n         :     :     :     :     +- Filter (((isnotnull(d_year#493) AND isnotnull(d_moy#495)) AND ((d_year#493 = 1999) AND (d_moy#495 = 1))) AND isnotnull(d_date_sk#487))\n         :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#487,d_date_id#488,d_date#489,d_month_seq#490,d_week_seq#491,d_quarter_seq#492,d_year#493,d_dow#494,d_moy#495,d_dom#496,d_qoy#497,d_fy_year#498,d_fy_quarter_seq#499,d_fy_week_seq#500,d_day_name#501,d_quarter_name#502,d_holiday#503,d_weekend#504,d_following_holiday#505,d_first_dom#506,d_last_dom#507,d_same_day_ly#508,d_same_day_lq#509,d_current_day#510,... 4 more fields] parquet\n         :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#141,ws_ship_date_sk#142,ws_item_sk#143,ws_bill_customer_sk#144,ws_bill_cdemo_sk#145,ws_bill_hdemo_sk#146,ws_bill_addr_sk#147,ws_ship_customer_sk#148,ws_ship_cdemo_sk#149,ws_ship_hdemo_sk#150,ws_ship_addr_sk#151,ws_web_page_sk#152,ws_web_site_sk#153,ws_ship_mode_sk#154,ws_warehouse_sk#155,ws_promo_sk#156,ws_order_number#157L,ws_quantity#158,ws_wholesale_cost#159,ws_list_price#160,ws_sales_price#161,ws_ext_discount_amt#162,ws_ext_sales_price#163,ws_ext_wholesale_cost#164,... 10 more fields] parquet\n         :     :     +- Project [item_sk#358]\n         :     :        +- Filter (cnt#360L > 4)\n         :     :           +- Aggregate [_groupingexpression#528, i_item_sk#67, d_date#41], [i_item_sk#67 AS item_sk#358, count(1) AS cnt#360L]\n         :     :              +- Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                 +- Join Inner, (ss_item_sk#17 = i_item_sk#67)\n         :     :                    :- Project [ss_item_sk#17, d_date#41]\n         :     :                    :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n         :     :                    :     :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n         :     :                    :     :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#531 [ss_sold_date_sk#38])\n         :     :                    :     :     :  +- Project [d_date_sk#39, d_date#41]\n         :     :                    :     :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n         :     :                    :     +- Project [d_date_sk#39, d_date#41]\n         :     :                    :        +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         :     :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n         :     :                    +- Project [i_item_sk#67, i_item_desc#71]\n         :     :                       +- Filter isnotnull(i_item_sk#67)\n         :     :                          +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n         :     +- Project [c_customer_sk#441]\n         :        +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * scalar-subquery#364 [])))\n         :           :  +- Aggregate [max(csales#361) AS tpcds_cmax#362]\n         :           :     +- Aggregate [c_customer_sk#89], [sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379)) AS csales#361]\n         :           :        +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :           :           +- Join Inner, (ss_customer_sk#369 = c_customer_sk#89)\n         :           :              :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :           :              :  +- Join Inner, (ss_sold_date_sk#389 = d_date_sk#390)\n         :           :              :     :- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379, ss_sold_date_sk#389]\n         :           :              :     :  +- Filter ((isnotnull(ss_customer_sk#369) AND isnotnull(ss_sold_date_sk#389)) AND dynamicpruning#530 [ss_sold_date_sk#389])\n         :           :              :     :     :  +- Project [d_date_sk#390]\n         :           :              :     :     :     +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#367,ss_item_sk#368,ss_customer_sk#369,ss_cdemo_sk#370,ss_hdemo_sk#371,ss_addr_sk#372,ss_store_sk#373,ss_promo_sk#374,ss_ticket_number#375L,ss_quantity#376,ss_wholesale_cost#377,ss_list_price#378,ss_sales_price#379,ss_ext_discount_amt#380,ss_ext_sales_price#381,ss_ext_wholesale_cost#382,ss_ext_list_price#383,ss_ext_tax#384,ss_coupon_amt#385,ss_net_paid#386,ss_net_paid_inc_tax#387,ss_net_profit#388,ss_sold_date_sk#389] parquet\n         :           :              :     +- Project [d_date_sk#390]\n         :           :              :        +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :           :              :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_date_id#391,d_date#392,d_month_seq#393,d_week_seq#394,d_quarter_seq#395,d_year#396,d_dow#397,d_moy#398,d_dom#399,d_qoy#400,d_fy_year#401,d_fy_quarter_seq#402,d_fy_week_seq#403,d_day_name#404,d_quarter_name#405,d_holiday#406,d_weekend#407,d_following_holiday#408,d_first_dom#409,d_last_dom#410,d_same_day_ly#411,d_same_day_lq#412,d_current_day#413,... 4 more fields] parquet\n         :           :              +- Project [c_customer_sk#89]\n         :           :                 +- Filter isnotnull(c_customer_sk#89)\n         :           :                    +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#89,c_customer_id#90,c_current_cdemo_sk#91,c_current_hdemo_sk#92,c_current_addr_sk#93,c_first_shipto_date_sk#94,c_first_sales_date_sk#95,c_salutation#96,c_first_name#97,c_last_name#98,c_preferred_cust_flag#99,c_birth_day#100,c_birth_month#101,c_birth_year#102,c_birth_country#103,c_login#104,c_email_address#105,c_last_review_date#106] parquet\n         :           +- Aggregate [c_customer_sk#441], [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430)) AS ssales#363]\n         :              +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                 +- Join Inner, (ss_customer_sk#420 = c_customer_sk#441)\n         :                    :- Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430]\n         :                    :  +- Filter isnotnull(ss_customer_sk#420)\n         :                    :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#418,ss_item_sk#419,ss_customer_sk#420,ss_cdemo_sk#421,ss_hdemo_sk#422,ss_addr_sk#423,ss_store_sk#424,ss_promo_sk#425,ss_ticket_number#426L,ss_quantity#427,ss_wholesale_cost#428,ss_list_price#429,ss_sales_price#430,ss_ext_discount_amt#431,ss_ext_sales_price#432,ss_ext_wholesale_cost#433,ss_ext_list_price#434,ss_ext_tax#435,ss_coupon_amt#436,ss_net_paid#437,ss_net_paid_inc_tax#438,ss_net_profit#439,ss_sold_date_sk#440] parquet\n         :                    +- Project [c_customer_sk#441]\n         :                       +- Filter isnotnull(c_customer_sk#441)\n         :                          +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#441,c_customer_id#442,c_current_cdemo_sk#443,c_current_hdemo_sk#444,c_current_addr_sk#445,c_first_shipto_date_sk#446,c_first_sales_date_sk#447,c_salutation#448,c_first_name#449,c_last_name#450,c_preferred_cust_flag#451,c_birth_day#452,c_birth_month#453,c_birth_year#454,c_birth_country#455,c_login#456,c_email_address#457,c_last_review_date#458] parquet\n         +- Project [d_date_sk#487]\n            +- Filter (((isnotnull(d_year#493) AND isnotnull(d_moy#495)) AND ((d_year#493 = 1999) AND (d_moy#495 = 1))) AND isnotnull(d_date_sk#487))\n               +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#487,d_date_id#488,d_date#489,d_month_seq#490,d_week_seq#491,d_quarter_seq#492,d_year#493,d_dow#494,d_moy#495,d_dom#496,d_qoy#497,d_fy_year#498,d_fy_quarter_seq#499,d_fy_week_seq#500,d_day_name#501,d_quarter_name#502,d_holiday#503,d_weekend#504,d_following_holiday#505,d_first_dom#506,d_last_dom#507,d_same_day_ly#508,d_same_day_lq#509,d_current_day#510,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "34" : {
            "sign" : 217970344,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430] Arguments: 12 "
          },
          "12" : {
            "sign" : 1046086507,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] Keys [1]: [c_customer_sk#441] Functions [1]: [partial_sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))] Aggregate Attributes [2]: [sum#543, isEmpty#544] Results [3]: [c_customer_sk#441, sum#545, isEmpty#546] "
          },
          "8" : {
            "sign" : 403132282,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#441] Arguments: [c_customer_sk#441 ASC NULLS FIRST], false, 0 "
          },
          "19" : {
            "sign" : -1814369618,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#459] Arguments: 5 "
          },
          "23" : {
            "sign" : -2054173833,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 2015541472,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#144] Right keys [1]: [c_customer_sk#441] Join type: LeftSemi Join condition: None "
          },
          "4" : {
            "sign" : -1571798428,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Input [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "15" : {
            "sign" : -160283963,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430] Arguments: [ss_customer_sk#420 ASC NULLS FIRST], false, 0 "
          },
          "11" : {
            "sign" : 569515527,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#441, sum#545, isEmpty#546] Keys [1]: [c_customer_sk#441] Functions [1]: [sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))] Aggregate Attributes [1]: [sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))#520] Results [2]: [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))#520 AS ssales#363] "
          },
          "9" : {
            "sign" : 2136858661,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_customer_sk#441] Input [2]: [c_customer_sk#441, ssales#363] "
          },
          "33" : {
            "sign" : 495192359,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430] Arguments: [ss_customer_sk#420 ASC NULLS FIRST], false, 0 "
          },
          "22" : {
            "sign" : 289347848,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Input [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] "
          },
          "26" : {
            "sign" : 1639568311,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#441] Arguments: [c_customer_sk#441 ASC NULLS FIRST], false, 0 "
          },
          "37" : {
            "sign" : -53797359,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#487] Arguments: 16 "
          },
          "13" : {
            "sign" : -1872346490,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] Input [4]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "24" : {
            "sign" : 486923671,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: [ws_bill_customer_sk#144 ASC NULLS FIRST], false, 0 "
          },
          "35" : {
            "sign" : -539128630,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#441] Arguments: [c_customer_sk#441 ASC NULLS FIRST], false, 0 "
          },
          "16" : {
            "sign" : 166975546,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8801500032,
            "rowCount" : 275046876,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430] Arguments: 3 "
          },
          "5" : {
            "sign" : 486519295,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4011644476,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_bill_customer_sk#109] Right keys [1]: [c_customer_sk#441] Join type: LeftSemi Join condition: None "
          },
          "10" : {
            "sign" : 64138361,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#441, ssales#363] Condition : (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * Subquery subquery#364, [id=#364]))) "
          },
          "21" : {
            "sign" : -1813822510,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#174] Right keys [1]: [d_date_sk#487] Join type: Inner Join condition: None "
          },
          "32" : {
            "sign" : 293372246,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#420] Right keys [1]: [c_customer_sk#441] Join type: Inner Join condition: None "
          },
          "6" : {
            "sign" : -1768102849,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: [cs_bill_customer_sk#109 ASC NULLS FIRST], false, 0 "
          },
          "36" : {
            "sign" : 1426644477,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#441] Arguments: 14 "
          },
          "1" : {
            "sign" : -1788220795,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 3328189872,
            "rowCount" : 208011867,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "17" : {
            "sign" : 1984415969,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [c_customer_sk#441] Arguments: [c_customer_sk#441 ASC NULLS FIRST], false, 0 "
          },
          "25" : {
            "sign" : 237690563,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 33698520,
            "rowCount" : 842463,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174] Arguments: 21 "
          },
          "14" : {
            "sign" : -313820933,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 7701230628,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#420] Right keys [1]: [c_customer_sk#441] Join type: Inner Join condition: None "
          },
          "31" : {
            "sign" : -1607623501,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6601054824,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] Input [4]: [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430, c_customer_sk#441] "
          },
          "0" : {
            "sign" : 1589319284,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 24,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [1]: [sales#351] Keys: [] Functions [1]: [partial_sum(sales#351)] Aggregate Attributes [2]: [sum#537, isEmpty#538] Results [2]: [sum#539, isEmpty#540] "
          },
          "20" : {
            "sign" : -748895564,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1111929680,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354] Input [4]: [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174, d_date_sk#487] "
          },
          "27" : {
            "sign" : -1446357934,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23812188,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_customer_sk#441] Input [2]: [c_customer_sk#441, ssales#363] "
          },
          "2" : {
            "sign" : 262738481,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2216260192,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351] Input [4]: [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140, d_date_sk#459] "
          },
          "18" : {
            "sign" : -148370392,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_customer_sk#441] Arguments: 4 "
          },
          "30" : {
            "sign" : 358776230,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#427, ss_sales_price#430, c_customer_sk#441] Keys [1]: [c_customer_sk#441] Functions [1]: [partial_sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))] Aggregate Attributes [2]: [sum#543, isEmpty#544] Results [3]: [c_customer_sk#441, sum#545, isEmpty#546] "
          },
          "7" : {
            "sign" : -1860515250,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 56274040,
            "rowCount" : 1406851,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Arguments: 20 "
          },
          "29" : {
            "sign" : 441968116,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_customer_sk#441, sum#545, isEmpty#546] Keys [1]: [c_customer_sk#441] Functions [1]: [sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))] Aggregate Attributes [1]: [sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))#520] Results [2]: [c_customer_sk#441, sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))#520 AS ssales#363] "
          },
          "3" : {
            "sign" : 209935429,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#140] Right keys [1]: [d_date_sk#459] Join type: Inner Join condition: None "
          },
          "28" : {
            "sign" : -1975731688,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55561772,
            "rowCount" : 1984349,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#441, ssales#363] Condition : (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * Subquery subquery#364, [id=#364]))) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "ShuffleQueryStage",
          "toId" : 15,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Sort",
          "toId" : 14,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "ShuffleQueryStage",
          "toId" : 17,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Sort",
          "toId" : 14,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "SortMergeJoin",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "HashAggregate",
          "toId" : 11,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "HashAggregate",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "ShuffleQueryStage",
          "toId" : 24,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Sort",
          "toId" : 23,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "ShuffleQueryStage",
          "toId" : 33,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Sort",
          "toId" : 32,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "ShuffleQueryStage",
          "toId" : 35,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Sort",
          "toId" : 32,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "SortMergeJoin",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "HashAggregate",
          "toId" : 29,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "HashAggregate",
          "toId" : 28,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Filter",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Sort",
          "toId" : 23,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "SortMergeJoin",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "BroadcastQueryStage",
          "toId" : 21,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "BroadcastHashJoin",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_sum(sales#351)], output=[sum#539, isEmpty#540])\n+- Union\n   :- Project [(cast(cs_quantity#124 as decimal(10,0)) * cs_list_price#126) AS sales#351]\n   :  +- BroadcastHashJoin [cs_sold_date_sk#140], [d_date_sk#459], Inner, BuildRight, false\n   :     :- Project [cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :  +- SortMergeJoin [cs_bill_customer_sk#109], [c_customer_sk#441], LeftSemi\n   :     :     :- Sort [cs_bill_customer_sk#109 ASC NULLS FIRST], false, 0\n   :     :     :  +- ShuffleQueryStage 20\n   :     :     :     +- Exchange hashpartitioning(cs_bill_customer_sk#109, 200), ENSURE_REQUIREMENTS, [plan_id=4268]\n   :     :     :        +- *(19) Project [cs_bill_customer_sk#109, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n   :     :     :           +- *(19) SortMergeJoin [cs_item_sk#121], [item_sk#358], LeftSemi\n   :     :     :              :- *(15) Sort [cs_item_sk#121 ASC NULLS FIRST], false, 0\n   :     :     :              :  +- AQEShuffleRead coalesced\n   :     :     :              :     +- ShuffleQueryStage 0\n   :     :     :              :        +- Exchange hashpartitioning(cs_item_sk#121, 200), ENSURE_REQUIREMENTS, [plan_id=826]\n   :     :     :              :           +- *(1) ColumnarToRow\n   :     :     :              :              +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n   :     :     :              :                    +- SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n   :     :     :              :                       +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#459], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=813]\n                                                            +- Project [d_date_sk#459]\n                                                               +- Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :     :     :              +- *(18) Sort [item_sk#358 ASC NULLS FIRST], false, 0\n   :     :     :                 +- *(18) Project [item_sk#358]\n   :     :     :                    +- *(18) Filter (cnt#360L > 4)\n   :     :     :                       +- *(18) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#358, cnt#360L])\n   :     :     :                          +- *(18) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#528, i_item_sk#67, d_date#41, count#542L])\n   :     :     :                             +- *(18) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n   :     :     :                                +- *(18) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n   :     :     :                                   :- *(16) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n   :     :     :                                   :  +- AQEShuffleRead coalesced\n   :     :     :                                   :     +- ShuffleQueryStage 17\n   :     :     :                                   :        +- Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n   :     :     :                                   :           +- *(13) Project [ss_item_sk#17, d_date#41]\n   :     :     :                                   :              +- *(13) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n   :     :     :                                   :                 :- *(13) Filter isnotnull(ss_item_sk#17)\n   :     :     :                                   :                 :  +- *(13) ColumnarToRow\n   :     :     :                                   :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#529)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n   :     :     :                                   :                 :           +- SubqueryBroadcast dynamicpruning#529, 0, [d_date_sk#39], [id=#2466]\n   :     :     :                                   :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#39, d_date#41], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2463]\n                                                                                          +- Project [d_date_sk#39, d_date#41]\n                                                                                             +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n   :     :     :                                   :                 +- BroadcastQueryStage 1\n   :     :     :                                   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n   :     :     :                                   :                       +- *(2) Project [d_date_sk#39, d_date#41]\n   :     :     :                                   :                          +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :     :                                   :                             +- *(2) ColumnarToRow\n   :     :     :                                   :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n   :     :     :                                   +- *(17) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n   :     :     :                                      +- AQEShuffleRead coalesced\n   :     :     :                                         +- ShuffleQueryStage 2\n   :     :     :                                            +- Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=864]\n   :     :     :                                               +- *(3) Filter isnotnull(i_item_sk#67)\n   :     :     :                                                  +- *(3) ColumnarToRow\n   :     :     :                                                     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n   :     :     +- Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n   :     :        +- Project [c_customer_sk#441]\n   :     :           +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * Subquery subquery#364, [id=#364])))\n   :     :              :  +- Subquery subquery#364, [id=#364]\n   :     :              :     +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              :        +- HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n   :     :              :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=362]\n   :     :              :              +- HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n   :     :              :                 +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n   :     :              :                    +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n   :     :              :                       +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n   :     :              :                          +- SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n   :     :              :                             :- Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n   :     :              :                             :  +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=352]\n   :     :              :                             :     +- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n   :     :              :                             :        +- BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n   :     :              :                             :           :- Filter isnotnull(ss_customer_sk#369)\n   :     :              :                             :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n   :     :              :                             :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#530, 0, true, Project [d_date_sk#390], [d_date_sk#390]\n   :     :              :                             :           :           +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              :                             :           :              +- Project [d_date_sk#390]\n   :     :              :                             :           :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :              :                             :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :              :                             :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=347]\n   :     :              :                             :              +- Project [d_date_sk#390]\n   :     :              :                             :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n   :     :              :                             :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :              :                             +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n   :     :              :                                +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=353]\n   :     :              :                                   +- Filter isnotnull(c_customer_sk#89)\n   :     :              :                                      +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n   :     :              +- HashAggregate(keys=[c_customer_sk#441], functions=[sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, ssales#363])\n   :     :                 +- HashAggregate(keys=[c_customer_sk#441], functions=[partial_sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, sum#545, isEmpty#546])\n   :     :                    +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n   :     :                       +- SortMergeJoin [ss_customer_sk#420], [c_customer_sk#441], Inner\n   :     :                          :- Sort [ss_customer_sk#420 ASC NULLS FIRST], false, 0\n   :     :                          :  +- ShuffleQueryStage 3\n   :     :                          :     +- Exchange hashpartitioning(ss_customer_sk#420, 200), ENSURE_REQUIREMENTS, [plan_id=894]\n   :     :                          :        +- *(4) Project [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430]\n   :     :                          :           +- *(4) Filter isnotnull(ss_customer_sk#420)\n   :     :                          :              +- *(4) ColumnarToRow\n   :     :                          :                 +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#420,ss_quantity#427,ss_sales_price#430,ss_sold_date_sk#440] Batched: true, DataFilters: [isnotnull(ss_customer_sk#420)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n   :     :                          +- Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n   :     :                             +- ShuffleQueryStage 4\n   :     :                                +- Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n   :     :                                   +- *(5) Filter isnotnull(c_customer_sk#441)\n   :     :                                      +- *(5) ColumnarToRow\n   :     :                                         +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#441] Batched: true, DataFilters: [isnotnull(c_customer_sk#441)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n   :     +- BroadcastQueryStage 5\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n   :           +- *(6) Project [d_date_sk#459]\n   :              +- *(6) Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n   :                 +- *(6) ColumnarToRow\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- Project [(cast(ws_quantity#158 as decimal(10,0)) * ws_list_price#160) AS sales#354]\n      +- BroadcastHashJoin [ws_sold_date_sk#174], [d_date_sk#487], Inner, BuildRight, false\n         :- Project [ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :  +- SortMergeJoin [ws_bill_customer_sk#144], [c_customer_sk#441], LeftSemi\n         :     :- Sort [ws_bill_customer_sk#144 ASC NULLS FIRST], false, 0\n         :     :  +- ShuffleQueryStage 21\n         :     :     +- Exchange hashpartitioning(ws_bill_customer_sk#144, 200), ENSURE_REQUIREMENTS, [plan_id=4356]\n         :     :        +- *(24) Project [ws_bill_customer_sk#144, ws_quantity#158, ws_list_price#160, ws_sold_date_sk#174]\n         :     :           +- *(24) SortMergeJoin [ws_item_sk#143], [item_sk#358], LeftSemi\n         :     :              :- *(20) Sort [ws_item_sk#143 ASC NULLS FIRST], false, 0\n         :     :              :  +- AQEShuffleRead coalesced\n         :     :              :     +- ShuffleQueryStage 6\n         :     :              :        +- Exchange hashpartitioning(ws_item_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=968]\n         :     :              :           +- *(7) ColumnarToRow\n         :     :              :              +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#143,ws_bill_customer_sk#144,ws_quantity#158,ws_list_price#160,ws_sold_date_sk#174] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#174), dynamicpruningexpression(ws_sold_date_sk#174 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>\n         :     :              :                    +- ReusedSubquery SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n         :     :              +- *(23) Sort [item_sk#358 ASC NULLS FIRST], false, 0\n         :     :                 +- *(23) Project [item_sk#358]\n         :     :                    +- *(23) Filter (cnt#360L > 4)\n         :     :                       +- *(23) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[count(1)], output=[item_sk#358, cnt#360L])\n         :     :                          +- *(23) HashAggregate(keys=[_groupingexpression#528, i_item_sk#67, d_date#41], functions=[partial_count(1)], output=[_groupingexpression#528, i_item_sk#67, d_date#41, count#542L])\n         :     :                             +- *(23) Project [d_date#41, i_item_sk#67, substr(i_item_desc#71, 1, 30) AS _groupingexpression#528]\n         :     :                                +- *(23) SortMergeJoin [ss_item_sk#17], [i_item_sk#67], Inner\n         :     :                                   :- *(21) Sort [ss_item_sk#17 ASC NULLS FIRST], false, 0\n         :     :                                   :  +- AQEShuffleRead coalesced\n         :     :                                   :     +- ShuffleQueryStage 19\n         :     :                                   :        +- ReusedExchange [ss_item_sk#17, d_date#41], Exchange hashpartitioning(ss_item_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n         :     :                                   +- *(22) Sort [i_item_sk#67 ASC NULLS FIRST], false, 0\n         :     :                                      +- AQEShuffleRead coalesced\n         :     :                                         +- ShuffleQueryStage 10\n         :     :                                            +- ReusedExchange [i_item_sk#67, i_item_desc#71], Exchange hashpartitioning(i_item_sk#67, 200), ENSURE_REQUIREMENTS, [plan_id=864]\n         :     +- Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n         :        +- Project [c_customer_sk#441]\n         :           +- Filter (isnotnull(ssales#363) AND (cast(ssales#363 as decimal(38,8)) > (0.950000 * Subquery subquery#364, [id=#364])))\n         :              :  +- Subquery subquery#364, [id=#364]\n         :              :     +- AdaptiveSparkPlan isFinalPlan=false\n         :              :        +- HashAggregate(keys=[], functions=[max(csales#361)], output=[tpcds_cmax#362])\n         :              :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=362]\n         :              :              +- HashAggregate(keys=[], functions=[partial_max(csales#361)], output=[max#548])\n         :              :                 +- HashAggregate(keys=[c_customer_sk#89], functions=[sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[csales#361])\n         :              :                    +- HashAggregate(keys=[c_customer_sk#89], functions=[partial_sum((cast(ss_quantity#376 as decimal(10,0)) * ss_sales_price#379))], output=[c_customer_sk#89, sum#551, isEmpty#552])\n         :              :                       +- Project [ss_quantity#376, ss_sales_price#379, c_customer_sk#89]\n         :              :                          +- SortMergeJoin [ss_customer_sk#369], [c_customer_sk#89], Inner\n         :              :                             :- Sort [ss_customer_sk#369 ASC NULLS FIRST], false, 0\n         :              :                             :  +- Exchange hashpartitioning(ss_customer_sk#369, 200), ENSURE_REQUIREMENTS, [plan_id=352]\n         :              :                             :     +- Project [ss_customer_sk#369, ss_quantity#376, ss_sales_price#379]\n         :              :                             :        +- BroadcastHashJoin [ss_sold_date_sk#389], [d_date_sk#390], Inner, BuildRight, false\n         :              :                             :           :- Filter isnotnull(ss_customer_sk#369)\n         :              :                             :           :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#369,ss_quantity#376,ss_sales_price#379,ss_sold_date_sk#389] Batched: true, DataFilters: [isnotnull(ss_customer_sk#369)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#389), dynamicpruningexpression(ss_sold_date_sk#389 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n         :              :                             :           :        +- SubqueryAdaptiveBroadcast dynamicpruning#530, 0, true, Project [d_date_sk#390], [d_date_sk#390]\n         :              :                             :           :           +- AdaptiveSparkPlan isFinalPlan=false\n         :              :                             :           :              +- Project [d_date_sk#390]\n         :              :                             :           :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :              :                             :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :              :                             :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=347]\n         :              :                             :              +- Project [d_date_sk#390]\n         :              :                             :                 +- Filter (d_year#396 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#390))\n         :              :                             :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#390,d_year#396] Batched: true, DataFilters: [d_year#396 IN (1999,2000,2001,2002), isnotnull(d_date_sk#390)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :              :                             +- Sort [c_customer_sk#89 ASC NULLS FIRST], false, 0\n         :              :                                +- Exchange hashpartitioning(c_customer_sk#89, 200), ENSURE_REQUIREMENTS, [plan_id=353]\n         :              :                                   +- Filter isnotnull(c_customer_sk#89)\n         :              :                                      +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#89] Batched: true, DataFilters: [isnotnull(c_customer_sk#89)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>\n         :              +- HashAggregate(keys=[c_customer_sk#441], functions=[sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, ssales#363])\n         :                 +- HashAggregate(keys=[c_customer_sk#441], functions=[partial_sum((cast(ss_quantity#427 as decimal(10,0)) * ss_sales_price#430))], output=[c_customer_sk#441, sum#545, isEmpty#546])\n         :                    +- Project [ss_quantity#427, ss_sales_price#430, c_customer_sk#441]\n         :                       +- SortMergeJoin [ss_customer_sk#420], [c_customer_sk#441], Inner\n         :                          :- Sort [ss_customer_sk#420 ASC NULLS FIRST], false, 0\n         :                          :  +- ShuffleQueryStage 12\n         :                          :     +- ReusedExchange [ss_customer_sk#420, ss_quantity#427, ss_sales_price#430], Exchange hashpartitioning(ss_customer_sk#420, 200), ENSURE_REQUIREMENTS, [plan_id=894]\n         :                          +- Sort [c_customer_sk#441 ASC NULLS FIRST], false, 0\n         :                             +- ShuffleQueryStage 14\n         :                                +- ReusedExchange [c_customer_sk#441], Exchange hashpartitioning(c_customer_sk#441, 200), ENSURE_REQUIREMENTS, [plan_id=913]\n         +- BroadcastQueryStage 16\n            +- ReusedExchange [d_date_sk#487], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=941]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17759070272,
        "inputRowCount" : 556343128
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "2" : [ 17371601, 17313063, 16996707, 17100959, 17033226, 17236981, 17071883, 16947894, 17078453, 17320527, 17392136, 17189957, 17396414, 17311465, 17218617, 17091886, 17296486, 17602538, 17086450, 17206721, 17104075, 17257645, 17447592, 17284068, 17180017, 17251810, 17078510, 17428751, 17190703, 17091180, 16888245, 17130838, 17230626, 16956499, 17240499, 17279493, 17046255, 16925646, 16907666, 17034480, 16940011, 17199974, 16869146, 17295966, 17353222, 16846943, 17325947, 17131813, 17231729, 17311901, 17440035, 17297061, 17072505, 17276021, 17146516, 17169923, 17129259, 16823901, 16978621, 17169124, 17091808, 17480756, 16982840, 17160489, 16978313, 17460598, 17233558, 17090869, 17156297, 17354514, 17312619, 17034009, 16927254, 17287614, 17365219, 17389547, 17480370, 17316975, 17251186, 17264228, 17243624, 17381439, 17433913, 16760532, 17064606, 16931418, 17063808, 17170220, 17151390, 17444256, 17095914, 17182115, 17324912, 17111549, 17203150, 17522946, 16932260, 16948450, 17145841, 16867015, 16765024, 17338612, 17173734, 16986979, 17131384, 17352202, 17241238, 17627527, 16822357, 16867839, 17008290, 17184359, 17395163, 17082612, 17338942, 17121168, 16815534, 16899165, 17149200, 17075267, 17087177, 17178853, 17547989, 17158451, 17252438, 17439694, 17073151, 16986975, 17140740, 16958860, 17422277, 17317255, 17311966, 17191736, 16950873, 17009149, 17326021, 17377512, 17100048, 17282433, 17170675, 16883065, 17109865, 17346265, 17166782, 17218832, 17598899, 17156005, 17190632, 17175152, 17467989, 17158171, 17400931, 17351617, 17331236, 17383323, 17108352, 17275713, 17473037, 16820939, 16928731, 16941370, 17356646, 16899933, 17228069, 17252334, 17147748, 17345681, 17313972, 16910213, 17387811, 17599878, 17309032, 17226960, 17276187, 16945588, 17360401, 16960900, 17134588, 17028930, 17029163, 17234190, 17064091, 17105964, 17637409, 17303023, 17722750, 17370523, 17066032, 17283328, 17271878, 17131573, 17011172, 16816679, 17307952, 17504379, 17083957, 17159149, 17341949, 16921044 ],
        "7" : [ 75566, 77024, 80363, 70048, 71766, 84690, 75203, 81923, 80327, 78113, 71073, 73119, 80363, 87565, 80396, 74144, 81557, 81565, 71040, 77021, 73748, 76259, 77381, 69656, 79964, 78872, 78836, 88281, 78251, 73715, 79892, 68092, 79340, 82291, 76658, 78476, 75200, 75566, 77747, 74510, 77747, 83560, 72989, 76001, 77678, 83810, 70347, 78440, 78151, 78731, 71999, 70943, 78179, 78916, 78110, 72692, 78509, 74804, 71339, 78113, 76361, 79166, 74477, 71339, 78187, 84041, 72662, 76985, 83012, 78908, 76553, 73781, 75203, 78803, 81008, 81199, 80690, 76622, 89642, 78839, 76771, 80690, 83452, 73418, 77054, 78875, 77711, 75599, 77453, 81524, 79601, 73879, 76691, 79964, 74078, 79453, 82368, 74837, 78839, 76952, 75860, 78905, 83565, 67734, 77420, 76589, 76292, 80000, 76292, 78944, 81161, 78803, 78875, 78440, 73520, 72989, 78911, 72362, 73817, 75170, 78509, 81158, 79964, 81959, 86327, 80867, 76622, 81238, 80036, 77783, 77642, 72032, 75203, 75530, 74771, 81851, 73551, 83887, 80726, 75566, 70281, 81887, 73653, 81125, 76223, 76655, 76226, 76292, 74543, 83084, 78473, 78005, 78110, 77420, 77816, 74510, 90123, 77714, 72725, 80041, 71733, 71999, 76331, 72063, 80102, 84839, 75267, 78074, 79670, 89046, 76295, 73022, 76259, 74078, 83810, 83488, 78803, 77714, 71106, 75896, 72431, 84721, 82649, 77057, 75569, 76622, 78113, 73418, 69082, 82327, 79565, 84649, 78440, 78113, 72756, 82363, 73484, 74474, 77351, 77384 ],
        "3" : [ 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331 ],
        "6" : [ 124106, 128619, 123941, 122838, 118791, 119954, 137626, 122773, 127392, 126979, 124531, 125115, 123304, 128212, 119800, 129439, 131250, 122189, 124531, 131132, 120490, 129964, 124531, 128737, 122720, 122720, 121080, 122136, 127569, 125752, 127569, 128153, 127510, 133184, 122248, 130023, 128094, 129964, 130666, 128678, 119269, 124472, 171276, 121605, 123475, 133243, 125056, 130548, 127569, 124472, 120490, 120437, 127091, 128153, 124531, 124584, 126926, 123304, 118791, 129321, 122189, 126454, 124000, 125699, 131893, 123947, 125699, 124578, 124531, 123947, 129439, 125699, 128094, 119800, 129321, 121021, 127156, 124649, 119853, 124584, 133120, 128153, 123888, 127569, 126401, 124472, 122720, 131250, 131775, 128855, 129380, 122773, 122189, 115340, 131309, 133120, 113317, 122189, 122720, 130548, 129964, 132477, 120437, 123475, 125699, 126342, 125115, 112685, 133120, 125056, 121664, 132418, 130489, 116402, 127569, 126342, 126224, 123357, 121605, 133061, 119375, 134347, 135633, 124531, 129321, 133886, 130023, 123422, 121658, 128737, 128678, 129964, 125699, 125115, 133243, 126985, 127510, 124584, 130607, 122195, 133061, 118260, 127569, 129444, 128737, 125115, 128737, 122779, 122189, 127451, 135049, 115977, 126342, 123363, 125174, 121711, 125817, 136340, 124525, 128801, 122832, 128153, 126808, 125233, 129321, 128153, 133881, 131250, 124472, 126867, 124531, 134347, 117682, 130607, 118839, 123357, 127510, 126401, 133120, 131893, 131893, 129321, 124584, 124059, 124472, 131314, 137562, 119322, 132595, 121021, 122136, 128153, 114809, 133179, 130082, 122720, 131250, 125699, 123947, 120490 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 34 ],
      "Objectives" : {
        "DurationInMs" : 22776,
        "TotalTasksDurationInMs" : 341760,
        "IOBytes" : {
          "Total" : 6612881228,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 6612872094,
            "SW" : 9134
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 886815593,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23152,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 23152,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#39, d_date#41] "
          },
          "1" : {
            "sign" : 1327533026,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              },
              "compileTime" : {
                "sizeInBytes" : 355962,
                "rowCount" : 1447
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "2" : {
            "sign" : 1227723257,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#39, d_date_id#40, d_date#41, d_month_seq#42, d_week_seq#43, d_quarter_seq#44, d_year#45, d_dow#46, d_moy#47, d_dom#48, d_qoy#49, d_fy_year#50, d_fy_quarter_seq#51, d_fy_week_seq#52, d_day_name#53, d_quarter_name#54, d_holiday#55, d_weekend#56, d_following_holiday#57, d_first_dom#58, d_last_dom#59, d_same_day_ly#60, d_same_day_lq#61, d_current_day#62, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#39, d_date#41]\n+- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 730778743,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [d_date_sk#39, d_date#41] Input [3]: [d_date_sk#39, d_date#41, d_year#45] "
          },
          "1" : {
            "sign" : -1264340688,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#39, d_date#41, d_year#45] Condition : (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39)) "
          },
          "2" : {
            "sign" : -1966102777,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 23152,
            "rowCount" : 1447,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#39, d_date#41, d_year#45] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#39, d_date#41]\n+- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23152,
        "inputRowCount" : 1447
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1482,
        "TotalTasksDurationInMs" : 1471,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -930727237,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4584736544,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 4584736544,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] "
          },
          "1" : {
            "sign" : -751584509,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#140) AND dynamicpruning#534 [cs_sold_date_sk#140]) "
          },
          "2" : {
            "sign" : 1536480445,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#107, cs_ship_date_sk#108, cs_bill_customer_sk#109, cs_bill_cdemo_sk#110, cs_bill_hdemo_sk#111, cs_bill_addr_sk#112, cs_ship_customer_sk#113, cs_ship_cdemo_sk#114, cs_ship_hdemo_sk#115, cs_ship_addr_sk#116, cs_call_center_sk#117, cs_catalog_page_sk#118, cs_ship_mode_sk#119, cs_warehouse_sk#120, cs_item_sk#121, cs_promo_sk#122, cs_order_number#123L, cs_quantity#124, cs_wholesale_cost#125, cs_list_price#126, cs_sales_price#127, cs_ext_discount_amt#128, cs_ext_sales_price#129, cs_ext_wholesale_cost#130, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140]\n+- Filter (isnotnull(cs_sold_date_sk#140) AND dynamicpruning#534 [cs_sold_date_sk#140])\n   :  +- Project [d_date_sk#459]\n   :     +- Filter (((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND ((d_year#465 = 1999) AND (d_moy#467 = 1))) AND isnotnull(d_date_sk#459))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_date_id#460,d_date#461,d_month_seq#462,d_week_seq#463,d_quarter_seq#464,d_year#465,d_dow#466,d_moy#467,d_dom#468,d_qoy#469,d_fy_year#470,d_fy_quarter_seq#471,d_fy_week_seq#472,d_day_name#473,d_quarter_name#474,d_holiday#475,d_weekend#476,d_following_holiday#477,d_first_dom#478,d_last_dom#479,d_same_day_ly#480,d_same_day_lq#481,d_current_day#482,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#107,cs_ship_date_sk#108,cs_bill_customer_sk#109,cs_bill_cdemo_sk#110,cs_bill_hdemo_sk#111,cs_bill_addr_sk#112,cs_ship_customer_sk#113,cs_ship_cdemo_sk#114,cs_ship_hdemo_sk#115,cs_ship_addr_sk#116,cs_call_center_sk#117,cs_catalog_page_sk#118,cs_ship_mode_sk#119,cs_warehouse_sk#120,cs_item_sk#121,cs_promo_sk#122,cs_order_number#123L,cs_quantity#124,cs_wholesale_cost#125,cs_list_price#126,cs_sales_price#127,cs_ext_discount_amt#128,cs_ext_sales_price#129,cs_ext_wholesale_cost#130,... 10 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -2082245116,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4584736544,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [5]: [cs_bill_customer_sk#109, cs_item_sk#121, cs_quantity#124, cs_list_price#126, cs_sold_date_sk#140] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#534)] ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)> "
          }
        },
        "links" : [ ],
        "rawPlan" : "FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#109,cs_item_sk#121,cs_quantity#124,cs_list_price#126,cs_sold_date_sk#140] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#140), dynamicpruningexpression(cs_sold_date_sk#140 IN dynamicpruning#5..., PushedFilters: [], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>\n   +- SubqueryBroadcast dynamicpruning#534, 0, [d_date_sk#459], [id=#816]\n      +- AdaptiveSparkPlan isFinalPlan=false\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=813]\n            +- Project [d_date_sk#459]\n               +- Filter ((((isnotnull(d_year#465) AND isnotnull(d_moy#467)) AND (d_year#465 = 1999)) AND (d_moy#467 = 1)) AND isnotnull(d_date_sk#459))\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#459,d_year#465,d_moy#467] Batched: true, DataFilters: [isnotnull(d_year#465), isnotnull(d_moy#467), (d_year#465 = 1999), (d_moy#467 = 1), isnotnull(d_d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4584736544,
        "inputRowCount" : 143273017
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 10831,
        "TotalTasksDurationInMs" : 112034,
        "IOBytes" : {
          "Total" : 43588197,
          "Details" : {
            "IR" : 14656398,
            "IW" : 0,
            "SR" : 0,
            "SW" : 28931799
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1142166718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#39) "
          },
          "0" : {
            "sign" : 518185838,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4248649360,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 4248649360,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, d_date#41] "
          },
          "2" : {
            "sign" : 891416984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_sold_date_sk#38] "
          },
          "3" : {
            "sign" : 1052145578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#17, d_date#41]\n+- Join Inner, (ss_sold_date_sk#38 = d_date_sk#39)\n   :- Project [ss_item_sk#17, ss_sold_date_sk#38]\n   :  +- Filter ((isnotnull(ss_sold_date_sk#38) AND isnotnull(ss_item_sk#17)) AND dynamicpruning#529 [ss_sold_date_sk#38])\n   :     :  +- Project [d_date_sk#39, d_date#41]\n   :     :     +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n   +- Project [d_date_sk#39, d_date#41]\n      +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date_id#40,d_date#41,d_month_seq#42,d_week_seq#43,d_quarter_seq#44,d_year#45,d_dow#46,d_moy#47,d_dom#48,d_qoy#49,d_fy_year#50,d_fy_quarter_seq#51,d_fy_week_seq#52,d_day_name#53,d_quarter_name#54,d_holiday#55,d_weekend#56,d_following_holiday#57,d_first_dom#58,d_last_dom#59,d_same_day_ly#60,d_same_day_lq#61,d_current_day#62,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 297510923,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1060264,
            "rowCount" : 1461,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#39, d_date#41] Arguments: 1 "
          },
          "1" : {
            "sign" : -1947381543,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#38] Right keys [1]: [d_date_sk#39] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 244212017,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_item_sk#17, d_date#41] Input [4]: [ss_item_sk#17, ss_sold_date_sk#38, d_date_sk#39, d_date#41] "
          },
          "2" : {
            "sign" : 1939002059,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ss_item_sk#17, ss_sold_date_sk#38] Condition : isnotnull(ss_item_sk#17) "
          },
          "3" : {
            "sign" : 1858481246,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [2]: [ss_item_sk#17, ss_sold_date_sk#38] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#529)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#17, d_date#41]\n+- BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#39], Inner, BuildRight, false\n   :- Filter isnotnull(ss_item_sk#17)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#529)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>\n   :        +- SubqueryBroadcast dynamicpruning#529, 0, [d_date_sk#39], [id=#2466]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2463]\n   :                 +- Project [d_date_sk#39, d_date#41]\n   :                    +- Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=843]\n         +- *(2) Project [d_date_sk#39, d_date#41]\n            +- *(2) Filter (d_year#45 IN (1999,2000,2001,2002) AND isnotnull(d_date_sk#39))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#39,d_date#41,d_year#45] Batched: true, DataFilters: [d_year#45 IN (1999,2000,2001,2002), isnotnull(d_date_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4401785912,
        "inputRowCount" : 275046814
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 8,
        "FinishedTasksTotalTimeInMs" : 18330.0,
        "FinishedTasksDistributionInMs" : [ 167.0, 811.0, 942.0, 5902.0, 5906.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 20900,
        "TotalTasksDurationInMs" : 105728,
        "IOBytes" : {
          "Total" : 2079686722,
          "Details" : {
            "IR" : 895210673,
            "IW" : 0,
            "SR" : 0,
            "SW" : 1184476049
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -825358377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25500000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 25500000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#67, i_item_desc#71] "
          },
          "1" : {
            "sign" : -1751086968,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#67) "
          },
          "2" : {
            "sign" : 1444627727,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#67, i_item_id#68, i_rec_start_date#69, i_rec_end_date#70, i_item_desc#71, i_current_price#72, i_wholesale_cost#73, i_brand_id#74, i_brand#75, i_class_id#76, i_class#77, i_category_id#78, i_category#79, i_manufact_id#80, i_manufact#81, i_size#82, i_formulation#83, i_color#84, i_units#85, i_container#86, i_manager_id#87, i_product_name#88], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#67, i_item_desc#71]\n+- Filter isnotnull(i_item_sk#67)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#67,i_item_id#68,i_rec_start_date#69,i_rec_end_date#70,i_item_desc#71,i_current_price#72,i_wholesale_cost#73,i_brand_id#74,i_brand#75,i_class_id#76,i_class#77,i_category_id#78,i_category#79,i_manufact_id#80,i_manufact#81,i_size#82,i_formulation#83,i_color#84,i_units#85,i_container#86,i_manager_id#87,i_product_name#88] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -958710783,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#67, i_item_desc#71] Condition : isnotnull(i_item_sk#67) "
          },
          "1" : {
            "sign" : 2108423066,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 25500000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#67, i_item_desc#71] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_desc:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#67)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#67,i_item_desc#71] Batched: true, DataFilters: [isnotnull(i_item_sk#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25500000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 1230,
        "TotalTasksDurationInMs" : 558,
        "IOBytes" : {
          "Total" : 28373372,
          "Details" : {
            "IR" : 11614715,
            "IW" : 0,
            "SR" : 0,
            "SW" : 16758657
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226709041,
  "SQLEndTimeInMs" : 1702226893169,
  "Objectives" : {
    "DurationInMs" : 184128,
    "IOBytes" : {
      "Total" : 21667300536,
      "Details" : {
        "IR" : 2918160513,
        "IW" : 0,
        "SR" : 11623865639,
        "SW" : 7125274384
      }
    }
  }
}
