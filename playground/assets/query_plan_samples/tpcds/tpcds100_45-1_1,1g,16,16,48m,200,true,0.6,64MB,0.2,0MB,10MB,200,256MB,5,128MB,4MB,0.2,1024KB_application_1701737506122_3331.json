{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 237067535,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2314943232,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
        },
        "8" : {
          "sign" : 1951734801,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 190965200,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
        },
        "19" : {
          "sign" : 222786030,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 35670,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66)) "
        },
        "23" : {
          "sign" : -1908158160,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#35, c_customer_id#36, c_current_cdemo_sk#37, c_current_hdemo_sk#38, c_current_addr_sk#39, c_first_shipto_date_sk#40, c_first_sales_date_sk#41, c_salutation#42, c_first_name#43, c_last_name#44, c_preferred_cust_flag#45, c_birth_day#46, c_birth_month#47, c_birth_year#48, c_birth_country#49, c_login#50, c_email_address#51, c_last_review_date#52], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "4" : {
          "sign" : -610468566,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 45787789963,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
        },
        "15" : {
          "sign" : 743667921,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2015036828,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34] "
        },
        "11" : {
          "sign" : -384647187,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1736207424,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
        },
        "9" : {
          "sign" : -547566311,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3452011440,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
        },
        "22" : {
          "sign" : -1369583391,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39)) "
        },
        "26" : {
          "sign" : -1299140691,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#94, i_item_id#95, i_rec_start_date#96, i_rec_end_date#97, i_item_desc#98, i_current_price#99, i_wholesale_cost#100, i_brand_id#101, i_brand#102, i_class_id#103, i_class#104, i_category_id#105, i_category#106, i_manufact_id#107, i_manufact#108, i_size#109, i_formulation#110, i_color#111, i_units#112, i_container#113, i_manager_id#114, i_product_name#115], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "13" : {
          "sign" : -1354594006,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1667894520,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21] "
        },
        "24" : {
          "sign" : -609071415,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#94, i_item_id#95] "
        },
        "16" : {
          "sign" : 67271528,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968845008,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#149 [ws_sold_date_sk#34]) "
        },
        "5" : {
          "sign" : -1334986029,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 62958211200,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#148) "
        },
        "10" : {
          "sign" : 1574170820,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4027346680,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
        },
        "21" : {
          "sign" : 1408007007,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 32000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#35, c_current_addr_sk#39] "
        },
        "32" : {
          "sign" : -568988881,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#121, i_item_id#122, i_rec_start_date#123, i_rec_end_date#124, i_item_desc#125, i_current_price#126, i_wholesale_cost#127, i_brand_id#128, i_brand#129, i_class_id#130, i_class#131, i_category_id#132, i_category#133, i_manufact_id#134, i_manufact#135, i_size#136, i_formulation#137, i_color#138, i_units#139, i_container#140, i_manager_id#141, i_product_name#142], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : 113296804,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 62958211200,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#148), (i_item_id#95 = i_item_id#122) "
        },
        "1" : {
          "sign" : -550657146,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 45787789963,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : -1556887014,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17L, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : 305875584,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#94) "
        },
        "14" : {
          "sign" : -1887714408,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2223859360,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#34 = d_date_sk#66) "
        },
        "31" : {
          "sign" : -51846449,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4260,
          "rowCount" : 10,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: i_item_sk#121 IN (2,3,5,7,11,13,17,19,23,29) "
        },
        "0" : {
          "sign" : -2015547577,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 5600,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 815236592,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#66, d_date_id#67, d_date#68, d_month_seq#69, d_week_seq#70, d_quarter_seq#71, d_year#72, d_dow#73, d_moy#74, d_dom#75, d_qoy#76, d_fy_year#77, d_fy_quarter_seq#78, d_fy_week_seq#79, d_day_name#80, d_quarter_name#81, d_holiday#82, d_weekend#83, d_following_holiday#84, d_first_dom#85, d_last_dom#86, d_same_day_ly#87, d_same_day_lq#88, d_current_day#89, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 146171125,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 55000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#53, ca_county#60, ca_zip#62] "
        },
        "2" : {
          "sign" : -1287219535,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 45787789963,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : 1201643350,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1740,
          "rowCount" : 145,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#66] "
        },
        "30" : {
          "sign" : 77949549,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 360,
          "rowCount" : 10,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#122] "
        },
        "7" : {
          "sign" : -1091843100,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 174883920,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
        },
        "29" : {
          "sign" : -1849306252,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#53, ca_address_id#54, ca_street_number#55, ca_street_name#56, ca_street_type#57, ca_suite_number#58, ca_city#59, ca_county#60, ca_state#61, ca_zip#62, ca_country#63, ca_gmt_offset#64, ca_location_type#65], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 2090035744,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 45787789963,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#144] "
        },
        "28" : {
          "sign" : 870317748,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ca_address_sk#53) "
        }
      },
      "links" : [ {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Join",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "LogicalRelation",
        "toId" : 28,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Filter",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "LogicalRelation",
        "toId" : 31,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Filter",
        "toId" : 30,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Filter",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#144]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#148)\n               +- Join ExistenceJoin(exists#148), (i_item_id#95 = i_item_id#122)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n                  :     :     :     :  +- Join Inner, (ws_sold_date_sk#34 = d_date_sk#66)\n                  :     :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34]\n                  :     :     :     :     :  +- Filter (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#149 [ws_sold_date_sk#34])\n                  :     :     :     :     :     :  +- Project [d_date_sk#66]\n                  :     :     :     :     :     :     +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n                  :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n                  :     :     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1,ws_ship_date_sk#2,ws_item_sk#3,ws_bill_customer_sk#4,ws_bill_cdemo_sk#5,ws_bill_hdemo_sk#6,ws_bill_addr_sk#7,ws_ship_customer_sk#8,ws_ship_cdemo_sk#9,ws_ship_hdemo_sk#10,ws_ship_addr_sk#11,ws_web_page_sk#12,ws_web_site_sk#13,ws_ship_mode_sk#14,ws_warehouse_sk#15,ws_promo_sk#16,ws_order_number#17L,ws_quantity#18,ws_wholesale_cost#19,ws_list_price#20,ws_sales_price#21,ws_ext_discount_amt#22,ws_ext_sales_price#23,ws_ext_wholesale_cost#24,... 10 more fields] parquet\n                  :     :     :     :     +- Project [d_date_sk#66]\n                  :     :     :     :        +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n                  :     :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n                  :     :     :     +- Project [c_customer_sk#35, c_current_addr_sk#39]\n                  :     :     :        +- Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n                  :     :     :           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#35,c_customer_id#36,c_current_cdemo_sk#37,c_current_hdemo_sk#38,c_current_addr_sk#39,c_first_shipto_date_sk#40,c_first_sales_date_sk#41,c_salutation#42,c_first_name#43,c_last_name#44,c_preferred_cust_flag#45,c_birth_day#46,c_birth_month#47,c_birth_year#48,c_birth_country#49,c_login#50,c_email_address#51,c_last_review_date#52] parquet\n                  :     :     +- Project [i_item_sk#94, i_item_id#95]\n                  :     :        +- Filter isnotnull(i_item_sk#94)\n                  :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n                  :     +- Project [ca_address_sk#53, ca_county#60, ca_zip#62]\n                  :        +- Filter isnotnull(ca_address_sk#53)\n                  :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_address_id#54,ca_street_number#55,ca_street_name#56,ca_street_type#57,ca_suite_number#58,ca_city#59,ca_county#60,ca_state#61,ca_zip#62,ca_country#63,ca_gmt_offset#64,ca_location_type#65] parquet\n                  +- Project [i_item_id#122]\n                     +- Filter i_item_sk#121 IN (2,3,5,7,11,13,17,19,23,29)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#121,i_item_id#122,i_rec_start_date#123,i_rec_end_date#124,i_item_desc#125,i_current_price#126,i_wholesale_cost#127,i_brand_id#128,i_brand#129,i_class_id#130,i_class#131,i_category_id#132,i_category#133,i_manufact_id#134,i_manufact#135,i_size#136,i_formulation#137,i_color#138,i_units#139,i_container#140,i_manager_id#141,i_product_name#142] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 15910371846,
      "inputRowCount" : 75464673
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -1423955721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -808250764,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 10976,
            "rowCount" : 196,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1951184161,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 10976,
            "rowCount" : 196,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -778777778,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10976,
            "rowCount" : 196,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174], HashAggregate(keys=[ca_zip#62, ca_county#60], functions=[sum(UnscaledValue(ws_sales_price#21))]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174], HashAggregate(keys=[ca_zip#62, ca_county#60], functions=[sum(UnscaledValue(ws_sales_price#21))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 10976,
        "inputRowCount" : 196
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227039149,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 631,
        "IOBytes" : {
          "Total" : 14863,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 14863,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1525931754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2314943232,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          },
          "8" : {
            "sign" : 843036307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1239652100736000000000,
            "rowCount" : 14757763104000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "4" : {
            "sign" : -254951047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27371246369161347072000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "15" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "11" : {
            "sign" : -817157708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1736207424,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "9" : {
            "sign" : 1197663524,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 590310524160000,
            "rowCount" : 14757763104000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "13" : {
            "sign" : 860380505,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56122792,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 179988410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 37635463757596852224000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : -969019361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 708372628992000,
            "rowCount" : 14757763104000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "6" : {
            "sign" : -1892068804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 37635463757596852224000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : 1807095594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 27371246369161347072000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "14" : {
            "sign" : 2038607527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1 "
          },
          "0" : {
            "sign" : -314765505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1743844267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 27371246369161347072000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1411732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1121589995904000000000,
            "rowCount" : 14757763104000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 735266448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 27371246369161347072000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- LogicalQueryStage Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1\n                  :     :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1807981984,
        "inputRowCount" : 72699615
      },
      "PD" : {
        "1" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 26,
        "FinishedTasksTotalTimeInMs" : 34223.0,
        "FinishedTasksDistributionInMs" : [ 317.0, 910.0, 1377.0, 1426.0, 3466.0 ]
      },
      "StartTimeInMs" : 1702227012515,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 27265,
        "IOBytes" : {
          "Total" : 211887111,
          "Details" : {
            "IR" : 34514913,
            "IW" : 0,
            "SR" : 99251468,
            "SW" : 78120730
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1525931754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4447718720000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          },
          "8" : {
            "sign" : 843036307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2381753374560000000000000000,
            "rowCount" : 28354206840000000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "4" : {
            "sign" : -254951047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 52588591885544325120000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "15" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "11" : {
            "sign" : -817157708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3335789040000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "9" : {
            "sign" : 1197663524,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1134168273600000000000,
            "rowCount" : 28354206840000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "13" : {
            "sign" : 860380505,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56122792,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 179988410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 72309313842623447040000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : -969019361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1361001928320000000000,
            "rowCount" : 28354206840000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "6" : {
            "sign" : -1892068804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 72309313842623447040000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : 1807095594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 52588591885544325120000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "14" : {
            "sign" : 2038607527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 48000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1 "
          },
          "0" : {
            "sign" : -314765505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1743844267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 52588591885544325120000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1411732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2154919719840000000000000000,
            "rowCount" : 28354206840000000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 735266448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 52588591885544325120000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- LogicalQueryStage Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1\n                  :     :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1823981984,
        "inputRowCount" : 72699615
      },
      "PD" : {
        "1" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "0" : [ 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 112177, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 112177, 101979, 112177, 112177, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 112177, 101979 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 35482.0,
        "FinishedTasksDistributionInMs" : [ 317.0, 656.0, 923.0, 3097.0, 10266.0 ]
      },
      "StartTimeInMs" : 1702227019814,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 19966,
        "IOBytes" : {
          "Total" : 175481424,
          "Details" : {
            "IR" : 18367293,
            "IW" : 0,
            "SR" : 99251468,
            "SW" : 57862663
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1525931754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 132549120000000,
            "rowCount" : 4142160000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          },
          "8" : {
            "sign" : 843036307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 70980053760000000000000000,
            "rowCount" : 845000640000000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "4" : {
            "sign" : -254951047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1567224011969003520000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "15" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "11" : {
            "sign" : -817157708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 99411840000000,
            "rowCount" : 4142160000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "9" : {
            "sign" : 1197663524,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 33800025600000000000,
            "rowCount" : 845000640000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "13" : {
            "sign" : 860380505,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 66274560,
            "rowCount" : 2071080,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56122792,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 179988410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2154933016457379840000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : -969019361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40560030720000000000,
            "rowCount" : 845000640000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "6" : {
            "sign" : -1892068804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2154933016457379840000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : 1807095594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1567224011969003520000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "14" : {
            "sign" : 2038607527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 48000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1 "
          },
          "0" : {
            "sign" : -314765505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1743844267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1567224011969003520000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1411732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 64220048640000000000000000,
            "rowCount" : 845000640000000000000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 735266448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1567224011969003520000000000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- LogicalQueryStage Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1\n                  :     :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 222362024,
        "inputRowCount" : 5275090
      },
      "PD" : {
        "2" : [ 154245, 154964, 154099, 152389, 151631, 151420, 149100, 147206, 156207, 152149, 153246, 147343, 148851, 148827, 157590, 144837, 148174, 159408, 156504, 144390, 151963, 151168, 139868, 157337, 144543, 155259, 148532, 148867, 154646, 162630, 144653, 147308, 149513, 143691, 145839, 140446, 153111, 159004, 152734, 143084, 141927, 140351, 145739, 150387, 150758, 146511, 144185, 147335, 159423, 147731, 145066, 151006, 147280, 141728, 143887, 151138, 153880, 155160, 143010, 156531, 149097, 148892, 150886, 153100, 143352, 153940, 147645, 150111, 149481, 154524, 157016, 149788, 138271, 152605, 144580, 154135, 149951, 145638, 158254, 138395, 156335, 153766, 152556, 155627, 154990, 150500, 142212, 146896, 141704, 145708, 152491, 142960, 147469, 149165, 149717, 145625, 150971, 148609, 149570, 146346, 136844, 152230, 154329, 147624, 160428, 151109, 156967, 160771, 141395, 145173, 149857, 147619, 144066, 153500, 156311, 150828, 139827, 149883, 147304, 147419, 139184, 146723, 142912, 149327, 163268, 152790, 154769, 150946, 142121, 146021, 151020, 153459, 144752, 147937, 147357, 152260, 150074, 145669, 159474, 156420, 153102, 145342, 139956, 148901, 151588, 146318, 150403, 144148, 150659, 154987, 148789, 148945, 153527, 144688, 145576, 147191, 154498, 146579, 156339, 145470, 147263, 150631, 146256, 142087, 153203, 149709, 145310, 155271, 147877, 146043, 153957, 150593, 146944, 153947, 148600, 154809, 147619, 150239, 153610, 151382, 148466, 143515, 154097, 148309, 154158, 153597, 157902, 150802, 147826, 146611, 152476, 150981, 151798, 142522, 157925, 152913, 138425, 148004, 148897, 148021 ],
        "1" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "0" : [ 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 112177, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 112177, 101979, 112177, 112177, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 112177, 101979 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227029037,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10743,
        "IOBytes" : {
          "Total" : 128593377,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 99251468,
            "SW" : 29341909
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -724837064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2314943232,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          },
          "8" : {
            "sign" : -188375191,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 190965200,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "19" : {
            "sign" : 222786030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 35670,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66)) "
          },
          "23" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : -1301483175,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "15" : {
            "sign" : -1464891922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34] "
          },
          "11" : {
            "sign" : -2083787380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1736207424,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "9" : {
            "sign" : 2093802310,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3452011440,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "22" : {
            "sign" : 2038607527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1 "
          },
          "13" : {
            "sign" : -1790468515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 157172872584,
            "rowCount" : 6548869691,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21] "
          },
          "24" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 55000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "16" : {
            "sign" : -417625083,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968845008,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34]) "
          },
          "5" : {
            "sign" : 1043622362,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 62958211200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : 532086713,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4027346680,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "21" : {
            "sign" : -1935434836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#66], BroadcastQueryStage 0 "
          },
          "6" : {
            "sign" : -1573422282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62958211200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : 1214942954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1556887014,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17L, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 360,
            "rowCount" : 10,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "14" : {
            "sign" : 1703595309,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 209563830112,
            "rowCount" : 6548869691,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#34 = d_date_sk#66) "
          },
          "0" : {
            "sign" : -673347629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 815236592,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#66, d_date_id#67, d_date#68, d_month_seq#69, d_week_seq#70, d_quarter_seq#71, d_year#72, d_dow#73, d_moy#74, d_dom#75, d_qoy#76, d_fy_year#77, d_fy_quarter_seq#78, d_fy_week_seq#79, d_day_name#80, d_quarter_name#81, d_holiday#82, d_weekend#83, d_following_holiday#84, d_first_dom#85, d_last_dom#86, d_same_day_ly#87, d_same_day_lq#88, d_current_day#89, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -1950531395,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1201643350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1740,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#66] "
          },
          "7" : {
            "sign" : -1047950298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 174883920,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 123523332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n                  :     :     :     :  +- Join Inner, (ws_sold_date_sk#34 = d_date_sk#66)\n                  :     :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34]\n                  :     :     :     :     :  +- Filter (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34])\n                  :     :     :     :     :     :  +- Project [d_date_sk#66]\n                  :     :     :     :     :     :     +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n                  :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n                  :     :     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1,ws_ship_date_sk#2,ws_item_sk#3,ws_bill_customer_sk#4,ws_bill_cdemo_sk#5,ws_bill_hdemo_sk#6,ws_bill_addr_sk#7,ws_ship_customer_sk#8,ws_ship_cdemo_sk#9,ws_ship_hdemo_sk#10,ws_ship_addr_sk#11,ws_web_page_sk#12,ws_web_site_sk#13,ws_ship_mode_sk#14,ws_warehouse_sk#15,ws_promo_sk#16,ws_order_number#17L,ws_quantity#18,ws_wholesale_cost#19,ws_list_price#20,ws_sales_price#21,ws_ext_discount_amt#22,ws_ext_sales_price#23,ws_ext_wholesale_cost#24,... 10 more fields] parquet\n                  :     :     :     :     +- LogicalQueryStage Project [d_date_sk#66], BroadcastQueryStage 0\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1\n                  :     :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 15068803456,
        "inputRowCount" : 75187725
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 25,
        "FinishedTasksTotalTimeInMs" : 20165.0,
        "FinishedTasksDistributionInMs" : [ 97.0, 156.0, 1278.0, 1412.0, 1587.0 ]
      },
      "StartTimeInMs" : 1702227009120,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30660,
        "IOBytes" : {
          "Total" : 242189924,
          "Details" : {
            "IR" : 43686988,
            "IW" : 0,
            "SR" : 99251468,
            "SW" : 99251468
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1525931754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2314943232,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          },
          "8" : {
            "sign" : 843036307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 190965200,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "4" : {
            "sign" : -254951047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4267861587394560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "15" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "11" : {
            "sign" : -817157708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1736207424,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "9" : {
            "sign" : 1197663524,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3452011440,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "13" : {
            "sign" : 860380505,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 55000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 179988410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5868309682667520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : -969019361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4027346680,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "6" : {
            "sign" : -1892068804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5868309682667520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : 1807095594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4267861587394560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "14" : {
            "sign" : 2038607527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1 "
          },
          "0" : {
            "sign" : -314765505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1743844267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4267861587394560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1411732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 174883920,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 735266448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4267861587394560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- LogicalQueryStage Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1\n                  :     :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1796609976,
        "inputRowCount" : 72699615
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 20892.0,
        "FinishedTasksDistributionInMs" : [ 97.0, 1278.0, 1408.0, 1426.0, 1910.0 ]
      },
      "StartTimeInMs" : 1702227009393,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30387,
        "IOBytes" : {
          "Total" : 240152382,
          "Details" : {
            "IR" : 41649446,
            "IW" : 0,
            "SR" : 99251468,
            "SW" : 99251468
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -290302240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 173970720000000,
            "rowCount" : 2071080000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "4" : {
            "sign" : -138628718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3841235323453440000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "11" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "9" : {
            "sign" : 1402496863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 99411840,
            "rowCount" : 2071080,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95], ShuffleQueryStage 6 "
          },
          "5" : {
            "sign" : 527463909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5281698569748480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56122792,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "6" : {
            "sign" : -1083641003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5281698569748480000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : -1413706283,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3841235323453440000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 427045720,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1307742802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3841235323453440000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1452436831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 157402080000000,
            "rowCount" : 2071080000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 1760500731,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3841235323453440000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- LogicalQueryStage Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95], ShuffleQueryStage 6\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 189090088,
        "inputRowCount" : 3071090
      },
      "PD" : {
        "1" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "3" : [ 164239, 164239, 149308, 164239, 149308, 164239, 164239, 164239, 149308, 149308, 164239, 135735, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 135735, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 164239, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 135735, 135735, 164239, 149308, 164239, 164239, 149308, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 164239, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 164239, 149308, 164239, 149308, 149308, 164239, 149308, 149308, 164239 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227033021,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6759,
        "IOBytes" : {
          "Total" : 50487510,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 50472647,
            "SW" : 14863
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1525931754,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2314943232,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          },
          "8" : {
            "sign" : 843036307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 174883920,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "4" : {
            "sign" : -254951047,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3875414544875520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "15" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "11" : {
            "sign" : -817157708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1736207424,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "9" : {
            "sign" : 1197663524,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 590310524160000,
            "rowCount" : 14757763104000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "13" : {
            "sign" : 860380505,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -1977884732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 55000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3 "
          },
          "5" : {
            "sign" : 179988410,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5328694999203840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "10" : {
            "sign" : -969019361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 708372628992000,
            "rowCount" : 14757763104000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "6" : {
            "sign" : -1892068804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5328694999203840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          },
          "1" : {
            "sign" : 1807095594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3875414544875520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -745127801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#152], BroadcastQueryStage 4 "
          },
          "14" : {
            "sign" : 2038607527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1 "
          },
          "0" : {
            "sign" : -314765505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1743844267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3875414544875520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1411732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 158802640,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "3" : {
            "sign" : 735266448,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3875414544875520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- LogicalQueryStage Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21], ShuffleQueryStage 5\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#35, c_current_addr_sk#39], ShuffleQueryStage 1\n                  :     :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  :     +- LogicalQueryStage Project [ca_address_sk#53, ca_county#60, ca_zip#62], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_id#152], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1806859192,
        "inputRowCount" : 72699615
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 20892.0,
        "FinishedTasksDistributionInMs" : [ 97.0, 1278.0, 1408.0, 1426.0, 1910.0 ]
      },
      "StartTimeInMs" : 1702227009552,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30228,
        "IOBytes" : {
          "Total" : 240152382,
          "Details" : {
            "IR" : 41649446,
            "IW" : 0,
            "SR" : 99251468,
            "SW" : 99251468
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 964663308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5600,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 5600,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -954017665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 959754870,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], true\n      +- Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n         +- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n            +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n               +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n                  :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                  :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n                  :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                  :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n                  :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                  :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n                  :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n                  :     :     :     :  +- Join Inner, (ws_sold_date_sk#34 = d_date_sk#66)\n                  :     :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34]\n                  :     :     :     :     :  +- Filter (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34])\n                  :     :     :     :     :     :  +- Project [d_date_sk#66]\n                  :     :     :     :     :     :     +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n                  :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n                  :     :     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1,ws_ship_date_sk#2,ws_item_sk#3,ws_bill_customer_sk#4,ws_bill_cdemo_sk#5,ws_bill_hdemo_sk#6,ws_bill_addr_sk#7,ws_ship_customer_sk#8,ws_ship_cdemo_sk#9,ws_ship_hdemo_sk#10,ws_ship_addr_sk#11,ws_web_page_sk#12,ws_web_site_sk#13,ws_ship_mode_sk#14,ws_warehouse_sk#15,ws_promo_sk#16,ws_order_number#17L,ws_quantity#18,ws_wholesale_cost#19,ws_list_price#20,ws_sales_price#21,ws_ext_discount_amt#22,ws_ext_sales_price#23,ws_ext_wholesale_cost#24,... 10 more fields] parquet\n                  :     :     :     :     +- Project [d_date_sk#66]\n                  :     :     :     :        +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n                  :     :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n                  :     :     :     +- Project [c_customer_sk#35, c_current_addr_sk#39]\n                  :     :     :        +- Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n                  :     :     :           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#35,c_customer_id#36,c_current_cdemo_sk#37,c_current_hdemo_sk#38,c_current_addr_sk#39,c_first_shipto_date_sk#40,c_first_sales_date_sk#41,c_salutation#42,c_first_name#43,c_last_name#44,c_preferred_cust_flag#45,c_birth_day#46,c_birth_month#47,c_birth_year#48,c_birth_country#49,c_login#50,c_email_address#51,c_last_review_date#52] parquet\n                  :     :     +- Project [i_item_sk#94, i_item_id#95]\n                  :     :        +- Filter isnotnull(i_item_sk#94)\n                  :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n                  :     +- Project [ca_address_sk#53, ca_county#60, ca_zip#62]\n                  :        +- Filter isnotnull(ca_address_sk#53)\n                  :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_address_id#54,ca_street_number#55,ca_street_name#56,ca_street_type#57,ca_suite_number#58,ca_city#59,ca_county#60,ca_state#61,ca_zip#62,ca_country#63,ca_gmt_offset#64,ca_location_type#65] parquet\n                  +- Project [i_item_id#152]\n                     +- Filter i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#151,i_item_id#152,i_rec_start_date#153,i_rec_end_date#154,i_item_desc#155,i_current_price#156,i_wholesale_cost#157,i_brand_id#158,i_brand#159,i_class_id#160,i_class#161,i_category_id#162,i_category#163,i_manufact_id#164,i_manufact#165,i_size#166,i_formulation#167,i_color#168,i_units#169,i_container#170,i_manager_id#171,i_product_name#172] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -86755119,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 5600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [3]: [ca_zip#62, ca_county#60, sum(ws_sales_price)#174] Arguments: 100, [ca_zip#62 ASC NULLS FIRST, ca_county#60 ASC NULLS FIRST], [ca_zip#62, ca_county#60, sum(ws_sales_price)#174] "
          },
          "1" : {
            "sign" : 724409917,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 10976,
            "rowCount" : 196,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [ca_zip#62, ca_county#60, sum#181L] Keys [2]: [ca_zip#62, ca_county#60] Functions [1]: [sum(UnscaledValue(ws_sales_price#21))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_sales_price#21))#173L] Results [3]: [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21))#173L,17,2) AS sum(ws_sales_price)#174] "
          },
          "2" : {
            "sign" : 504840772,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ca_zip#62, ca_county#60, sum#181L] Arguments: 7 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[ca_zip#62 ASC NULLS FIRST,ca_county#60 ASC NULLS FIRST], output=[ca_zip#62,ca_county#60,sum(ws_sales_price)#174])\n+- HashAggregate(keys=[ca_zip#62, ca_county#60], functions=[sum(UnscaledValue(ws_sales_price#21))], output=[ca_zip#62, ca_county#60, sum(ws_sales_price)#174])\n   +- ShuffleQueryStage 7\n      +- Exchange hashpartitioning(ca_zip#62, ca_county#60, 200), ENSURE_REQUIREMENTS, [plan_id=1075]\n         +- *(12) HashAggregate(keys=[ca_zip#62, ca_county#60], functions=[partial_sum(UnscaledValue(ws_sales_price#21))], output=[ca_zip#62, ca_county#60, sum#181L])\n            +- *(12) Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n               +- *(12) Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n                  +- *(12) BroadcastHashJoin [i_item_id#95], [i_item_id#152], ExistenceJoin(exists#178), BuildRight, false\n                     :- *(12) Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n                     :  +- *(12) SortMergeJoin [c_current_addr_sk#39], [ca_address_sk#53], Inner\n                     :     :- *(10) Sort [c_current_addr_sk#39 ASC NULLS FIRST], false, 0\n                     :     :  +- AQEShuffleRead coalesced\n                     :     :     +- ShuffleQueryStage 6\n                     :     :        +- Exchange hashpartitioning(c_current_addr_sk#39, 200), ENSURE_REQUIREMENTS, [plan_id=956]\n                     :     :           +- *(9) Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n                     :     :              +- *(9) BroadcastHashJoin [ws_item_sk#3], [i_item_sk#94], Inner, BuildRight, false\n                     :     :                 :- *(9) Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n                     :     :                 :  +- *(9) SortMergeJoin [ws_bill_customer_sk#4], [c_customer_sk#35], Inner\n                     :     :                 :     :- *(7) Sort [ws_bill_customer_sk#4 ASC NULLS FIRST], false, 0\n                     :     :                 :     :  +- AQEShuffleRead coalesced\n                     :     :                 :     :     +- ShuffleQueryStage 5\n                     :     :                 :     :        +- Exchange hashpartitioning(ws_bill_customer_sk#4, 200), ENSURE_REQUIREMENTS, [plan_id=529]\n                     :     :                 :     :           +- *(6) Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n                     :     :                 :     :              +- *(6) BroadcastHashJoin [ws_sold_date_sk#34], [d_date_sk#66], Inner, BuildRight, false\n                     :     :                 :     :                 :- *(6) Filter (isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_item_sk#3))\n                     :     :                 :     :                 :  +- *(6) ColumnarToRow\n                     :     :                 :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#3,ws_bill_customer_sk#4,ws_sales_price#21,ws_sold_date_sk#34] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4), isnotnull(ws_item_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#179)], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>\n                     :     :                 :     :                 :           +- SubqueryBroadcast dynamicpruning#179, 0, [d_date_sk#66], [id=#503]\n                     :     :                 :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#66], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=500]\n                                                                                          +- Project [d_date_sk#66]\n                                                                                             +- Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n                     :     :                 :     :                 +- BroadcastQueryStage 0\n                     :     :                 :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n                     :     :                 :     :                       +- *(1) Project [d_date_sk#66]\n                     :     :                 :     :                          +- *(1) Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n                     :     :                 :     :                             +- *(1) ColumnarToRow\n                     :     :                 :     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n                     :     :                 :     +- *(8) Sort [c_customer_sk#35 ASC NULLS FIRST], false, 0\n                     :     :                 :        +- AQEShuffleRead coalesced\n                     :     :                 :           +- ShuffleQueryStage 1\n                     :     :                 :              +- Exchange hashpartitioning(c_customer_sk#35, 200), ENSURE_REQUIREMENTS, [plan_id=278]\n                     :     :                 :                 +- *(2) Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n                     :     :                 :                    +- *(2) ColumnarToRow\n                     :     :                 :                       +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#35,c_current_addr_sk#39] Batched: true, DataFilters: [isnotnull(c_customer_sk#35), isnotnull(c_current_addr_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>\n                     :     :                 +- BroadcastQueryStage 2\n                     :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=297]\n                     :     :                       +- *(3) Filter isnotnull(i_item_sk#94)\n                     :     :                          +- *(3) ColumnarToRow\n                     :     :                             +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n                     :     +- *(11) Sort [ca_address_sk#53 ASC NULLS FIRST], false, 0\n                     :        +- AQEShuffleRead coalesced\n                     :           +- ShuffleQueryStage 3\n                     :              +- Exchange hashpartitioning(ca_address_sk#53, 200), ENSURE_REQUIREMENTS, [plan_id=316]\n                     :                 +- *(4) Filter isnotnull(ca_address_sk#53)\n                     :                    +- *(4) ColumnarToRow\n                     :                       +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_county#60,ca_zip#62] Batched: true, DataFilters: [isnotnull(ca_address_sk#53)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_zip:string>\n                     +- BroadcastQueryStage 4\n                        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=337]\n                           +- *(5) Project [i_item_id#152]\n                              +- *(5) Filter i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)\n                                 +- *(5) ColumnarToRow\n                                    +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#151,i_item_id#152] Batched: true, DataFilters: [i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_item_sk, [11,13,17,19,2,23,29,3,5,7])], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 10976,
        "inputRowCount" : 196
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "4" : [ 106, 0, 106, 142, 142, 0, 106, 106, 189, 142, 0, 106, 142, 106, 106, 142, 106, 142, 0, 142, 0, 0, 251, 106, 171, 106, 0, 0, 97, 0, 0, 142, 156, 0, 106, 106, 0, 0, 129, 0, 171, 0, 117, 0, 142, 0, 106, 0, 0, 106, 0, 0, 0, 129, 106, 106, 106, 142, 142, 106, 142, 0, 106, 106, 106, 97, 0, 106, 0, 0, 0, 106, 0, 97, 142, 0, 0, 106, 0, 142, 0, 80, 106, 0, 106, 106, 97, 97, 171, 97, 0, 106, 117, 97, 0, 171, 251, 171, 0, 0, 0, 142, 0, 0, 106, 171, 189, 0, 129, 106, 106, 0, 88, 106, 106, 0, 97, 0, 0, 156, 0, 106, 142, 106, 97, 106, 0, 0, 97, 0, 0, 0, 106, 156, 0, 106, 0, 106, 0, 97, 97, 106, 0, 0, 0, 0, 207, 88, 142, 106, 0, 106, 0, 106, 0, 106, 0, 106, 106, 97, 156, 106, 106, 106, 0, 142, 189, 0, 0, 106, 106, 97, 0, 142, 171, 0, 156, 142, 106, 97, 106, 0, 171, 129, 106, 117, 0, 106, 142, 142, 80, 106, 0, 106, 106, 156, 0, 0, 106, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 471,
        "TotalTasksDurationInMs" : 462,
        "IOBytes" : {
          "Total" : 14863,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 14863,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 146171125,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 55000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 55000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#53, ca_county#60, ca_zip#62] "
          },
          "1" : {
            "sign" : 870317748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ca_address_sk#53) "
          },
          "2" : {
            "sign" : -1849306252,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#53, ca_address_id#54, ca_street_number#55, ca_street_name#56, ca_street_type#57, ca_suite_number#58, ca_city#59, ca_county#60, ca_state#61, ca_zip#62, ca_country#63, ca_gmt_offset#64, ca_location_type#65], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#53, ca_county#60, ca_zip#62]\n+- Filter isnotnull(ca_address_sk#53)\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_address_id#54,ca_street_number#55,ca_street_name#56,ca_street_type#57,ca_suite_number#58,ca_city#59,ca_county#60,ca_state#61,ca_zip#62,ca_country#63,ca_gmt_offset#64,ca_location_type#65] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1738273375,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 55000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ca_address_sk#53, ca_county#60, ca_zip#62] Condition : isnotnull(ca_address_sk#53) "
          },
          "1" : {
            "sign" : -1189402849,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 55000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [3]: [ca_address_sk#53, ca_county#60, ca_zip#62] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_zip:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(ca_address_sk#53)\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_county#60,ca_zip#62] Batched: true, DataFilters: [isnotnull(ca_address_sk#53)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_zip:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 55000000,
        "inputRowCount" : 1000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 5241,
        "TotalTasksDurationInMs" : 4349,
        "IOBytes" : {
          "Total" : 28265271,
          "Details" : {
            "IR" : 7134533,
            "IW" : 0,
            "SR" : 0,
            "SW" : 21130738
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1556887014,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1, ws_ship_date_sk#2, ws_item_sk#3, ws_bill_customer_sk#4, ws_bill_cdemo_sk#5, ws_bill_hdemo_sk#6, ws_bill_addr_sk#7, ws_ship_customer_sk#8, ws_ship_cdemo_sk#9, ws_ship_hdemo_sk#10, ws_ship_addr_sk#11, ws_web_page_sk#12, ws_web_site_sk#13, ws_ship_mode_sk#14, ws_warehouse_sk#15, ws_promo_sk#16, ws_order_number#17L, ws_quantity#18, ws_wholesale_cost#19, ws_list_price#20, ws_sales_price#21, ws_ext_discount_amt#22, ws_ext_sales_price#23, ws_ext_wholesale_cost#24, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1023287077,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#34 = d_date_sk#66) "
          },
          "0" : {
            "sign" : 1721787335,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21] "
          },
          "2" : {
            "sign" : -1464891922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015036828,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 2015036828,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34] "
          },
          "3" : {
            "sign" : -417625083,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n+- Join Inner, (ws_sold_date_sk#34 = d_date_sk#66)\n   :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34]\n   :  +- Filter (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34])\n   :     :  +- Project [d_date_sk#66]\n   :     :     +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1,ws_ship_date_sk#2,ws_item_sk#3,ws_bill_customer_sk#4,ws_bill_cdemo_sk#5,ws_bill_hdemo_sk#6,ws_bill_addr_sk#7,ws_ship_customer_sk#8,ws_ship_cdemo_sk#9,ws_ship_hdemo_sk#10,ws_ship_addr_sk#11,ws_web_page_sk#12,ws_web_site_sk#13,ws_ship_mode_sk#14,ws_warehouse_sk#15,ws_promo_sk#16,ws_order_number#17L,ws_quantity#18,ws_wholesale_cost#19,ws_list_price#20,ws_sales_price#21,ws_ext_discount_amt#22,ws_ext_sales_price#23,ws_ext_wholesale_cost#24,... 10 more fields] parquet\n   +- Project [d_date_sk#66]\n      +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1444821696,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049304,
            "rowCount" : 91,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#66] Arguments: 0 "
          },
          "1" : {
            "sign" : -789572157,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2223859360,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#34] Right keys [1]: [d_date_sk#66] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -628857927,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21] Input [5]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34, d_date_sk#66] "
          },
          "2" : {
            "sign" : 1027345904,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34] Condition : (isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_item_sk#3)) "
          },
          "3" : {
            "sign" : -29468162,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2015036828,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [4]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#179)] PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n+- BroadcastHashJoin [ws_sold_date_sk#34], [d_date_sk#66], Inner, BuildRight, false\n   :- Filter (isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_item_sk#3))\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#3,ws_bill_customer_sk#4,ws_sales_price#21,ws_sold_date_sk#34] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4), isnotnull(ws_item_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#179)], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#179, 0, [d_date_sk#66], [id=#503]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=500]\n   :                 +- Project [d_date_sk#66]\n   :                    +- Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n         +- *(1) Project [d_date_sk#66]\n            +- *(1) Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2016086132,
        "inputRowCount" : 71965692
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 26,
        "FinishedTasksTotalTimeInMs" : 22075.0,
        "FinishedTasksDistributionInMs" : [ 97.0, 156.0, 1292.0, 1416.0, 1910.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 19680,
        "TotalTasksDurationInMs" : 74800,
        "IOBytes" : {
          "Total" : 46888047,
          "Details" : {
            "IR" : 18367293,
            "IW" : 0,
            "SR" : 0,
            "SW" : 28520754
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -566055140,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3452011440,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3452011440,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] "
          },
          "1" : {
            "sign" : 1248178209,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4027346680,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 4027346680,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#3 = i_item_sk#94) "
          },
          "2" : {
            "sign" : -1943022928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1736207424,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 1736207424,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] "
          },
          "3" : {
            "sign" : 338007826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2314943232,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 2314943232,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#4 = c_customer_sk#35) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n+- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n   :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n   :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n   :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n   :     :  +- Join Inner, (ws_sold_date_sk#34 = d_date_sk#66)\n   :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34]\n   :     :     :  +- Filter (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34])\n   :     :     :     :  +- Project [d_date_sk#66]\n   :     :     :     :     +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n   :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n   :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1,ws_ship_date_sk#2,ws_item_sk#3,ws_bill_customer_sk#4,ws_bill_cdemo_sk#5,ws_bill_hdemo_sk#6,ws_bill_addr_sk#7,ws_ship_customer_sk#8,ws_ship_cdemo_sk#9,ws_ship_hdemo_sk#10,ws_ship_addr_sk#11,ws_web_page_sk#12,ws_web_site_sk#13,ws_ship_mode_sk#14,ws_warehouse_sk#15,ws_promo_sk#16,ws_order_number#17L,ws_quantity#18,ws_wholesale_cost#19,ws_list_price#20,ws_sales_price#21,ws_ext_discount_amt#22,ws_ext_sales_price#23,ws_ext_wholesale_cost#24,... 10 more fields] parquet\n   :     :     +- Project [d_date_sk#66]\n   :     :        +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n   :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n   :     +- Project [c_customer_sk#35, c_current_addr_sk#39]\n   :        +- Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n   :           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#35,c_customer_id#36,c_current_cdemo_sk#37,c_current_hdemo_sk#38,c_current_addr_sk#39,c_first_shipto_date_sk#40,c_first_sales_date_sk#41,c_salutation#42,c_first_name#43,c_last_name#44,c_preferred_cust_flag#45,c_birth_day#46,c_birth_month#47,c_birth_year#48,c_birth_country#49,c_login#50,c_email_address#51,c_last_review_date#52] parquet\n   +- Project [i_item_sk#94, i_item_id#95]\n      +- Filter isnotnull(i_item_sk#94)\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 667163325,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#94, i_item_id#95] Arguments: 2 "
          },
          "4" : {
            "sign" : 1490354559,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21] Arguments: [ws_bill_customer_sk#4 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 234904578,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 66274560,
            "rowCount" : 2071080,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21] Arguments: 5 "
          },
          "6" : {
            "sign" : -569832896,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [c_customer_sk#35, c_current_addr_sk#39] Arguments: [c_customer_sk#35 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : 901847788,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4027346680,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#3] Right keys [1]: [i_item_sk#94] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -377254033,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3452011440,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] Input [5]: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39, i_item_sk#94, i_item_id#95] "
          },
          "2" : {
            "sign" : 1587354485,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1736207424,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39] Input [5]: [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, c_customer_sk#35, c_current_addr_sk#39] "
          },
          "7" : {
            "sign" : -72504426,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 48000000,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [c_customer_sk#35, c_current_addr_sk#39] Arguments: 1 "
          },
          "3" : {
            "sign" : 523273453,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 2314943232,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#4] Right keys [1]: [c_customer_sk#35] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n+- BroadcastHashJoin [ws_item_sk#3], [i_item_sk#94], Inner, BuildRight, false\n   :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n   :  +- SortMergeJoin [ws_bill_customer_sk#4], [c_customer_sk#35], Inner\n   :     :- Sort [ws_bill_customer_sk#4 ASC NULLS FIRST], false, 0\n   :     :  +- ShuffleQueryStage 5\n   :     :     +- Exchange hashpartitioning(ws_bill_customer_sk#4, 200), ENSURE_REQUIREMENTS, [plan_id=529]\n   :     :        +- *(6) Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n   :     :           +- *(6) BroadcastHashJoin [ws_sold_date_sk#34], [d_date_sk#66], Inner, BuildRight, false\n   :     :              :- *(6) Filter (isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_item_sk#3))\n   :     :              :  +- *(6) ColumnarToRow\n   :     :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#3,ws_bill_customer_sk#4,ws_sales_price#21,ws_sold_date_sk#34] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4), isnotnull(ws_item_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#179)], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>\n   :     :              :           +- SubqueryBroadcast dynamicpruning#179, 0, [d_date_sk#66], [id=#503]\n   :     :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             BroadcastQueryStage 1\n                                             +- ReusedExchange [d_date_sk#66], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n                                          +- == Initial Plan ==\n                                             BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=500]\n                                             +- Project [d_date_sk#66]\n                                                +- Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :     :              +- BroadcastQueryStage 0\n   :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n   :     :                    +- *(1) Project [d_date_sk#66]\n   :     :                       +- *(1) Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n   :     :                          +- *(1) ColumnarToRow\n   :     :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :     +- Sort [c_customer_sk#35 ASC NULLS FIRST], false, 0\n   :        +- ShuffleQueryStage 1\n   :           +- Exchange hashpartitioning(c_customer_sk#35, 200), ENSURE_REQUIREMENTS, [plan_id=278]\n   :              +- *(2) Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n   :                 +- *(2) ColumnarToRow\n   :                    +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#35,c_current_addr_sk#39] Batched: true, DataFilters: [isnotnull(c_customer_sk#35), isnotnull(c_current_addr_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>\n   +- BroadcastQueryStage 2\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=297]\n         +- *(3) Filter isnotnull(i_item_sk#94)\n            +- *(3) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 132683776,
        "inputRowCount" : 4275080
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 154245, 154964, 154099, 152389, 151631, 151420, 149100, 147206, 156207, 152149, 153246, 147343, 148851, 148827, 157590, 144837, 148174, 159408, 156504, 144390, 151963, 151168, 139868, 157337, 144543, 155259, 148532, 148867, 154646, 162630, 144653, 147308, 149513, 143691, 145839, 140446, 153111, 159004, 152734, 143084, 141927, 140351, 145739, 150387, 150758, 146511, 144185, 147335, 159423, 147731, 145066, 151006, 147280, 141728, 143887, 151138, 153880, 155160, 143010, 156531, 149097, 148892, 150886, 153100, 143352, 153940, 147645, 150111, 149481, 154524, 157016, 149788, 138271, 152605, 144580, 154135, 149951, 145638, 158254, 138395, 156335, 153766, 152556, 155627, 154990, 150500, 142212, 146896, 141704, 145708, 152491, 142960, 147469, 149165, 149717, 145625, 150971, 148609, 149570, 146346, 136844, 152230, 154329, 147624, 160428, 151109, 156967, 160771, 141395, 145173, 149857, 147619, 144066, 153500, 156311, 150828, 139827, 149883, 147304, 147419, 139184, 146723, 142912, 149327, 163268, 152790, 154769, 150946, 142121, 146021, 151020, 153459, 144752, 147937, 147357, 152260, 150074, 145669, 159474, 156420, 153102, 145342, 139956, 148901, 151588, 146318, 150403, 144148, 150659, 154987, 148789, 148945, 153527, 144688, 145576, 147191, 154498, 146579, 156339, 145470, 147263, 150631, 146256, 142087, 153203, 149709, 145310, 155271, 147877, 146043, 153957, 150593, 146944, 153947, 148600, 154809, 147619, 150239, 153610, 151382, 148466, 143515, 154097, 148309, 154158, 153597, 157902, 150802, 147826, 146611, 152476, 150981, 151798, 142522, 157925, 152913, 138425, 148004, 148897, 148021 ],
        "0" : [ 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 112177, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 112177, 101979, 112177, 112177, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 112177, 112177, 101979, 101979, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 112177, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 112177, 101979, 101979, 112177, 101979 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 3762,
        "TotalTasksDurationInMs" : 3751,
        "IOBytes" : {
          "Total" : 78105867,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 48778821,
            "SW" : 29327046
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -609071415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#94, i_item_id#95] "
          },
          "1" : {
            "sign" : 305875584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#94) "
          },
          "2" : {
            "sign" : -1299140691,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#94, i_item_id#95, i_rec_start_date#96, i_rec_end_date#97, i_item_desc#98, i_current_price#99, i_wholesale_cost#100, i_brand_id#101, i_brand#102, i_class_id#103, i_class#104, i_category_id#105, i_category#106, i_manufact_id#107, i_manufact#108, i_size#109, i_formulation#110, i_color#111, i_units#112, i_container#113, i_manager_id#114, i_product_name#115], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#94, i_item_id#95]\n+- Filter isnotnull(i_item_sk#94)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1540030041,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#94, i_item_id#95] Condition : isnotnull(i_item_sk#94) "
          },
          "1" : {
            "sign" : 1478982156,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#94, i_item_id#95] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#94)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8160000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 2127,
        "TotalTasksDurationInMs" : 1340,
        "IOBytes" : {
          "Total" : 1618808,
          "Details" : {
            "IR" : 1618808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1201643350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1740,
                "rowCount" : 145
              },
              "compileTime" : {
                "sizeInBytes" : 1740,
                "rowCount" : 145
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#66] "
          },
          "1" : {
            "sign" : 222786030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 35670,
                "rowCount" : 145
              },
              "compileTime" : {
                "sizeInBytes" : 35670,
                "rowCount" : 145
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66)) "
          },
          "2" : {
            "sign" : 815236592,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#66, d_date_id#67, d_date#68, d_month_seq#69, d_week_seq#70, d_quarter_seq#71, d_year#72, d_dow#73, d_moy#74, d_dom#75, d_qoy#76, d_fy_year#77, d_fy_quarter_seq#78, d_fy_week_seq#79, d_day_name#80, d_quarter_name#81, d_holiday#82, d_weekend#83, d_following_holiday#84, d_first_dom#85, d_last_dom#86, d_same_day_ly#87, d_same_day_lq#88, d_current_day#89, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#66]\n+- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -327301111,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1740,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#66] Input [3]: [d_date_sk#66, d_year#72, d_qoy#76] "
          },
          "1" : {
            "sign" : -686314611,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1740,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#66, d_year#72, d_qoy#76] Condition : ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66)) "
          },
          "2" : {
            "sign" : -1930840583,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1740,
            "rowCount" : 145,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#66, d_year#72, d_qoy#76] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#66]\n+- Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1740,
        "inputRowCount" : 145
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1787,
        "TotalTasksDurationInMs" : 523,
        "IOBytes" : {
          "Total" : 93845,
          "Details" : {
            "IR" : 93845,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 508851669,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 360,
                "rowCount" : 10
              },
              "compileTime" : {
                "sizeInBytes" : 360,
                "rowCount" : 10
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_id#152] "
          },
          "1" : {
            "sign" : -1485150412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4260,
                "rowCount" : 10
              },
              "compileTime" : {
                "sizeInBytes" : 4260,
                "rowCount" : 10
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29) "
          },
          "2" : {
            "sign" : 1257434423,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#151, i_item_id#152, i_rec_start_date#153, i_rec_end_date#154, i_item_desc#155, i_current_price#156, i_wholesale_cost#157, i_brand_id#158, i_brand#159, i_class_id#160, i_class#161, i_category_id#162, i_category#163, i_manufact_id#164, i_manufact#165, i_size#166, i_formulation#167, i_color#168, i_units#169, i_container#170, i_manager_id#171, i_product_name#172], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_id#152]\n+- Filter i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#151,i_item_id#152,i_rec_start_date#153,i_rec_end_date#154,i_item_desc#155,i_current_price#156,i_wholesale_cost#157,i_brand_id#158,i_brand#159,i_class_id#160,i_class#161,i_category_id#162,i_category#163,i_manufact_id#164,i_manufact#165,i_size#166,i_formulation#167,i_color#168,i_units#169,i_container#170,i_manager_id#171,i_product_name#172] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1283615446,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 360,
            "rowCount" : 10,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [i_item_id#152] Input [2]: [i_item_sk#151, i_item_id#152] "
          },
          "1" : {
            "sign" : -124948107,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 360,
            "rowCount" : 10,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#151, i_item_id#152] Condition : i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29) "
          },
          "2" : {
            "sign" : 440700856,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 360,
            "rowCount" : 10,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#151, i_item_id#152] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [In(i_item_sk, [11,13,17,19,2,23,29,3,5,7])] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_id#152]\n+- Filter i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)\n   +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#151,i_item_id#152] Batched: true, DataFilters: [i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_item_sk, [11,13,17,19,2,23,29,3,5,7])], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 360,
        "inputRowCount" : 10
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1915,
        "TotalTasksDurationInMs" : 1113,
        "IOBytes" : {
          "Total" : 418734,
          "Details" : {
            "IR" : 418734,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -665934527,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 174883920,
                "rowCount" : 2010160
              },
              "compileTime" : {
                "sizeInBytes" : 174883920,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] "
          },
          "5" : {
            "sign" : -926612626,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 190965200,
                "rowCount" : 2010160
              },
              "compileTime" : {
                "sizeInBytes" : 190965200,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#39 = ca_address_sk#53) "
          },
          "1" : {
            "sign" : 633341330,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_sales_price#21, ca_county#60, ca_zip#62] "
          },
          "0" : {
            "sign" : -69886951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 45787789963,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174] "
          },
          "2" : {
            "sign" : -1976809617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 62958211200,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 62958211200,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "3" : {
            "sign" : 1883289327,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 62958211200,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 62958211200,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152) "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_zip#62, ca_county#60], [ca_zip#62, ca_county#60, MakeDecimal(sum(UnscaledValue(ws_sales_price#21)),17,2) AS sum(ws_sales_price)#174]\n+- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n   +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n      +- Join ExistenceJoin(exists#178), (i_item_id#95 = i_item_id#152)\n         :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n         :  +- Join Inner, (c_current_addr_sk#39 = ca_address_sk#53)\n         :     :- Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n         :     :  +- Join Inner, (ws_item_sk#3 = i_item_sk#94)\n         :     :     :- Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n         :     :     :  +- Join Inner, (ws_bill_customer_sk#4 = c_customer_sk#35)\n         :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n         :     :     :     :  +- Join Inner, (ws_sold_date_sk#34 = d_date_sk#66)\n         :     :     :     :     :- Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21, ws_sold_date_sk#34]\n         :     :     :     :     :  +- Filter (((isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_sold_date_sk#34)) AND isnotnull(ws_item_sk#3)) AND dynamicpruning#179 [ws_sold_date_sk#34])\n         :     :     :     :     :     :  +- Project [d_date_sk#66]\n         :     :     :     :     :     :     +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n         :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n         :     :     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1,ws_ship_date_sk#2,ws_item_sk#3,ws_bill_customer_sk#4,ws_bill_cdemo_sk#5,ws_bill_hdemo_sk#6,ws_bill_addr_sk#7,ws_ship_customer_sk#8,ws_ship_cdemo_sk#9,ws_ship_hdemo_sk#10,ws_ship_addr_sk#11,ws_web_page_sk#12,ws_web_site_sk#13,ws_ship_mode_sk#14,ws_warehouse_sk#15,ws_promo_sk#16,ws_order_number#17L,ws_quantity#18,ws_wholesale_cost#19,ws_list_price#20,ws_sales_price#21,ws_ext_discount_amt#22,ws_ext_sales_price#23,ws_ext_wholesale_cost#24,... 10 more fields] parquet\n         :     :     :     :     +- Project [d_date_sk#66]\n         :     :     :     :        +- Filter (((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND ((d_qoy#76 = 2) AND (d_year#72 = 2000))) AND isnotnull(d_date_sk#66))\n         :     :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_date_id#67,d_date#68,d_month_seq#69,d_week_seq#70,d_quarter_seq#71,d_year#72,d_dow#73,d_moy#74,d_dom#75,d_qoy#76,d_fy_year#77,d_fy_quarter_seq#78,d_fy_week_seq#79,d_day_name#80,d_quarter_name#81,d_holiday#82,d_weekend#83,d_following_holiday#84,d_first_dom#85,d_last_dom#86,d_same_day_ly#87,d_same_day_lq#88,d_current_day#89,... 4 more fields] parquet\n         :     :     :     +- Project [c_customer_sk#35, c_current_addr_sk#39]\n         :     :     :        +- Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n         :     :     :           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#35,c_customer_id#36,c_current_cdemo_sk#37,c_current_hdemo_sk#38,c_current_addr_sk#39,c_first_shipto_date_sk#40,c_first_sales_date_sk#41,c_salutation#42,c_first_name#43,c_last_name#44,c_preferred_cust_flag#45,c_birth_day#46,c_birth_month#47,c_birth_year#48,c_birth_country#49,c_login#50,c_email_address#51,c_last_review_date#52] parquet\n         :     :     +- Project [i_item_sk#94, i_item_id#95]\n         :     :        +- Filter isnotnull(i_item_sk#94)\n         :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n         :     +- Project [ca_address_sk#53, ca_county#60, ca_zip#62]\n         :        +- Filter isnotnull(ca_address_sk#53)\n         :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_address_id#54,ca_street_number#55,ca_street_name#56,ca_street_type#57,ca_suite_number#58,ca_city#59,ca_county#60,ca_state#61,ca_zip#62,ca_country#63,ca_gmt_offset#64,ca_location_type#65] parquet\n         +- Project [i_item_id#152]\n            +- Filter i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#151,i_item_id#152,i_rec_start_date#153,i_rec_end_date#154,i_item_desc#155,i_current_price#156,i_wholesale_cost#157,i_brand_id#158,i_brand#159,i_class_id#160,i_class#161,i_category_id#162,i_category#163,i_manufact_id#164,i_manufact#165,i_size#166,i_formulation#167,i_color#168,i_units#169,i_container#170,i_manager_id#171,i_product_name#172] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 672189748,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ca_address_sk#53, ca_county#60, ca_zip#62] Arguments: [ca_address_sk#53 ASC NULLS FIRST], false, 0 "
          },
          "4" : {
            "sign" : 2109734864,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 174883920,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95] Input [6]: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95, ca_address_sk#53, ca_county#60, ca_zip#62] "
          },
          "9" : {
            "sign" : 520694885,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 56122792,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ca_address_sk#53, ca_county#60, ca_zip#62] Arguments: 3 "
          },
          "5" : {
            "sign" : -72942561,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 190965200,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_current_addr_sk#39] Right keys [1]: [ca_address_sk#53] Join type: Inner Join condition: None "
          },
          "10" : {
            "sign" : 1735364895,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33555456,
            "rowCount" : 10,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [i_item_id#152] Arguments: 4 "
          },
          "6" : {
            "sign" : -1148487260,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] Arguments: [c_current_addr_sk#39 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -1689367087,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_sales_price#21, ca_county#60, ca_zip#62] Input [5]: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95, exists#178] "
          },
          "0" : {
            "sign" : 1816903854,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 45787789963,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ws_sales_price#21, ca_county#60, ca_zip#62] Keys [2]: [ca_zip#62, ca_county#60] Functions [1]: [partial_sum(UnscaledValue(ws_sales_price#21))] Aggregate Attributes [1]: [sum#180L] Results [3]: [ca_zip#62, ca_county#60, sum#181L] "
          },
          "2" : {
            "sign" : 1573377818,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 62958211200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95, exists#178] Condition : (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178) "
          },
          "7" : {
            "sign" : 615507307,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 99411840,
            "rowCount" : 2071080,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95] Arguments: 6 "
          },
          "3" : {
            "sign" : -799132434,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 62958211200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [i_item_id#95] Right keys [1]: [i_item_id#152] Join type: ExistenceJoin(exists#178) Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "ShuffleQueryStage",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_zip#62, ca_county#60], functions=[partial_sum(UnscaledValue(ws_sales_price#21))], output=[ca_zip#62, ca_county#60, sum#181L])\n+- Project [ws_sales_price#21, ca_county#60, ca_zip#62]\n   +- Filter (substr(ca_zip#62, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#178)\n      +- BroadcastHashJoin [i_item_id#95], [i_item_id#152], ExistenceJoin(exists#178), BuildRight, false\n         :- Project [ws_sales_price#21, ca_county#60, ca_zip#62, i_item_id#95]\n         :  +- SortMergeJoin [c_current_addr_sk#39], [ca_address_sk#53], Inner\n         :     :- Sort [c_current_addr_sk#39 ASC NULLS FIRST], false, 0\n         :     :  +- ShuffleQueryStage 6\n         :     :     +- Exchange hashpartitioning(c_current_addr_sk#39, 200), ENSURE_REQUIREMENTS, [plan_id=956]\n         :     :        +- *(9) Project [ws_sales_price#21, c_current_addr_sk#39, i_item_id#95]\n         :     :           +- *(9) BroadcastHashJoin [ws_item_sk#3], [i_item_sk#94], Inner, BuildRight, false\n         :     :              :- *(9) Project [ws_item_sk#3, ws_sales_price#21, c_current_addr_sk#39]\n         :     :              :  +- *(9) SortMergeJoin [ws_bill_customer_sk#4], [c_customer_sk#35], Inner\n         :     :              :     :- *(7) Sort [ws_bill_customer_sk#4 ASC NULLS FIRST], false, 0\n         :     :              :     :  +- AQEShuffleRead coalesced\n         :     :              :     :     +- ShuffleQueryStage 5\n         :     :              :     :        +- Exchange hashpartitioning(ws_bill_customer_sk#4, 200), ENSURE_REQUIREMENTS, [plan_id=529]\n         :     :              :     :           +- *(6) Project [ws_item_sk#3, ws_bill_customer_sk#4, ws_sales_price#21]\n         :     :              :     :              +- *(6) BroadcastHashJoin [ws_sold_date_sk#34], [d_date_sk#66], Inner, BuildRight, false\n         :     :              :     :                 :- *(6) Filter (isnotnull(ws_bill_customer_sk#4) AND isnotnull(ws_item_sk#3))\n         :     :              :     :                 :  +- *(6) ColumnarToRow\n         :     :              :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#3,ws_bill_customer_sk#4,ws_sales_price#21,ws_sold_date_sk#34] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#4), isnotnull(ws_item_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#34), dynamicpruningexpression(ws_sold_date_sk#34 IN dynamicpruning#179)], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>\n         :     :              :     :                 :           +- SubqueryBroadcast dynamicpruning#179, 0, [d_date_sk#66], [id=#503]\n         :     :              :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                        +- == Final Plan ==\n                                                                           BroadcastQueryStage 1\n                                                                           +- ReusedExchange [d_date_sk#66], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n                                                                        +- == Initial Plan ==\n                                                                           BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=500]\n                                                                           +- Project [d_date_sk#66]\n                                                                              +- Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n                                                                                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n         :     :              :     :                 +- BroadcastQueryStage 0\n         :     :              :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=257]\n         :     :              :     :                       +- *(1) Project [d_date_sk#66]\n         :     :              :     :                          +- *(1) Filter ((((isnotnull(d_qoy#76) AND isnotnull(d_year#72)) AND (d_qoy#76 = 2)) AND (d_year#72 = 2000)) AND isnotnull(d_date_sk#66))\n         :     :              :     :                             +- *(1) ColumnarToRow\n         :     :              :     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#66,d_year#72,d_qoy#76] Batched: true, DataFilters: [isnotnull(d_qoy#76), isnotnull(d_year#72), (d_qoy#76 = 2), (d_year#72 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n         :     :              :     +- *(8) Sort [c_customer_sk#35 ASC NULLS FIRST], false, 0\n         :     :              :        +- AQEShuffleRead coalesced\n         :     :              :           +- ShuffleQueryStage 1\n         :     :              :              +- Exchange hashpartitioning(c_customer_sk#35, 200), ENSURE_REQUIREMENTS, [plan_id=278]\n         :     :              :                 +- *(2) Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n         :     :              :                    +- *(2) ColumnarToRow\n         :     :              :                       +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#35,c_current_addr_sk#39] Batched: true, DataFilters: [isnotnull(c_customer_sk#35), isnotnull(c_current_addr_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>\n         :     :              +- BroadcastQueryStage 2\n         :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=297]\n         :     :                    +- *(3) Filter isnotnull(i_item_sk#94)\n         :     :                       +- *(3) ColumnarToRow\n         :     :                          +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n         :     +- Sort [ca_address_sk#53 ASC NULLS FIRST], false, 0\n         :        +- ShuffleQueryStage 3\n         :           +- Exchange hashpartitioning(ca_address_sk#53, 200), ENSURE_REQUIREMENTS, [plan_id=316]\n         :              +- *(4) Filter isnotnull(ca_address_sk#53)\n         :                 +- *(4) ColumnarToRow\n         :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#53,ca_county#60,ca_zip#62] Batched: true, DataFilters: [isnotnull(ca_address_sk#53)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_zip:string>\n         +- BroadcastQueryStage 4\n            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=337]\n               +- *(5) Project [i_item_id#152]\n                  +- *(5) Filter i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)\n                     +- *(5) ColumnarToRow\n                        +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#151,i_item_id#152] Batched: true, DataFilters: [i_item_sk#151 IN (2,3,5,7,11,13,17,19,23,29)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_item_sk, [11,13,17,19,2,23,29,3,5,7])], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 189090088,
        "inputRowCount" : 3071090
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 101979, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "3" : [ 164239, 164239, 149308, 164239, 149308, 164239, 164239, 164239, 149308, 149308, 164239, 135735, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 135735, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 164239, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 135735, 135735, 164239, 149308, 164239, 164239, 149308, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 164239, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 164239, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 164239, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 164239, 164239, 149308, 164239, 149308, 149308, 164239, 149308, 149308, 164239 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 5922,
        "TotalTasksDurationInMs" : 5911,
        "IOBytes" : {
          "Total" : 50472647,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 50457784,
            "SW" : 14863
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1408007007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 32000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 32000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#35, c_current_addr_sk#39] "
          },
          "1" : {
            "sign" : -1369583391,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39)) "
          },
          "2" : {
            "sign" : -1908158160,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#35, c_customer_id#36, c_current_cdemo_sk#37, c_current_hdemo_sk#38, c_current_addr_sk#39, c_first_shipto_date_sk#40, c_first_sales_date_sk#41, c_salutation#42, c_first_name#43, c_last_name#44, c_preferred_cust_flag#45, c_birth_day#46, c_birth_month#47, c_birth_year#48, c_birth_country#49, c_login#50, c_email_address#51, c_last_review_date#52], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#35, c_current_addr_sk#39]\n+- Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#35,c_customer_id#36,c_current_cdemo_sk#37,c_current_hdemo_sk#38,c_current_addr_sk#39,c_first_shipto_date_sk#40,c_first_sales_date_sk#41,c_salutation#42,c_first_name#43,c_last_name#44,c_preferred_cust_flag#45,c_birth_day#46,c_birth_month#47,c_birth_year#48,c_birth_country#49,c_login#50,c_email_address#51,c_last_review_date#52] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -911255252,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [c_customer_sk#35, c_current_addr_sk#39] Condition : (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39)) "
          },
          "1" : {
            "sign" : -1886279109,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 32000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [2]: [c_customer_sk#35, c_current_addr_sk#39] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)] ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(c_customer_sk#35) AND isnotnull(c_current_addr_sk#39))\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#35,c_current_addr_sk#39] Batched: true, DataFilters: [isnotnull(c_customer_sk#35), isnotnull(c_current_addr_sk#39)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 32000000,
        "inputRowCount" : 2000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 12619,
        "TotalTasksDurationInMs" : 36314,
        "IOBytes" : {
          "Total" : 36405687,
          "Details" : {
            "IR" : 16147620,
            "IW" : 0,
            "SR" : 0,
            "SW" : 20258067
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227006098,
  "SQLEndTimeInMs" : 1702227039780,
  "Objectives" : {
    "DurationInMs" : 33682,
    "IOBytes" : {
      "Total" : 242283769,
      "Details" : {
        "IR" : 43780833,
        "IW" : 0,
        "SR" : 99251468,
        "SW" : 99251468
      }
    }
  }
}
