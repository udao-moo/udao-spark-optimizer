{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 1600338469,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 9583920000,
          "rowCount" : 399330000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4], `spark_catalog`.`tpcds_100`.`inventory`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "8" : {
          "sign" : 697434253,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10642197744,
          "rowCount" : 443424906,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55) "
        },
        "19" : {
          "sign" : 821338385,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23256000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] "
        },
        "4" : {
          "sign" : 495618390,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
          "sizeInBytes" : 247131056215,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Expand Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#79, i_brand#80, i_class#81, i_category#82, spark_grouping_id#78L] "
        },
        "15" : {
          "sign" : -2091433554,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5, d_date_id#6, d_date#7, d_month_seq#8, d_week_seq#9, d_quarter_seq#10, d_year#11, d_dow#12, d_moy#13, d_dom#14, d_qoy#15, d_fy_year#16, d_fy_quarter_seq#17, d_fy_week_seq#18, d_day_name#19, d_quarter_name#20, d_holiday#21, d_weekend#22, d_following_holiday#23, d_first_dom#24, d_last_dom#25, d_same_day_ly#26, d_same_day_lq#27, d_current_day#28, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : 1161901135,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 9583920000,
          "rowCount" : 399330000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#88 [inv_date_sk#4]) "
        },
        "9" : {
          "sign" : 225577774,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7815624880,
          "rowCount" : 390781244,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3] "
        },
        "13" : {
          "sign" : -1384254787,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4032,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#5] "
        },
        "16" : {
          "sign" : -1649655326,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 180,
          "rowCount" : 15,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [w_warehouse_sk#55] "
        },
        "5" : {
          "sign" : -273824638,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 45472114344,
          "rowCount" : 398878196,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] "
        },
        "10" : {
          "sign" : 981340945,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10941874832,
          "rowCount" : 390781244,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (inv_date_sk#4 = d_date_sk#5) "
        },
        "21" : {
          "sign" : 468025845,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#33, i_item_id#34, i_rec_start_date#35, i_rec_end_date#36, i_item_desc#37, i_current_price#38, i_wholesale_cost#39, i_brand_id#40, i_brand#41, i_class_id#42, i_class#43, i_category_id#44, i_category#45, i_manufact_id#46, i_manufact#47, i_size#48, i_formulation#49, i_color#50, i_units#51, i_container#52, i_manager_id#53, i_product_name#54], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : -1558539242,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 48663139912,
          "rowCount" : 398878196,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (inv_item_sk#1 = i_item_sk#33) "
        },
        "1" : {
          "sign" : 1742769413,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 237245813966,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : 1620333648,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 3810,
          "rowCount" : 15,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(w_warehouse_sk#55) "
        },
        "14" : {
          "sign" : 649924584,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5)) "
        },
        "0" : {
          "sign" : 859450176,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 9600,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1517198477,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#33) "
        },
        "2" : {
          "sign" : 535626966,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 237245813966,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [qoh#0 ASC NULLS FIRST, i_product_name#79 ASC NULLS FIRST, i_brand#80 ASC NULLS FIRST, i_class#81 ASC NULLS FIRST, i_category#82 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : 585391782,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 3810,
          "rowCount" : 15,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [w_warehouse_sk#55, w_warehouse_id#56, w_warehouse_name#57, w_warehouse_sq_ft#58, w_street_number#59, w_street_name#60, w_street_type#61, w_suite_number#62, w_city#63, w_county#64, w_state#65, w_zip#66, w_country#67, w_gmt_offset#68], `spark_catalog`.`tpcds_100`.`warehouse`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "7" : {
          "sign" : 740827529,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7094798496,
          "rowCount" : 443424906,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_quantity_on_hand#3] "
        },
        "3" : {
          "sign" : 158658835,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 237245813966,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_product_name#79, i_brand#80, i_class#81, i_category#82, spark_grouping_id#78L], [i_product_name#79, i_brand#80, i_class#81, i_category#82, avg(inv_quantity_on_hand#3) AS qoh#0] "
        }
      },
      "links" : [ {
        "fromId" : 12,
        "fromName" : "LogicalRelation",
        "toId" : 11,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 11,
        "fromName" : "Filter",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "LogicalRelation",
        "toId" : 17,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Filter",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "LogicalRelation",
        "toId" : 20,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Filter",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Expand",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Expand",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#0 ASC NULLS FIRST, i_product_name#79 ASC NULLS FIRST, i_brand#80 ASC NULLS FIRST, i_class#81 ASC NULLS FIRST, i_category#82 ASC NULLS FIRST], true\n      +- Aggregate [i_product_name#79, i_brand#80, i_class#81, i_category#82, spark_grouping_id#78L], [i_product_name#79, i_brand#80, i_class#81, i_category#82, avg(inv_quantity_on_hand#3) AS qoh#0]\n         +- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#79, i_brand#80, i_class#81, i_category#82, spark_grouping_id#78L]\n            +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n               +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n                  :- Project [inv_item_sk#1, inv_quantity_on_hand#3]\n                  :  +- Join Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55)\n                  :     :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n                  :     :  +- Join Inner, (inv_date_sk#4 = d_date_sk#5)\n                  :     :     :- Filter (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#88 [inv_date_sk#4])\n                  :     :     :  :  +- Project [d_date_sk#5]\n                  :     :     :  :     +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n                  :     :     :  :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n                  :     :     :  +- Relation spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] parquet\n                  :     :     +- Project [d_date_sk#5]\n                  :     :        +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n                  :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n                  :     +- Project [w_warehouse_sk#55]\n                  :        +- Filter isnotnull(w_warehouse_sk#55)\n                  :           +- Relation spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55,w_warehouse_id#56,w_warehouse_name#57,w_warehouse_sq_ft#58,w_street_number#59,w_street_name#60,w_street_type#61,w_suite_number#62,w_city#63,w_county#64,w_state#65,w_zip#66,w_country#67,w_gmt_offset#68] parquet\n                  +- Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54]\n                     +- Filter isnotnull(i_item_sk#33)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#33,i_item_id#34,i_rec_start_date#35,i_rec_end_date#36,i_item_desc#37,i_current_price#38,i_wholesale_cost#39,i_brand_id#40,i_brand#41,i_class_id#42,i_class#43,i_category_id#44,i_category#45,i_manufact_id#46,i_manufact#47,i_size#48,i_formulation#49,i_color#50,i_units#51,i_container#52,i_manager_id#53,i_product_name#54] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 9688797864,
      "inputRowCount" : 399607064
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "4" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 246250746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23088264,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2 "
          },
          "4" : {
            "sign" : -411360057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 8115120000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] "
          },
          "5" : {
            "sign" : -1936039655,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1493182080000000,
            "rowCount" : 16230240000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] "
          },
          "6" : {
            "sign" : -1166241791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1623024000000000,
            "rowCount" : 16230240000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_item_sk#1 = i_item_sk#33) "
          },
          "1" : {
            "sign" : 144599912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 7790515200000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1246117159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1856260285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 7790515200000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 975986587,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1909440000,
            "rowCount" : 79560000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [inv_item_sk#1, inv_quantity_on_hand#3], ShuffleQueryStage 3 "
          },
          "3" : {
            "sign" : -1293196324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7790515200000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true\n      +- Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89]\n         +- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n            +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n               +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n                  :- LogicalQueryStage Project [inv_item_sk#1, inv_quantity_on_hand#3], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1932528264,
        "inputRowCount" : 79764000
      },
      "PD" : {
        "1" : [ 4172151, 4172151, 4164490, 4172151, 4172151, 3858450, 4580933, 3792870, 3792870, 4580933, 4172151, 3792870, 4580933, 4164490, 4172151, 4172151, 4580933, 4580933, 4589362, 4589362, 4580933, 4580933, 4172151, 4172151, 4196197, 4172151, 4172151, 4172151, 4172151, 4164490, 5039029, 4172151, 4580933, 4164490, 4484749, 4172151, 4164490, 3792870, 3792870, 4589362, 4172151, 4172151, 4164490, 4580933, 4172151, 4196197, 4580933, 4164490, 4164490, 4580933, 4589362, 4589362, 4164490, 4580933, 4172151, 4580933, 4580933, 4580933, 4164490, 4268335, 4164490, 4172151, 4172151, 4589362, 4436657, 4172151, 4580933, 4172151, 4172151, 4172151, 4556887, 4172151, 4580933, 4172151, 4172151, 4172151, 4164490, 4172151, 4172151, 4164490, 4172151, 3792870, 4580933, 4172151, 4172151, 4172151, 4164490, 4589362, 4580933, 4172151, 4580933, 4164490, 4172151, 4164490, 4172151, 4172151, 4172151, 4172151, 4580933, 4172151, 4172151, 4172151, 4172151, 4589362, 4172151, 4172151, 4172151, 4589362, 4172151, 4172151, 4172151, 4580933, 4164490, 4589362, 3792870, 4172151, 4172151, 4164490, 4164490, 4244289, 4172151, 4172151, 4589362, 4172151, 4172151, 4580933, 4220243, 3785904, 4172151, 4172151, 4172151, 4172151, 4580933, 4172151, 4172151, 4460703, 4172151, 4172151, 4172151, 4164490, 4172151, 4172151, 4580933, 4172151, 4172151, 4172151, 4164490, 4172151, 4589362, 4580933, 4172151, 3792870, 4508795, 4172151, 4484749, 5039029, 4580933, 4580933, 4164490, 4164490, 4164490, 4556887, 4164490, 4172151, 4580933, 4172151, 4172151, 4164490, 4412611, 4172151, 3792870, 4580933, 4580933, 4172151, 4580933, 4164490, 3792870, 4164490, 4172151, 4172151, 4172151, 4580933, 4164490, 4172151, 5039029, 4589362, 4164490, 4580933, 4172151, 4164490, 4164490, 4172151, 4580933, 4164490, 4172151, 4164490, 4172151, 4172151, 4589362, 4172151 ],
        "0" : [ 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 47574, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226694274,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 13071,
        "IOBytes" : {
          "Total" : 867718913,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 848746602,
            "SW" : 18972311
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -824763712,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1219040177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 45930400,
            "rowCount" : 407622,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 869339606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 45930400,
            "rowCount" : 407622,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 418507419,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 45930400,
            "rowCount" : 407622,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89], HashAggregate(keys=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], functions=[avg(inv_quantity_on_hand#3)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89], HashAggregate(keys=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], functions=[avg(inv_quantity_on_hand#3)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 45930400,
        "inputRowCount" : 407622
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226706615,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 730,
        "IOBytes" : {
          "Total" : 18972311,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 18972311,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1600338469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 9583920000,
            "rowCount" : 399330000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4], `spark_catalog`.`tpcds_100`.`inventory`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 1520739850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 140681247840,
            "rowCount" : 5861718660,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55) "
          },
          "4" : {
            "sign" : 1992665940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 247131056215,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] "
          },
          "15" : {
            "sign" : -2091433554,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5, d_date_id#6, d_date#7, d_month_seq#8, d_week_seq#9, d_quarter_seq#10, d_year#11, d_dow#12, d_moy#13, d_dom#14, d_qoy#15, d_fy_year#16, d_fy_quarter_seq#17, d_fy_week_seq#18, d_day_name#19, d_quarter_name#20, d_holiday#21, d_weekend#22, d_following_holiday#23, d_first_dom#24, d_last_dom#25, d_same_day_ly#26, d_same_day_lq#27, d_current_day#28, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : 1807728173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 9583920000,
            "rowCount" : 399330000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4]) "
          },
          "9" : {
            "sign" : -1406192938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7815624880,
            "rowCount" : 390781244,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3] "
          },
          "13" : {
            "sign" : -1384254787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#5] "
          },
          "16" : {
            "sign" : 123801511,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#5], BroadcastQueryStage 0 "
          },
          "5" : {
            "sign" : -477317548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 45472114344,
            "rowCount" : 398878196,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] "
          },
          "10" : {
            "sign" : -1854030733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10941874832,
            "rowCount" : 390781244,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_date_sk#4 = d_date_sk#5) "
          },
          "6" : {
            "sign" : 1912878542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48663139912,
            "rowCount" : 398878196,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_item_sk#1 = i_item_sk#33) "
          },
          "1" : {
            "sign" : 1699199075,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1246152801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048696,
            "rowCount" : 15,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [w_warehouse_sk#55], BroadcastQueryStage 1 "
          },
          "14" : {
            "sign" : 649924584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5)) "
          },
          "0" : {
            "sign" : 561322804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1624104458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 246250746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2 "
          },
          "7" : {
            "sign" : 501882198,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 93787498560,
            "rowCount" : 5861718660,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_quantity_on_hand#3] "
          },
          "3" : {
            "sign" : -1488577513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true\n      +- Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89]\n         +- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n            +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n               +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n                  :- Project [inv_item_sk#1, inv_quantity_on_hand#3]\n                  :  +- Join Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55)\n                  :     :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n                  :     :  +- Join Inner, (inv_date_sk#4 = d_date_sk#5)\n                  :     :     :- Filter (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4])\n                  :     :     :  :  +- Project [d_date_sk#5]\n                  :     :     :  :     +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n                  :     :     :  :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n                  :     :     :  +- Relation spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] parquet\n                  :     :     +- LogicalQueryStage Project [d_date_sk#5], BroadcastQueryStage 0\n                  :     +- LogicalQueryStage Project [w_warehouse_sk#55], BroadcastQueryStage 1\n                  +- LogicalQueryStage Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9608228728,
        "inputRowCount" : 399534351
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5103.0,
        "FinishedTasksDistributionInMs" : [ 1231.0, 1267.0, 1294.0, 1311.0, 1311.0 ]
      },
      "StartTimeInMs" : 1702226690552,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16793,
        "IOBytes" : {
          "Total" : 2121670365,
          "Details" : {
            "IR" : 424177161,
            "IW" : 0,
            "SR" : 848746602,
            "SW" : 848746602
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1600338469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 9583920000,
            "rowCount" : 399330000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4], `spark_catalog`.`tpcds_100`.`inventory`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : 1520739850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 52471962000000,
            "rowCount" : 2186331750000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55) "
          },
          "4" : {
            "sign" : 1992665940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 247131056215,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] "
          },
          "15" : {
            "sign" : -2091433554,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5, d_date_id#6, d_date#7, d_month_seq#8, d_week_seq#9, d_quarter_seq#10, d_year#11, d_dow#12, d_moy#13, d_dom#14, d_qoy#15, d_fy_year#16, d_fy_quarter_seq#17, d_fy_week_seq#18, d_day_name#19, d_quarter_name#20, d_holiday#21, d_weekend#22, d_following_holiday#23, d_first_dom#24, d_last_dom#25, d_same_day_ly#26, d_same_day_lq#27, d_current_day#28, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : 1807728173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 9583920000,
            "rowCount" : 399330000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4]) "
          },
          "9" : {
            "sign" : -1406192938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2915109000000,
            "rowCount" : 145755450000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3] "
          },
          "13" : {
            "sign" : -1384254787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#5] "
          },
          "16" : {
            "sign" : 123801511,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#5], BroadcastQueryStage 0 "
          },
          "5" : {
            "sign" : -477317548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 45472114344,
            "rowCount" : 398878196,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] "
          },
          "10" : {
            "sign" : -1854030733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4081152600000,
            "rowCount" : 145755450000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_date_sk#4 = d_date_sk#5) "
          },
          "6" : {
            "sign" : 1912878542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 48663139912,
            "rowCount" : 398878196,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_item_sk#1 = i_item_sk#33) "
          },
          "1" : {
            "sign" : 1699199075,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1246152801,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048696,
            "rowCount" : 15,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [w_warehouse_sk#55], BroadcastQueryStage 1 "
          },
          "14" : {
            "sign" : 649924584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5)) "
          },
          "0" : {
            "sign" : 561322804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1624104458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 246250746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2 "
          },
          "7" : {
            "sign" : 501882198,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 34981308000000,
            "rowCount" : 2186331750000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_quantity_on_hand#3] "
          },
          "3" : {
            "sign" : -1488577513,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true\n      +- Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89]\n         +- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n            +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n               +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n                  :- Project [inv_item_sk#1, inv_quantity_on_hand#3]\n                  :  +- Join Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55)\n                  :     :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n                  :     :  +- Join Inner, (inv_date_sk#4 = d_date_sk#5)\n                  :     :     :- Filter (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4])\n                  :     :     :  :  +- Project [d_date_sk#5]\n                  :     :     :  :     +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n                  :     :     :  :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n                  :     :     :  +- Relation spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] parquet\n                  :     :     +- LogicalQueryStage Project [d_date_sk#5], BroadcastQueryStage 0\n                  :     +- LogicalQueryStage Project [w_warehouse_sk#55], BroadcastQueryStage 1\n                  +- LogicalQueryStage Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9609276192,
        "inputRowCount" : 399534380
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5103.0,
        "FinishedTasksDistributionInMs" : [ 1231.0, 1267.0, 1294.0, 1311.0, 1311.0 ]
      },
      "StartTimeInMs" : 1702226690595,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16750,
        "IOBytes" : {
          "Total" : 2121670365,
          "Details" : {
            "IR" : 424177161,
            "IW" : 0,
            "SR" : 848746602,
            "SW" : 848746602
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 246250746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23088264,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2 "
          },
          "4" : {
            "sign" : -411360057,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 45229340412000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] "
          },
          "5" : {
            "sign" : -1936039655,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8322198635808000,
            "rowCount" : 90458680824000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] "
          },
          "6" : {
            "sign" : -1166241791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9045868082400000,
            "rowCount" : 90458680824000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_item_sk#1 = i_item_sk#33) "
          },
          "1" : {
            "sign" : 144599912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 43420166795520000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1246117159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1856260285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 43420166795520000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 975986587,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7094798496,
            "rowCount" : 443424906,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [inv_item_sk#1, inv_quantity_on_hand#3], ShuffleQueryStage 3 "
          },
          "3" : {
            "sign" : -1293196324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 43420166795520000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true\n      +- Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89]\n         +- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n            +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n               +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n                  :- LogicalQueryStage Project [inv_item_sk#1, inv_quantity_on_hand#3], ShuffleQueryStage 3\n                  +- LogicalQueryStage Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54], ShuffleQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7117886760,
        "inputRowCount" : 443628906
      },
      "PD" : {
        "0" : [ 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 47574, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226690966,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16379,
        "IOBytes" : {
          "Total" : 2108462288,
          "Details" : {
            "IR" : 421265693,
            "IW" : 0,
            "SR" : 848746602,
            "SW" : 838449993
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 366309535,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 237245813966,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 237245813966,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89] "
          },
          "1" : {
            "sign" : -1423626348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 247131056215,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 247131056215,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] "
          },
          "2" : {
            "sign" : -695207934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45472114344,
                "rowCount" : 398878196
              },
              "compileTime" : {
                "sizeInBytes" : 45472114344,
                "rowCount" : 398878196
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] "
          },
          "3" : {
            "sign" : -1790506854,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 48663139912,
                "rowCount" : 398878196
              },
              "compileTime" : {
                "sizeInBytes" : 48663139912,
                "rowCount" : 398878196
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_item_sk#1 = i_item_sk#33) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89]\n+- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n   +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n      +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n         :- Project [inv_item_sk#1, inv_quantity_on_hand#3]\n         :  +- Join Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55)\n         :     :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n         :     :  +- Join Inner, (inv_date_sk#4 = d_date_sk#5)\n         :     :     :- Filter (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4])\n         :     :     :  :  +- Project [d_date_sk#5]\n         :     :     :  :     +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n         :     :     :  :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n         :     :     :  +- Relation spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] parquet\n         :     :     +- Project [d_date_sk#5]\n         :     :        +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n         :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n         :     +- Project [w_warehouse_sk#55]\n         :        +- Filter isnotnull(w_warehouse_sk#55)\n         :           +- Relation spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55,w_warehouse_id#56,w_warehouse_name#57,w_warehouse_sq_ft#58,w_street_number#59,w_street_name#60,w_street_type#61,w_suite_number#62,w_city#63,w_county#64,w_state#65,w_zip#66,w_country#67,w_gmt_offset#68] parquet\n         +- Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54]\n            +- Filter isnotnull(i_item_sk#33)\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#33,i_item_id#34,i_rec_start_date#35,i_rec_end_date#36,i_item_desc#37,i_current_price#38,i_wholesale_cost#39,i_brand_id#40,i_brand#41,i_class_id#42,i_class#43,i_category_id#44,i_category#45,i_manufact_id#46,i_manufact#47,i_size#48,i_formulation#49,i_color#50,i_units#51,i_container#52,i_manager_id#53,i_product_name#54] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -852965566,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [inv_item_sk#1, inv_quantity_on_hand#3] Arguments: [inv_item_sk#1 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : -76485738,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1909440000,
            "rowCount" : 79560000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [inv_item_sk#1, inv_quantity_on_hand#3] Arguments: 3 "
          },
          "6" : {
            "sign" : -1499685009,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] Arguments: [i_item_sk#33 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -1216450805,
            "className" : "org.apache.spark.sql.execution.ExpandExec",
            "sizeInBytes" : 247131056215,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Input [5]: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] Arguments: [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] "
          },
          "0" : {
            "sign" : -1639650359,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [6]: [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] Keys [5]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] Functions [1]: [partial_avg(inv_quantity_on_hand#3)] Aggregate Attributes [2]: [sum#106, count#107L] Results [7]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L, sum#108, count#109L] "
          },
          "2" : {
            "sign" : 1817779045,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 45472114344,
            "rowCount" : 398878196,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45] Input [7]: [inv_item_sk#1, inv_quantity_on_hand#3, i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] "
          },
          "7" : {
            "sign" : 1183166918,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 23088264,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] Arguments: 2 "
          },
          "3" : {
            "sign" : -1556129723,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 48663139912,
            "rowCount" : 398878196,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [inv_item_sk#1] Right keys [1]: [i_item_sk#33] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], functions=[partial_avg(inv_quantity_on_hand#3)], output=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L, sum#108, count#109L])\n+- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n   +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n      +- SortMergeJoin [inv_item_sk#1], [i_item_sk#33], Inner\n         :- Sort [inv_item_sk#1 ASC NULLS FIRST], false, 0\n         :  +- ShuffleQueryStage 3\n         :     +- Exchange hashpartitioning(inv_item_sk#1, 200), ENSURE_REQUIREMENTS, [plan_id=445]\n         :        +- *(4) Project [inv_item_sk#1, inv_quantity_on_hand#3]\n         :           +- *(4) BroadcastHashJoin [inv_warehouse_sk#2], [w_warehouse_sk#55], Inner, BuildRight, false\n         :              :- *(4) Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n         :              :  +- *(4) BroadcastHashJoin [inv_date_sk#4], [d_date_sk#5], Inner, BuildRight, false\n         :              :     :- *(4) Filter (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))\n         :              :     :  +- *(4) ColumnarToRow\n         :              :     :     +- FileScan parquet spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] Batched: true, DataFilters: [isnotnull(inv_item_sk#1), isnotnull(inv_warehouse_sk#2)], Format: Parquet, Location: InMemoryFileIndex(261 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/invento..., PartitionFilters: [isnotnull(inv_date_sk#4), dynamicpruningexpression(inv_date_sk#4 IN dynamicpruning#105)], PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>\n         :              :     :           +- SubqueryBroadcast dynamicpruning#105, 0, [d_date_sk#5], [id=#408]\n         :              :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   BroadcastQueryStage 1\n                                                   +- ReusedExchange [d_date_sk#5], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=180]\n                                                +- == Initial Plan ==\n                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=405]\n                                                   +- Project [d_date_sk#5]\n                                                      +- Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n         :              :     +- BroadcastQueryStage 0\n         :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=180]\n         :              :           +- *(1) Project [d_date_sk#5]\n         :              :              +- *(1) Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n         :              :                 +- *(1) ColumnarToRow\n         :              :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n         :              +- BroadcastQueryStage 1\n         :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=199]\n         :                    +- *(2) Filter isnotnull(w_warehouse_sk#55)\n         :                       +- *(2) ColumnarToRow\n         :                          +- FileScan parquet spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int>\n         +- Sort [i_item_sk#33 ASC NULLS FIRST], false, 0\n            +- ShuffleQueryStage 2\n               +- Exchange hashpartitioning(i_item_sk#33, 200), ENSURE_REQUIREMENTS, [plan_id=218]\n                  +- *(3) Filter isnotnull(i_item_sk#33)\n                     +- *(3) ColumnarToRow\n                        +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#33,i_brand#41,i_class#43,i_category#45,i_product_name#54] Batched: true, DataFilters: [isnotnull(i_item_sk#33)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1932528264,
        "inputRowCount" : 79764000
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "1" : [ 4172151, 4172151, 4164490, 4172151, 4172151, 3858450, 4580933, 3792870, 3792870, 4580933, 4172151, 3792870, 4580933, 4164490, 4172151, 4172151, 4580933, 4580933, 4589362, 4589362, 4580933, 4580933, 4172151, 4172151, 4196197, 4172151, 4172151, 4172151, 4172151, 4164490, 5039029, 4172151, 4580933, 4164490, 4484749, 4172151, 4164490, 3792870, 3792870, 4589362, 4172151, 4172151, 4164490, 4580933, 4172151, 4196197, 4580933, 4164490, 4164490, 4580933, 4589362, 4589362, 4164490, 4580933, 4172151, 4580933, 4580933, 4580933, 4164490, 4268335, 4164490, 4172151, 4172151, 4589362, 4436657, 4172151, 4580933, 4172151, 4172151, 4172151, 4556887, 4172151, 4580933, 4172151, 4172151, 4172151, 4164490, 4172151, 4172151, 4164490, 4172151, 3792870, 4580933, 4172151, 4172151, 4172151, 4164490, 4589362, 4580933, 4172151, 4580933, 4164490, 4172151, 4164490, 4172151, 4172151, 4172151, 4172151, 4580933, 4172151, 4172151, 4172151, 4172151, 4589362, 4172151, 4172151, 4172151, 4589362, 4172151, 4172151, 4172151, 4580933, 4164490, 4589362, 3792870, 4172151, 4172151, 4164490, 4164490, 4244289, 4172151, 4172151, 4589362, 4172151, 4172151, 4580933, 4220243, 3785904, 4172151, 4172151, 4172151, 4172151, 4580933, 4172151, 4172151, 4460703, 4172151, 4172151, 4172151, 4164490, 4172151, 4172151, 4580933, 4172151, 4172151, 4172151, 4164490, 4172151, 4589362, 4580933, 4172151, 3792870, 4508795, 4172151, 4484749, 5039029, 4580933, 4580933, 4164490, 4164490, 4164490, 4556887, 4164490, 4172151, 4580933, 4172151, 4172151, 4164490, 4412611, 4172151, 3792870, 4580933, 4580933, 4172151, 4580933, 4164490, 3792870, 4164490, 4172151, 4172151, 4172151, 4580933, 4164490, 4172151, 5039029, 4589362, 4164490, 4580933, 4172151, 4164490, 4164490, 4172151, 4580933, 4164490, 4172151, 4164490, 4172151, 4172151, 4589362, 4172151 ],
        "0" : [ 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 47574, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 11972,
        "TotalTasksDurationInMs" : 137208,
        "IOBytes" : {
          "Total" : 848746602,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 829774291,
            "SW" : 18972311
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1412071116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9600,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 9600,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1887358573,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 237245813966,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 237245813966,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1828233890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 237245813966,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 237245813966,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], true\n      +- Aggregate [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3) AS qoh#89]\n         +- Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n            +- Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n               +- Join Inner, (inv_item_sk#1 = i_item_sk#33)\n                  :- Project [inv_item_sk#1, inv_quantity_on_hand#3]\n                  :  +- Join Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55)\n                  :     :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n                  :     :  +- Join Inner, (inv_date_sk#4 = d_date_sk#5)\n                  :     :     :- Filter (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4])\n                  :     :     :  :  +- Project [d_date_sk#5]\n                  :     :     :  :     +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n                  :     :     :  :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n                  :     :     :  +- Relation spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] parquet\n                  :     :     +- Project [d_date_sk#5]\n                  :     :        +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n                  :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n                  :     +- Project [w_warehouse_sk#55]\n                  :        +- Filter isnotnull(w_warehouse_sk#55)\n                  :           +- Relation spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55,w_warehouse_id#56,w_warehouse_name#57,w_warehouse_sq_ft#58,w_street_number#59,w_street_name#60,w_street_type#61,w_suite_number#62,w_city#63,w_county#64,w_state#65,w_zip#66,w_country#67,w_gmt_offset#68] parquet\n                  +- Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54]\n                     +- Filter isnotnull(i_item_sk#33)\n                        +- Relation spark_catalog.tpcds_100.item[i_item_sk#33,i_item_id#34,i_rec_start_date#35,i_rec_end_date#36,i_item_desc#37,i_current_price#38,i_wholesale_cost#39,i_brand_id#40,i_brand#41,i_class_id#42,i_class#43,i_category_id#44,i_category#45,i_manufact_id#46,i_manufact#47,i_size#48,i_formulation#49,i_color#50,i_units#51,i_container#52,i_manager_id#53,i_product_name#54] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1158020022,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [5]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, qoh#89] Arguments: 100, [qoh#89 ASC NULLS FIRST, i_product_name#96 ASC NULLS FIRST, i_brand#97 ASC NULLS FIRST, i_class#98 ASC NULLS FIRST, i_category#99 ASC NULLS FIRST], [i_product_name#96, i_brand#97, i_class#98, i_category#99, qoh#89] "
          },
          "1" : {
            "sign" : -534731513,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 45930400,
            "rowCount" : 407622,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L, sum#108, count#109L] Keys [5]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L] Functions [1]: [avg(inv_quantity_on_hand#3)] Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#90] Results [5]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, avg(inv_quantity_on_hand#3)#90 AS qoh#89] "
          },
          "2" : {
            "sign" : 355803182,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 237245813966,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L, sum#108, count#109L] Arguments: 4 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[qoh#89 ASC NULLS FIRST,i_product_name#96 ASC NULLS FIRST,i_brand#97 ASC NULLS FIRST,i_class#98 ASC NULLS FIRST,i_category#99 ASC NULLS FIRST], output=[i_product_name#96,i_brand#97,i_class#98,i_category#99,qoh#89])\n+- HashAggregate(keys=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], functions=[avg(inv_quantity_on_hand#3)], output=[i_product_name#96, i_brand#97, i_class#98, i_category#99, qoh#89])\n   +- ShuffleQueryStage 4\n      +- Exchange hashpartitioning(i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L, 200), ENSURE_REQUIREMENTS, [plan_id=587]\n         +- *(7) HashAggregate(keys=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L], functions=[partial_avg(inv_quantity_on_hand#3)], output=[i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L, sum#108, count#109L])\n            +- *(7) Expand [[inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45, 0], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, null, 1], [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, null, null, 3], [inv_quantity_on_hand#3, i_product_name#54, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#96, i_brand#97, i_class#98, i_category#99, spark_grouping_id#95L]\n               +- *(7) Project [inv_quantity_on_hand#3, i_product_name#54, i_brand#41, i_class#43, i_category#45]\n                  +- *(7) SortMergeJoin [inv_item_sk#1], [i_item_sk#33], Inner\n                     :- *(5) Sort [inv_item_sk#1 ASC NULLS FIRST], false, 0\n                     :  +- AQEShuffleRead coalesced\n                     :     +- ShuffleQueryStage 3\n                     :        +- Exchange hashpartitioning(inv_item_sk#1, 200), ENSURE_REQUIREMENTS, [plan_id=445]\n                     :           +- *(4) Project [inv_item_sk#1, inv_quantity_on_hand#3]\n                     :              +- *(4) BroadcastHashJoin [inv_warehouse_sk#2], [w_warehouse_sk#55], Inner, BuildRight, false\n                     :                 :- *(4) Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n                     :                 :  +- *(4) BroadcastHashJoin [inv_date_sk#4], [d_date_sk#5], Inner, BuildRight, false\n                     :                 :     :- *(4) Filter (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))\n                     :                 :     :  +- *(4) ColumnarToRow\n                     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] Batched: true, DataFilters: [isnotnull(inv_item_sk#1), isnotnull(inv_warehouse_sk#2)], Format: Parquet, Location: InMemoryFileIndex(261 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/invento..., PartitionFilters: [isnotnull(inv_date_sk#4), dynamicpruningexpression(inv_date_sk#4 IN dynamicpruning#105)], PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>\n                     :                 :     :           +- SubqueryBroadcast dynamicpruning#105, 0, [d_date_sk#5], [id=#408]\n                     :                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                               +- == Final Plan ==\n                                                                  BroadcastQueryStage 1\n                                                                  +- ReusedExchange [d_date_sk#5], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=180]\n                                                               +- == Initial Plan ==\n                                                                  BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=405]\n                                                                  +- Project [d_date_sk#5]\n                                                                     +- Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n                                                                        +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n                     :                 :     +- BroadcastQueryStage 0\n                     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=180]\n                     :                 :           +- *(1) Project [d_date_sk#5]\n                     :                 :              +- *(1) Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n                     :                 :                 +- *(1) ColumnarToRow\n                     :                 :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n                     :                 +- BroadcastQueryStage 1\n                     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=199]\n                     :                       +- *(2) Filter isnotnull(w_warehouse_sk#55)\n                     :                          +- *(2) ColumnarToRow\n                     :                             +- FileScan parquet spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int>\n                     +- *(6) Sort [i_item_sk#33 ASC NULLS FIRST], false, 0\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 2\n                              +- Exchange hashpartitioning(i_item_sk#33, 200), ENSURE_REQUIREMENTS, [plan_id=218]\n                                 +- *(3) Filter isnotnull(i_item_sk#33)\n                                    +- *(3) ColumnarToRow\n                                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#33,i_brand#41,i_class#43,i_category#45,i_product_name#54] Batched: true, DataFilters: [isnotnull(i_item_sk#33)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 45930400,
        "inputRowCount" : 407622
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "2" : [ 99804, 95300, 102703, 98991, 100369, 95600, 98064, 96142, 99733, 98020, 97669, 99299, 95163, 98946, 100835, 98506, 95782, 100681, 99797, 98727, 98454, 95742, 98113, 102198, 99026, 98184, 98113, 98656, 100141, 102134, 98319, 99370, 98842, 99485, 96355, 95536, 101054, 100855, 98663, 98592, 100906, 99733, 98624, 98778, 101790, 99991, 100855, 98013, 95956, 99935, 97461, 99026, 102717, 99935, 100834, 100855, 101041, 98236, 98383, 102912, 101491, 97092, 103368, 97936, 98506, 98071, 96014, 100234, 97605, 96464, 104475, 101678, 101218, 96773, 98297, 98656, 99832, 97593, 99026, 100970, 100970, 98778, 99669, 100578, 99026, 97171, 98348, 100241, 100263, 99097, 99991, 99527, 100241, 102568, 99534, 98955, 100212, 96962, 97541, 96763, 96950, 100263, 99363, 98820, 96714, 99363, 100784, 100440, 101083, 95139, 104089, 99260, 99299, 98521, 100809, 101282, 99026, 100192, 101626, 95892, 100006, 98200, 101996, 98383, 101342, 100511, 96014, 98319, 96464, 105953, 98547, 94893, 100710, 101861, 98784, 102063, 102433, 98383, 101356, 98756, 99662, 102198, 100226, 101498, 100031, 95164, 100192, 98297, 101684, 96127, 101228, 97293, 101083, 99026, 97612, 96120, 98554, 103339, 99485, 99662, 98013, 102770, 100192, 98752, 98319, 102774, 97910, 98454, 105168, 101562, 102827, 103548, 101427, 98177, 100511, 97364, 103233, 99669, 100440, 100200, 100006, 101562, 98248, 101925, 101012, 98649, 98072, 98940, 98955, 100642, 97949, 100919, 101420, 95821, 100784, 100398, 96721, 97043, 97293, 104955 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 566,
        "TotalTasksDurationInMs" : 555,
        "IOBytes" : {
          "Total" : 18972311,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 18972311,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1649655326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 180,
                "rowCount" : 15
              },
              "compileTime" : {
                "sizeInBytes" : 180,
                "rowCount" : 15
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [w_warehouse_sk#55] "
          },
          "1" : {
            "sign" : 1620333648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3810,
                "rowCount" : 15
              },
              "compileTime" : {
                "sizeInBytes" : 3810,
                "rowCount" : 15
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(w_warehouse_sk#55) "
          },
          "2" : {
            "sign" : 585391782,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3810,
                "rowCount" : 15
              },
              "compileTime" : {
                "sizeInBytes" : 3810,
                "rowCount" : 15
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [w_warehouse_sk#55, w_warehouse_id#56, w_warehouse_name#57, w_warehouse_sq_ft#58, w_street_number#59, w_street_name#60, w_street_type#61, w_suite_number#62, w_city#63, w_county#64, w_state#65, w_zip#66, w_country#67, w_gmt_offset#68], `spark_catalog`.`tpcds_100`.`warehouse`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [w_warehouse_sk#55]\n+- Filter isnotnull(w_warehouse_sk#55)\n   +- Relation spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55,w_warehouse_id#56,w_warehouse_name#57,w_warehouse_sq_ft#58,w_street_number#59,w_street_name#60,w_street_type#61,w_suite_number#62,w_city#63,w_county#64,w_state#65,w_zip#66,w_country#67,w_gmt_offset#68] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 256235034,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 180,
            "rowCount" : 15,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [1]: [w_warehouse_sk#55] Condition : isnotnull(w_warehouse_sk#55) "
          },
          "1" : {
            "sign" : 327398916,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 180,
            "rowCount" : 15,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.warehouse Output [1]: [w_warehouse_sk#55] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/warehouse] PushedFilters: [IsNotNull(w_warehouse_sk)] ReadSchema: struct<w_warehouse_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.warehouse",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(w_warehouse_sk#55)\n+- FileScan parquet spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 180,
        "inputRowCount" : 15
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1355,
        "TotalTasksDurationInMs" : 1351,
        "IOBytes" : {
          "Total" : 5946,
          "Details" : {
            "IR" : 5946,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1384254787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4032,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 4032,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#5] "
          },
          "1" : {
            "sign" : 649924584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5)) "
          },
          "2" : {
            "sign" : -2091433554,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#5, d_date_id#6, d_date#7, d_month_seq#8, d_week_seq#9, d_quarter_seq#10, d_year#11, d_dow#12, d_moy#13, d_dom#14, d_qoy#15, d_fy_year#16, d_fy_quarter_seq#17, d_fy_week_seq#18, d_day_name#19, d_quarter_name#20, d_holiday#21, d_weekend#22, d_following_holiday#23, d_first_dom#24, d_last_dom#25, d_same_day_ly#26, d_same_day_lq#27, d_current_day#28, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#5]\n+- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -2025151347,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#5] Input [2]: [d_date_sk#5, d_month_seq#8] "
          },
          "1" : {
            "sign" : 1830611430,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#5, d_month_seq#8] Condition : (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5)) "
          },
          "2" : {
            "sign" : -666491250,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4032,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#5, d_month_seq#8] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_month_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#5]\n+- Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4032,
        "inputRowCount" : 336
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1406,
        "TotalTasksDurationInMs" : 1402,
        "IOBytes" : {
          "Total" : 112967,
          "Details" : {
            "IR" : 112967,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 821338385,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23256000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 23256000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] "
          },
          "1" : {
            "sign" : 1517198477,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#33) "
          },
          "2" : {
            "sign" : 468025845,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#33, i_item_id#34, i_rec_start_date#35, i_rec_end_date#36, i_item_desc#37, i_current_price#38, i_wholesale_cost#39, i_brand_id#40, i_brand#41, i_class_id#42, i_class#43, i_category_id#44, i_category#45, i_manufact_id#46, i_manufact#47, i_size#48, i_formulation#49, i_color#50, i_units#51, i_container#52, i_manager_id#53, i_product_name#54], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54]\n+- Filter isnotnull(i_item_sk#33)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#33,i_item_id#34,i_rec_start_date#35,i_rec_end_date#36,i_item_desc#37,i_current_price#38,i_wholesale_cost#39,i_brand_id#40,i_brand#41,i_class_id#42,i_class#43,i_category_id#44,i_category#45,i_manufact_id#46,i_manufact#47,i_size#48,i_formulation#49,i_color#50,i_units#51,i_container#52,i_manager_id#53,i_product_name#54] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 906451442,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] Condition : isnotnull(i_item_sk#33) "
          },
          "1" : {
            "sign" : 726806922,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [5]: [i_item_sk#33, i_brand#41, i_class#43, i_category#45, i_product_name#54] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#33)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#33,i_brand#41,i_class#43,i_category#45,i_product_name#54] Batched: true, DataFilters: [isnotnull(i_item_sk#33)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23256000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 1859,
        "TotalTasksDurationInMs" : 6931,
        "IOBytes" : {
          "Total" : 13208077,
          "Details" : {
            "IR" : 2911468,
            "IW" : 0,
            "SR" : 0,
            "SW" : 10296609
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1807728173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9583920000,
                "rowCount" : 399330000
              },
              "compileTime" : {
                "sizeInBytes" : 9583920000,
                "rowCount" : 399330000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4]) "
          },
          "5" : {
            "sign" : 1600338469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9583920000,
                "rowCount" : 399330000
              },
              "compileTime" : {
                "sizeInBytes" : 9583920000,
                "rowCount" : 399330000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4], `spark_catalog`.`tpcds_100`.`inventory`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1931004775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10642197744,
                "rowCount" : 443424906
              },
              "compileTime" : {
                "sizeInBytes" : 10642197744,
                "rowCount" : 443424906
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55) "
          },
          "0" : {
            "sign" : -1432452435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7094798496,
                "rowCount" : 443424906
              },
              "compileTime" : {
                "sizeInBytes" : 7094798496,
                "rowCount" : 443424906
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_quantity_on_hand#3] "
          },
          "2" : {
            "sign" : 1447124460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7815624880,
                "rowCount" : 390781244
              },
              "compileTime" : {
                "sizeInBytes" : 7815624880,
                "rowCount" : 390781244
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3] "
          },
          "3" : {
            "sign" : 28060797,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10941874832,
                "rowCount" : 390781244
              },
              "compileTime" : {
                "sizeInBytes" : 10941874832,
                "rowCount" : 390781244
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (inv_date_sk#4 = d_date_sk#5) "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalRelation",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [inv_item_sk#1, inv_quantity_on_hand#3]\n+- Join Inner, (inv_warehouse_sk#2 = w_warehouse_sk#55)\n   :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n   :  +- Join Inner, (inv_date_sk#4 = d_date_sk#5)\n   :     :- Filter (((isnotnull(inv_date_sk#4) AND isnotnull(inv_item_sk#1)) AND isnotnull(inv_warehouse_sk#2)) AND dynamicpruning#105 [inv_date_sk#4])\n   :     :  :  +- Project [d_date_sk#5]\n   :     :  :     +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n   :     :  :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n   :     :  +- Relation spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] parquet\n   :     +- Project [d_date_sk#5]\n   :        +- Filter ((isnotnull(d_month_seq#8) AND ((d_month_seq#8 >= 1212) AND (d_month_seq#8 <= 1223))) AND isnotnull(d_date_sk#5))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_date_id#6,d_date#7,d_month_seq#8,d_week_seq#9,d_quarter_seq#10,d_year#11,d_dow#12,d_moy#13,d_dom#14,d_qoy#15,d_fy_year#16,d_fy_quarter_seq#17,d_fy_week_seq#18,d_day_name#19,d_quarter_name#20,d_holiday#21,d_weekend#22,d_following_holiday#23,d_first_dom#24,d_last_dom#25,d_same_day_ly#26,d_same_day_lq#27,d_current_day#28,... 4 more fields] parquet\n   +- Project [w_warehouse_sk#55]\n      +- Filter isnotnull(w_warehouse_sk#55)\n         +- Relation spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55,w_warehouse_id#56,w_warehouse_name#57,w_warehouse_sq_ft#58,w_street_number#59,w_street_name#60,w_street_type#61,w_suite_number#62,w_city#63,w_county#64,w_state#65,w_zip#66,w_country#67,w_gmt_offset#68] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -505054037,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9583920000,
            "rowCount" : 399330000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4] Condition : (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2)) "
          },
          "5" : {
            "sign" : -313029256,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9583920000,
            "rowCount" : 399330000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.inventory Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/inventory/inv_date_sk=2450815, ... 260 entries] PartitionFilters: [isnotnull(inv_date_sk#4), dynamicpruningexpression(inv_date_sk#4 IN dynamicpruning#105)] PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)] ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int> "
          },
          "6" : {
            "sign" : 2071918719,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#5] Arguments: 0 "
          },
          "1" : {
            "sign" : -1590635811,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 10642197744,
            "rowCount" : 443424906,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [inv_warehouse_sk#2] Right keys [1]: [w_warehouse_sk#55] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -579467347,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7094798496,
            "rowCount" : 443424906,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [inv_item_sk#1, inv_quantity_on_hand#3] Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, w_warehouse_sk#55] "
          },
          "2" : {
            "sign" : 1270543050,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7815624880,
            "rowCount" : 390781244,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3] Input [5]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, d_date_sk#5] "
          },
          "7" : {
            "sign" : -518732444,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048696,
            "rowCount" : 15,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [w_warehouse_sk#55] Arguments: 1 "
          },
          "3" : {
            "sign" : 1247451607,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 10941874832,
            "rowCount" : 390781244,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [inv_date_sk#4] Right keys [1]: [d_date_sk#5] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.inventory",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [inv_item_sk#1, inv_quantity_on_hand#3]\n+- BroadcastHashJoin [inv_warehouse_sk#2], [w_warehouse_sk#55], Inner, BuildRight, false\n   :- Project [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]\n   :  +- BroadcastHashJoin [inv_date_sk#4], [d_date_sk#5], Inner, BuildRight, false\n   :     :- Filter (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.inventory[inv_item_sk#1,inv_warehouse_sk#2,inv_quantity_on_hand#3,inv_date_sk#4] Batched: true, DataFilters: [isnotnull(inv_item_sk#1), isnotnull(inv_warehouse_sk#2)], Format: Parquet, Location: InMemoryFileIndex(261 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/invento..., PartitionFilters: [isnotnull(inv_date_sk#4), dynamicpruningexpression(inv_date_sk#4 IN dynamicpruning#105)], PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>\n   :     :        +- SubqueryBroadcast dynamicpruning#105, 0, [d_date_sk#5], [id=#408]\n   :     :           +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=405]\n   :     :                 +- Project [d_date_sk#5]\n   :     :                    +- Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n   :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n   :     +- BroadcastQueryStage 0\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=180]\n   :           +- *(1) Project [d_date_sk#5]\n   :              +- *(1) Filter (((isnotnull(d_month_seq#8) AND (d_month_seq#8 >= 1212)) AND (d_month_seq#8 <= 1223)) AND isnotnull(d_date_sk#5))\n   :                 +- *(1) ColumnarToRow\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#5,d_month_seq#8] Batched: true, DataFilters: [isnotnull(d_month_seq#8), (d_month_seq#8 >= 1212), (d_month_seq#8 <= 1223), isnotnull(d_date_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=199]\n         +- *(2) Filter isnotnull(w_warehouse_sk#55)\n            +- *(2) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.warehouse[w_warehouse_sk#55] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9586020192,
        "inputRowCount" : 399330380
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5103.0,
        "FinishedTasksDistributionInMs" : [ 1231.0, 1267.0, 1294.0, 1311.0, 1311.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 3477,
        "TotalTasksDurationInMs" : 45260,
        "IOBytes" : {
          "Total" : 1240743375,
          "Details" : {
            "IR" : 421265693,
            "IW" : 0,
            "SR" : 0,
            "SW" : 819477682
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226688490,
  "SQLEndTimeInMs" : 1702226707345,
  "Objectives" : {
    "DurationInMs" : 18855,
    "IOBytes" : {
      "Total" : 2121789278,
      "Details" : {
        "IR" : 424296074,
        "IW" : 0,
        "SR" : 848746602,
        "SW" : 848746602
      }
    }
  }
}
