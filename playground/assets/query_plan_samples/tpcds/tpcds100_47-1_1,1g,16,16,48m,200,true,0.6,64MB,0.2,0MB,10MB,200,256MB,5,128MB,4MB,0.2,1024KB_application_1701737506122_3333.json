{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -13651890,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#410, d_date_id#411, d_date#412, d_month_seq#413, d_week_seq#414, d_quarter_seq#415, d_year#416, d_dow#417, d_moy#418, d_dom#419, d_qoy#420, d_fy_year#421, d_fy_quarter_seq#422, d_fy_week_seq#423, d_day_name#424, d_quarter_name#425, d_holiday#426, d_weekend#427, d_following_holiday#428, d_first_dom#429, d_last_dom#430, d_same_day_ly#431, d_same_day_lq#432, d_current_day#433, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "34" : {
          "sign" : 1835586517,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 61252422134,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand#373, i_category#377, ss_sales_price#399, d_year#416, d_moy#418, s_store_name#443, s_company_name#455] "
        },
        "67" : {
          "sign" : -25491957,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 11979065,
          "rowCount" : 203035,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#472, i_brand#480, i_category#484] "
        },
        "12" : {
          "sign" : -309376710,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 15230400,
          "rowCount" : 133600,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#0, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#124] "
        },
        "66" : {
          "sign" : 771270281,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#517, d_date_id#518, d_date#519, d_month_seq#520, d_week_seq#521, d_quarter_seq#522, d_year#523, d_dow#524, d_moy#525, d_dom#526, d_qoy#527, d_fy_year#528, d_fy_quarter_seq#529, d_fy_week_seq#530, d_day_name#531, d_quarter_name#532, d_holiday#533, d_weekend#534, d_following_holiday#535, d_first_dom#536, d_last_dom#537, d_same_day_ly#538, d_same_day_lq#539, d_current_day#540, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "51" : {
          "sign" : 13026436,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#438, s_store_id#439, s_rec_start_date#440, s_rec_end_date#441, s_closed_date_sk#442, s_store_name#443, s_number_employees#444, s_floor_space#445, s_hours#446, s_manager#447, s_market_id#448, s_geography_class#449, s_market_desc#450, s_market_manager#451, s_division_id#452, s_division_name#453, s_company_id#454, s_company_name#455, s_street_number#456, s_street_name#457, s_street_type#458, s_suite_number#459, s_city#460, s_county#461, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "8" : {
          "sign" : -1115155848,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17950113,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#1) AND (avg_monthly_sales#1 > 0.000000)) AND CASE WHEN (avg_monthly_sales#1 > 0.000000) THEN ((abs((sum_sales#0 - avg_monthly_sales#1)) / avg_monthly_sales#1) > 0.1000000000000000) END) "
        },
        "19" : {
          "sign" : 897947187,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354859344,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51] "
        },
        "23" : {
          "sign" : -74155522,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 171954,
          "rowCount" : 699,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52)) "
        },
        "62" : {
          "sign" : 1023517333,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39926379296,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#495) AND isnotnull(ss_sold_date_sk#516)) AND isnotnull(ss_store_sk#500)) AND dynamicpruning#581 [ss_sold_date_sk#516]) "
        },
        "4" : {
          "sign" : 270721659,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1910702232603728763012,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#484) AND (i_brand#15 = i_brand#480)) AND (s_store_name#85 = s_store_name#550)) AND (s_company_name#97 = s_company_name#562)) AND (rn#2 = (rn#578 - 1))) "
        },
        "40" : {
          "sign" : 569817844,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354859344,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#388, ss_store_sk#393, ss_sales_price#399, ss_sold_date_sk#409] "
        },
        "15" : {
          "sign" : -813068617,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 21544344075,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
        },
        "11" : {
          "sign" : 977762207,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
          "sizeInBytes" : 15774342,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#2], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
        },
        "9" : {
          "sign" : -1066789762,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
          "sizeInBytes" : 17950113,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Window Arguments: [avg(_w0#124) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#1], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
        },
        "44" : {
          "sign" : -1140883734,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 171954,
          "rowCount" : 699,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((d_year#416 = 2000) OR ((d_year#416 = 1999) AND (d_moy#418 = 12))) OR ((d_year#416 = 2001) AND (d_moy#418 = 1))) AND isnotnull(d_date_sk#410)) "
        },
        "33" : {
          "sign" : 784382087,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 14161600,
          "rowCount" : 133600,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_category#377, i_brand#373, s_store_name#443, s_company_name#455, d_year#416, d_moy#418], [i_category#377, i_brand#373, s_store_name#443, s_company_name#455, d_year#416, d_moy#418, MakeDecimal(sum(UnscaledValue(ss_sales_price#399)),17,2) AS sum_sales#0] "
        },
        "22" : {
          "sign" : -164199210,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13980,
          "rowCount" : 699,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#52, d_year#58, d_moy#60] "
        },
        "56" : {
          "sign" : -1444118298,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 65875246446,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#500 = s_store_sk#545) "
        },
        "55" : {
          "sign" : 500420846,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 61252422134,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand#480, i_category#484, ss_sales_price#506, d_year#523, d_moy#525, s_store_name#550, s_company_name#562] "
        },
        "26" : {
          "sign" : -1989795637,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86492910,
          "rowCount" : 203035,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15))) "
        },
        "50" : {
          "sign" : 930383966,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192079,
          "rowCount" : 401,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(s_store_sk#438) AND (isnotnull(s_store_name#443) AND isnotnull(s_company_name#455))) "
        },
        "37" : {
          "sign" : 584921407,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 23842407443,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#388 = i_item_sk#365) "
        },
        "68" : {
          "sign" : -1056535785,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86492910,
          "rowCount" : 203035,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#472) AND (isnotnull(i_category#484) AND isnotnull(i_brand#480))) "
        },
        "61" : {
          "sign" : 2059909338,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354859344,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#495, ss_store_sk#500, ss_sales_price#506, ss_sold_date_sk#516] "
        },
        "13" : {
          "sign" : 1759274432,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 61252422134,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
        },
        "46" : {
          "sign" : -413569615,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 11979065,
          "rowCount" : 203035,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#365, i_brand#373, i_category#377] "
        },
        "24" : {
          "sign" : 1687074720,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#52, d_date_id#53, d_date#54, d_month_seq#55, d_week_seq#56, d_quarter_seq#57, d_year#58, d_dow#59, d_moy#60, d_dom#61, d_qoy#62, d_fy_year#63, d_fy_quarter_seq#64, d_fy_week_seq#65, d_day_name#66, d_quarter_name#67, d_holiday#68, d_weekend#69, d_following_holiday#70, d_first_dom#71, d_last_dom#72, d_same_day_ly#73, d_same_day_lq#74, d_current_day#75, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "35" : {
          "sign" : -363005551,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 65875246446,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#393 = s_store_sk#438) "
        },
        "16" : {
          "sign" : -2052252973,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 23842407443,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
        },
        "5" : {
          "sign" : -1648218566,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 140318218214346,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#0, avg_monthly_sales#1, rn#2, sum_sales#131] "
        },
        "72" : {
          "sign" : 145958046,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#545, s_store_id#546, s_rec_start_date#547, s_rec_end_date#548, s_closed_date_sk#549, s_store_name#550, s_number_employees#551, s_floor_space#552, s_hours#553, s_manager#554, s_market_id#555, s_geography_class#556, s_market_desc#557, s_market_manager#558, s_division_id#559, s_division_name#560, s_company_id#561, s_company_name#562, s_street_number#563, s_street_name#564, s_street_type#565, s_suite_number#566, s_city#567, s_county#568, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "10" : {
          "sign" : 2094018770,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 15774342,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
        },
        "59" : {
          "sign" : 843540659,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#495, ss_store_sk#500, ss_sales_price#506, d_year#523, d_moy#525] "
        },
        "48" : {
          "sign" : -1114053475,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#365, i_item_id#366, i_rec_start_date#367, i_rec_end_date#368, i_item_desc#369, i_current_price#370, i_wholesale_cost#371, i_brand_id#372, i_brand#373, i_class_id#374, i_class#375, i_category_id#376, i_category#377, i_manufact_id#378, i_manufact#379, i_size#380, i_formulation#381, i_color#382, i_units#383, i_container#384, i_manager_id#385, i_product_name#386], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "21" : {
          "sign" : 344024550,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#29, ss_item_sk#30, ss_customer_sk#31, ss_cdemo_sk#32, ss_hdemo_sk#33, ss_addr_sk#34, ss_store_sk#35, ss_promo_sk#36, ss_ticket_number#37L, ss_quantity#38, ss_wholesale_cost#39, ss_list_price#40, ss_sales_price#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_ext_tax#46, ss_coupon_amt#47, ss_net_paid#48, ss_net_paid_inc_tax#49, ss_net_profit#50, ss_sold_date_sk#51], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "54" : {
          "sign" : -722729832,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 14161600,
          "rowCount" : 133600,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_category#484, i_brand#480, s_store_name#550, s_company_name#562, d_year#523, d_moy#525], [i_category#484, i_brand#480, s_store_name#550, s_company_name#562, d_year#523, d_moy#525, MakeDecimal(sum(UnscaledValue(ss_sales_price#506)),17,2) AS sum_sales#0] "
        },
        "43" : {
          "sign" : 1887514929,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13980,
          "rowCount" : 699,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#410, d_year#416, d_moy#418] "
        },
        "65" : {
          "sign" : 144270960,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 171954,
          "rowCount" : 699,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((d_year#523 = 2000) OR ((d_year#523 = 1999) AND (d_moy#525 = 12))) OR ((d_year#523 = 2001) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517)) "
        },
        "71" : {
          "sign" : -1177050443,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192079,
          "rowCount" : 401,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(s_store_sk#545) AND (isnotnull(s_store_name#550) AND isnotnull(s_company_name#562))) "
        },
        "57" : {
          "sign" : 153331087,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 21544344075,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#500, ss_sales_price#506, d_year#523, d_moy#525, i_brand#480, i_category#484] "
        },
        "32" : {
          "sign" : -822915303,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
          "sizeInBytes" : 14706276,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Window Arguments: [rank(d_year#416, d_moy#418) windowspecdefinition(i_category#377, i_brand#373, s_store_name#443, s_company_name#455, d_year#416 ASC NULLS FIRST, d_moy#418 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#471], [i_category#377, i_brand#373, s_store_name#443, s_company_name#455], [d_year#416 ASC NULLS FIRST, d_moy#418 ASC NULLS FIRST] "
        },
        "49" : {
          "sign" : 1791314364,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 18847,
          "rowCount" : 401,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#438, s_store_name#443, s_company_name#455] "
        },
        "6" : {
          "sign" : -492011739,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 229611629805294,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#377) AND (i_brand#15 = i_brand#373)) AND (s_store_name#85 = s_store_name#443)) AND (s_company_name#97 = s_company_name#455)) AND (rn#2 = (rn#471 + 1))) "
        },
        "36" : {
          "sign" : 1178995055,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 21544344075,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#393, ss_sales_price#399, d_year#416, d_moy#418, i_brand#373, i_category#377] "
        },
        "1" : {
          "sign" : 721373266,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 818872385401598041290,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : 1867244595,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10621623400,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#409 = d_date_sk#410) "
        },
        "17" : {
          "sign" : -1233808474,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] "
        },
        "25" : {
          "sign" : 1984212613,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 11979065,
          "rowCount" : 203035,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#7, i_brand#15, i_category#19] "
        },
        "60" : {
          "sign" : 44860074,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10621623400,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#516 = d_date_sk#517) "
        },
        "14" : {
          "sign" : -1067597085,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 65875246446,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
        },
        "47" : {
          "sign" : 1572821190,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86492910,
          "rowCount" : 203035,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#365) AND (isnotnull(i_category#377) AND isnotnull(i_brand#373))) "
        },
        "31" : {
          "sign" : 853915716,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13616922,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_category#377, i_brand#373, s_store_name#443, s_company_name#455, sum_sales#0 AS sum_sales#131, rn#471] "
        },
        "69" : {
          "sign" : -143350799,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#472, i_item_id#473, i_rec_start_date#474, i_rec_end_date#475, i_item_desc#476, i_current_price#477, i_wholesale_cost#478, i_brand_id#479, i_brand#480, i_class_id#481, i_class#482, i_category_id#483, i_category#484, i_manufact_id#485, i_manufact#486, i_size#487, i_formulation#488, i_color#489, i_units#490, i_container#491, i_manager_id#492, i_product_name#493], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "58" : {
          "sign" : -1693534955,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 23842407443,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#495 = i_item_sk#472) "
        },
        "64" : {
          "sign" : 379621721,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13980,
          "rowCount" : 699,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#517, d_year#523, d_moy#525] "
        },
        "53" : {
          "sign" : -372460202,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
          "sizeInBytes" : 14706276,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Window Arguments: [rank(d_year#523, d_moy#525) windowspecdefinition(i_category#484, i_brand#480, s_store_name#550, s_company_name#562, d_year#523 ASC NULLS FIRST, d_moy#525 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#578], [i_category#484, i_brand#480, s_store_name#550, s_company_name#562], [d_year#523 ASC NULLS FIRST, d_moy#525 ASC NULLS FIRST] "
        },
        "42" : {
          "sign" : 1038637785,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#387, ss_item_sk#388, ss_customer_sk#389, ss_cdemo_sk#390, ss_hdemo_sk#391, ss_addr_sk#392, ss_store_sk#393, ss_promo_sk#394, ss_ticket_number#395L, ss_quantity#396, ss_wholesale_cost#397, ss_list_price#398, ss_sales_price#399, ss_ext_discount_amt#400, ss_ext_sales_price#401, ss_ext_wholesale_cost#402, ss_ext_list_price#403, ss_ext_tax#404, ss_coupon_amt#405, ss_net_paid#406, ss_net_paid_inc_tax#407, ss_net_profit#408, ss_sold_date_sk#409], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : -189414883,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 9600,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 741304478,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39926379296,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#579 [ss_sold_date_sk#51]) "
        },
        "27" : {
          "sign" : 337999037,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#7, i_item_id#8, i_rec_start_date#9, i_rec_end_date#10, i_item_desc#11, i_current_price#12, i_wholesale_cost#13, i_brand_id#14, i_brand#15, i_class_id#16, i_class#17, i_category_id#18, i_category#19, i_manufact_id#20, i_manufact#21, i_size#22, i_formulation#23, i_color#24, i_units#25, i_container#26, i_manager_id#27, i_product_name#28], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "70" : {
          "sign" : 1298868354,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 18847,
          "rowCount" : 401,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#545, s_store_name#550, s_company_name#562] "
        },
        "2" : {
          "sign" : 184624583,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 818872385401598041290,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [(sum_sales#0 - avg_monthly_sales#1) ASC NULLS FIRST, nsum#4 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : -971386871,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#388, ss_store_sk#393, ss_sales_price#399, d_year#416, d_moy#418] "
        },
        "18" : {
          "sign" : 379196950,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10621623400,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#51 = d_date_sk#52) "
        },
        "30" : {
          "sign" : -719809506,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#80, s_store_id#81, s_rec_start_date#82, s_rec_end_date#83, s_closed_date_sk#84, s_store_name#85, s_number_employees#86, s_floor_space#87, s_hours#88, s_manager#89, s_market_id#90, s_geography_class#91, s_market_desc#92, s_market_manager#93, s_division_id#94, s_division_name#95, s_company_id#96, s_company_name#97, s_street_number#98, s_street_name#99, s_street_type#100, s_suite_number#101, s_city#102, s_county#103, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "7" : {
          "sign" : -1020404423,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 16862227,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#0, avg_monthly_sales#1, rn#2] "
        },
        "29" : {
          "sign" : 1983582949,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192079,
          "rowCount" : 401,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97))) "
        },
        "41" : {
          "sign" : 525014091,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39926379296,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#388) AND isnotnull(ss_sold_date_sk#409)) AND isnotnull(ss_store_sk#393)) AND dynamicpruning#580 [ss_sold_date_sk#409]) "
        },
        "63" : {
          "sign" : -1742585649,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#494, ss_item_sk#495, ss_customer_sk#496, ss_cdemo_sk#497, ss_hdemo_sk#498, ss_addr_sk#499, ss_store_sk#500, ss_promo_sk#501, ss_ticket_number#502L, ss_quantity#503, ss_wholesale_cost#504, ss_list_price#505, ss_sales_price#506, ss_ext_discount_amt#507, ss_ext_sales_price#508, ss_ext_wholesale_cost#509, ss_ext_list_price#510, ss_ext_tax#511, ss_coupon_amt#512, ss_net_paid#513, ss_net_paid_inc_tax#514, ss_net_profit#515, ss_sold_date_sk#516], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 993335213,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 818872385401598041290,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#1, sum_sales#0, sum_sales#131 AS psum#3, sum_sales#140 AS nsum#4] "
        },
        "52" : {
          "sign" : 85027757,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13616922,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_category#484, i_brand#480, s_store_name#550, s_company_name#562, sum_sales#0 AS sum_sales#140, rn#578] "
        },
        "28" : {
          "sign" : 520606636,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 18847,
          "rowCount" : 401,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#80, s_store_name#85, s_company_name#97] "
        }
      },
      "links" : [ {
        "fromId" : 21,
        "fromName" : "LogicalRelation",
        "toId" : 20,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 20,
        "fromName" : "Filter",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 18,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 18,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Join",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Join",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "LogicalRelation",
        "toId" : 29,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Filter",
        "toId" : 28,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Join",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Aggregate",
        "toId" : 11,
        "toName" : "Window",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Window",
        "toId" : 10,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Filter",
        "toId" : 9,
        "toName" : "Window",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Window",
        "toId" : 8,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Filter",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "LogicalRelation",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "LogicalRelation",
        "toId" : 44,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Filter",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 41,
        "fromName" : "Filter",
        "toId" : 40,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Project",
        "toId" : 39,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 39,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Join",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "LogicalRelation",
        "toId" : 47,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Filter",
        "toId" : 46,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Join",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 35,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "LogicalRelation",
        "toId" : 50,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Filter",
        "toId" : 49,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Project",
        "toId" : 35,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Join",
        "toId" : 34,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 33,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Aggregate",
        "toId" : 32,
        "toName" : "Window",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Window",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "Join",
        "toId" : 59,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "Project",
        "toId" : 58,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "LogicalRelation",
        "toId" : 68,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Filter",
        "toId" : 67,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Project",
        "toId" : 58,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Join",
        "toId" : 57,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Project",
        "toId" : 56,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "LogicalRelation",
        "toId" : 71,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Filter",
        "toId" : 70,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Project",
        "toId" : 56,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Join",
        "toId" : 55,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Project",
        "toId" : 54,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Aggregate",
        "toId" : 53,
        "toName" : "Window",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Window",
        "toId" : 52,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#0 - avg_monthly_sales#1) ASC NULLS FIRST, nsum#4 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#1, sum_sales#0, sum_sales#131 AS psum#3, sum_sales#140 AS nsum#4]\n         +- Join Inner, (((((i_category#19 = i_category#484) AND (i_brand#15 = i_brand#480)) AND (s_store_name#85 = s_store_name#550)) AND (s_company_name#97 = s_company_name#562)) AND (rn#2 = (rn#578 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#0, avg_monthly_sales#1, rn#2, sum_sales#131]\n            :  +- Join Inner, (((((i_category#19 = i_category#377) AND (i_brand#15 = i_brand#373)) AND (s_store_name#85 = s_store_name#443)) AND (s_company_name#97 = s_company_name#455)) AND (rn#2 = (rn#471 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#0, avg_monthly_sales#1, rn#2]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#1) AND (avg_monthly_sales#1 > 0.000000)) AND CASE WHEN (avg_monthly_sales#1 > 0.000000) THEN ((abs((sum_sales#0 - avg_monthly_sales#1)) / avg_monthly_sales#1) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#124) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#1], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#2], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#0, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#124]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n            :     :                       :     :  +- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n            :     :                       :     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n            :     :                       :     :     :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#579 [ss_sold_date_sk#51])\n            :     :                       :     :     :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n            :     :                       :     :     :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            :     :                       :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n            :     :                       :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n            :     :                       :     :     +- Project [d_date_sk#52, d_year#58, d_moy#60]\n            :     :                       :     :        +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            :     :                       :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n            :     :                       :     +- Project [i_item_sk#7, i_brand#15, i_category#19]\n            :     :                       :        +- Filter (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15)))\n            :     :                       :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#7,i_item_id#8,i_rec_start_date#9,i_rec_end_date#10,i_item_desc#11,i_current_price#12,i_wholesale_cost#13,i_brand_id#14,i_brand#15,i_class_id#16,i_class#17,i_category_id#18,i_category#19,i_manufact_id#20,i_manufact#21,i_size#22,i_formulation#23,i_color#24,i_units#25,i_container#26,i_manager_id#27,i_product_name#28] parquet\n            :     :                       +- Project [s_store_sk#80, s_store_name#85, s_company_name#97]\n            :     :                          +- Filter (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97)))\n            :     :                             +- Relation spark_catalog.tpcds_100.store[s_store_sk#80,s_store_id#81,s_rec_start_date#82,s_rec_end_date#83,s_closed_date_sk#84,s_store_name#85,s_number_employees#86,s_floor_space#87,s_hours#88,s_manager#89,s_market_id#90,s_geography_class#91,s_market_desc#92,s_market_manager#93,s_division_id#94,s_division_name#95,s_company_id#96,s_company_name#97,s_street_number#98,s_street_name#99,s_street_type#100,s_suite_number#101,s_city#102,s_county#103,... 5 more fields] parquet\n            :     +- Project [i_category#377, i_brand#373, s_store_name#443, s_company_name#455, sum_sales#0 AS sum_sales#131, rn#471]\n            :        +- Window [rank(d_year#416, d_moy#418) windowspecdefinition(i_category#377, i_brand#373, s_store_name#443, s_company_name#455, d_year#416 ASC NULLS FIRST, d_moy#418 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#471], [i_category#377, i_brand#373, s_store_name#443, s_company_name#455], [d_year#416 ASC NULLS FIRST, d_moy#418 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#377, i_brand#373, s_store_name#443, s_company_name#455, d_year#416, d_moy#418], [i_category#377, i_brand#373, s_store_name#443, s_company_name#455, d_year#416, d_moy#418, MakeDecimal(sum(UnscaledValue(ss_sales_price#399)),17,2) AS sum_sales#0]\n            :              +- Project [i_brand#373, i_category#377, ss_sales_price#399, d_year#416, d_moy#418, s_store_name#443, s_company_name#455]\n            :                 +- Join Inner, (ss_store_sk#393 = s_store_sk#438)\n            :                    :- Project [ss_store_sk#393, ss_sales_price#399, d_year#416, d_moy#418, i_brand#373, i_category#377]\n            :                    :  +- Join Inner, (ss_item_sk#388 = i_item_sk#365)\n            :                    :     :- Project [ss_item_sk#388, ss_store_sk#393, ss_sales_price#399, d_year#416, d_moy#418]\n            :                    :     :  +- Join Inner, (ss_sold_date_sk#409 = d_date_sk#410)\n            :                    :     :     :- Project [ss_item_sk#388, ss_store_sk#393, ss_sales_price#399, ss_sold_date_sk#409]\n            :                    :     :     :  +- Filter (((isnotnull(ss_item_sk#388) AND isnotnull(ss_sold_date_sk#409)) AND isnotnull(ss_store_sk#393)) AND dynamicpruning#580 [ss_sold_date_sk#409])\n            :                    :     :     :     :  +- Project [d_date_sk#410, d_year#416, d_moy#418]\n            :                    :     :     :     :     +- Filter ((((d_year#416 = 2000) OR ((d_year#416 = 1999) AND (d_moy#418 = 12))) OR ((d_year#416 = 2001) AND (d_moy#418 = 1))) AND isnotnull(d_date_sk#410))\n            :                    :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#410,d_date_id#411,d_date#412,d_month_seq#413,d_week_seq#414,d_quarter_seq#415,d_year#416,d_dow#417,d_moy#418,d_dom#419,d_qoy#420,d_fy_year#421,d_fy_quarter_seq#422,d_fy_week_seq#423,d_day_name#424,d_quarter_name#425,d_holiday#426,d_weekend#427,d_following_holiday#428,d_first_dom#429,d_last_dom#430,d_same_day_ly#431,d_same_day_lq#432,d_current_day#433,... 4 more fields] parquet\n            :                    :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#387,ss_item_sk#388,ss_customer_sk#389,ss_cdemo_sk#390,ss_hdemo_sk#391,ss_addr_sk#392,ss_store_sk#393,ss_promo_sk#394,ss_ticket_number#395L,ss_quantity#396,ss_wholesale_cost#397,ss_list_price#398,ss_sales_price#399,ss_ext_discount_amt#400,ss_ext_sales_price#401,ss_ext_wholesale_cost#402,ss_ext_list_price#403,ss_ext_tax#404,ss_coupon_amt#405,ss_net_paid#406,ss_net_paid_inc_tax#407,ss_net_profit#408,ss_sold_date_sk#409] parquet\n            :                    :     :     +- Project [d_date_sk#410, d_year#416, d_moy#418]\n            :                    :     :        +- Filter ((((d_year#416 = 2000) OR ((d_year#416 = 1999) AND (d_moy#418 = 12))) OR ((d_year#416 = 2001) AND (d_moy#418 = 1))) AND isnotnull(d_date_sk#410))\n            :                    :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#410,d_date_id#411,d_date#412,d_month_seq#413,d_week_seq#414,d_quarter_seq#415,d_year#416,d_dow#417,d_moy#418,d_dom#419,d_qoy#420,d_fy_year#421,d_fy_quarter_seq#422,d_fy_week_seq#423,d_day_name#424,d_quarter_name#425,d_holiday#426,d_weekend#427,d_following_holiday#428,d_first_dom#429,d_last_dom#430,d_same_day_ly#431,d_same_day_lq#432,d_current_day#433,... 4 more fields] parquet\n            :                    :     +- Project [i_item_sk#365, i_brand#373, i_category#377]\n            :                    :        +- Filter (isnotnull(i_item_sk#365) AND (isnotnull(i_category#377) AND isnotnull(i_brand#373)))\n            :                    :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#365,i_item_id#366,i_rec_start_date#367,i_rec_end_date#368,i_item_desc#369,i_current_price#370,i_wholesale_cost#371,i_brand_id#372,i_brand#373,i_class_id#374,i_class#375,i_category_id#376,i_category#377,i_manufact_id#378,i_manufact#379,i_size#380,i_formulation#381,i_color#382,i_units#383,i_container#384,i_manager_id#385,i_product_name#386] parquet\n            :                    +- Project [s_store_sk#438, s_store_name#443, s_company_name#455]\n            :                       +- Filter (isnotnull(s_store_sk#438) AND (isnotnull(s_store_name#443) AND isnotnull(s_company_name#455)))\n            :                          +- Relation spark_catalog.tpcds_100.store[s_store_sk#438,s_store_id#439,s_rec_start_date#440,s_rec_end_date#441,s_closed_date_sk#442,s_store_name#443,s_number_employees#444,s_floor_space#445,s_hours#446,s_manager#447,s_market_id#448,s_geography_class#449,s_market_desc#450,s_market_manager#451,s_division_id#452,s_division_name#453,s_company_id#454,s_company_name#455,s_street_number#456,s_street_name#457,s_street_type#458,s_suite_number#459,s_city#460,s_county#461,... 5 more fields] parquet\n            +- Project [i_category#484, i_brand#480, s_store_name#550, s_company_name#562, sum_sales#0 AS sum_sales#140, rn#578]\n               +- Window [rank(d_year#523, d_moy#525) windowspecdefinition(i_category#484, i_brand#480, s_store_name#550, s_company_name#562, d_year#523 ASC NULLS FIRST, d_moy#525 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#578], [i_category#484, i_brand#480, s_store_name#550, s_company_name#562], [d_year#523 ASC NULLS FIRST, d_moy#525 ASC NULLS FIRST]\n                  +- Aggregate [i_category#484, i_brand#480, s_store_name#550, s_company_name#562, d_year#523, d_moy#525], [i_category#484, i_brand#480, s_store_name#550, s_company_name#562, d_year#523, d_moy#525, MakeDecimal(sum(UnscaledValue(ss_sales_price#506)),17,2) AS sum_sales#0]\n                     +- Project [i_brand#480, i_category#484, ss_sales_price#506, d_year#523, d_moy#525, s_store_name#550, s_company_name#562]\n                        +- Join Inner, (ss_store_sk#500 = s_store_sk#545)\n                           :- Project [ss_store_sk#500, ss_sales_price#506, d_year#523, d_moy#525, i_brand#480, i_category#484]\n                           :  +- Join Inner, (ss_item_sk#495 = i_item_sk#472)\n                           :     :- Project [ss_item_sk#495, ss_store_sk#500, ss_sales_price#506, d_year#523, d_moy#525]\n                           :     :  +- Join Inner, (ss_sold_date_sk#516 = d_date_sk#517)\n                           :     :     :- Project [ss_item_sk#495, ss_store_sk#500, ss_sales_price#506, ss_sold_date_sk#516]\n                           :     :     :  +- Filter (((isnotnull(ss_item_sk#495) AND isnotnull(ss_sold_date_sk#516)) AND isnotnull(ss_store_sk#500)) AND dynamicpruning#581 [ss_sold_date_sk#516])\n                           :     :     :     :  +- Project [d_date_sk#517, d_year#523, d_moy#525]\n                           :     :     :     :     +- Filter ((((d_year#523 = 2000) OR ((d_year#523 = 1999) AND (d_moy#525 = 12))) OR ((d_year#523 = 2001) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#494,ss_item_sk#495,ss_customer_sk#496,ss_cdemo_sk#497,ss_hdemo_sk#498,ss_addr_sk#499,ss_store_sk#500,ss_promo_sk#501,ss_ticket_number#502L,ss_quantity#503,ss_wholesale_cost#504,ss_list_price#505,ss_sales_price#506,ss_ext_discount_amt#507,ss_ext_sales_price#508,ss_ext_wholesale_cost#509,ss_ext_list_price#510,ss_ext_tax#511,ss_coupon_amt#512,ss_net_paid#513,ss_net_paid_inc_tax#514,ss_net_profit#515,ss_sold_date_sk#516] parquet\n                           :     :     +- Project [d_date_sk#517, d_year#523, d_moy#525]\n                           :     :        +- Filter ((((d_year#523 = 2000) OR ((d_year#523 = 1999) AND (d_moy#525 = 12))) OR ((d_year#523 = 2001) AND (d_moy#525 = 1))) AND isnotnull(d_date_sk#517))\n                           :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#517,d_date_id#518,d_date#519,d_month_seq#520,d_week_seq#521,d_quarter_seq#522,d_year#523,d_dow#524,d_moy#525,d_dom#526,d_qoy#527,d_fy_year#528,d_fy_quarter_seq#529,d_fy_week_seq#530,d_day_name#531,d_quarter_name#532,d_holiday#533,d_weekend#534,d_following_holiday#535,d_first_dom#536,d_last_dom#537,d_same_day_ly#538,d_same_day_lq#539,d_current_day#540,... 4 more fields] parquet\n                           :     +- Project [i_item_sk#472, i_brand#480, i_category#484]\n                           :        +- Filter (isnotnull(i_item_sk#472) AND (isnotnull(i_category#484) AND isnotnull(i_brand#480)))\n                           :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#472,i_item_id#473,i_rec_start_date#474,i_rec_end_date#475,i_item_desc#476,i_current_price#477,i_wholesale_cost#478,i_brand_id#479,i_brand#480,i_class_id#481,i_class#482,i_category_id#483,i_category#484,i_manufact_id#485,i_manufact#486,i_size#487,i_formulation#488,i_color#489,i_units#490,i_container#491,i_manager_id#492,i_product_name#493] parquet\n                           +- Project [s_store_sk#545, s_store_name#550, s_company_name#562]\n                              +- Filter (isnotnull(s_store_sk#545) AND (isnotnull(s_store_name#550) AND isnotnull(s_company_name#562)))\n                                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#545,s_store_id#546,s_rec_start_date#547,s_rec_end_date#548,s_closed_date_sk#549,s_store_name#550,s_number_employees#551,s_floor_space#552,s_hours#553,s_manager#554,s_market_id#555,s_geography_class#556,s_market_desc#557,s_market_manager#558,s_division_id#559,s_division_name#560,s_company_id#561,s_company_name#562,s_street_number#563,s_street_name#564,s_street_type#565,s_suite_number#566,s_city#567,s_county#568,... 5 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 125735880804,
      "inputRowCount" : 825968412
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 1638267996,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971], ShuffleQueryStage 30 "
          },
          "4" : {
            "sign" : -925876361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1497737923353456388320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "9" : {
            "sign" : 356512690,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078], ShuffleQueryStage 31 "
          },
          "5" : {
            "sign" : -1368699921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 124232569837346,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "6" : {
            "sign" : 1746999775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 203289659733840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -824524012,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 641887681437195594994,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1232580265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 139248173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 641887681437195594994,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1704119782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16862227,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29 "
          },
          "3" : {
            "sign" : -545282608,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 641887681437195594994,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- LogicalQueryStage Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29\n            :     +- LogicalQueryStage Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971], ShuffleQueryStage 30\n            +- LogicalQueryStage Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078], ShuffleQueryStage 31\n"
      },
      "IM" : {
        "inputSizeInBytes" : 40974067,
        "inputRowCount" : 235440
      },
      "PD" : {
        "7" : [ 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 13780, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 18341, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ],
        "6" : [ 16674, 16674, 18341, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 15158, 15158, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 18341, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 18341, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227042058,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1742,
        "IOBytes" : {
          "Total" : 19916848,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 15349417,
            "SW" : 4567431
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1740727368,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 15230400,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], ShuffleQueryStage 25 "
          },
          "8" : {
            "sign" : 1000840475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17950113,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "4" : {
            "sign" : -1172139580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1910702232603728763012,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : -1667314953,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], ShuffleQueryStage 26 "
          },
          "11" : {
            "sign" : -2070651689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 15774342,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : -1398995777,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 17950113,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "13" : {
            "sign" : 787881239,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "16" : {
            "sign" : -2053636642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "5" : {
            "sign" : 1596305440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 140318218214346,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 363400004,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15774342,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "6" : {
            "sign" : -1531347638,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 229611629805294,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : 1560776361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 633086722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "14" : {
            "sign" : -761824140,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 550992612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1640276146,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1232830294,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], ShuffleQueryStage 28 "
          },
          "7" : {
            "sign" : -387437912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16862227,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "3" : {
            "sign" : 1175807909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Window",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Window",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- LogicalQueryStage Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], ShuffleQueryStage 25\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- LogicalQueryStage Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], ShuffleQueryStage 26\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- LogicalQueryStage Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], ShuffleQueryStage 28\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43553600,
        "inputRowCount" : 400800
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227039825,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3975,
        "IOBytes" : {
          "Total" : 173832220,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 154273553,
            "SW" : 19558667
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 29107830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2424249265621778000,
            "rowCount" : 21645082728765875,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1000 = s_store_sk#1045) "
          },
          "12" : {
            "sign" : -320466618,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2424249265621778000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624] "
          },
          "8" : {
            "sign" : 1782167107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2857150920197095500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "19" : {
            "sign" : -1593735473,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2 "
          },
          "23" : {
            "sign" : 1628746924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2251088603791651000,
            "rowCount" : 21645082728765875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          },
          "4" : {
            "sign" : 297613108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7684570784946013135403413007112556122841567670201212500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : 1749118467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3670487844279500,
            "rowCount" : 53977762415875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
          },
          "11" : {
            "sign" : 1597035673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 2510829596536841500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : 745141313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 2857150920197095500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "33" : {
            "sign" : 1866254422,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2251088603791651000,
            "rowCount" : 21645082728765875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062] "
          },
          "22" : {
            "sign" : -594168543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2251088603791651000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "26" : {
            "sign" : -531939494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4102309943606500,
            "rowCount" : 53977762415875,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "37" : {
            "sign" : -413889502,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025], ShuffleQueryStage 19 "
          },
          "13" : {
            "sign" : -1072626629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2251088603791651000,
            "rowCount" : 21645082728765875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
          },
          "24" : {
            "sign" : 100940449,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2424249265621778000,
            "rowCount" : 21645082728765875,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "35" : {
            "sign" : -176029295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3670487844279500,
            "rowCount" : 53977762415875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984] "
          },
          "16" : {
            "sign" : 546317183,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4102309943606500,
            "rowCount" : 53977762415875,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
          },
          "5" : {
            "sign" : 1375589556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3550261683561677846923142055551736111,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 665919418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2510829596536841500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "21" : {
            "sign" : -2033141338,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 2337668934706714500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "32" : {
            "sign" : -375499966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2251088603791651000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606] "
          },
          "6" : {
            "sign" : 344066338,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5809519118555472840419686999993750000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "36" : {
            "sign" : 599375807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4102309943606500,
            "rowCount" : 53977762415875,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#995 = i_item_sk#972) "
          },
          "1" : {
            "sign" : -263664951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3293387479262577058030034145905381195503529001514805357,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 347179192,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14 "
          },
          "17" : {
            "sign" : 1440470762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60], ShuffleQueryStage 15 "
          },
          "25" : {
            "sign" : -1599599122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3670487844279500,
            "rowCount" : 53977762415875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "14" : {
            "sign" : 604879726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2424249265621778000,
            "rowCount" : 21645082728765875,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
          },
          "31" : {
            "sign" : 252363714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 2337668934706714500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 373693204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2084538113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2164508272876587500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "27" : {
            "sign" : -632691683,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918], ShuffleQueryStage 17 "
          },
          "2" : {
            "sign" : -506370454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3293387479262577058030034145905381195503529001514805357,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1445997824,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12 "
          },
          "18" : {
            "sign" : 707782353,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1 "
          },
          "30" : {
            "sign" : 311794702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2164508272876587500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "7" : {
            "sign" : 1298976298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2683990258366968500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "29" : {
            "sign" : -1089032869,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : 2002598661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3293387479262577058030034145905381195503529001514805357,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          },
          "28" : {
            "sign" : -1684097446,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6 "
          }
        },
        "links" : [ {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Window",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Window",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- LogicalQueryStage Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60], ShuffleQueryStage 15\n            :     :                       :     +- LogicalQueryStage Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1\n            :     :                       +- LogicalQueryStage Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n            :              +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n            :                 +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :                    :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :                    :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :                    :     :- LogicalQueryStage Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918], ShuffleQueryStage 17\n            :                    :     +- LogicalQueryStage Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6\n            :                    +- LogicalQueryStage Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606]\n                     +- Project [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062]\n                        +- Join Inner, (ss_store_sk#1000 = s_store_sk#1045)\n                           :- Project [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984]\n                           :  +- Join Inner, (ss_item_sk#995 = i_item_sk#972)\n                           :     :- LogicalQueryStage Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025], ShuffleQueryStage 19\n                           :     +- LogicalQueryStage Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12\n                           +- LogicalQueryStage Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25532072328,
        "inputRowCount" : 797232783
      },
      "PD" : {
        "0" : [ 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 22193, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 26854, 22193, 24413, 24413, 24413, 22193, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227015208,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 28592,
        "IOBytes" : {
          "Total" : 2526730407,
          "Details" : {
            "IR" : 437386809,
            "IW" : 0,
            "SR" : 1081764294,
            "SW" : 1007579304
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 1638267996,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971], ShuffleQueryStage 30 "
          },
          "4" : {
            "sign" : -925876361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1691665213334693169012,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "9" : {
            "sign" : 356512690,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078], ShuffleQueryStage 31 "
          },
          "5" : {
            "sign" : -1368699921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 124232569837346,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "6" : {
            "sign" : 1746999775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 203289659733840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -824524012,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 724999377143439929576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1232580265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 139248173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 724999377143439929576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1704119782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16862227,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29 "
          },
          "3" : {
            "sign" : -545282608,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 724999377143439929576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- LogicalQueryStage Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29\n            :     +- LogicalQueryStage Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971], ShuffleQueryStage 30\n            +- LogicalQueryStage Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078], ShuffleQueryStage 31\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42535069,
        "inputRowCount" : 117720
      },
      "PD" : {
        "6" : [ 16674, 16674, 18341, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 15158, 15158, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 18341, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 18341, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227042043,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1757,
        "IOBytes" : {
          "Total" : 27239051,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 19558667,
            "SW" : 7680384
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1740727368,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13939440,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], ShuffleQueryStage 25 "
          },
          "8" : {
            "sign" : 1000840475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 16428625,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "4" : {
            "sign" : -1172139580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1748747186279821330152,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : -1667314953,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], ShuffleQueryStage 26 "
          },
          "11" : {
            "sign" : -2070651689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14437277,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : -1398995777,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 16428625,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "13" : {
            "sign" : 787881239,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "16" : {
            "sign" : -2053636642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "5" : {
            "sign" : 1596305440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 128424557787716,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 363400004,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14437277,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "6" : {
            "sign" : -1531347638,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 210149276379900,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : 1560776361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 749463079834209141493,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 633086722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "14" : {
            "sign" : -761824140,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 550992612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1640276146,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 749463079834209141493,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1232830294,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], ShuffleQueryStage 28 "
          },
          "7" : {
            "sign" : -387437912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15432950,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "3" : {
            "sign" : 1175807909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 749463079834209141493,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Window",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Window",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- LogicalQueryStage Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], ShuffleQueryStage 25\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- LogicalQueryStage Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], ShuffleQueryStage 26\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- LogicalQueryStage Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], ShuffleQueryStage 28\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42262640,
        "inputRowCount" : 384920
      },
      "PD" : {
        "3" : [ 21227, 25202, 25464, 27643, 23464, 25130, 22910, 25464, 27643, 20965, 21044, 17542, 25130, 19058, 21227, 22982, 23349, 28010, 23148, 25202, 27809, 21044, 20893, 23244, 18993, 21131, 30695, 19058, 18880, 21044, 22982, 25368, 23061, 21131, 22910, 23061, 19392, 25368, 25368, 22786, 21131, 23061, 30328, 15947, 25281, 30494, 17213, 25130, 30695, 20828, 25202, 27905, 25684, 27722, 28010, 30695, 17267, 33649, 25368, 20893, 23061, 27506, 17267, 25281, 17391, 27722, 30256, 19296, 15875, 27722, 15875, 30494, 19130, 28253, 23061, 20769, 27722, 23244, 30590, 23061, 22982, 27571, 30810, 30810, 30590, 16026, 21044, 20176, 22982, 27809, 21227, 27722, 27905, 19296, 25281, 21044, 25130, 23148, 15810, 21227, 25130, 33649, 25368, 23148, 25130, 22910, 15648, 19130, 23244, 20769, 19130, 25065, 27905, 28125, 27809, 25130, 22910, 19392, 25281, 23061, 25464, 23148, 25281, 23061, 23148, 22910, 27722, 20893, 20893, 25281, 22845, 23244, 30695, 22982, 27722, 27809, 25368, 28010, 19209, 20769, 23148, 22845, 25368, 23244, 22786, 28125, 18880, 17542, 22845, 27809, 20965, 25281, 25464, 14185, 17267, 18993, 23061, 25464, 25130, 25569, 27571, 30407, 21131, 30494, 19058, 27506, 22683, 23244, 23148, 25202, 25368, 22845, 27722, 19058, 33282, 30695, 22982, 22845, 23061, 19058, 20893, 27722, 22732, 21131, 18934, 30590, 22982, 23148, 21044, 30407, 27905, 19296, 20715, 22982, 23148, 25065, 28010, 27809, 30494, 18993 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 184.0,
        "FinishedTasksDistributionInMs" : [ 184.0, 184.0, 184.0, 184.0, 184.0 ]
      },
      "StartTimeInMs" : 1702227041080,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2720,
        "IOBytes" : {
          "Total" : 104022692,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 89020735,
            "SW" : 15001957
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 1638267996,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971], ShuffleQueryStage 30 "
          },
          "4" : {
            "sign" : -925876361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 316202273188300800,
            "rowCount" : 1411617291019200,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "9" : {
            "sign" : 356512690,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078], ShuffleQueryStage 31 "
          },
          "5" : {
            "sign" : -1368699921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1582853231520,
            "rowCount" : 11991312360,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "6" : {
            "sign" : 1746999775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2590123469760,
            "rowCount" : 11991312360,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -824524012,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 135515259937843200,
            "rowCount" : 1411617291019200,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1232580265,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 139248173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 135515259937843200,
            "rowCount" : 1411617291019200,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1704119782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14496024,
            "rowCount" : 101863,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29 "
          },
          "3" : {
            "sign" : -545282608,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 135515259937843200,
            "rowCount" : 1411617291019200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- LogicalQueryStage Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29\n            :     +- LogicalQueryStage Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971], ShuffleQueryStage 30\n            +- LogicalQueryStage Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078], ShuffleQueryStage 31\n"
      },
      "IM" : {
        "inputSizeInBytes" : 38607864,
        "inputRowCount" : 337303
      },
      "PD" : {
        "5" : [ 24413, 24413, 26854, 24413, 24413, 22193, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 20176, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 22193, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 26854, 22193, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 22193, 22193, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 26854, 24413, 22193, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 26854, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 26854, 24413, 22193, 24413, 24413, 24413, 24413, 26854, 24413, 24413 ],
        "7" : [ 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 13780, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 18341, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ],
        "6" : [ 16674, 16674, 18341, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 15158, 15158, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 18341, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 18341, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227042307,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1493,
        "IOBytes" : {
          "Total" : 10792707,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 10792707,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 29107830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 601730509578774800,
            "rowCount" : 5372593835524775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1000 = s_store_sk#1045) "
          },
          "12" : {
            "sign" : -320466618,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 601730509578774800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624] "
          },
          "8" : {
            "sign" : 1782167107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 709182386289270300,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "19" : {
            "sign" : -1593735473,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2 "
          },
          "23" : {
            "sign" : 1628746924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 558749758894576600,
            "rowCount" : 5372593835524775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          },
          "4" : {
            "sign" : 297613108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 117515159273056658944073200461246169055641118730017500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : 1749118467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 911063293804700,
            "rowCount" : 13397989614775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
          },
          "11" : {
            "sign" : 1597035673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 623220884920873900,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : 745141313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 709182386289270300,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "33" : {
            "sign" : 1866254422,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 558749758894576600,
            "rowCount" : 5372593835524775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062] "
          },
          "22" : {
            "sign" : -594168543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 558749758894576600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "26" : {
            "sign" : -531939494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1018247210722900,
            "rowCount" : 13397989614775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "37" : {
            "sign" : -413889502,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3163711728,
            "rowCount" : 65910661,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025], ShuffleQueryStage 19 "
          },
          "13" : {
            "sign" : -1072626629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 558749758894576600,
            "rowCount" : 5372593835524775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
          },
          "24" : {
            "sign" : 100940449,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 601730509578774800,
            "rowCount" : 5372593835524775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "35" : {
            "sign" : -176029295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 911063293804700,
            "rowCount" : 13397989614775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984] "
          },
          "16" : {
            "sign" : 546317183,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1018247210722900,
            "rowCount" : 13397989614775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
          },
          "5" : {
            "sign" : 1375589556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 218730771151953672487037262911402777,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 665919418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 623220884920873900,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "21" : {
            "sign" : -2033141338,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 580240134236675700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "32" : {
            "sign" : -375499966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 558749758894576600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606] "
          },
          "6" : {
            "sign" : 344066338,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 357923080066833282251515521127750000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "36" : {
            "sign" : 599375807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1018247210722900,
            "rowCount" : 13397989614775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#995 = i_item_sk#972) "
          },
          "1" : {
            "sign" : -263664951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 50363639688452853833174228769105501023846193741436071,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 347179192,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14 "
          },
          "17" : {
            "sign" : 1440470762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3163711728,
            "rowCount" : 65910661,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60], ShuffleQueryStage 15 "
          },
          "25" : {
            "sign" : -1599599122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 911063293804700,
            "rowCount" : 13397989614775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "14" : {
            "sign" : 604879726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 601730509578774800,
            "rowCount" : 5372593835524775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
          },
          "31" : {
            "sign" : 252363714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 580240134236675700,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 373693204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2084538113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 537259383552477500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "27" : {
            "sign" : -632691683,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3163711728,
            "rowCount" : 65910661,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918], ShuffleQueryStage 17 "
          },
          "2" : {
            "sign" : -506370454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 50363639688452853833174228769105501023846193741436071,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1445997824,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12 "
          },
          "18" : {
            "sign" : 707782353,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1 "
          },
          "30" : {
            "sign" : 311794702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 537259383552477500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "7" : {
            "sign" : 1298976298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 666201635605072100,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "29" : {
            "sign" : -1089032869,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : 2002598661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50363639688452853833174228769105501023846193741436071,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          },
          "28" : {
            "sign" : -1684097446,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6 "
          }
        },
        "links" : [ {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Window",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Window",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- LogicalQueryStage Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60], ShuffleQueryStage 15\n            :     :                       :     +- LogicalQueryStage Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1\n            :     :                       +- LogicalQueryStage Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n            :              +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n            :                 +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :                    :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :                    :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :                    :     :- LogicalQueryStage Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918], ShuffleQueryStage 17\n            :                    :     +- LogicalQueryStage Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6\n            :                    +- LogicalQueryStage Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606]\n                     +- Project [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062]\n                        +- Join Inner, (ss_store_sk#1000 = s_store_sk#1045)\n                           :- Project [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984]\n                           :  +- Join Inner, (ss_item_sk#995 = i_item_sk#972)\n                           :     :- LogicalQueryStage Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025], ShuffleQueryStage 19\n                           :     +- LogicalQueryStage Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12\n                           +- LogicalQueryStage Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9531311352,
        "inputRowCount" : 198343011
      },
      "PD" : {
        "1" : [ 4512777, 4517472, 4812090, 4715626, 5013564, 4629967, 5148049, 4433659, 4369493, 4822593, 5223436, 4810732, 4938909, 4669940, 4875652, 4784819, 4820002, 4928711, 5258567, 5069823, 4806429, 5009563, 4792856, 4639724, 5033228, 4928711, 4915138, 4928711, 4860846, 4875652, 4978773, 4766279, 5181716, 4657777, 4874419, 4862079, 4834933, 4802820, 4571372, 5074556, 4757009, 4787889, 4757009, 4743436, 4599182, 4928711, 4945000, 4806429, 4499204, 4576162, 5317068, 4944804, 4794089, 4928711, 4784819, 5258567, 5202844, 4848506, 4738469, 4964038, 4821360, 4821360, 4775549, 4968771, 4486023, 4875652, 5003902, 4794089, 5029227, 4849864, 4964038, 4761976, 5184538, 4874419, 4744100, 4790480, 4371848, 5147317, 4862079, 4775549, 4809020, 4570531, 5059625, 4809020, 5117455, 4688480, 4679210, 4901565, 5168875, 4928711, 4916496, 4945000, 4915138, 4395406, 4928711, 4973504, 4771246, 4518313, 5084022, 4517080, 4813323, 4973504, 4834933, 4989899, 4747739, 4938909, 4968771, 5263300, 4553319, 4775549, 4713220, 4744669, 4548529, 5054160, 4802820, 5058893, 4928711, 4604718, 4548529, 4822593, 4771246, 4757009, 5064358, 4834933, 4747739, 4928711, 4794089, 4547925, 4928711, 4743436, 4889225, 4851097, 4860721, 4761976, 4832342, 4833575, 4581129, 4946358, 4873061, 4847273, 4926694, 4780516, 4926569, 5004724, 4794089, 4928711, 4766279, 4775549, 4953840, 5029227, 4915138, 4299879, 4928711, 4738469, 4974236, 4887992, 5162784, 4649658, 4953840, 4516903, 4692960, 5126725, 4917854, 5156587, 4887992, 4915138, 4834933, 4416478, 5138387, 4875652, 4748580, 5217775, 4925336, 4848506, 4926569, 4889225, 4253984, 4613419, 4701389, 4836166, 4959931, 4810253, 4821360, 4508866, 5084754, 5009563, 4915138, 4752706, 4794089, 4559313, 4949107, 4806429, 4809020, 4478827, 4928711, 4519546, 4925336, 4681107, 4948179, 5148479 ],
        "0" : [ 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 22193, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 26854, 22193, 24413, 24413, 24413, 22193, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227033446,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10354,
        "IOBytes" : {
          "Total" : 1166575779,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1081764294,
            "SW" : 84811485
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 633086722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13497590,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "8" : {
            "sign" : 787881239,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12497768,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "4" : {
            "sign" : -1021455002,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1609533530298248266192,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "11" : {
            "sign" : -2053636642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12497768,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "9" : {
            "sign" : -761824140,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13497590,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "13" : {
            "sign" : -1232830294,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12997680,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], ShuffleQueryStage 28 "
          },
          "5" : {
            "sign" : 488918244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 128785678394594,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : -1667314953,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12997680,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], ShuffleQueryStage 26 "
          },
          "6" : {
            "sign" : 1279079382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 210740201009336,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -472659345,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 689800084413534971225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 582324038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1581252252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 689800084413534971225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1704119782,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16862227,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29 "
          },
          "3" : {
            "sign" : -2076365013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 689800084413534971225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Window",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- LogicalQueryStage Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608], ShuffleQueryStage 29\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- LogicalQueryStage Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], ShuffleQueryStage 26\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- LogicalQueryStage Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], ShuffleQueryStage 28\n"
      },
      "IM" : {
        "inputSizeInBytes" : 42857587,
        "inputRowCount" : 235440
      },
      "PD" : {
        "4" : [ 21131, 22982, 23148, 25130, 21332, 22910, 22845, 25464, 25202, 19130, 19130, 16026, 22910, 17391, 19296, 20965, 23244, 25464, 21044, 22910, 25368, 19130, 19058, 21227, 17326, 21131, 28010, 19058, 18880, 19130, 20965, 25281, 20965, 21044, 20893, 21044, 19392, 23148, 23148, 22786, 21131, 19209, 30328, 15875, 23061, 27722, 15648, 22910, 27905, 18993, 22982, 25368, 23464, 27722, 25464, 28010, 15751, 30695, 23148, 18993, 23061, 25065, 14373, 22982, 17391, 25281, 27571, 19296, 14497, 25281, 14432, 27809, 19130, 25812, 21044, 18934, 25281, 21227, 27809, 20965, 20893, 27506, 28010, 28125, 27905, 16026, 19209, 18341, 20965, 27722, 19296, 25281, 25368, 17542, 22982, 19130, 22910, 21044, 14373, 19296, 22910, 30590, 23148, 21131, 22845, 22910, 14270, 17463, 21227, 18934, 17391, 20769, 27809, 25684, 25281, 25130, 20893, 19392, 25202, 21044, 23148, 21044, 23061, 20965, 21131, 20893, 25281, 19058, 18993, 22982, 20828, 23244, 27905, 20965, 25281, 27722, 23061, 27905, 19130, 18934, 23148, 20828, 23148, 23148, 20715, 25569, 17164, 16026, 20828, 25368, 19058, 23061, 23244, 12932, 17213, 17267, 21044, 25464, 22845, 25464, 27571, 27722, 19209, 27722, 17391, 25006, 20666, 21131, 21044, 22910, 25281, 20769, 25202, 17391, 27571, 28010, 20893, 20828, 20965, 19058, 19058, 25281, 20715, 19296, 17213, 27809, 20965, 21131, 19130, 27809, 25368, 17542, 18880, 22982, 21131, 22786, 25464, 25281, 27809, 17326 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227041204,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2596,
        "IOBytes" : {
          "Total" : 34560624,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 23767917,
            "SW" : 10792707
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1612799012,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 15230400,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))]) "
          },
          "8" : {
            "sign" : 1501957401,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17950113,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "4" : {
            "sign" : 556757889,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1910702232603728763012,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : -598871676,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))]) "
          },
          "11" : {
            "sign" : 232858077,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 15774342,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : -370817803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 17950113,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "13" : {
            "sign" : -1709634652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "16" : {
            "sign" : 1268074444,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "5" : {
            "sign" : 1934886827,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 140318218214346,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : -315973936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 15774342,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "6" : {
            "sign" : 544553389,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 229611629805294,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -1612502108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 575498280,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "14" : {
            "sign" : -1984498623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 227946017,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 803979211,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -550692480,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], functions=[sum(UnscaledValue(ss_sales_price#1006))]) "
          },
          "7" : {
            "sign" : -1512937748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16862227,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "3" : {
            "sign" : 81000800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Window",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Window",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- LogicalQueryStage Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))])\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- LogicalQueryStage Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))])\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- LogicalQueryStage Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], functions=[sum(UnscaledValue(ss_sales_price#1006))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 43553600,
        "inputRowCount" : 400800
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227033760,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10040,
        "IOBytes" : {
          "Total" : 1166575779,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1081764294,
            "SW" : 84811485
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1089032869,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8 "
          },
          "34" : {
            "sign" : -1659190372,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "12" : {
            "sign" : 943154164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 13769686346371,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624] "
          },
          "51" : {
            "sign" : -1177316778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984] "
          },
          "8" : {
            "sign" : 773027799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 16228558908222,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "19" : {
            "sign" : 633167803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51] "
          },
          "23" : {
            "sign" : -74155522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 171954,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52)) "
          },
          "62" : {
            "sign" : -1445997824,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12 "
          },
          "4" : {
            "sign" : 579863831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1408185734770402972941123310405879186200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "40" : {
            "sign" : 915908278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#910, d_year#916, d_moy#918] "
          },
          "15" : {
            "sign" : 1949082721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
          },
          "11" : {
            "sign" : 1252455813,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14261460858741,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : 318391133,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 16228558908222,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "44" : {
            "sign" : -1684097446,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : 999350460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "22" : {
            "sign" : -164199210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#52, d_year#58, d_moy#60] "
          },
          "56" : {
            "sign" : -1112564922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#995) AND isnotnull(ss_sold_date_sk#1016)) AND isnotnull(ss_store_sk#1000)) AND dynamicpruning#1081 [ss_sold_date_sk#1016]) "
          },
          "55" : {
            "sign" : 1151676732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, ss_sold_date_sk#1016] "
          },
          "26" : {
            "sign" : 707782353,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1 "
          },
          "50" : {
            "sign" : -502335313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1000 = s_store_sk#1045) "
          },
          "37" : {
            "sign" : -1930656064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909] "
          },
          "61" : {
            "sign" : 2084596504,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1017, d_year#1023, d_moy#1025], BroadcastQueryStage 10 "
          },
          "13" : {
            "sign" : 946258979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
          },
          "46" : {
            "sign" : -847537337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12294362809260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "24" : {
            "sign" : 1687074720,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#52, d_date_id#53, d_date#54, d_month_seq#55, d_week_seq#56, d_quarter_seq#57, d_year#58, d_dow#59, d_moy#60, d_dom#61, d_qoy#62, d_fy_year#63, d_fy_quarter_seq#64, d_fy_week_seq#65, d_day_name#66, d_quarter_name#67, d_holiday#68, d_weekend#69, d_following_holiday#70, d_first_dom#71, d_last_dom#72, d_same_day_ly#73, d_same_day_lq#74, d_current_day#75, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "35" : {
            "sign" : 797606915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918] "
          },
          "16" : {
            "sign" : -1947871375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
          },
          "5" : {
            "sign" : 1748620106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 114539139328942736483676370,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 623850624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14261460858741,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "59" : {
            "sign" : 298191262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 171954,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#1023 = 2000) OR ((d_year#1023 = 1999) AND (d_moy#1025 = 12))) OR ((d_year#1023 = 2001) AND (d_moy#1025 = 1))) AND isnotnull(d_date_sk#1017)) "
          },
          "48" : {
            "sign" : 2106364923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12786137321631,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606] "
          },
          "21" : {
            "sign" : 344024550,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#29, ss_item_sk#30, ss_customer_sk#31, ss_cdemo_sk#32, ss_hdemo_sk#33, ss_addr_sk#34, ss_store_sk#35, ss_promo_sk#36, ss_ticket_number#37L, ss_quantity#38, ss_wholesale_cost#39, ss_list_price#40, ss_sales_price#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_ext_tax#46, ss_coupon_amt#47, ss_net_paid#48, ss_net_paid_inc_tax#49, ss_net_profit#50, ss_sold_date_sk#51], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : 269901771,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1016 = d_date_sk#1017) "
          },
          "43" : {
            "sign" : 1174632194,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#910, d_year#916, d_moy#918], BroadcastQueryStage 4 "
          },
          "57" : {
            "sign" : 2091863865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#994, ss_item_sk#995, ss_customer_sk#996, ss_cdemo_sk#997, ss_hdemo_sk#998, ss_addr_sk#999, ss_store_sk#1000, ss_promo_sk#1001, ss_ticket_number#1002L, ss_quantity#1003, ss_wholesale_cost#1004, ss_list_price#1005, ss_sales_price#1006, ss_ext_discount_amt#1007, ss_ext_sales_price#1008, ss_ext_wholesale_cost#1009, ss_ext_list_price#1010, ss_ext_tax#1011, ss_coupon_amt#1012, ss_net_paid#1013, ss_net_paid_inc_tax#1014, ss_net_profit#1015, ss_sold_date_sk#1016], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 1533700151,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "49" : {
            "sign" : 1615878747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062] "
          },
          "6" : {
            "sign" : 261000892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187427682538269932427834060,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "36" : {
            "sign" : -1566120612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#909 = d_date_sk#910) "
          },
          "1" : {
            "sign" : -2137297474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1499900520,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#887, ss_item_sk#888, ss_customer_sk#889, ss_cdemo_sk#890, ss_hdemo_sk#891, ss_addr_sk#892, ss_store_sk#893, ss_promo_sk#894, ss_ticket_number#895L, ss_quantity#896, ss_wholesale_cost#897, ss_list_price#898, ss_sales_price#899, ss_ext_discount_amt#900, ss_ext_sales_price#901, ss_ext_wholesale_cost#902, ss_ext_list_price#903, ss_ext_tax#904, ss_coupon_amt#905, ss_net_paid#906, ss_net_paid_inc_tax#907, ss_net_profit#908, ss_sold_date_sk#909], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : -1205061424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] "
          },
          "25" : {
            "sign" : 360573258,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#52, d_year#58, d_moy#60], BroadcastQueryStage 0 "
          },
          "60" : {
            "sign" : 1841420667,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1017, d_date_id#1018, d_date#1019, d_month_seq#1020, d_week_seq#1021, d_quarter_seq#1022, d_year#1023, d_dow#1024, d_moy#1025, d_dom#1026, d_qoy#1027, d_fy_year#1028, d_fy_quarter_seq#1029, d_fy_week_seq#1030, d_day_name#1031, d_quarter_name#1032, d_holiday#1033, d_weekend#1034, d_following_holiday#1035, d_first_dom#1036, d_last_dom#1037, d_same_day_ly#1038, d_same_day_lq#1039, d_current_day#1040, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : -1972047540,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
          },
          "47" : {
            "sign" : -77746617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13277911834001,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "31" : {
            "sign" : 1951141090,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          },
          "58" : {
            "sign" : -167613623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1017, d_year#1023, d_moy#1025] "
          },
          "53" : {
            "sign" : -2048178755,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025] "
          },
          "42" : {
            "sign" : -992647304,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#910, d_date_id#911, d_date#912, d_month_seq#913, d_week_seq#914, d_quarter_seq#915, d_year#916, d_dow#917, d_moy#918, d_dom#919, d_qoy#920, d_fy_year#921, d_fy_quarter_seq#922, d_fy_week_seq#923, d_day_name#924, d_quarter_name#925, d_holiday#926, d_weekend#927, d_following_holiday#928, d_first_dom#929, d_last_dom#930, d_same_day_ly#931, d_same_day_lq#932, d_current_day#933, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : 2000039223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 254323496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51]) "
          },
          "27" : {
            "sign" : -1593735473,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2 "
          },
          "2" : {
            "sign" : -55919967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 546892451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909]) "
          },
          "18" : {
            "sign" : -1950783352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#51 = d_date_sk#52) "
          },
          "30" : {
            "sign" : -1529060553,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12786137321631,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "7" : {
            "sign" : 1521064276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15245009883481,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "29" : {
            "sign" : 1202327388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13277911834001,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "41" : {
            "sign" : 1092104884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 171954,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910)) "
          },
          "63" : {
            "sign" : 347179192,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14 "
          },
          "3" : {
            "sign" : 1803054594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          },
          "52" : {
            "sign" : -809196354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#995 = i_item_sk#972) "
          },
          "28" : {
            "sign" : -2043480681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12294362809260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          }
        },
        "links" : [ {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Window",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Window",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n            :     :                       :     :  +- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n            :     :                       :     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n            :     :                       :     :     :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51])\n            :     :                       :     :     :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n            :     :                       :     :     :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            :     :                       :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n            :     :                       :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n            :     :                       :     :     +- LogicalQueryStage Project [d_date_sk#52, d_year#58, d_moy#60], BroadcastQueryStage 0\n            :     :                       :     +- LogicalQueryStage Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1\n            :     :                       +- LogicalQueryStage Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n            :              +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n            :                 +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :                    :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :                    :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :                    :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918]\n            :                    :     :  +- Join Inner, (ss_sold_date_sk#909 = d_date_sk#910)\n            :                    :     :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909]\n            :                    :     :     :  +- Filter (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909])\n            :                    :     :     :     :  +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :                    :     :     :     :     +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :                    :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :                    :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#887,ss_item_sk#888,ss_customer_sk#889,ss_cdemo_sk#890,ss_hdemo_sk#891,ss_addr_sk#892,ss_store_sk#893,ss_promo_sk#894,ss_ticket_number#895L,ss_quantity#896,ss_wholesale_cost#897,ss_list_price#898,ss_sales_price#899,ss_ext_discount_amt#900,ss_ext_sales_price#901,ss_ext_wholesale_cost#902,ss_ext_list_price#903,ss_ext_tax#904,ss_coupon_amt#905,ss_net_paid#906,ss_net_paid_inc_tax#907,ss_net_profit#908,ss_sold_date_sk#909] parquet\n            :                    :     :     +- LogicalQueryStage Project [d_date_sk#910, d_year#916, d_moy#918], BroadcastQueryStage 4\n            :                    :     +- LogicalQueryStage Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6\n            :                    +- LogicalQueryStage Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606]\n                     +- Project [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062]\n                        +- Join Inner, (ss_store_sk#1000 = s_store_sk#1045)\n                           :- Project [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984]\n                           :  +- Join Inner, (ss_item_sk#995 = i_item_sk#972)\n                           :     :- Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025]\n                           :     :  +- Join Inner, (ss_sold_date_sk#1016 = d_date_sk#1017)\n                           :     :     :- Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, ss_sold_date_sk#1016]\n                           :     :     :  +- Filter (((isnotnull(ss_item_sk#995) AND isnotnull(ss_sold_date_sk#1016)) AND isnotnull(ss_store_sk#1000)) AND dynamicpruning#1081 [ss_sold_date_sk#1016])\n                           :     :     :     :  +- Project [d_date_sk#1017, d_year#1023, d_moy#1025]\n                           :     :     :     :     +- Filter ((((d_year#1023 = 2000) OR ((d_year#1023 = 1999) AND (d_moy#1025 = 12))) OR ((d_year#1023 = 2001) AND (d_moy#1025 = 1))) AND isnotnull(d_date_sk#1017))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1017,d_date_id#1018,d_date#1019,d_month_seq#1020,d_week_seq#1021,d_quarter_seq#1022,d_year#1023,d_dow#1024,d_moy#1025,d_dom#1026,d_qoy#1027,d_fy_year#1028,d_fy_quarter_seq#1029,d_fy_week_seq#1030,d_day_name#1031,d_quarter_name#1032,d_holiday#1033,d_weekend#1034,d_following_holiday#1035,d_first_dom#1036,d_last_dom#1037,d_same_day_ly#1038,d_same_day_lq#1039,d_current_day#1040,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#994,ss_item_sk#995,ss_customer_sk#996,ss_cdemo_sk#997,ss_hdemo_sk#998,ss_addr_sk#999,ss_store_sk#1000,ss_promo_sk#1001,ss_ticket_number#1002L,ss_quantity#1003,ss_wholesale_cost#1004,ss_list_price#1005,ss_sales_price#1006,ss_ext_discount_amt#1007,ss_ext_sales_price#1008,ss_ext_wholesale_cost#1009,ss_ext_list_price#1010,ss_ext_tax#1011,ss_coupon_amt#1012,ss_net_paid#1013,ss_net_paid_inc_tax#1014,ss_net_profit#1015,ss_sold_date_sk#1016] parquet\n                           :     :     +- LogicalQueryStage Project [d_date_sk#1017, d_year#1023, d_moy#1025], BroadcastQueryStage 10\n                           :     +- LogicalQueryStage Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12\n                           +- LogicalQueryStage Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 125459815479,
        "inputRowCount" : 825748464
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2673.0,
        "FinishedTasksDistributionInMs" : [ 1290.0, 1290.0, 1383.0, 1383.0, 1383.0 ]
      },
      "StartTimeInMs" : 1702227011777,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 32023,
        "IOBytes" : {
          "Total" : 2532781313,
          "Details" : {
            "IR" : 438714793,
            "IW" : 0,
            "SR" : 1081764294,
            "SW" : 1012302226
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1089032869,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8 "
          },
          "34" : {
            "sign" : -1659190372,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "12" : {
            "sign" : 943154164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 13769686346371,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624] "
          },
          "51" : {
            "sign" : -1177316778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984] "
          },
          "8" : {
            "sign" : 773027799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 16228558908222,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "19" : {
            "sign" : 633167803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51] "
          },
          "23" : {
            "sign" : -74155522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 171954,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52)) "
          },
          "62" : {
            "sign" : -1445997824,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12 "
          },
          "4" : {
            "sign" : 579863831,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1408185734770402972941123310405879186200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "40" : {
            "sign" : 915908278,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#910, d_year#916, d_moy#918] "
          },
          "15" : {
            "sign" : 1949082721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
          },
          "11" : {
            "sign" : 1252455813,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14261460858741,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : 318391133,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 16228558908222,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "44" : {
            "sign" : -1684097446,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6 "
          },
          "33" : {
            "sign" : 999350460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "22" : {
            "sign" : -164199210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#52, d_year#58, d_moy#60] "
          },
          "56" : {
            "sign" : -1112564922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#995) AND isnotnull(ss_sold_date_sk#1016)) AND isnotnull(ss_store_sk#1000)) AND dynamicpruning#1081 [ss_sold_date_sk#1016]) "
          },
          "55" : {
            "sign" : 1151676732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, ss_sold_date_sk#1016] "
          },
          "26" : {
            "sign" : 707782353,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1 "
          },
          "50" : {
            "sign" : -502335313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1000 = s_store_sk#1045) "
          },
          "37" : {
            "sign" : -1930656064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909] "
          },
          "61" : {
            "sign" : 2084596504,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1052000,
            "rowCount" : 428,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1017, d_year#1023, d_moy#1025], BroadcastQueryStage 10 "
          },
          "13" : {
            "sign" : 946258979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
          },
          "46" : {
            "sign" : -847537337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12294362809260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "24" : {
            "sign" : 1687074720,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#52, d_date_id#53, d_date#54, d_month_seq#55, d_week_seq#56, d_quarter_seq#57, d_year#58, d_dow#59, d_moy#60, d_dom#61, d_qoy#62, d_fy_year#63, d_fy_quarter_seq#64, d_fy_week_seq#65, d_day_name#66, d_quarter_name#67, d_holiday#68, d_weekend#69, d_following_holiday#70, d_first_dom#71, d_last_dom#72, d_same_day_ly#73, d_same_day_lq#74, d_current_day#75, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "35" : {
            "sign" : 797606915,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3597576913408,
            "rowCount" : 112424278544,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918] "
          },
          "16" : {
            "sign" : -1947871375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
          },
          "5" : {
            "sign" : 1748620106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 114539139328942736483676370,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 623850624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14261460858741,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "59" : {
            "sign" : 298191262,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 171954,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#1023 = 2000) OR ((d_year#1023 = 1999) AND (d_moy#1025 = 12))) OR ((d_year#1023 = 2001) AND (d_moy#1025 = 1))) AND isnotnull(d_date_sk#1017)) "
          },
          "48" : {
            "sign" : 2106364923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12786137321631,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606] "
          },
          "21" : {
            "sign" : 344024550,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#29, ss_item_sk#30, ss_customer_sk#31, ss_cdemo_sk#32, ss_hdemo_sk#33, ss_addr_sk#34, ss_store_sk#35, ss_promo_sk#36, ss_ticket_number#37L, ss_quantity#38, ss_wholesale_cost#39, ss_list_price#40, ss_sales_price#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_ext_tax#46, ss_coupon_amt#47, ss_net_paid#48, ss_net_paid_inc_tax#49, ss_net_profit#50, ss_sold_date_sk#51], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "54" : {
            "sign" : 269901771,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4496971141760,
            "rowCount" : 112424278544,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1016 = d_date_sk#1017) "
          },
          "43" : {
            "sign" : 1174632194,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1052000,
            "rowCount" : 428,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#910, d_year#916, d_moy#918], BroadcastQueryStage 4 "
          },
          "57" : {
            "sign" : 2091863865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#994, ss_item_sk#995, ss_customer_sk#996, ss_cdemo_sk#997, ss_hdemo_sk#998, ss_addr_sk#999, ss_store_sk#1000, ss_promo_sk#1001, ss_ticket_number#1002L, ss_quantity#1003, ss_wholesale_cost#1004, ss_list_price#1005, ss_sales_price#1006, ss_ext_discount_amt#1007, ss_ext_sales_price#1008, ss_ext_wholesale_cost#1009, ss_ext_list_price#1010, ss_ext_tax#1011, ss_coupon_amt#1012, ss_net_paid#1013, ss_net_paid_inc_tax#1014, ss_net_profit#1015, ss_sold_date_sk#1016], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 1533700151,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "49" : {
            "sign" : 1615878747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062] "
          },
          "6" : {
            "sign" : 261000892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187427682538269932427834060,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "36" : {
            "sign" : -1566120612,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4496971141760,
            "rowCount" : 112424278544,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#909 = d_date_sk#910) "
          },
          "1" : {
            "sign" : -2137297474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1499900520,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#887, ss_item_sk#888, ss_customer_sk#889, ss_cdemo_sk#890, ss_hdemo_sk#891, ss_addr_sk#892, ss_store_sk#893, ss_promo_sk#894, ss_ticket_number#895L, ss_quantity#896, ss_wholesale_cost#897, ss_list_price#898, ss_sales_price#899, ss_ext_discount_amt#900, ss_ext_sales_price#901, ss_ext_wholesale_cost#902, ss_ext_list_price#903, ss_ext_tax#904, ss_coupon_amt#905, ss_net_paid#906, ss_net_paid_inc_tax#907, ss_net_profit#908, ss_sold_date_sk#909], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : -1205061424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3597576913408,
            "rowCount" : 112424278544,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] "
          },
          "25" : {
            "sign" : 360573258,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1052000,
            "rowCount" : 428,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#52, d_year#58, d_moy#60], BroadcastQueryStage 0 "
          },
          "60" : {
            "sign" : 1841420667,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1017, d_date_id#1018, d_date#1019, d_month_seq#1020, d_week_seq#1021, d_quarter_seq#1022, d_year#1023, d_dow#1024, d_moy#1025, d_dom#1026, d_qoy#1027, d_fy_year#1028, d_fy_quarter_seq#1029, d_fy_week_seq#1030, d_day_name#1031, d_quarter_name#1032, d_holiday#1033, d_weekend#1034, d_following_holiday#1035, d_first_dom#1036, d_last_dom#1037, d_same_day_ly#1038, d_same_day_lq#1039, d_current_day#1040, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : -1972047540,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
          },
          "47" : {
            "sign" : -77746617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13277911834001,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "31" : {
            "sign" : 1951141090,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          },
          "58" : {
            "sign" : -167613623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1017, d_year#1023, d_moy#1025] "
          },
          "53" : {
            "sign" : -2048178755,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3597576913408,
            "rowCount" : 112424278544,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025] "
          },
          "42" : {
            "sign" : -992647304,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#910, d_date_id#911, d_date#912, d_month_seq#913, d_week_seq#914, d_quarter_seq#915, d_year#916, d_dow#917, d_moy#918, d_dom#919, d_qoy#920, d_fy_year#921, d_fy_quarter_seq#922, d_fy_week_seq#923, d_day_name#924, d_quarter_name#925, d_holiday#926, d_weekend#927, d_following_holiday#928, d_first_dom#929, d_last_dom#930, d_same_day_ly#931, d_same_day_lq#932, d_current_day#933, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : 2000039223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 254323496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51]) "
          },
          "27" : {
            "sign" : -1593735473,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2 "
          },
          "2" : {
            "sign" : -55919967,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 546892451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909]) "
          },
          "18" : {
            "sign" : -1950783352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4496971141760,
            "rowCount" : 112424278544,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#51 = d_date_sk#52) "
          },
          "30" : {
            "sign" : -1529060553,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12786137321631,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "7" : {
            "sign" : 1521064276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15245009883481,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "29" : {
            "sign" : 1202327388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13277911834001,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "41" : {
            "sign" : 1092104884,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 171954,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910)) "
          },
          "63" : {
            "sign" : 347179192,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14 "
          },
          "3" : {
            "sign" : 1803054594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          },
          "52" : {
            "sign" : -809196354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#995 = i_item_sk#972) "
          },
          "28" : {
            "sign" : -2043480681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12294362809260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          }
        },
        "links" : [ {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Window",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalQueryStage",
          "toId" : 54,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Join",
          "toId" : 53,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Project",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "LogicalQueryStage",
          "toId" : 52,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Join",
          "toId" : 51,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Project",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalQueryStage",
          "toId" : 50,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Join",
          "toId" : 49,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Project",
          "toId" : 48,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Aggregate",
          "toId" : 47,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Window",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n            :     :                       :     :  +- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n            :     :                       :     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n            :     :                       :     :     :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51])\n            :     :                       :     :     :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n            :     :                       :     :     :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            :     :                       :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n            :     :                       :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n            :     :                       :     :     +- LogicalQueryStage Project [d_date_sk#52, d_year#58, d_moy#60], BroadcastQueryStage 0\n            :     :                       :     +- LogicalQueryStage Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1\n            :     :                       +- LogicalQueryStage Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n            :              +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n            :                 +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :                    :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :                    :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :                    :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918]\n            :                    :     :  +- Join Inner, (ss_sold_date_sk#909 = d_date_sk#910)\n            :                    :     :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909]\n            :                    :     :     :  +- Filter (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909])\n            :                    :     :     :     :  +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :                    :     :     :     :     +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :                    :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :                    :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#887,ss_item_sk#888,ss_customer_sk#889,ss_cdemo_sk#890,ss_hdemo_sk#891,ss_addr_sk#892,ss_store_sk#893,ss_promo_sk#894,ss_ticket_number#895L,ss_quantity#896,ss_wholesale_cost#897,ss_list_price#898,ss_sales_price#899,ss_ext_discount_amt#900,ss_ext_sales_price#901,ss_ext_wholesale_cost#902,ss_ext_list_price#903,ss_ext_tax#904,ss_coupon_amt#905,ss_net_paid#906,ss_net_paid_inc_tax#907,ss_net_profit#908,ss_sold_date_sk#909] parquet\n            :                    :     :     +- LogicalQueryStage Project [d_date_sk#910, d_year#916, d_moy#918], BroadcastQueryStage 4\n            :                    :     +- LogicalQueryStage Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6\n            :                    +- LogicalQueryStage Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606]\n                     +- Project [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062]\n                        +- Join Inner, (ss_store_sk#1000 = s_store_sk#1045)\n                           :- Project [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984]\n                           :  +- Join Inner, (ss_item_sk#995 = i_item_sk#972)\n                           :     :- Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025]\n                           :     :  +- Join Inner, (ss_sold_date_sk#1016 = d_date_sk#1017)\n                           :     :     :- Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, ss_sold_date_sk#1016]\n                           :     :     :  +- Filter (((isnotnull(ss_item_sk#995) AND isnotnull(ss_sold_date_sk#1016)) AND isnotnull(ss_store_sk#1000)) AND dynamicpruning#1081 [ss_sold_date_sk#1016])\n                           :     :     :     :  +- Project [d_date_sk#1017, d_year#1023, d_moy#1025]\n                           :     :     :     :     +- Filter ((((d_year#1023 = 2000) OR ((d_year#1023 = 1999) AND (d_moy#1025 = 12))) OR ((d_year#1023 = 2001) AND (d_moy#1025 = 1))) AND isnotnull(d_date_sk#1017))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1017,d_date_id#1018,d_date#1019,d_month_seq#1020,d_week_seq#1021,d_quarter_seq#1022,d_year#1023,d_dow#1024,d_moy#1025,d_dom#1026,d_qoy#1027,d_fy_year#1028,d_fy_quarter_seq#1029,d_fy_week_seq#1030,d_day_name#1031,d_quarter_name#1032,d_holiday#1033,d_weekend#1034,d_following_holiday#1035,d_first_dom#1036,d_last_dom#1037,d_same_day_ly#1038,d_same_day_lq#1039,d_current_day#1040,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#994,ss_item_sk#995,ss_customer_sk#996,ss_cdemo_sk#997,ss_hdemo_sk#998,ss_addr_sk#999,ss_store_sk#1000,ss_promo_sk#1001,ss_ticket_number#1002L,ss_quantity#1003,ss_wholesale_cost#1004,ss_list_price#1005,ss_sales_price#1006,ss_ext_discount_amt#1007,ss_ext_sales_price#1008,ss_ext_wholesale_cost#1009,ss_ext_list_price#1010,ss_ext_tax#1011,ss_coupon_amt#1012,ss_net_paid#1013,ss_net_paid_inc_tax#1014,ss_net_profit#1015,ss_sold_date_sk#1016] parquet\n                           :     :     +- LogicalQueryStage Project [d_date_sk#1017, d_year#1023, d_moy#1025], BroadcastQueryStage 10\n                           :     +- LogicalQueryStage Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12\n                           +- LogicalQueryStage Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 125462929539,
        "inputRowCount" : 825747651
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6917.0,
        "FinishedTasksDistributionInMs" : [ 1290.0, 1383.0, 1855.0, 2389.0, 2389.0 ]
      },
      "StartTimeInMs" : 1702227014705,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 29095,
        "IOBytes" : {
          "Total" : 2532687432,
          "Details" : {
            "IR" : 438620912,
            "IW" : 0,
            "SR" : 1081764294,
            "SW" : 1012302226
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1612799012,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 193292096,
            "rowCount" : 1754790,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))]) "
          },
          "8" : {
            "sign" : 1501957401,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 227808541,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "4" : {
            "sign" : 556757889,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4517513348638243499872592,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : -598871676,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 193292096,
            "rowCount" : 1754790,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))]) "
          },
          "11" : {
            "sign" : 232858077,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 200195385,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : -370817803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 227808541,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "13" : {
            "sign" : -1709634652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 185857784,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "16" : {
            "sign" : 1268074444,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 185857784,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "5" : {
            "sign" : 1934886827,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 24306290817705238,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : -315973936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 200195385,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "6" : {
            "sign" : 544553389,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39773930428972208,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -1612502108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1936077149416390071373968,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 575498280,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 200726407,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "14" : {
            "sign" : -1984498623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 200726407,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 227946017,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 803979211,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1936077149416390071373968,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -550692480,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 193292096,
            "rowCount" : 1754790,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], functions=[sum(UnscaledValue(ss_sales_price#1006))]) "
          },
          "7" : {
            "sign" : -1512937748,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 214001962,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "3" : {
            "sign" : 81000800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1936077149416390071373968,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Window",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Window",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- LogicalQueryStage Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))])\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- LogicalQueryStage Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))])\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- LogicalQueryStage Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], functions=[sum(UnscaledValue(ss_sales_price#1006))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 579876288,
        "inputRowCount" : 5264370
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227039651,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4149,
        "IOBytes" : {
          "Total" : 173832220,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 154273553,
            "SW" : 19558667
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 29107830,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1000 = s_store_sk#1045) "
          },
          "12" : {
            "sign" : -320466618,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 13769686346371,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624] "
          },
          "8" : {
            "sign" : 1782167107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 16228558908222,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "19" : {
            "sign" : -1593735473,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2 "
          },
          "23" : {
            "sign" : 1628746924,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          },
          "4" : {
            "sign" : 297613108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1408185734770402972941123310405879186200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : 1749118467,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
          },
          "11" : {
            "sign" : 1597035673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 14261460858741,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "9" : {
            "sign" : 745141313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 16228558908222,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "33" : {
            "sign" : 1866254422,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062] "
          },
          "22" : {
            "sign" : -594168543,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12786137321631,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "26" : {
            "sign" : -531939494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "37" : {
            "sign" : -413889502,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025], ShuffleQueryStage 19 "
          },
          "13" : {
            "sign" : -1072626629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12786137321631,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
          },
          "24" : {
            "sign" : 100940449,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "35" : {
            "sign" : -176029295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984] "
          },
          "16" : {
            "sign" : 546317183,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
          },
          "5" : {
            "sign" : 1375589556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 114539139328942736483676370,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 665919418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14261460858741,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          },
          "21" : {
            "sign" : -2033141338,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13277911834001,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "32" : {
            "sign" : -375499966,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 12786137321631,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606] "
          },
          "6" : {
            "sign" : 344066338,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187427682538269932427834060,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "36" : {
            "sign" : 599375807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#995 = i_item_sk#972) "
          },
          "1" : {
            "sign" : -263664951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 347179192,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14 "
          },
          "17" : {
            "sign" : 1440470762,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60], ShuffleQueryStage 15 "
          },
          "25" : {
            "sign" : -1599599122,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "14" : {
            "sign" : 604879726,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13707660732199,
            "rowCount" : 115190426321,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
          },
          "31" : {
            "sign" : 252363714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 13277911834001,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : 373693204,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 2084538113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12294362809260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "27" : {
            "sign" : -632691683,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918], ShuffleQueryStage 17 "
          },
          "2" : {
            "sign" : -506370454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1445997824,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12 "
          },
          "18" : {
            "sign" : 707782353,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1 "
          },
          "30" : {
            "sign" : 311794702,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12294362809260,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "7" : {
            "sign" : 1298976298,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15245009883481,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "29" : {
            "sign" : -1089032869,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8 "
          },
          "3" : {
            "sign" : 2002598661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 603508172044458416974767133031091079800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          },
          "28" : {
            "sign" : -1684097446,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6 "
          }
        },
        "links" : [ {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Aggregate",
          "toId" : 11,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Window",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Window",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Window",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Window",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- LogicalQueryStage Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60], ShuffleQueryStage 15\n            :     :                       :     +- LogicalQueryStage Project [i_item_sk#7, i_brand#15, i_category#19], ShuffleQueryStage 1\n            :     :                       +- LogicalQueryStage Project [s_store_sk#80, s_store_name#85, s_company_name#97], BroadcastQueryStage 2\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n            :              +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n            :                 +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :                    :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :                    :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :                    :     :- LogicalQueryStage Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918], ShuffleQueryStage 17\n            :                    :     +- LogicalQueryStage Project [i_item_sk#865, i_brand#873, i_category#877], ShuffleQueryStage 6\n            :                    +- LogicalQueryStage Project [s_store_sk#938, s_store_name#943, s_company_name#955], BroadcastQueryStage 8\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606]\n                     +- Project [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062]\n                        +- Join Inner, (ss_store_sk#1000 = s_store_sk#1045)\n                           :- Project [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984]\n                           :  +- Join Inner, (ss_item_sk#995 = i_item_sk#972)\n                           :     :- LogicalQueryStage Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025], ShuffleQueryStage 19\n                           :     +- LogicalQueryStage Project [i_item_sk#972, i_brand#980, i_category#984], ShuffleQueryStage 12\n                           +- LogicalQueryStage Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25530988731,
        "inputRowCount" : 797232063
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6917.0,
        "FinishedTasksDistributionInMs" : [ 1290.0, 1383.0, 1855.0, 2389.0, 2389.0 ]
      },
      "StartTimeInMs" : 1702227014989,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 28811,
        "IOBytes" : {
          "Total" : 2532687432,
          "Details" : {
            "IR" : 438620912,
            "IW" : 0,
            "SR" : 1081764294,
            "SW" : 1012302226
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 679573780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#909 = d_date_sk#910) "
          },
          "4" : {
            "sign" : 526514411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "11" : {
            "sign" : 1499900520,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#887, ss_item_sk#888, ss_customer_sk#889, ss_cdemo_sk#890, ss_hdemo_sk#891, ss_addr_sk#892, ss_store_sk#893, ss_promo_sk#894, ss_ticket_number#895L, ss_quantity#896, ss_wholesale_cost#897, ss_list_price#898, ss_sales_price#899, ss_ext_discount_amt#900, ss_ext_sales_price#901, ss_ext_wholesale_cost#902, ss_ext_list_price#903, ss_ext_tax#904, ss_coupon_amt#905, ss_net_paid#906, ss_net_paid_inc_tax#907, ss_net_profit#908, ss_sold_date_sk#909], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : -1930656064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909] "
          },
          "5" : {
            "sign" : -1063847371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "10" : {
            "sign" : 546892451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909]) "
          },
          "6" : {
            "sign" : 83728021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "1" : {
            "sign" : -1100970382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14706276,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 14706276,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : -1127226229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13616922,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 13616922,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "2" : {
            "sign" : 1148730475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              },
              "compileTime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "7" : {
            "sign" : 205062997,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918] "
          },
          "3" : {
            "sign" : 759113004,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Aggregate",
          "toId" : 1,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Window",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n+- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n   +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n      +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n         +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918]\n            :     :  +- Join Inner, (ss_sold_date_sk#909 = d_date_sk#910)\n            :     :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909]\n            :     :     :  +- Filter (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909])\n            :     :     :     :  +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :     :     :     :     +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#887,ss_item_sk#888,ss_customer_sk#889,ss_cdemo_sk#890,ss_hdemo_sk#891,ss_addr_sk#892,ss_store_sk#893,ss_promo_sk#894,ss_ticket_number#895L,ss_quantity#896,ss_wholesale_cost#897,ss_list_price#898,ss_sales_price#899,ss_ext_discount_amt#900,ss_ext_sales_price#901,ss_ext_wholesale_cost#902,ss_ext_list_price#903,ss_ext_tax#904,ss_coupon_amt#905,ss_net_paid#906,ss_net_paid_inc_tax#907,ss_net_profit#908,ss_sold_date_sk#909] parquet\n            :     :     +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :     :        +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :     +- Project [i_item_sk#865, i_brand#873, i_category#877]\n            :        +- Filter (isnotnull(i_item_sk#865) AND (isnotnull(i_category#877) AND isnotnull(i_brand#873)))\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#865,i_item_id#866,i_rec_start_date#867,i_rec_end_date#868,i_item_desc#869,i_current_price#870,i_wholesale_cost#871,i_brand_id#872,i_brand#873,i_class_id#874,i_class#875,i_category_id#876,i_category#877,i_manufact_id#878,i_manufact#879,i_size#880,i_formulation#881,i_color#882,i_units#883,i_container#884,i_manager_id#885,i_product_name#886] parquet\n            +- Project [s_store_sk#938, s_store_name#943, s_company_name#955]\n               +- Filter (isnotnull(s_store_sk#938) AND (isnotnull(s_store_name#943) AND isnotnull(s_company_name#955)))\n                  +- Relation spark_catalog.tpcds_100.store[s_store_sk#938,s_store_id#939,s_rec_start_date#940,s_rec_end_date#941,s_closed_date_sk#942,s_store_name#943,s_number_employees#944,s_floor_space#945,s_hours#946,s_manager#947,s_market_id#948,s_geography_class#949,s_market_desc#950,s_market_manager#951,s_division_id#952,s_division_name#953,s_company_id#954,s_company_name#955,s_street_number#956,s_street_name#957,s_street_type#958,s_suite_number#959,s_city#960,s_county#961,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1272352196,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] Input [8]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606, rn#971] "
          },
          "1" : {
            "sign" : 878780687,
            "className" : "org.apache.spark.sql.execution.window.WindowExec",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Input [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606] Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "2" : {
            "sign" : -1829517084,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606] Arguments: [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : -2147300387,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 12997680,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606] Arguments: 26 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Window",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n+- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n   +- Sort [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST], false, 0\n      +- ShuffleQueryStage 26\n         +- Exchange hashpartitioning(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, 200), ENSURE_REQUIREMENTS, [plan_id=2760]\n            +- *(23) HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))], output=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 22\n                     +- ReusedExchange [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum#1085L], Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12997680,
        "inputRowCount" : 117720
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 21131, 22982, 23148, 25130, 21332, 22910, 22845, 25464, 25202, 19130, 19130, 16026, 22910, 17391, 19296, 20965, 23244, 25464, 21044, 22910, 25368, 19130, 19058, 21227, 17326, 21131, 28010, 19058, 18880, 19130, 20965, 25281, 20965, 21044, 20893, 21044, 19392, 23148, 23148, 22786, 21131, 19209, 30328, 15875, 23061, 27722, 15648, 22910, 27905, 18993, 22982, 25368, 23464, 27722, 25464, 28010, 15751, 30695, 23148, 18993, 23061, 25065, 14373, 22982, 17391, 25281, 27571, 19296, 14497, 25281, 14432, 27809, 19130, 25812, 21044, 18934, 25281, 21227, 27809, 20965, 20893, 27506, 28010, 28125, 27905, 16026, 19209, 18341, 20965, 27722, 19296, 25281, 25368, 17542, 22982, 19130, 22910, 21044, 14373, 19296, 22910, 30590, 23148, 21131, 22845, 22910, 14270, 17463, 21227, 18934, 17391, 20769, 27809, 25684, 25281, 25130, 20893, 19392, 25202, 21044, 23148, 21044, 23061, 20965, 21131, 20893, 25281, 19058, 18993, 22982, 20828, 23244, 27905, 20965, 25281, 27722, 23061, 27905, 19130, 18934, 23148, 20828, 23148, 23148, 20715, 25569, 17164, 16026, 20828, 25368, 19058, 23061, 23244, 12932, 17213, 17267, 21044, 25464, 22845, 25464, 27571, 27722, 19209, 27722, 17391, 25006, 20666, 21131, 21044, 22910, 25281, 20769, 25202, 17391, 27571, 28010, 20893, 20828, 20965, 19058, 19058, 25281, 20715, 19296, 17213, 27809, 20965, 21131, 19130, 27809, 25368, 17542, 18880, 22982, 21131, 22786, 25464, 25281, 27809, 17326 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 19 ],
      "Objectives" : {
        "DurationInMs" : 767,
        "TotalTasksDurationInMs" : 756,
        "IOBytes" : {
          "Total" : 7321573,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4209250,
            "SW" : 3112323
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -830180255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#30 = i_item_sk#7) "
          },
          "1" : {
            "sign" : -323157368,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] "
          },
          "0" : {
            "sign" : 994777105,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15230400,
                "rowCount" : 133600
              },
              "compileTime" : {
                "sizeInBytes" : 15230400,
                "rowCount" : 133600
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624] "
          },
          "2" : {
            "sign" : -444213639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#35 = s_store_sk#80) "
          },
          "3" : {
            "sign" : 492163333,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n+- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n   +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n      :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n      :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n      :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n      :     :  +- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n      :     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n      :     :     :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51])\n      :     :     :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n      :     :     :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n      :     :     +- Project [d_date_sk#52, d_year#58, d_moy#60]\n      :     :        +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n      :     +- Project [i_item_sk#7, i_brand#15, i_category#19]\n      :        +- Filter (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15)))\n      :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#7,i_item_id#8,i_rec_start_date#9,i_rec_end_date#10,i_item_desc#11,i_current_price#12,i_wholesale_cost#13,i_brand_id#14,i_brand#15,i_class_id#16,i_class#17,i_category_id#18,i_category#19,i_manufact_id#20,i_manufact#21,i_size#22,i_formulation#23,i_color#24,i_units#25,i_container#26,i_manager_id#27,i_product_name#28] parquet\n      +- Project [s_store_sk#80, s_store_name#85, s_company_name#97]\n         +- Filter (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97)))\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#80,s_store_id#81,s_rec_start_date#82,s_rec_end_date#83,s_closed_date_sk#84,s_store_name#85,s_number_employees#86,s_floor_space#87,s_hours#88,s_manager#89,s_market_id#90,s_geography_class#91,s_market_desc#92,s_market_manager#93,s_division_id#94,s_division_name#95,s_company_id#96,s_company_name#97,s_street_number#98,s_street_name#99,s_street_type#100,s_suite_number#101,s_city#102,s_county#103,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -2059094028,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 12340264,
            "rowCount" : 203275,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [i_item_sk#7, i_brand#15, i_category#19] Arguments: 1 "
          },
          "4" : {
            "sign" : -324123648,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 23842407443,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#30] Right keys [1]: [i_item_sk#7] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : -1224273999,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051792,
            "rowCount" : 401,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [s_store_sk#80, s_store_name#85, s_company_name#97] Arguments: 2 "
          },
          "5" : {
            "sign" : 961793304,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] Arguments: [ss_item_sk#30 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1126487973,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3163711728,
            "rowCount" : 65910661,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] Arguments: 15 "
          },
          "1" : {
            "sign" : -184458432,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 61252422134,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] Input [9]: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19, s_store_sk#80, s_store_name#85, s_company_name#97] "
          },
          "0" : {
            "sign" : -859070943,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 15230400,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97] Keys [6]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60] Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#41))] Aggregate Attributes [1]: [sum#1082L] Results [7]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L] "
          },
          "2" : {
            "sign" : -157844129,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 65875246446,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#35] Right keys [1]: [s_store_sk#80] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 883138302,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [i_item_sk#7, i_brand#15, i_category#19] Arguments: [i_item_sk#7 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : -959971740,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 21544344075,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19] Input [8]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_item_sk#7, i_brand#15, i_category#19] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[partial_sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L])\n+- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n   +- BroadcastHashJoin [ss_store_sk#35], [s_store_sk#80], Inner, BuildRight, false\n      :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n      :  +- SortMergeJoin [ss_item_sk#30], [i_item_sk#7], Inner\n      :     :- Sort [ss_item_sk#30 ASC NULLS FIRST], false, 0\n      :     :  +- ShuffleQueryStage 15\n      :     :     +- Exchange hashpartitioning(ss_item_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=1555]\n      :     :        +- *(10) Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n      :     :           +- *(10) BroadcastHashJoin [ss_sold_date_sk#51], [d_date_sk#52], Inner, BuildRight, false\n      :     :              :- *(10) Filter (isnotnull(ss_item_sk#30) AND isnotnull(ss_store_sk#35))\n      :     :              :  +- *(10) ColumnarToRow\n      :     :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#30,ss_store_sk#35,ss_sales_price#41,ss_sold_date_sk#51] Batched: true, DataFilters: [isnotnull(ss_item_sk#30), isnotnull(ss_store_sk#35)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#51), dynamicpruningexpression(ss_sold_date_sk#51 IN dynamicpruning#1079)], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n      :     :              :           +- SubqueryBroadcast dynamicpruning#1079, 0, [d_date_sk#52], [id=#1529]\n      :     :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                BroadcastQueryStage 1\n                                                +- ReusedExchange [d_date_sk#52, d_year#58, d_moy#60], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n                                             +- == Initial Plan ==\n                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1526]\n                                                +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :              +- BroadcastQueryStage 0\n      :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n      :     :                    +- *(1) Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n      :     :                       +- *(1) ColumnarToRow\n      :     :                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     +- Sort [i_item_sk#7 ASC NULLS FIRST], false, 0\n      :        +- ShuffleQueryStage 1\n      :           +- Exchange hashpartitioning(i_item_sk#7, 200), ENSURE_REQUIREMENTS, [plan_id=528]\n      :              +- *(2) Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))\n      :                 +- *(2) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#7,i_brand#15,i_category#19] Batched: true, DataFilters: [isnotnull(i_item_sk#7), isnotnull(i_category#19), isnotnull(i_brand#15)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>\n      +- BroadcastQueryStage 2\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=547]\n            +- *(3) Filter ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97))\n               +- *(3) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#80,s_store_name#85,s_company_name#97] Batched: true, DataFilters: [isnotnull(s_store_sk#80), isnotnull(s_store_name#85), isnotnull(s_company_name#97)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3177103784,
        "inputRowCount" : 66114337
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 4512777, 4517472, 4812090, 4715626, 5013564, 4629967, 5148049, 4433659, 4369493, 4822593, 5223436, 4810732, 4938909, 4669940, 4875652, 4784819, 4820002, 4928711, 5258567, 5069823, 4806429, 5009563, 4792856, 4639724, 5033228, 4928711, 4915138, 4928711, 4860846, 4875652, 4978773, 4766279, 5181716, 4657777, 4874419, 4862079, 4834933, 4802820, 4571372, 5074556, 4757009, 4787889, 4757009, 4743436, 4599182, 4928711, 4945000, 4806429, 4499204, 4576162, 5317068, 4944804, 4794089, 4928711, 4784819, 5258567, 5202844, 4848506, 4738469, 4964038, 4821360, 4821360, 4775549, 4968771, 4486023, 4875652, 5003902, 4794089, 5029227, 4849864, 4964038, 4761976, 5184538, 4874419, 4744100, 4790480, 4371848, 5147317, 4862079, 4775549, 4809020, 4570531, 5059625, 4809020, 5117455, 4688480, 4679210, 4901565, 5168875, 4928711, 4916496, 4945000, 4915138, 4395406, 4928711, 4973504, 4771246, 4518313, 5084022, 4517080, 4813323, 4973504, 4834933, 4989899, 4747739, 4938909, 4968771, 5263300, 4553319, 4775549, 4713220, 4744669, 4548529, 5054160, 4802820, 5058893, 4928711, 4604718, 4548529, 4822593, 4771246, 4757009, 5064358, 4834933, 4747739, 4928711, 4794089, 4547925, 4928711, 4743436, 4889225, 4851097, 4860721, 4761976, 4832342, 4833575, 4581129, 4946358, 4873061, 4847273, 4926694, 4780516, 4926569, 5004724, 4794089, 4928711, 4766279, 4775549, 4953840, 5029227, 4915138, 4299879, 4928711, 4738469, 4974236, 4887992, 5162784, 4649658, 4953840, 4516903, 4692960, 5126725, 4917854, 5156587, 4887992, 4915138, 4834933, 4416478, 5138387, 4875652, 4748580, 5217775, 4925336, 4848506, 4926569, 4889225, 4253984, 4613419, 4701389, 4836166, 4959931, 4810253, 4821360, 4508866, 5084754, 5009563, 4915138, 4752706, 4794089, 4559313, 4949107, 4806429, 4809020, 4478827, 4928711, 4519546, 4925336, 4681107, 4948179, 5148479 ],
        "0" : [ 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 22193, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 26854, 22193, 24413, 24413, 24413, 22193, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 26854, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 5877,
        "TotalTasksDurationInMs" : 88334,
        "IOBytes" : {
          "Total" : 992743559,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 927490741,
            "SW" : 65252818
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 679573780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#909 = d_date_sk#910) "
          },
          "4" : {
            "sign" : 526514411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#893 = s_store_sk#938) "
          },
          "11" : {
            "sign" : 1499900520,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#887, ss_item_sk#888, ss_customer_sk#889, ss_cdemo_sk#890, ss_hdemo_sk#891, ss_addr_sk#892, ss_store_sk#893, ss_promo_sk#894, ss_ticket_number#895L, ss_quantity#896, ss_wholesale_cost#897, ss_list_price#898, ss_sales_price#899, ss_ext_discount_amt#900, ss_ext_sales_price#901, ss_ext_wholesale_cost#902, ss_ext_list_price#903, ss_ext_tax#904, ss_coupon_amt#905, ss_net_paid#906, ss_net_paid_inc_tax#907, ss_net_profit#908, ss_sold_date_sk#909], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : -1930656064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909] "
          },
          "5" : {
            "sign" : -1063847371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877] "
          },
          "10" : {
            "sign" : 546892451,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909]) "
          },
          "6" : {
            "sign" : 83728021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#888 = i_item_sk#865) "
          },
          "1" : {
            "sign" : -1100970382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14706276,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 14706276,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "0" : {
            "sign" : -1127226229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13616922,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 13616922,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] "
          },
          "2" : {
            "sign" : 1148730475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              },
              "compileTime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606] "
          },
          "7" : {
            "sign" : 205062997,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918] "
          },
          "3" : {
            "sign" : 759113004,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Aggregate",
          "toId" : 1,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Window",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n+- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n   +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n      +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n         +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918]\n            :     :  +- Join Inner, (ss_sold_date_sk#909 = d_date_sk#910)\n            :     :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909]\n            :     :     :  +- Filter (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909])\n            :     :     :     :  +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :     :     :     :     +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#887,ss_item_sk#888,ss_customer_sk#889,ss_cdemo_sk#890,ss_hdemo_sk#891,ss_addr_sk#892,ss_store_sk#893,ss_promo_sk#894,ss_ticket_number#895L,ss_quantity#896,ss_wholesale_cost#897,ss_list_price#898,ss_sales_price#899,ss_ext_discount_amt#900,ss_ext_sales_price#901,ss_ext_wholesale_cost#902,ss_ext_list_price#903,ss_ext_tax#904,ss_coupon_amt#905,ss_net_paid#906,ss_net_paid_inc_tax#907,ss_net_profit#908,ss_sold_date_sk#909] parquet\n            :     :     +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :     :        +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :     +- Project [i_item_sk#865, i_brand#873, i_category#877]\n            :        +- Filter (isnotnull(i_item_sk#865) AND (isnotnull(i_category#877) AND isnotnull(i_brand#873)))\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#865,i_item_id#866,i_rec_start_date#867,i_rec_end_date#868,i_item_desc#869,i_current_price#870,i_wholesale_cost#871,i_brand_id#872,i_brand#873,i_class_id#874,i_class#875,i_category_id#876,i_category#877,i_manufact_id#878,i_manufact#879,i_size#880,i_formulation#881,i_color#882,i_units#883,i_container#884,i_manager_id#885,i_product_name#886] parquet\n            +- Project [s_store_sk#938, s_store_name#943, s_company_name#955]\n               +- Filter (isnotnull(s_store_sk#938) AND (isnotnull(s_store_name#943) AND isnotnull(s_company_name#955)))\n                  +- Relation spark_catalog.tpcds_100.store[s_store_sk#938,s_store_id#939,s_rec_start_date#940,s_rec_end_date#941,s_closed_date_sk#942,s_store_name#943,s_number_employees#944,s_floor_space#945,s_hours#946,s_manager#947,s_market_id#948,s_geography_class#949,s_market_desc#950,s_market_manager#951,s_division_id#952,s_division_name#953,s_company_id#954,s_company_name#955,s_street_number#956,s_street_name#957,s_street_type#958,s_suite_number#959,s_city#960,s_county#961,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1272352196,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13616922,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971] Input [8]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606, rn#971] "
          },
          "1" : {
            "sign" : 878780687,
            "className" : "org.apache.spark.sql.execution.window.WindowExec",
            "sizeInBytes" : 14706276,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Input [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606] Arguments: [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST] "
          },
          "2" : {
            "sign" : -1829517084,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606] Arguments: [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : -2147300387,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 12997680,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606] Arguments: 26 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Window",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n+- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n   +- Sort [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST], false, 0\n      +- ShuffleQueryStage 26\n         +- Exchange hashpartitioning(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, 200), ENSURE_REQUIREMENTS, [plan_id=2760]\n            +- *(23) HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))], output=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 22\n                     +- ReusedExchange [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum#1085L], Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12997680,
        "inputRowCount" : 117720
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 21131, 22982, 23148, 25130, 21332, 22910, 22845, 25464, 25202, 19130, 19130, 16026, 22910, 17391, 19296, 20965, 23244, 25464, 21044, 22910, 25368, 19130, 19058, 21227, 17326, 21131, 28010, 19058, 18880, 19130, 20965, 25281, 20965, 21044, 20893, 21044, 19392, 23148, 23148, 22786, 21131, 19209, 30328, 15875, 23061, 27722, 15648, 22910, 27905, 18993, 22982, 25368, 23464, 27722, 25464, 28010, 15751, 30695, 23148, 18993, 23061, 25065, 14373, 22982, 17391, 25281, 27571, 19296, 14497, 25281, 14432, 27809, 19130, 25812, 21044, 18934, 25281, 21227, 27809, 20965, 20893, 27506, 28010, 28125, 27905, 16026, 19209, 18341, 20965, 27722, 19296, 25281, 25368, 17542, 22982, 19130, 22910, 21044, 14373, 19296, 22910, 30590, 23148, 21131, 22845, 22910, 14270, 17463, 21227, 18934, 17391, 20769, 27809, 25684, 25281, 25130, 20893, 19392, 25202, 21044, 23148, 21044, 23061, 20965, 21131, 20893, 25281, 19058, 18993, 22982, 20828, 23244, 27905, 20965, 25281, 27722, 23061, 27905, 19130, 18934, 23148, 20828, 23148, 23148, 20715, 25569, 17164, 16026, 20828, 25368, 19058, 23061, 23244, 12932, 17213, 17267, 21044, 25464, 22845, 25464, 27571, 27722, 19209, 27722, 17391, 25006, 20666, 21131, 21044, 22910, 25281, 20769, 25202, 17391, 27571, 28010, 20893, 20828, 20965, 19058, 19058, 25281, 20715, 19296, 17213, 27809, 20965, 21131, 19130, 27809, 25368, 17542, 18880, 22982, 21131, 22786, 25464, 25281, 27809, 17326 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 749,
        "TotalTasksDurationInMs" : 738,
        "IOBytes" : {
          "Total" : 7322203,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4209250,
            "SW" : 3112953
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1612799012,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 193292096,
                "rowCount" : 1754790
              },
              "compileTime" : {
                "sizeInBytes" : 15230400,
                "rowCount" : 133600
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624], HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1058559721,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 193292096,
            "rowCount" : 1754790,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L] Keys [6]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60] Functions [1]: [sum(UnscaledValue(ss_sales_price#41))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#41))#613L] Results [8]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41))#613L,17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41))#613L,17,2) AS _w0#624] "
          },
          "1" : {
            "sign" : 1310669890,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 15230400,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L] Arguments: 20 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624])\n+- ShuffleQueryStage 20\n   +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n      +- *(15) HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[partial_sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L])\n         +- *(15) Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            +- *(15) BroadcastHashJoin [ss_store_sk#35], [s_store_sk#80], Inner, BuildRight, false\n               :- *(15) Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n               :  +- *(15) SortMergeJoin [ss_item_sk#30], [i_item_sk#7], Inner\n               :     :- *(13) Sort [ss_item_sk#30 ASC NULLS FIRST], false, 0\n               :     :  +- AQEShuffleRead coalesced\n               :     :     +- ShuffleQueryStage 15\n               :     :        +- Exchange hashpartitioning(ss_item_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=1555]\n               :     :           +- *(10) Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n               :     :              +- *(10) BroadcastHashJoin [ss_sold_date_sk#51], [d_date_sk#52], Inner, BuildRight, false\n               :     :                 :- *(10) Filter (isnotnull(ss_item_sk#30) AND isnotnull(ss_store_sk#35))\n               :     :                 :  +- *(10) ColumnarToRow\n               :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#30,ss_store_sk#35,ss_sales_price#41,ss_sold_date_sk#51] Batched: true, DataFilters: [isnotnull(ss_item_sk#30), isnotnull(ss_store_sk#35)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#51), dynamicpruningexpression(ss_sold_date_sk#51 IN dynamicpruning#1079)], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n               :     :                 :           +- SubqueryBroadcast dynamicpruning#1079, 0, [d_date_sk#52], [id=#1529]\n               :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#52, d_year#58, d_moy#60], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1526]\n                                                            +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                                                               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :     :                 +- BroadcastQueryStage 0\n               :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n               :     :                       +- *(1) Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n               :     :                          +- *(1) ColumnarToRow\n               :     :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :     +- *(14) Sort [i_item_sk#7 ASC NULLS FIRST], false, 0\n               :        +- AQEShuffleRead coalesced\n               :           +- ShuffleQueryStage 1\n               :              +- Exchange hashpartitioning(i_item_sk#7, 200), ENSURE_REQUIREMENTS, [plan_id=528]\n               :                 +- *(2) Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))\n               :                    +- *(2) ColumnarToRow\n               :                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#7,i_brand#15,i_category#19] Batched: true, DataFilters: [isnotnull(i_item_sk#7), isnotnull(i_category#19), isnotnull(i_brand#15)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>\n               +- BroadcastQueryStage 2\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=547]\n                     +- *(3) Filter ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97))\n                        +- *(3) ColumnarToRow\n                           +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#80,s_store_name#85,s_company_name#97] Batched: true, DataFilters: [isnotnull(s_store_sk#80), isnotnull(s_store_name#85), isnotnull(s_company_name#97)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 193292096,
        "inputRowCount" : 1754790
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 342002, 348053, 348053, 335951, 329900, 348053, 339985, 348053, 349569, 342002, 351789, 342002, 323849, 351789, 349569, 316420, 331917, 349569, 317798, 317798, 319815, 346036, 323849, 367329, 339484, 348053, 348053, 362889, 344019, 344019, 348053, 337968, 346036, 349569, 317798, 317798, 354009, 342002, 317798, 319815, 317798, 349569, 335951, 325866, 316420, 349569, 349569, 317798, 348053, 348053, 346036, 344019, 349569, 349569, 342002, 356229, 319815, 349569, 375656, 349569, 346036, 347552, 348053, 360669, 356229, 349569, 348053, 351789, 349569, 348053, 356229, 378429, 316420, 328522, 380649, 349569, 337968, 384536, 348053, 349569, 319815, 317798, 350273, 349569, 319815, 351789, 339484, 347552, 349569, 344019, 346036, 349569, 321832, 348053, 328522, 331917, 331917, 342002, 339985, 348053, 329900, 346036, 349569, 344019, 347552, 349569, 349569, 333934, 317798, 354009, 349569, 346036, 348053, 348053, 316420, 349569, 380096, 349569, 348053, 346036, 319815, 348053, 317798, 329900, 348053, 348053, 380649, 342002, 356229, 349569, 348053, 349569, 349569, 333934, 351789, 351789, 344019, 327883, 349569, 331917, 342002, 351789, 349569, 349569, 344019, 348053, 317798, 333934, 348053, 349569, 319815, 348053, 317798, 349569, 349569, 348053, 342002, 317798, 348053, 327883, 344019, 349569, 348053, 346036, 348053, 317798, 321832, 349569, 319815, 327883, 346036, 348053, 348053, 358449, 348053, 349569, 354713, 348053, 349569, 349569, 348053, 351789, 329900, 349569, 317798, 349569, 327883, 331917, 346036, 344019, 321331, 371216, 373989, 349569, 348053, 317798, 331917, 348053, 317798, 347552 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 1318,
        "TotalTasksDurationInMs" : 1516,
        "IOBytes" : {
          "Total" : 69809528,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 65252818,
            "SW" : 4556710
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "12" : {
            "sign" : -1632085928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 21544344075,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984] "
          },
          "8" : {
            "sign" : -842987481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14706276,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 14706276,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST] "
          },
          "4" : {
            "sign" : -1239738354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1910702232603728763012,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1910702232603728763012,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1))) "
          },
          "15" : {
            "sign" : -665745630,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#1016 = d_date_sk#1017) "
          },
          "11" : {
            "sign" : 168972959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 65875246446,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#1000 = s_store_sk#1045) "
          },
          "9" : {
            "sign" : 21081683,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              },
              "compileTime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606] "
          },
          "13" : {
            "sign" : -572198774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 23842407443,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#995 = i_item_sk#972) "
          },
          "16" : {
            "sign" : 1151676732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, ss_sold_date_sk#1016] "
          },
          "5" : {
            "sign" : 1704875595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 140318218214346,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 140318218214346,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] "
          },
          "10" : {
            "sign" : 792470035,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 61252422134,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062] "
          },
          "6" : {
            "sign" : 1615106623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 229611629805294,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 229611629805294,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1))) "
          },
          "1" : {
            "sign" : -1841581419,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 818872385401598041290,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 818872385401598041290,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1112564922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#995) AND isnotnull(ss_sold_date_sk#1016)) AND isnotnull(ss_store_sk#1000)) AND dynamicpruning#1081 [ss_sold_date_sk#1016]) "
          },
          "14" : {
            "sign" : -827994002,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025] "
          },
          "0" : {
            "sign" : -144372882,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9600,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 9600,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1303784956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 818872385401598041290,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 818872385401598041290,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 2091863865,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#994, ss_item_sk#995, ss_customer_sk#996, ss_cdemo_sk#997, ss_hdemo_sk#998, ss_addr_sk#999, ss_store_sk#1000, ss_promo_sk#1001, ss_ticket_number#1002L, ss_quantity#1003, ss_wholesale_cost#1004, ss_list_price#1005, ss_sales_price#1006, ss_ext_discount_amt#1007, ss_ext_sales_price#1008, ss_ext_wholesale_cost#1009, ss_ext_list_price#1010, ss_ext_tax#1011, ss_coupon_amt#1012, ss_net_paid#1013, ss_net_paid_inc_tax#1014, ss_net_profit#1015, ss_sold_date_sk#1016], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 121784839,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13616922,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 13616922,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078] "
          },
          "3" : {
            "sign" : -1390274799,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 818872385401598041290,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 818872385401598041290,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Window",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], true\n      +- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n         +- Join Inner, (((((i_category#19 = i_category#984) AND (i_brand#15 = i_brand#980)) AND (s_store_name#85 = s_store_name#1050)) AND (s_company_name#97 = s_company_name#1062)) AND (rn#608 = (rn#1078 - 1)))\n            :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n            :  +- Join Inner, (((((i_category#19 = i_category#877) AND (i_brand#15 = i_brand#873)) AND (s_store_name#85 = s_store_name#943)) AND (s_company_name#97 = s_company_name#955)) AND (rn#608 = (rn#971 + 1)))\n            :     :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n            :     :  +- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n            :     :     +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n            :     :        +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n            :     :           +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            :     :              +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n            :     :                 +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n            :     :                    +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n            :     :                       :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n            :     :                       :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n            :     :                       :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n            :     :                       :     :  +- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n            :     :                       :     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n            :     :                       :     :     :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51])\n            :     :                       :     :     :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n            :     :                       :     :     :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            :     :                       :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n            :     :                       :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n            :     :                       :     :     +- Project [d_date_sk#52, d_year#58, d_moy#60]\n            :     :                       :     :        +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            :     :                       :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n            :     :                       :     +- Project [i_item_sk#7, i_brand#15, i_category#19]\n            :     :                       :        +- Filter (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15)))\n            :     :                       :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#7,i_item_id#8,i_rec_start_date#9,i_rec_end_date#10,i_item_desc#11,i_current_price#12,i_wholesale_cost#13,i_brand_id#14,i_brand#15,i_class_id#16,i_class#17,i_category_id#18,i_category#19,i_manufact_id#20,i_manufact#21,i_size#22,i_formulation#23,i_color#24,i_units#25,i_container#26,i_manager_id#27,i_product_name#28] parquet\n            :     :                       +- Project [s_store_sk#80, s_store_name#85, s_company_name#97]\n            :     :                          +- Filter (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97)))\n            :     :                             +- Relation spark_catalog.tpcds_100.store[s_store_sk#80,s_store_id#81,s_rec_start_date#82,s_rec_end_date#83,s_closed_date_sk#84,s_store_name#85,s_number_employees#86,s_floor_space#87,s_hours#88,s_manager#89,s_market_id#90,s_geography_class#91,s_market_desc#92,s_market_manager#93,s_division_id#94,s_division_name#95,s_company_id#96,s_company_name#97,s_street_number#98,s_street_name#99,s_street_type#100,s_suite_number#101,s_city#102,s_county#103,... 5 more fields] parquet\n            :     +- Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n            :        +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n            :           +- Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606]\n            :              +- Project [i_brand#873, i_category#877, ss_sales_price#899, d_year#916, d_moy#918, s_store_name#943, s_company_name#955]\n            :                 +- Join Inner, (ss_store_sk#893 = s_store_sk#938)\n            :                    :- Project [ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918, i_brand#873, i_category#877]\n            :                    :  +- Join Inner, (ss_item_sk#888 = i_item_sk#865)\n            :                    :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, d_year#916, d_moy#918]\n            :                    :     :  +- Join Inner, (ss_sold_date_sk#909 = d_date_sk#910)\n            :                    :     :     :- Project [ss_item_sk#888, ss_store_sk#893, ss_sales_price#899, ss_sold_date_sk#909]\n            :                    :     :     :  +- Filter (((isnotnull(ss_item_sk#888) AND isnotnull(ss_sold_date_sk#909)) AND isnotnull(ss_store_sk#893)) AND dynamicpruning#1080 [ss_sold_date_sk#909])\n            :                    :     :     :     :  +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :                    :     :     :     :     +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :                    :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :                    :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#887,ss_item_sk#888,ss_customer_sk#889,ss_cdemo_sk#890,ss_hdemo_sk#891,ss_addr_sk#892,ss_store_sk#893,ss_promo_sk#894,ss_ticket_number#895L,ss_quantity#896,ss_wholesale_cost#897,ss_list_price#898,ss_sales_price#899,ss_ext_discount_amt#900,ss_ext_sales_price#901,ss_ext_wholesale_cost#902,ss_ext_list_price#903,ss_ext_tax#904,ss_coupon_amt#905,ss_net_paid#906,ss_net_paid_inc_tax#907,ss_net_profit#908,ss_sold_date_sk#909] parquet\n            :                    :     :     +- Project [d_date_sk#910, d_year#916, d_moy#918]\n            :                    :     :        +- Filter ((((d_year#916 = 2000) OR ((d_year#916 = 1999) AND (d_moy#918 = 12))) OR ((d_year#916 = 2001) AND (d_moy#918 = 1))) AND isnotnull(d_date_sk#910))\n            :                    :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#910,d_date_id#911,d_date#912,d_month_seq#913,d_week_seq#914,d_quarter_seq#915,d_year#916,d_dow#917,d_moy#918,d_dom#919,d_qoy#920,d_fy_year#921,d_fy_quarter_seq#922,d_fy_week_seq#923,d_day_name#924,d_quarter_name#925,d_holiday#926,d_weekend#927,d_following_holiday#928,d_first_dom#929,d_last_dom#930,d_same_day_ly#931,d_same_day_lq#932,d_current_day#933,... 4 more fields] parquet\n            :                    :     +- Project [i_item_sk#865, i_brand#873, i_category#877]\n            :                    :        +- Filter (isnotnull(i_item_sk#865) AND (isnotnull(i_category#877) AND isnotnull(i_brand#873)))\n            :                    :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#865,i_item_id#866,i_rec_start_date#867,i_rec_end_date#868,i_item_desc#869,i_current_price#870,i_wholesale_cost#871,i_brand_id#872,i_brand#873,i_class_id#874,i_class#875,i_category_id#876,i_category#877,i_manufact_id#878,i_manufact#879,i_size#880,i_formulation#881,i_color#882,i_units#883,i_container#884,i_manager_id#885,i_product_name#886] parquet\n            :                    +- Project [s_store_sk#938, s_store_name#943, s_company_name#955]\n            :                       +- Filter (isnotnull(s_store_sk#938) AND (isnotnull(s_store_name#943) AND isnotnull(s_company_name#955)))\n            :                          +- Relation spark_catalog.tpcds_100.store[s_store_sk#938,s_store_id#939,s_rec_start_date#940,s_rec_end_date#941,s_closed_date_sk#942,s_store_name#943,s_number_employees#944,s_floor_space#945,s_hours#946,s_manager#947,s_market_id#948,s_geography_class#949,s_market_desc#950,s_market_manager#951,s_division_id#952,s_division_name#953,s_company_id#954,s_company_name#955,s_street_number#956,s_street_name#957,s_street_type#958,s_suite_number#959,s_city#960,s_county#961,... 5 more fields] parquet\n            +- Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n               +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                  +- Aggregate [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, MakeDecimal(sum(UnscaledValue(ss_sales_price#1006)),17,2) AS sum_sales#606]\n                     +- Project [i_brand#980, i_category#984, ss_sales_price#1006, d_year#1023, d_moy#1025, s_store_name#1050, s_company_name#1062]\n                        +- Join Inner, (ss_store_sk#1000 = s_store_sk#1045)\n                           :- Project [ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025, i_brand#980, i_category#984]\n                           :  +- Join Inner, (ss_item_sk#995 = i_item_sk#972)\n                           :     :- Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, d_year#1023, d_moy#1025]\n                           :     :  +- Join Inner, (ss_sold_date_sk#1016 = d_date_sk#1017)\n                           :     :     :- Project [ss_item_sk#995, ss_store_sk#1000, ss_sales_price#1006, ss_sold_date_sk#1016]\n                           :     :     :  +- Filter (((isnotnull(ss_item_sk#995) AND isnotnull(ss_sold_date_sk#1016)) AND isnotnull(ss_store_sk#1000)) AND dynamicpruning#1081 [ss_sold_date_sk#1016])\n                           :     :     :     :  +- Project [d_date_sk#1017, d_year#1023, d_moy#1025]\n                           :     :     :     :     +- Filter ((((d_year#1023 = 2000) OR ((d_year#1023 = 1999) AND (d_moy#1025 = 12))) OR ((d_year#1023 = 2001) AND (d_moy#1025 = 1))) AND isnotnull(d_date_sk#1017))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1017,d_date_id#1018,d_date#1019,d_month_seq#1020,d_week_seq#1021,d_quarter_seq#1022,d_year#1023,d_dow#1024,d_moy#1025,d_dom#1026,d_qoy#1027,d_fy_year#1028,d_fy_quarter_seq#1029,d_fy_week_seq#1030,d_day_name#1031,d_quarter_name#1032,d_holiday#1033,d_weekend#1034,d_following_holiday#1035,d_first_dom#1036,d_last_dom#1037,d_same_day_ly#1038,d_same_day_lq#1039,d_current_day#1040,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#994,ss_item_sk#995,ss_customer_sk#996,ss_cdemo_sk#997,ss_hdemo_sk#998,ss_addr_sk#999,ss_store_sk#1000,ss_promo_sk#1001,ss_ticket_number#1002L,ss_quantity#1003,ss_wholesale_cost#1004,ss_list_price#1005,ss_sales_price#1006,ss_ext_discount_amt#1007,ss_ext_sales_price#1008,ss_ext_wholesale_cost#1009,ss_ext_list_price#1010,ss_ext_tax#1011,ss_coupon_amt#1012,ss_net_paid#1013,ss_net_paid_inc_tax#1014,ss_net_profit#1015,ss_sold_date_sk#1016] parquet\n                           :     :     +- Project [d_date_sk#1017, d_year#1023, d_moy#1025]\n                           :     :        +- Filter ((((d_year#1023 = 2000) OR ((d_year#1023 = 1999) AND (d_moy#1025 = 12))) OR ((d_year#1023 = 2001) AND (d_moy#1025 = 1))) AND isnotnull(d_date_sk#1017))\n                           :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1017,d_date_id#1018,d_date#1019,d_month_seq#1020,d_week_seq#1021,d_quarter_seq#1022,d_year#1023,d_dow#1024,d_moy#1025,d_dom#1026,d_qoy#1027,d_fy_year#1028,d_fy_quarter_seq#1029,d_fy_week_seq#1030,d_day_name#1031,d_quarter_name#1032,d_holiday#1033,d_weekend#1034,d_following_holiday#1035,d_first_dom#1036,d_last_dom#1037,d_same_day_ly#1038,d_same_day_lq#1039,d_current_day#1040,... 4 more fields] parquet\n                           :     +- Project [i_item_sk#972, i_brand#980, i_category#984]\n                           :        +- Filter (isnotnull(i_item_sk#972) AND (isnotnull(i_category#984) AND isnotnull(i_brand#980)))\n                           :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#972,i_item_id#973,i_rec_start_date#974,i_rec_end_date#975,i_item_desc#976,i_current_price#977,i_wholesale_cost#978,i_brand_id#979,i_brand#980,i_class_id#981,i_class#982,i_category_id#983,i_category#984,i_manufact_id#985,i_manufact#986,i_size#987,i_formulation#988,i_color#989,i_units#990,i_container#991,i_manager_id#992,i_product_name#993] parquet\n                           +- Project [s_store_sk#1045, s_store_name#1050, s_company_name#1062]\n                              +- Filter (isnotnull(s_store_sk#1045) AND (isnotnull(s_store_name#1050) AND isnotnull(s_company_name#1062)))\n                                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#1045,s_store_id#1046,s_rec_start_date#1047,s_rec_end_date#1048,s_closed_date_sk#1049,s_store_name#1050,s_number_employees#1051,s_floor_space#1052,s_hours#1053,s_manager#1054,s_market_id#1055,s_geography_class#1056,s_market_desc#1057,s_market_manager#1058,s_division_id#1059,s_division_name#1060,s_company_id#1061,s_company_name#1062,s_street_number#1063,s_street_name#1064,s_street_type#1065,s_suite_number#1066,s_city#1067,s_county#1068,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 316844400,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#631, rn#971] Arguments: 30 "
          },
          "4" : {
            "sign" : 329551585,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 229611629805294,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [5]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#608] Right keys [5]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, (rn#971 + 1)] Join type: Inner Join condition: None "
          },
          "9" : {
            "sign" : -1720444870,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#640, rn#1078] Arguments: [i_category#984 ASC NULLS FIRST, i_brand#980 ASC NULLS FIRST, s_store_name#1050 ASC NULLS FIRST, s_company_name#1062 ASC NULLS FIRST, (rn#1078 - 1) ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : -1283514691,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] Arguments: [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, rn#608 ASC NULLS FIRST], false, 0 "
          },
          "10" : {
            "sign" : -1014257124,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 12055920,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#640, rn#1078] Arguments: 31 "
          },
          "6" : {
            "sign" : 1294061150,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 14496024,
            "rowCount" : 101863,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] Arguments: 29 "
          },
          "1" : {
            "sign" : 1744079866,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 818872385401598041290,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610] Input [16]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631, i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#640, rn#1078] "
          },
          "0" : {
            "sign" : 1886219611,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 9600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [8]: [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, psum#609, nsum#610] Arguments: 100, [(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST, nsum#610 ASC NULLS FIRST], [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, psum#609, nsum#610] "
          },
          "2" : {
            "sign" : 333083621,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 1910702232603728763012,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [5]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#608] Right keys [5]: [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, (rn#1078 - 1)] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 55979691,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#631, rn#971] Arguments: [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, (rn#971 + 1) ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : 743357209,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 140318218214346,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [10]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631] Input [15]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#631, rn#971] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "ShuffleQueryStage",
          "toId" : 9,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[(sum_sales#606 - avg_monthly_sales#607) ASC NULLS FIRST,nsum#610 ASC NULLS FIRST], output=[i_category#19,i_brand#15,d_year#58,d_moy#60,avg_monthly_sales#607,sum_sales#606,psum#609,nsum#610])\n+- Project [i_category#19, i_brand#15, d_year#58, d_moy#60, avg_monthly_sales#607, sum_sales#606, sum_sales#631 AS psum#609, sum_sales#640 AS nsum#610]\n   +- SortMergeJoin [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#608], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, (rn#1078 - 1)], Inner\n      :- Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608, sum_sales#631]\n      :  +- SortMergeJoin [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#608], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, (rn#971 + 1)], Inner\n      :     :- Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, rn#608 ASC NULLS FIRST], false, 0\n      :     :  +- ShuffleQueryStage 29\n      :     :     +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, rn#608, 200), ENSURE_REQUIREMENTS, [plan_id=2997]\n      :     :        +- *(27) Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n      :     :           +- *(27) Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n      :     :              +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n      :     :                 +- *(26) Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n      :     :                    +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n      :     :                       +- *(25) Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST], false, 0\n      :     :                          +- AQEShuffleRead coalesced\n      :     :                             +- ShuffleQueryStage 25\n      :     :                                +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, 200), ENSURE_REQUIREMENTS, [plan_id=2737]\n      :     :                                   +- *(22) HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624])\n      :     :                                      +- AQEShuffleRead coalesced\n      :     :                                         +- ShuffleQueryStage 20\n      :     :                                            +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n      :     :                                               +- *(15) HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[partial_sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L])\n      :     :                                                  +- *(15) Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n      :     :                                                     +- *(15) BroadcastHashJoin [ss_store_sk#35], [s_store_sk#80], Inner, BuildRight, false\n      :     :                                                        :- *(15) Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n      :     :                                                        :  +- *(15) SortMergeJoin [ss_item_sk#30], [i_item_sk#7], Inner\n      :     :                                                        :     :- *(13) Sort [ss_item_sk#30 ASC NULLS FIRST], false, 0\n      :     :                                                        :     :  +- AQEShuffleRead coalesced\n      :     :                                                        :     :     +- ShuffleQueryStage 15\n      :     :                                                        :     :        +- Exchange hashpartitioning(ss_item_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=1555]\n      :     :                                                        :     :           +- *(10) Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n      :     :                                                        :     :              +- *(10) BroadcastHashJoin [ss_sold_date_sk#51], [d_date_sk#52], Inner, BuildRight, false\n      :     :                                                        :     :                 :- *(10) Filter (isnotnull(ss_item_sk#30) AND isnotnull(ss_store_sk#35))\n      :     :                                                        :     :                 :  +- *(10) ColumnarToRow\n      :     :                                                        :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#30,ss_store_sk#35,ss_sales_price#41,ss_sold_date_sk#51] Batched: true, DataFilters: [isnotnull(ss_item_sk#30), isnotnull(ss_store_sk#35)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#51), dynamicpruningexpression(ss_sold_date_sk#51 IN dynamicpruning#1079)], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n      :     :                                                        :     :                 :           +- SubqueryBroadcast dynamicpruning#1079, 0, [d_date_sk#52], [id=#1529]\n      :     :                                                        :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                               +- == Final Plan ==\n                                                                                                                  BroadcastQueryStage 1\n                                                                                                                  +- ReusedExchange [d_date_sk#52, d_year#58, d_moy#60], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n                                                                                                               +- == Initial Plan ==\n                                                                                                                  BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1526]\n                                                                                                                  +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                                                                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :                                                        :     :                 +- BroadcastQueryStage 0\n      :     :                                                        :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n      :     :                                                        :     :                       +- *(1) Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n      :     :                                                        :     :                          +- *(1) ColumnarToRow\n      :     :                                                        :     :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :                                                        :     +- *(14) Sort [i_item_sk#7 ASC NULLS FIRST], false, 0\n      :     :                                                        :        +- AQEShuffleRead coalesced\n      :     :                                                        :           +- ShuffleQueryStage 1\n      :     :                                                        :              +- Exchange hashpartitioning(i_item_sk#7, 200), ENSURE_REQUIREMENTS, [plan_id=528]\n      :     :                                                        :                 +- *(2) Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))\n      :     :                                                        :                    +- *(2) ColumnarToRow\n      :     :                                                        :                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#7,i_brand#15,i_category#19] Batched: true, DataFilters: [isnotnull(i_item_sk#7), isnotnull(i_category#19), isnotnull(i_brand#15)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>\n      :     :                                                        +- BroadcastQueryStage 2\n      :     :                                                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=547]\n      :     :                                                              +- *(3) Filter ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97))\n      :     :                                                                 +- *(3) ColumnarToRow\n      :     :                                                                    +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#80,s_store_name#85,s_company_name#97] Batched: true, DataFilters: [isnotnull(s_store_sk#80), isnotnull(s_store_name#85), isnotnull(s_company_name#97)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>\n      :     +- Sort [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, (rn#971 + 1) ASC NULLS FIRST], false, 0\n      :        +- ShuffleQueryStage 30\n      :           +- Exchange hashpartitioning(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, (rn#971 + 1), 200), ENSURE_REQUIREMENTS, [plan_id=3089]\n      :              +- *(29) Project [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, sum_sales#606 AS sum_sales#631, rn#971]\n      :                 +- Window [rank(d_year#916, d_moy#918) windowspecdefinition(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#971], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955], [d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST]\n      :                    +- *(28) Sort [i_category#877 ASC NULLS FIRST, i_brand#873 ASC NULLS FIRST, s_store_name#943 ASC NULLS FIRST, s_company_name#955 ASC NULLS FIRST, d_year#916 ASC NULLS FIRST, d_moy#918 ASC NULLS FIRST], false, 0\n      :                       +- AQEShuffleRead coalesced\n      :                          +- ShuffleQueryStage 26\n      :                             +- Exchange hashpartitioning(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, 200), ENSURE_REQUIREMENTS, [plan_id=2760]\n      :                                +- *(23) HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))], output=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606])\n      :                                   +- AQEShuffleRead coalesced\n      :                                      +- ShuffleQueryStage 22\n      :                                         +- ReusedExchange [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum#1085L], Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n      +- Sort [i_category#984 ASC NULLS FIRST, i_brand#980 ASC NULLS FIRST, s_store_name#1050 ASC NULLS FIRST, s_company_name#1062 ASC NULLS FIRST, (rn#1078 - 1) ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 31\n            +- Exchange hashpartitioning(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, (rn#1078 - 1), 200), ENSURE_REQUIREMENTS, [plan_id=3119]\n               +- *(31) Project [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, sum_sales#606 AS sum_sales#640, rn#1078]\n                  +- Window [rank(d_year#1023, d_moy#1025) windowspecdefinition(i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#1078], [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062], [d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST]\n                     +- *(30) Sort [i_category#984 ASC NULLS FIRST, i_brand#980 ASC NULLS FIRST, s_store_name#1050 ASC NULLS FIRST, s_company_name#1062 ASC NULLS FIRST, d_year#1023 ASC NULLS FIRST, d_moy#1025 ASC NULLS FIRST], false, 0\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 28\n                              +- ReusedExchange [i_category#984, i_brand#980, s_store_name#1050, s_company_name#1062, d_year#1023, d_moy#1025, sum_sales#606], Exchange hashpartitioning(i_category#877, i_brand#873, s_store_name#943, s_company_name#955, 200), ENSURE_REQUIREMENTS, [plan_id=2760]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 38607864,
        "inputRowCount" : 337303
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "5" : [ 24413, 24413, 26854, 24413, 24413, 22193, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 20176, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 22193, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 26854, 22193, 24413, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 22193, 22193, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 26854, 24413, 22193, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 26854, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 26854, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 22193, 26854, 22193, 24413, 22193, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 24413, 22193, 26854, 24413, 22193, 24413, 24413, 24413, 24413, 26854, 24413, 24413 ],
        "7" : [ 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 13780, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 18341, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ],
        "6" : [ 16674, 16674, 18341, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 18341, 15158, 16674, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 15158, 15158, 16674, 16674, 15158, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 18341, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 18341, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 29 ],
      "Objectives" : {
        "DurationInMs" : 1242,
        "TotalTasksDurationInMs" : 1234,
        "IOBytes" : {
          "Total" : 10792707,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 10792707,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -598871676,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 193292096,
                "rowCount" : 1754790
              },
              "compileTime" : {
                "sizeInBytes" : 14161600,
                "rowCount" : 133600
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899)),17,2) AS sum_sales#606], HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1428304457,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 193292096,
            "rowCount" : 1754790,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum#1085L] Keys [6]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918] Functions [1]: [sum(UnscaledValue(ss_sales_price#899))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#899))#613L] Results [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, MakeDecimal(sum(UnscaledValue(ss_sales_price#899))#613L,17,2) AS sum_sales#606] "
          },
          "1" : {
            "sign" : 1923165174,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 14161600,
            "rowCount" : 133600,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum#1085L] Arguments: 22 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918], functions=[sum(UnscaledValue(ss_sales_price#899))], output=[i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum_sales#606])\n+- ShuffleQueryStage 22\n   +- ReusedExchange [i_category#877, i_brand#873, s_store_name#943, s_company_name#955, d_year#916, d_moy#918, sum#1085L], Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 193292096,
        "inputRowCount" : 1754790
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 342002, 348053, 348053, 335951, 329900, 348053, 339985, 348053, 349569, 342002, 351789, 342002, 323849, 351789, 349569, 316420, 331917, 349569, 317798, 317798, 319815, 346036, 323849, 367329, 339484, 348053, 348053, 362889, 344019, 344019, 348053, 337968, 346036, 349569, 317798, 317798, 354009, 342002, 317798, 319815, 317798, 349569, 335951, 325866, 316420, 349569, 349569, 317798, 348053, 348053, 346036, 344019, 349569, 349569, 342002, 356229, 319815, 349569, 375656, 349569, 346036, 347552, 348053, 360669, 356229, 349569, 348053, 351789, 349569, 348053, 356229, 378429, 316420, 328522, 380649, 349569, 337968, 384536, 348053, 349569, 319815, 317798, 350273, 349569, 319815, 351789, 339484, 347552, 349569, 344019, 346036, 349569, 321832, 348053, 328522, 331917, 331917, 342002, 339985, 348053, 329900, 346036, 349569, 344019, 347552, 349569, 349569, 333934, 317798, 354009, 349569, 346036, 348053, 348053, 316420, 349569, 380096, 349569, 348053, 346036, 319815, 348053, 317798, 329900, 348053, 348053, 380649, 342002, 356229, 349569, 348053, 349569, 349569, 333934, 351789, 351789, 344019, 327883, 349569, 331917, 342002, 351789, 349569, 349569, 344019, 348053, 317798, 333934, 348053, 349569, 319815, 348053, 317798, 349569, 349569, 348053, 342002, 317798, 348053, 327883, 344019, 349569, 348053, 346036, 348053, 317798, 321832, 349569, 319815, 327883, 346036, 348053, 348053, 358449, 348053, 349569, 354713, 348053, 349569, 349569, 348053, 351789, 329900, 349569, 317798, 349569, 327883, 331917, 346036, 344019, 321331, 371216, 373989, 349569, 348053, 317798, 331917, 348053, 317798, 347552 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 1309,
        "TotalTasksDurationInMs" : 1484,
        "IOBytes" : {
          "Total" : 69462068,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 65252818,
            "SW" : 4209250
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 520606636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18847,
                "rowCount" : 401
              },
              "compileTime" : {
                "sizeInBytes" : 18847,
                "rowCount" : 401
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#80, s_store_name#85, s_company_name#97] "
          },
          "1" : {
            "sign" : 1983582949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192079,
                "rowCount" : 401
              },
              "compileTime" : {
                "sizeInBytes" : 192079,
                "rowCount" : 401
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97))) "
          },
          "2" : {
            "sign" : -719809506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#80, s_store_id#81, s_rec_start_date#82, s_rec_end_date#83, s_closed_date_sk#84, s_store_name#85, s_number_employees#86, s_floor_space#87, s_hours#88, s_manager#89, s_market_id#90, s_geography_class#91, s_market_desc#92, s_market_manager#93, s_division_id#94, s_division_name#95, s_company_id#96, s_company_name#97, s_street_number#98, s_street_name#99, s_street_type#100, s_suite_number#101, s_city#102, s_county#103, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#80, s_store_name#85, s_company_name#97]\n+- Filter (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97)))\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#80,s_store_id#81,s_rec_start_date#82,s_rec_end_date#83,s_closed_date_sk#84,s_store_name#85,s_number_employees#86,s_floor_space#87,s_hours#88,s_manager#89,s_market_id#90,s_geography_class#91,s_market_desc#92,s_market_manager#93,s_division_id#94,s_division_name#95,s_company_id#96,s_company_name#97,s_street_number#98,s_street_name#99,s_street_type#100,s_suite_number#101,s_city#102,s_county#103,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -262641847,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 18847,
            "rowCount" : 401,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [s_store_sk#80, s_store_name#85, s_company_name#97] Condition : ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97)) "
          },
          "1" : {
            "sign" : 715540820,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 18847,
            "rowCount" : 401,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [3]: [s_store_sk#80, s_store_name#85, s_company_name#97] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)] ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97))\n+- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#80,s_store_name#85,s_company_name#97] Batched: true, DataFilters: [isnotnull(s_store_sk#80), isnotnull(s_store_name#85), isnotnull(s_company_name#97)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 18847,
        "inputRowCount" : 401
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1443,
        "TotalTasksDurationInMs" : 1436,
        "IOBytes" : {
          "Total" : 14487,
          "Details" : {
            "IR" : 14487,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -164199210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13980,
                "rowCount" : 699
              },
              "compileTime" : {
                "sizeInBytes" : 13980,
                "rowCount" : 699
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#52, d_year#58, d_moy#60] "
          },
          "1" : {
            "sign" : -74155522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 171954,
                "rowCount" : 699
              },
              "compileTime" : {
                "sizeInBytes" : 171954,
                "rowCount" : 699
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52)) "
          },
          "2" : {
            "sign" : 1687074720,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#52, d_date_id#53, d_date#54, d_month_seq#55, d_week_seq#56, d_quarter_seq#57, d_year#58, d_dow#59, d_moy#60, d_dom#61, d_qoy#62, d_fy_year#63, d_fy_quarter_seq#64, d_fy_week_seq#65, d_day_name#66, d_quarter_name#67, d_holiday#68, d_weekend#69, d_following_holiday#70, d_first_dom#71, d_last_dom#72, d_same_day_ly#73, d_same_day_lq#74, d_current_day#75, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#52, d_year#58, d_moy#60]\n+- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -833497667,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#52, d_year#58, d_moy#60] Condition : ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52)) "
          },
          "1" : {
            "sign" : 87518043,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 13980,
            "rowCount" : 699,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#52, d_year#58, d_moy#60] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001),EqualTo(d_moy,1))), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13980,
        "inputRowCount" : 699
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 4423,
        "TotalTasksDurationInMs" : 4417,
        "IOBytes" : {
          "Total" : 93881,
          "Details" : {
            "IR" : 93881,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1984212613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11979065,
                "rowCount" : 203035
              },
              "compileTime" : {
                "sizeInBytes" : 11979065,
                "rowCount" : 203035
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#7, i_brand#15, i_category#19] "
          },
          "1" : {
            "sign" : -1989795637,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86492910,
                "rowCount" : 203035
              },
              "compileTime" : {
                "sizeInBytes" : 86492910,
                "rowCount" : 203035
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15))) "
          },
          "2" : {
            "sign" : 337999037,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#7, i_item_id#8, i_rec_start_date#9, i_rec_end_date#10, i_item_desc#11, i_current_price#12, i_wholesale_cost#13, i_brand_id#14, i_brand#15, i_class_id#16, i_class#17, i_category_id#18, i_category#19, i_manufact_id#20, i_manufact#21, i_size#22, i_formulation#23, i_color#24, i_units#25, i_container#26, i_manager_id#27, i_product_name#28], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#7, i_brand#15, i_category#19]\n+- Filter (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15)))\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#7,i_item_id#8,i_rec_start_date#9,i_rec_end_date#10,i_item_desc#11,i_current_price#12,i_wholesale_cost#13,i_brand_id#14,i_brand#15,i_class_id#16,i_class#17,i_category_id#18,i_category#19,i_manufact_id#20,i_manufact#21,i_size#22,i_formulation#23,i_color#24,i_units#25,i_container#26,i_manager_id#27,i_product_name#28] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1874666012,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [i_item_sk#7, i_brand#15, i_category#19] Condition : ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15)) "
          },
          "1" : {
            "sign" : 1129129782,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 11979065,
            "rowCount" : 203035,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [3]: [i_item_sk#7, i_brand#15, i_category#19] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)] ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#7,i_brand#15,i_category#19] Batched: true, DataFilters: [isnotnull(i_item_sk#7), isnotnull(i_category#19), isnotnull(i_brand#15)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11979065,
        "inputRowCount" : 203035
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 5007,
        "TotalTasksDurationInMs" : 11890,
        "IOBytes" : {
          "Total" : 5957025,
          "Details" : {
            "IR" : 1234103,
            "IW" : 0,
            "SR" : 0,
            "SW" : 4722922
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 742265254,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15774342,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 15774342,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "1" : {
            "sign" : -886488242,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17950113,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 17950113,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "0" : {
            "sign" : -1979244233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16862227,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16862227,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] "
          },
          "2" : {
            "sign" : 710158350,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17950113,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 17950113,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "3" : {
            "sign" : -357031611,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15774342,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 15774342,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Window",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n+- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n   +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n      +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n         +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            +- Aggregate [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS sum_sales#606, MakeDecimal(sum(UnscaledValue(ss_sales_price#41)),17,2) AS _w0#624]\n               +- Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n                  +- Join Inner, (ss_store_sk#35 = s_store_sk#80)\n                     :- Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n                     :  +- Join Inner, (ss_item_sk#30 = i_item_sk#7)\n                     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n                     :     :  +- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n                     :     :     :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n                     :     :     :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51])\n                     :     :     :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n                     :     :     :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n                     :     :     +- Project [d_date_sk#52, d_year#58, d_moy#60]\n                     :     :        +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n                     :     +- Project [i_item_sk#7, i_brand#15, i_category#19]\n                     :        +- Filter (isnotnull(i_item_sk#7) AND (isnotnull(i_category#19) AND isnotnull(i_brand#15)))\n                     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#7,i_item_id#8,i_rec_start_date#9,i_rec_end_date#10,i_item_desc#11,i_current_price#12,i_wholesale_cost#13,i_brand_id#14,i_brand#15,i_class_id#16,i_class#17,i_category_id#18,i_category#19,i_manufact_id#20,i_manufact#21,i_size#22,i_formulation#23,i_color#24,i_units#25,i_container#26,i_manager_id#27,i_product_name#28] parquet\n                     +- Project [s_store_sk#80, s_store_name#85, s_company_name#97]\n                        +- Filter (isnotnull(s_store_sk#80) AND (isnotnull(s_store_name#85) AND isnotnull(s_company_name#97)))\n                           +- Relation spark_catalog.tpcds_100.store[s_store_sk#80,s_store_id#81,s_rec_start_date#82,s_rec_end_date#83,s_closed_date_sk#84,s_store_name#85,s_number_employees#86,s_floor_space#87,s_hours#88,s_manager#89,s_market_id#90,s_geography_class#91,s_market_desc#92,s_market_manager#93,s_division_id#94,s_division_name#95,s_company_id#96,s_company_name#97,s_street_number#98,s_street_name#99,s_street_type#100,s_suite_number#101,s_city#102,s_county#103,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1034368736,
            "className" : "org.apache.spark.sql.execution.window.WindowExec",
            "sizeInBytes" : 15774342,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Input [8]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624] Arguments: [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST] "
          },
          "5" : {
            "sign" : -2027280991,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [8]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624] Arguments: [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1336713751,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 13939440,
            "rowCount" : 117720,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624] Arguments: 25 "
          },
          "1" : {
            "sign" : 1996834884,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 17950113,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [10]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624, rn#608, avg_monthly_sales#607] Condition : ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END) "
          },
          "0" : {
            "sign" : -1566152143,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 16862227,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608] Input [10]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624, rn#608, avg_monthly_sales#607] "
          },
          "2" : {
            "sign" : -1861056824,
            "className" : "org.apache.spark.sql.execution.window.WindowExec",
            "sizeInBytes" : 17950113,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Input [9]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624, rn#608] Arguments: [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58] "
          },
          "3" : {
            "sign" : -554082131,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 15774342,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [9]: [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624, rn#608] Condition : (isnotnull(d_year#58) AND (d_year#58 = 2000)) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Window",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, avg_monthly_sales#607, rn#608]\n+- Filter ((isnotnull(avg_monthly_sales#607) AND (avg_monthly_sales#607 > 0.000000)) AND CASE WHEN (avg_monthly_sales#607 > 0.000000) THEN ((abs((sum_sales#606 - avg_monthly_sales#607)) / avg_monthly_sales#607) > 0.1000000000000000) END)\n   +- Window [avg(_w0#624) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#607], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58]\n      +- Filter (isnotnull(d_year#58) AND (d_year#58 = 2000))\n         +- Window [rank(d_year#58, d_moy#60) windowspecdefinition(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#608], [i_category#19, i_brand#15, s_store_name#85, s_company_name#97], [d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST]\n            +- Sort [i_category#19 ASC NULLS FIRST, i_brand#15 ASC NULLS FIRST, s_store_name#85 ASC NULLS FIRST, s_company_name#97 ASC NULLS FIRST, d_year#58 ASC NULLS FIRST, d_moy#60 ASC NULLS FIRST], false, 0\n               +- ShuffleQueryStage 25\n                  +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, 200), ENSURE_REQUIREMENTS, [plan_id=2737]\n                     +- *(22) HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum_sales#606, _w0#624])\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 20\n                              +- Exchange hashpartitioning(i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, 200), ENSURE_REQUIREMENTS, [plan_id=2370]\n                                 +- *(15) HashAggregate(keys=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60], functions=[partial_sum(UnscaledValue(ss_sales_price#41))], output=[i_category#19, i_brand#15, s_store_name#85, s_company_name#97, d_year#58, d_moy#60, sum#1083L])\n                                    +- *(15) Project [i_brand#15, i_category#19, ss_sales_price#41, d_year#58, d_moy#60, s_store_name#85, s_company_name#97]\n                                       +- *(15) BroadcastHashJoin [ss_store_sk#35], [s_store_sk#80], Inner, BuildRight, false\n                                          :- *(15) Project [ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60, i_brand#15, i_category#19]\n                                          :  +- *(15) SortMergeJoin [ss_item_sk#30], [i_item_sk#7], Inner\n                                          :     :- *(13) Sort [ss_item_sk#30 ASC NULLS FIRST], false, 0\n                                          :     :  +- AQEShuffleRead coalesced\n                                          :     :     +- ShuffleQueryStage 15\n                                          :     :        +- Exchange hashpartitioning(ss_item_sk#30, 200), ENSURE_REQUIREMENTS, [plan_id=1555]\n                                          :     :           +- *(10) Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n                                          :     :              +- *(10) BroadcastHashJoin [ss_sold_date_sk#51], [d_date_sk#52], Inner, BuildRight, false\n                                          :     :                 :- *(10) Filter (isnotnull(ss_item_sk#30) AND isnotnull(ss_store_sk#35))\n                                          :     :                 :  +- *(10) ColumnarToRow\n                                          :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#30,ss_store_sk#35,ss_sales_price#41,ss_sold_date_sk#51] Batched: true, DataFilters: [isnotnull(ss_item_sk#30), isnotnull(ss_store_sk#35)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#51), dynamicpruningexpression(ss_sold_date_sk#51 IN dynamicpruning#1079)], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n                                          :     :                 :           +- SubqueryBroadcast dynamicpruning#1079, 0, [d_date_sk#52], [id=#1529]\n                                          :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                    +- == Final Plan ==\n                                                                                       BroadcastQueryStage 1\n                                                                                       +- ReusedExchange [d_date_sk#52, d_year#58, d_moy#60], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n                                                                                    +- == Initial Plan ==\n                                                                                       BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1526]\n                                                                                       +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                                                                                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                                          :     :                 +- BroadcastQueryStage 0\n                                          :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n                                          :     :                       +- *(1) Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n                                          :     :                          +- *(1) ColumnarToRow\n                                          :     :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                                          :     +- *(14) Sort [i_item_sk#7 ASC NULLS FIRST], false, 0\n                                          :        +- AQEShuffleRead coalesced\n                                          :           +- ShuffleQueryStage 1\n                                          :              +- Exchange hashpartitioning(i_item_sk#7, 200), ENSURE_REQUIREMENTS, [plan_id=528]\n                                          :                 +- *(2) Filter ((isnotnull(i_item_sk#7) AND isnotnull(i_category#19)) AND isnotnull(i_brand#15))\n                                          :                    +- *(2) ColumnarToRow\n                                          :                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#7,i_brand#15,i_category#19] Batched: true, DataFilters: [isnotnull(i_item_sk#7), isnotnull(i_category#19), isnotnull(i_brand#15)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>\n                                          +- BroadcastQueryStage 2\n                                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=547]\n                                                +- *(3) Filter ((isnotnull(s_store_sk#80) AND isnotnull(s_store_name#85)) AND isnotnull(s_company_name#97))\n                                                   +- *(3) ColumnarToRow\n                                                      +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#80,s_store_name#85,s_company_name#97] Batched: true, DataFilters: [isnotnull(s_store_sk#80), isnotnull(s_store_name#85), isnotnull(s_company_name#97)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13939440,
        "inputRowCount" : 117720
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 21227, 25202, 25464, 27643, 23464, 25130, 22910, 25464, 27643, 20965, 21044, 17542, 25130, 19058, 21227, 22982, 23349, 28010, 23148, 25202, 27809, 21044, 20893, 23244, 18993, 21131, 30695, 19058, 18880, 21044, 22982, 25368, 23061, 21131, 22910, 23061, 19392, 25368, 25368, 22786, 21131, 23061, 30328, 15947, 25281, 30494, 17213, 25130, 30695, 20828, 25202, 27905, 25684, 27722, 28010, 30695, 17267, 33649, 25368, 20893, 23061, 27506, 17267, 25281, 17391, 27722, 30256, 19296, 15875, 27722, 15875, 30494, 19130, 28253, 23061, 20769, 27722, 23244, 30590, 23061, 22982, 27571, 30810, 30810, 30590, 16026, 21044, 20176, 22982, 27809, 21227, 27722, 27905, 19296, 25281, 21044, 25130, 23148, 15810, 21227, 25130, 33649, 25368, 23148, 25130, 22910, 15648, 19130, 23244, 20769, 19130, 25065, 27905, 28125, 27809, 25130, 22910, 19392, 25281, 23061, 25464, 23148, 25281, 23061, 23148, 22910, 27722, 20893, 20893, 25281, 22845, 23244, 30695, 22982, 27722, 27809, 25368, 28010, 19209, 20769, 23148, 22845, 25368, 23244, 22786, 28125, 18880, 17542, 22845, 27809, 20965, 25281, 25464, 14185, 17267, 18993, 23061, 25464, 25130, 25569, 27571, 30407, 21131, 30494, 19058, 27506, 22683, 23244, 23148, 25202, 25368, 22845, 27722, 19058, 33282, 30695, 22982, 22845, 23061, 19058, 20893, 27722, 22732, 21131, 18934, 30590, 22982, 23148, 21044, 30407, 27905, 19296, 20715, 22982, 23148, 25065, 28010, 27809, 30494, 18993 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 184.0,
        "FinishedTasksDistributionInMs" : [ 184.0, 184.0, 184.0, 184.0, 184.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 1104,
        "TotalTasksDurationInMs" : 1091,
        "IOBytes" : {
          "Total" : 9124141,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4556710,
            "SW" : 4567431
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 344024550,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#29, ss_item_sk#30, ss_customer_sk#31, ss_cdemo_sk#32, ss_hdemo_sk#33, ss_addr_sk#34, ss_store_sk#35, ss_promo_sk#36, ss_ticket_number#37L, ss_quantity#38, ss_wholesale_cost#39, ss_list_price#40, ss_sales_price#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_ext_tax#46, ss_coupon_amt#47, ss_net_paid#48, ss_net_paid_inc_tax#49, ss_net_profit#50, ss_sold_date_sk#51], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1349291308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#51 = d_date_sk#52) "
          },
          "0" : {
            "sign" : 1023173648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] "
          },
          "2" : {
            "sign" : 633167803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 7354859344,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51] "
          },
          "3" : {
            "sign" : 254323496,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n+- Join Inner, (ss_sold_date_sk#51 = d_date_sk#52)\n   :- Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51]\n   :  +- Filter (((isnotnull(ss_item_sk#30) AND isnotnull(ss_sold_date_sk#51)) AND isnotnull(ss_store_sk#35)) AND dynamicpruning#1079 [ss_sold_date_sk#51])\n   :     :  +- Project [d_date_sk#52, d_year#58, d_moy#60]\n   :     :     +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#29,ss_item_sk#30,ss_customer_sk#31,ss_cdemo_sk#32,ss_hdemo_sk#33,ss_addr_sk#34,ss_store_sk#35,ss_promo_sk#36,ss_ticket_number#37L,ss_quantity#38,ss_wholesale_cost#39,ss_list_price#40,ss_sales_price#41,ss_ext_discount_amt#42,ss_ext_sales_price#43,ss_ext_wholesale_cost#44,ss_ext_list_price#45,ss_ext_tax#46,ss_coupon_amt#47,ss_net_paid#48,ss_net_paid_inc_tax#49,ss_net_profit#50,ss_sold_date_sk#51] parquet\n   +- Project [d_date_sk#52, d_year#58, d_moy#60]\n      +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_date_id#53,d_date#54,d_month_seq#55,d_week_seq#56,d_quarter_seq#57,d_year#58,d_dow#59,d_moy#60,d_dom#61,d_qoy#62,d_fy_year#63,d_fy_quarter_seq#64,d_fy_week_seq#65,d_day_name#66,d_quarter_name#67,d_holiday#68,d_weekend#69,d_following_holiday#70,d_first_dom#71,d_last_dom#72,d_same_day_ly#73,d_same_day_lq#74,d_current_day#75,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 448439275,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1052000,
            "rowCount" : 428,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [d_date_sk#52, d_year#58, d_moy#60] Arguments: 0 "
          },
          "1" : {
            "sign" : -176647618,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#51] Right keys [1]: [d_date_sk#52] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1080391938,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60] Input [7]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51, d_date_sk#52, d_year#58, d_moy#60] "
          },
          "2" : {
            "sign" : 1330233842,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51] Condition : (isnotnull(ss_item_sk#30) AND isnotnull(ss_store_sk#35)) "
          },
          "3" : {
            "sign" : -1758409807,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354859344,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, ss_sold_date_sk#51] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#51), dynamicpruningexpression(ss_sold_date_sk#51 IN dynamicpruning#1079)] PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)] ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#30, ss_store_sk#35, ss_sales_price#41, d_year#58, d_moy#60]\n+- BroadcastHashJoin [ss_sold_date_sk#51], [d_date_sk#52], Inner, BuildRight, false\n   :- Filter (isnotnull(ss_item_sk#30) AND isnotnull(ss_store_sk#35))\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#30,ss_store_sk#35,ss_sales_price#41,ss_sold_date_sk#51] Batched: true, DataFilters: [isnotnull(ss_item_sk#30), isnotnull(ss_store_sk#35)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#51), dynamicpruningexpression(ss_sold_date_sk#51 IN dynamicpruning#1079)], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#1079, 0, [d_date_sk#52], [id=#1529]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1526]\n   :                 +- Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=509]\n         +- *(1) Filter ((((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_moy#60 = 1))) AND isnotnull(d_date_sk#52))\n            +- *(1) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#52,d_year#58,d_moy#60] Batched: true, DataFilters: [(((d_year#58 = 2000) OR ((d_year#58 = 1999) AND (d_moy#60 = 12))) OR ((d_year#58 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7355911344,
        "inputRowCount" : 262673976
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6917.0,
        "FinishedTasksDistributionInMs" : [ 1290.0, 1383.0, 1855.0, 2389.0, 2389.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 18480,
        "TotalTasksDurationInMs" : 247494,
        "IOBytes" : {
          "Total" : 1360154628,
          "Details" : {
            "IR" : 437386809,
            "IW" : 0,
            "SR" : 0,
            "SW" : 922767819
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227009541,
  "SQLEndTimeInMs" : 1702227043800,
  "Objectives" : {
    "DurationInMs" : 34259,
    "IOBytes" : {
      "Total" : 2532795800,
      "Details" : {
        "IR" : 438729280,
        "IW" : 0,
        "SR" : 1081764294,
        "SW" : 1012302226
      }
    }
  }
}
