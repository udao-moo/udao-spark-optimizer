{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 900414210,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_education_status#43, cd_purchase_estimate#44, cd_credit_rating#45, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "34" : {
          "sign" : 1972399801,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2292368272,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143, cs_sold_date_sk#170] "
        },
        "12" : {
          "sign" : -2094452530,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 38601040,
          "rowCount" : 1930052,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
        },
        "8" : {
          "sign" : 208485615,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 38914988179694422584478254,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
        },
        "19" : {
          "sign" : -888186098,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#269 [ss_sold_date_sk#71]) "
        },
        "23" : {
          "sign" : -272999708,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#72, d_date_id#73, d_date#74, d_month_seq#75, d_week_seq#76, d_quarter_seq#77, d_year#78, d_dow#79, d_moy#80, d_dom#81, d_qoy#82, d_fy_year#83, d_fy_quarter_seq#84, d_fy_week_seq#85, d_day_name#86, d_quarter_name#87, d_holiday#88, d_weekend#89, d_following_holiday#90, d_first_dom#91, d_last_dom#92, d_same_day_ly#93, d_same_day_lq#94, d_current_day#95, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "4" : {
          "sign" : 1760202109,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 70670750606708480705705875904116363636363,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
        },
        "40" : {
          "sign" : -1548377878,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 26000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#27, ca_state#35] "
        },
        "15" : {
          "sign" : -1397996476,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#9, c_customer_id#10, c_current_cdemo_sk#11, c_current_hdemo_sk#12, c_current_addr_sk#13, c_first_shipto_date_sk#14, c_first_sales_date_sk#15, c_salutation#16, c_first_name#17, c_last_name#18, c_preferred_cust_flag#19, c_birth_day#20, c_birth_month#21, c_birth_year#22, c_birth_country#23, c_login#24, c_email_address#25, c_last_review_date#26], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : -1027541742,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 32191231541150400,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#267), (c_customer_sk#9 = ws_bill_customer_sk#105) "
        },
        "9" : {
          "sign" : 1707827633,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 53508108747079831053657600,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (exists#267 OR exists#268) "
        },
        "44" : {
          "sign" : 2029358198,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(cd_demo_sk#40) "
        },
        "33" : {
          "sign" : -868224393,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2770325240,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#170 = d_date_sk#203) "
        },
        "22" : {
          "sign" : 438471766,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 159654,
          "rowCount" : 649,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72)) "
        },
        "26" : {
          "sign" : 116879925,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1151737984,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105, ws_sold_date_sk#135] "
        },
        "37" : {
          "sign" : -730090167,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7788,
          "rowCount" : 649,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#203] "
        },
        "13" : {
          "sign" : 1978235836,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 38601040,
          "rowCount" : 1930052,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13] "
        },
        "24" : {
          "sign" : 642134438,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 833947260,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105] "
        },
        "35" : {
          "sign" : 519363780,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#271 [cs_sold_date_sk#170]) "
        },
        "16" : {
          "sign" : -295549632,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3186487020,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51] "
        },
        "5" : {
          "sign" : 73653915,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 77737825667379328776276463494528000000000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
        },
        "10" : {
          "sign" : 2106775418,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 53508108747079831053657600,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#268), (c_customer_sk#9 = cs_ship_customer_sk#143) "
        },
        "21" : {
          "sign" : 1443761947,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7788,
          "rowCount" : 649,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#72] "
        },
        "43" : {
          "sign" : -1308572580,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 96040000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
        },
        "32" : {
          "sign" : -620216860,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1662195144,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143] "
        },
        "6" : {
          "sign" : -528948543,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 809431754137643989757147683200000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
        },
        "36" : {
          "sign" : -265288399,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#137, cs_ship_date_sk#138, cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_bill_hdemo_sk#141, cs_bill_addr_sk#142, cs_ship_customer_sk#143, cs_ship_cdemo_sk#144, cs_ship_hdemo_sk#145, cs_ship_addr_sk#146, cs_call_center_sk#147, cs_catalog_page_sk#148, cs_ship_mode_sk#149, cs_warehouse_sk#150, cs_item_sk#151, cs_promo_sk#152, cs_order_number#153L, cs_quantity#154, cs_wholesale_cost#155, cs_list_price#156, cs_sales_price#157, cs_ext_discount_amt#158, cs_ext_sales_price#159, cs_ext_wholesale_cost#160, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "1" : {
          "sign" : -710520449,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 144875038743752385446697045603438545454544,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : -1199601614,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#203, d_date_id#204, d_date#205, d_month_seq#206, d_week_seq#207, d_quarter_seq#208, d_year#209, d_dow#210, d_moy#211, d_dom#212, d_qoy#213, d_fy_year#214, d_fy_quarter_seq#215, d_fy_week_seq#216, d_day_name#217, d_quarter_name#218, d_holiday#219, d_weekend#220, d_following_holiday#221, d_first_dom#222, d_last_dom#223, d_same_day_ly#224, d_same_day_lq#225, d_current_day#226, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "17" : {
          "sign" : 1931985070,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5310811700,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#71 = d_date_sk#72) "
        },
        "25" : {
          "sign" : 998727216,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1389912100,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#135 = d_date_sk#175) "
        },
        "14" : {
          "sign" : 438361105,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 482513000,
          "rowCount" : 1930052,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11)) "
        },
        "31" : {
          "sign" : 2045589980,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#175, d_date_id#176, d_date#177, d_month_seq#178, d_week_seq#179, d_quarter_seq#180, d_year#181, d_dow#182, d_moy#183, d_dom#184, d_qoy#185, d_fy_year#186, d_fy_quarter_seq#187, d_fy_week_seq#188, d_day_name#189, d_quarter_name#190, d_holiday#191, d_weekend#192, d_following_holiday#193, d_first_dom#194, d_last_dom#195, d_same_day_ly#196, d_same_day_lq#197, d_current_day#198, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "42" : {
          "sign" : 327025701,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#27, ca_address_id#28, ca_street_number#29, ca_street_name#30, ca_street_type#31, ca_suite_number#32, ca_city#33, ca_county#34, ca_state#35, ca_zip#36, ca_country#37, ca_gmt_offset#38, ca_location_type#39], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : 1586376660,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 16400,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1326326748,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#49, ss_item_sk#50, ss_customer_sk#51, ss_cdemo_sk#52, ss_hdemo_sk#53, ss_addr_sk#54, ss_store_sk#55, ss_promo_sk#56, ss_ticket_number#57L, ss_quantity#58, ss_wholesale_cost#59, ss_list_price#60, ss_sales_price#61, ss_ext_discount_amt#62, ss_ext_sales_price#63, ss_ext_wholesale_cost#64, ss_ext_list_price#65, ss_ext_tax#66, ss_coupon_amt#67, ss_net_paid#68, ss_net_paid_inc_tax#69, ss_net_profit#70, ss_sold_date_sk#71], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 627502778,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#270 [ws_sold_date_sk#135]) "
        },
        "2" : {
          "sign" : -436765910,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 144875038743752385446697045603438545454544,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : 1523015346,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 159654,
          "rowCount" : 649,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#209) AND isnotnull(d_qoy#213)) AND ((d_year#209 = 1999) AND (d_qoy#213 < 4))) AND isnotnull(d_date_sk#203)) "
        },
        "18" : {
          "sign" : 1101619788,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51, ss_sold_date_sk#71] "
        },
        "30" : {
          "sign" : 532167328,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 159654,
          "rowCount" : 649,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#181) AND isnotnull(d_qoy#185)) AND ((d_year#181 = 1999) AND (d_qoy#185 < 4))) AND isnotnull(d_date_sk#175)) "
        },
        "7" : {
          "sign" : -1904410523,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1011789692672054987196434604000000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
        },
        "29" : {
          "sign" : 1944171721,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7788,
          "rowCount" : 649,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#175] "
        },
        "41" : {
          "sign" : 1662344908,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ca_address_sk#27) "
        },
        "3" : {
          "sign" : -1026350637,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 144875038743752385446697045603438545454544,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#0L, avg(cd_dep_count#46) AS avg(cd_dep_count)#240, max(cd_dep_count#46) AS max(cd_dep_count)#241, sum(cd_dep_count#46) AS sum(cd_dep_count)#242L, cd_dep_employed_count#47, count(1) AS cnt2#1L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#243, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#244, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#245L, cd_dep_college_count#48, count(1) AS cnt3#2L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#246, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#247, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#248L] "
        },
        "28" : {
          "sign" : 1028127054,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#102, ws_ship_date_sk#103, ws_item_sk#104, ws_bill_customer_sk#105, ws_bill_cdemo_sk#106, ws_bill_hdemo_sk#107, ws_bill_addr_sk#108, ws_ship_customer_sk#109, ws_ship_cdemo_sk#110, ws_ship_hdemo_sk#111, ws_ship_addr_sk#112, ws_web_page_sk#113, ws_web_site_sk#114, ws_ship_mode_sk#115, ws_warehouse_sk#116, ws_promo_sk#117, ws_order_number#118L, ws_quantity#119, ws_wholesale_cost#120, ws_list_price#121, ws_sales_price#122, ws_ext_discount_amt#123, ws_ext_sales_price#124, ws_ext_wholesale_cost#125, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Join",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "LogicalRelation",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "LogicalRelation",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 27,
        "fromName" : "Filter",
        "toId" : 26,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 25,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 25,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Join",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "LogicalRelation",
        "toId" : 35,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "LogicalRelation",
        "toId" : 38,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Filter",
        "toId" : 37,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Project",
        "toId" : 35,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 35,
        "fromName" : "Filter",
        "toId" : 34,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 33,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Project",
        "toId" : 33,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Join",
        "toId" : 32,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Filter",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "LogicalRelation",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Filter",
        "toId" : 40,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "LogicalRelation",
        "toId" : 44,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Filter",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#0L, avg(cd_dep_count#46) AS avg(cd_dep_count)#240, max(cd_dep_count#46) AS max(cd_dep_count)#241, sum(cd_dep_count#46) AS sum(cd_dep_count)#242L, cd_dep_employed_count#47, count(1) AS cnt2#1L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#243, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#244, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#245L, cd_dep_college_count#48, count(1) AS cnt3#2L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#246, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#247, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#248L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#267 OR exists#268)\n               :     :     +- Join ExistenceJoin(exists#268), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#267), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :        :  :  :  +- Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n               :     :        :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#9,c_customer_id#10,c_current_cdemo_sk#11,c_current_hdemo_sk#12,c_current_addr_sk#13,c_first_shipto_date_sk#14,c_first_sales_date_sk#15,c_salutation#16,c_first_name#17,c_last_name#18,c_preferred_cust_flag#19,c_birth_day#20,c_birth_month#21,c_birth_year#22,c_birth_country#23,c_login#24,c_email_address#25,c_last_review_date#26] parquet\n               :     :        :  :  +- Project [ss_customer_sk#51]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n               :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#269 [ss_sold_date_sk#71])\n               :     :        :  :        :     :  +- Project [d_date_sk#72]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n               :     :        :  :        +- Project [d_date_sk#72]\n               :     :        :  :           +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  +- Project [ws_bill_customer_sk#105]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#175)\n               :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#270 [ws_sold_date_sk#135])\n               :     :        :        :     :  +- Project [d_date_sk#175]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#181) AND isnotnull(d_qoy#185)) AND ((d_year#181 = 1999) AND (d_qoy#185 < 4))) AND isnotnull(d_date_sk#175))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#175,d_date_id#176,d_date#177,d_month_seq#178,d_week_seq#179,d_quarter_seq#180,d_year#181,d_dow#182,d_moy#183,d_dom#184,d_qoy#185,d_fy_year#186,d_fy_quarter_seq#187,d_fy_week_seq#188,d_day_name#189,d_quarter_name#190,d_holiday#191,d_weekend#192,d_following_holiday#193,d_first_dom#194,d_last_dom#195,d_same_day_ly#196,d_same_day_lq#197,d_current_day#198,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n               :     :        :        +- Project [d_date_sk#175]\n               :     :        :           +- Filter (((isnotnull(d_year#181) AND isnotnull(d_qoy#185)) AND ((d_year#181 = 1999) AND (d_qoy#185 < 4))) AND isnotnull(d_date_sk#175))\n               :     :        :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#175,d_date_id#176,d_date#177,d_month_seq#178,d_week_seq#179,d_quarter_seq#180,d_year#181,d_dow#182,d_moy#183,d_dom#184,d_qoy#185,d_fy_year#186,d_fy_quarter_seq#187,d_fy_week_seq#188,d_day_name#189,d_quarter_name#190,d_holiday#191,d_weekend#192,d_following_holiday#193,d_first_dom#194,d_last_dom#195,d_same_day_ly#196,d_same_day_lq#197,d_current_day#198,... 4 more fields] parquet\n               :     :        +- Project [cs_ship_customer_sk#143]\n               :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#203)\n               :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#271 [cs_sold_date_sk#170])\n               :     :              :     :  +- Project [d_date_sk#203]\n               :     :              :     :     +- Filter (((isnotnull(d_year#209) AND isnotnull(d_qoy#213)) AND ((d_year#209 = 1999) AND (d_qoy#213 < 4))) AND isnotnull(d_date_sk#203))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#203,d_date_id#204,d_date#205,d_month_seq#206,d_week_seq#207,d_quarter_seq#208,d_year#209,d_dow#210,d_moy#211,d_dom#212,d_qoy#213,d_fy_year#214,d_fy_quarter_seq#215,d_fy_week_seq#216,d_day_name#217,d_quarter_name#218,d_holiday#219,d_weekend#220,d_following_holiday#221,d_first_dom#222,d_last_dom#223,d_same_day_ly#224,d_same_day_lq#225,d_current_day#226,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n               :     :              +- Project [d_date_sk#203]\n               :     :                 +- Filter (((isnotnull(d_year#209) AND isnotnull(d_qoy#213)) AND ((d_year#209 = 1999) AND (d_qoy#213 < 4))) AND isnotnull(d_date_sk#203))\n               :     :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#203,d_date_id#204,d_date#205,d_month_seq#206,d_week_seq#207,d_quarter_seq#208,d_year#209,d_dow#210,d_moy#211,d_dom#212,d_qoy#213,d_fy_year#214,d_fy_quarter_seq#215,d_fy_week_seq#216,d_day_name#217,d_quarter_name#218,d_holiday#219,d_weekend#220,d_following_holiday#221,d_first_dom#222,d_last_dom#223,d_same_day_ly#224,d_same_day_lq#225,d_current_day#226,... 4 more fields] parquet\n               :     +- Project [ca_address_sk#27, ca_state#35]\n               :        +- Filter isnotnull(ca_address_sk#27)\n               :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_address_id#28,ca_street_number#29,ca_street_name#30,ca_street_type#31,ca_suite_number#32,ca_city#33,ca_county#34,ca_state#35,ca_zip#36,ca_country#37,ca_gmt_offset#38,ca_location_type#39] parquet\n               +- Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n                  +- Filter isnotnull(cd_demo_sk#40)\n                     +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_education_status#43,cd_purchase_estimate#44,cd_credit_rating#45,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 87562661146,
      "inputRowCount" : 495441941
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -254927857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : 923232803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 927637167859377675960320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "4" : {
            "sign" : 19284264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2962986447509370985082086409013988258909,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "15" : {
            "sign" : -1277048145,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 129747728,
            "rowCount" : 8109233,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#105], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 1636653102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5008397238437120,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -393824121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1275501105806644304445440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -1030503320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 254672512,
            "rowCount" : 15917032,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#143], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : 1255892470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3259285092260308083590295049915387084800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -157765072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1275501105806644304445440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "6" : {
            "sign" : -2039930465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23567184768646079784394631938048,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "1" : {
            "sign" : 1564426649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 6074122217394210519418277138478675930763,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "14" : {
            "sign" : 394092130,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 495224192,
            "rowCount" : 30951512,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#51], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 1138108938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1860989132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 6074122217394210519418277138478675930763,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : -892156021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 29458980960807599730493289922560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "3" : {
            "sign" : -1981404923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6074122217394210519418277138478675930763,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#51], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#105], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#143], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1111460704,
        "inputRowCount" : 59828629
      },
      "PD" : {
        "4" : [ 38309, 39819, 37972, 37880, 38068, 40213, 38826, 39167, 38209, 38223, 39541, 37766, 40099, 40897, 38367, 38793, 40301, 39095, 38596, 38534, 38108, 39004, 40456, 39861, 38576, 39839, 38959, 39762, 37693, 37568, 37872, 36818, 37496, 39291, 38204, 38140, 38468, 38087, 38043, 37929, 37940, 37375, 41328, 38607, 39938, 39727, 39616, 38245, 39356, 38549, 40129, 38087, 38142, 38611, 38842, 37949, 39003, 37933, 38578, 38984, 37324, 38559, 37613, 38688, 38033, 39311, 39249, 38014, 38418, 39590, 38420, 38320, 37756, 38011, 38955, 38580, 38610, 37692, 39091, 39149, 38370, 38643, 39198, 37081, 38694, 38327, 39021, 38391, 38568, 40173, 39792, 39497, 39250, 38553, 38320, 40887, 38631, 37033, 38671, 38192, 37896, 39085, 39215, 38658, 38432, 37793, 37379, 39958, 38163, 40077, 39636, 38682, 39463, 38572, 38105, 37428, 38938, 38749, 38713, 36585, 39011, 38444, 40108, 37856, 37305, 40368, 38255, 38047, 38640, 38402, 38785, 39334, 38428, 39052, 37780, 38529, 39299, 39963, 38327, 39371, 38282, 37468, 36526, 40744, 38617, 38845, 39432, 38555, 38880, 38927, 39900, 38836, 38982, 39784, 39284, 38596, 38424, 38144, 38060, 39137, 36929, 37766, 38886, 38330, 38904, 39148, 39294, 38880, 39040, 38125, 39274, 39194, 37573, 38582, 38925, 37557, 38012, 37171, 38674, 37380, 37927, 38211, 39393, 38336, 39559, 38584, 40605, 38196, 37194, 39330, 39699, 38475, 39049, 38039, 38673, 40444, 38255, 38878, 40115, 38252 ],
        "5" : [ 95648, 97751, 95547, 96152, 96513, 97804, 95811, 94122, 94119, 94947, 97257, 93976, 95701, 94904, 95430, 95865, 96614, 97681, 95339, 94373, 96073, 96374, 94787, 97581, 95707, 95218, 95891, 97156, 97134, 94637, 96577, 95701, 93144, 96513, 97481, 96030, 96677, 95106, 93976, 96417, 93821, 95744, 165640, 94092, 96194, 93402, 95107, 95754, 97480, 97903, 97423, 95218, 96667, 95875, 96778, 97156, 92893, 91831, 93999, 95914, 94890, 96657, 92599, 94706, 95451, 95584, 96374, 93402, 95793, 99248, 96507, 94347, 95653, 95990, 96677, 96014, 97348, 97156, 96827, 97156, 97091, 96513, 95387, 92378, 98276, 93661, 93101, 94898, 95516, 98466, 94298, 96334, 94947, 94941, 95107, 98861, 92762, 93541, 97150, 96996, 95812, 97799, 93401, 95314, 95392, 97300, 96302, 94765, 97313, 92652, 93661, 96673, 98276, 96030, 96996, 95590, 93498, 94634, 97156, 97788, 93178, 96513, 98797, 97097, 97639, 99826, 96296, 93772, 94045, 94706, 96996, 98447, 94968, 97316, 96417, 94787, 96291, 96569, 96465, 95392, 95701, 93381, 96396, 95590, 96997, 98074, 96811, 95064, 99571, 95870, 98004, 96991, 96827, 97073, 95541, 97310, 94261, 99020, 96667, 97751, 93975, 94247, 95627, 95953, 97320, 96830, 96387, 97344, 96073, 95541, 97740, 98431, 94581, 96030, 95633, 94797, 95347, 94744, 96556, 96353, 96354, 94421, 96030, 95101, 97220, 94717, 98642, 96190, 94445, 94575, 96184, 97310, 93477, 95408, 95547, 97793, 96115, 95049, 98282, 95696 ],

        "0" : [ 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239 ],
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "3" : [ 148899, 148133, 144121, 147575, 145815, 151099, 143396, 145597, 145529, 150111, 148463, 144238, 151067, 149270, 147341, 146879, 149614, 152119, 149074, 144933, 146548, 143980, 146634, 149270, 148431, 150409, 146295, 144461, 148673, 144959, 145796, 143175, 146815, 148133, 148840, 148522, 144512, 144661, 145751, 146101, 145888, 151631, 405316, 152119, 149780, 144810, 148884, 147386, 148314, 149869, 148609, 148080, 145479, 145692, 148030, 146518, 146632, 145217, 146666, 147400, 145307, 152288, 146114, 144981, 145167, 149717, 147192, 146730, 146400, 149468, 149898, 147373, 143682, 147042, 149483, 149074, 148911, 145693, 147490, 145544, 148197, 150424, 147101, 145905, 146556, 143297, 144588, 145576, 146549, 150392, 147255, 149223, 149184, 146911, 146879, 154694, 147043, 145050, 147879, 146400, 144959, 147177, 147192, 143510, 145693, 147191, 147534, 149749, 144530, 145439, 145543, 147905, 149568, 144231, 148464, 145778, 141966, 146634, 145593, 145478, 145801, 146979, 148101, 145837, 150125, 153411, 146400, 142441, 146459, 145693, 148820, 146503, 147245, 147255, 145304, 145327, 146444, 144737, 144376, 151709, 145652, 141441, 146765, 148197, 149121, 148329, 150854, 146172, 149802, 145991, 149355, 146289, 146485, 149269, 147549, 151003, 145918, 146607, 151646, 142383, 145965, 144836, 152055, 146023, 146454, 146698, 147600, 149562, 148197, 148197, 147984, 150423, 149016, 146652, 145716, 145263, 148899, 146938, 146517, 144968, 144258, 147820, 145380, 145678, 153326, 147472, 152338, 146932, 144922, 148282, 148586, 148563, 142655, 145517, 148984, 147671, 146599, 145816, 151769, 143169 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226939799,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 24099,
        "IOBytes" : {
          "Total" : 169308123,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 26881868
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 383998189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143, cs_sold_date_sk#170] "
          },
          "12" : {
            "sign" : -522015548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : -1393861615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3130098748030063568088866756421,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "19" : {
            "sign" : 1443761947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#72] "
          },
          "23" : {
            "sign" : -254218857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 236682155712,
            "rowCount" : 19723512976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105] "
          },
          "4" : {
            "sign" : -1027583442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9997917818645509709351913584360352705039394909,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "40" : {
            "sign" : 1368653531,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1050768,
            "rowCount" : 274,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#309], BroadcastQueryStage 5 "
          },
          "15" : {
            "sign" : 18456275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1507248534440,
            "rowCount" : 75362426722,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#71 = d_date_sk#72) "
          },
          "11" : {
            "sign" : -1062554393,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9136177359925140480,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -1683395207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4303885778541337406122191790080,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "33" : {
            "sign" : -1533716460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 785136133160,
            "rowCount" : 39256806658,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#170 = d_date_sk#309) "
          },
          "22" : {
            "sign" : -1097900016,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1050768,
            "rowCount" : 274,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#72], BroadcastQueryStage 1 "
          },
          "26" : {
            "sign" : 1054612782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135]) "
          },
          "37" : {
            "sign" : -235108382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#309] "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "24" : {
            "sign" : 1947305767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 394470259520,
            "rowCount" : 19723512976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#135 = d_date_sk#281) "
          },
          "35" : {
            "sign" : -1823874588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170]) "
          },
          "16" : {
            "sign" : 1269581808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51, ss_sold_date_sk#71] "
          },
          "5" : {
            "sign" : -319827792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10997709600510060680287104942796387975543334400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -1205711970,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4303885778541337406122191790080,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "21" : {
            "sign" : -272999708,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#72, d_date_id#73, d_date#74, d_month_seq#75, d_week_seq#76, d_quarter_seq#77, d_year#78, d_dow#79, d_moy#80, d_dom#81, d_qoy#82, d_fy_year#83, d_fy_quarter_seq#84, d_fy_week_seq#85, d_day_name#86, d_quarter_name#87, d_holiday#88, d_weekend#89, d_following_holiday#90, d_first_dom#91, d_last_dom#92, d_same_day_ly#93, d_same_day_lq#94, d_current_day#95, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -782267515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 471081679896,
            "rowCount" : 39256806658,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143] "
          },
          "6" : {
            "sign" : 1627264229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 79522056785584570377845349035676598694,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "36" : {
            "sign" : -265288399,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#137, cs_ship_date_sk#138, cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_bill_hdemo_sk#141, cs_bill_addr_sk#142, cs_ship_customer_sk#143, cs_ship_cdemo_sk#144, cs_ship_hdemo_sk#145, cs_ship_addr_sk#146, cs_call_center_sk#147, cs_catalog_page_sk#148, cs_ship_mode_sk#149, cs_warehouse_sk#150, cs_item_sk#151, cs_promo_sk#152, cs_order_number#153L, cs_quantity#154, cs_wholesale_cost#155, cs_list_price#156, cs_sales_price#157, cs_ext_discount_amt#158, cs_ext_sales_price#159, cs_ext_wholesale_cost#160, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -381855405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 20495731528223294904171422847938723045330759563,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1231197803,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#309, d_date_id#310, d_date#311, d_month_seq#312, d_week_seq#313, d_quarter_seq#314, d_year#315, d_dow#316, d_moy#317, d_dom#318, d_qoy#319, d_fy_year#320, d_fy_quarter_seq#321, d_fy_week_seq#322, d_day_name#323, d_quarter_name#324, d_holiday#325, d_weekend#326, d_following_holiday#327, d_first_dom#328, d_last_dom#329, d_same_day_ly#330, d_same_day_lq#331, d_current_day#332, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1528993458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71]) "
          },
          "25" : {
            "sign" : -1938554229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105, ws_sold_date_sk#135] "
          },
          "14" : {
            "sign" : 1506382489,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 904349120664,
            "rowCount" : 75362426722,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51] "
          },
          "31" : {
            "sign" : 478209102,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1050768,
            "rowCount" : 274,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#281], BroadcastQueryStage 3 "
          },
          "42" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "0" : {
            "sign" : -2074968560,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 438471766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72)) "
          },
          "27" : {
            "sign" : 1028127054,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#102, ws_ship_date_sk#103, ws_item_sk#104, ws_bill_customer_sk#105, ws_bill_cdemo_sk#106, ws_bill_hdemo_sk#107, ws_bill_addr_sk#108, ws_ship_customer_sk#109, ws_ship_cdemo_sk#110, ws_ship_hdemo_sk#111, ws_ship_addr_sk#112, ws_web_page_sk#113, ws_web_site_sk#114, ws_ship_mode_sk#115, ws_warehouse_sk#116, ws_promo_sk#117, ws_order_number#118L, ws_quantity#119, ws_wholesale_cost#120, ws_list_price#121, ws_sales_price#122, ws_ext_discount_amt#123, ws_ext_sales_price#124, ws_ext_wholesale_cost#125, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : 792818874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 20495731528223294904171422847938723045330759563,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1893821254,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309)) "
          },
          "18" : {
            "sign" : 1326326748,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#49, ss_item_sk#50, ss_customer_sk#51, ss_cdemo_sk#52, ss_hdemo_sk#53, ss_addr_sk#54, ss_store_sk#55, ss_promo_sk#56, ss_ticket_number#57L, ss_quantity#58, ss_wholesale_cost#59, ss_list_price#60, ss_sales_price#61, ss_ext_discount_amt#62, ss_ext_sales_price#63, ss_ext_wholesale_cost#64, ss_ext_list_price#65, ss_ext_tax#66, ss_coupon_amt#67, ss_net_paid#68, ss_net_paid_inc_tax#69, ss_net_profit#70, ss_sold_date_sk#71], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1525339999,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#281, d_date_id#282, d_date#283, d_month_seq#284, d_week_seq#285, d_quarter_seq#286, d_year#287, d_dow#288, d_moy#289, d_dom#290, d_qoy#291, d_fy_year#292, d_fy_quarter_seq#293, d_fy_week_seq#294, d_day_name#295, d_quarter_name#296, d_holiday#297, d_weekend#298, d_following_holiday#299, d_first_dom#300, d_last_dom#301, d_same_day_ly#302, d_same_day_lq#303, d_current_day#304, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1720272479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 99402570981980712972306686294595748368,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "29" : {
            "sign" : 412073557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281)) "
          },
          "41" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "3" : {
            "sign" : -1756111041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20495731528223294904171422847938723045330759563,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          },
          "28" : {
            "sign" : 991757238,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#281] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- Project [ss_customer_sk#51]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n               :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n               :     :        :  :        :     :  +- Project [d_date_sk#72]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n               :     :        :  :        +- LogicalQueryStage Project [d_date_sk#72], BroadcastQueryStage 1\n               :     :        :  +- Project [ws_bill_customer_sk#105]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n               :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n               :     :        :        :     :  +- Project [d_date_sk#281]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n               :     :        :        +- LogicalQueryStage Project [d_date_sk#281], BroadcastQueryStage 3\n               :     :        +- Project [cs_ship_customer_sk#143]\n               :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n               :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n               :     :              :     :  +- Project [d_date_sk#309]\n               :     :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n               :     :              +- LogicalQueryStage Project [d_date_sk#309], BroadcastQueryStage 5\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86815243560,
        "inputRowCount" : 495153668
      },
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],


      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226922521,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 41377,
        "IOBytes" : {
          "Total" : 281208030,
          "Details" : {
            "IR" : 57896940,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 80884835
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 514788419,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1499926374,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 29076400,
            "rowCount" : 158173,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1299590951,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 29076400,
            "rowCount" : 158173,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -1641810746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 29076400,
            "rowCount" : 158173,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L], HashAggregate(keys=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], functions=[count(1), avg(cd_dep_count#46), max(cd_dep_count#46), sum(cd_dep_count#46), avg(cd_dep_employed_count#47), max(cd_dep_employed_count#47), sum(cd_dep_employed_count#47), avg(cd_dep_college_count#48), max(cd_dep_college_count#48), sum(cd_dep_college_count#48)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L], HashAggregate(keys=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], functions=[count(1), avg(cd_dep_count#46), max(cd_dep_count#46), sum(cd_dep_count#46), avg(cd_dep_employed_count#47), max(cd_dep_employed_count#47), sum(cd_dep_employed_count#47), avg(cd_dep_college_count#48), max(cd_dep_college_count#48), sum(cd_dep_college_count#48)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 29076400,
        "inputRowCount" : 158173
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226963253,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 645,
        "IOBytes" : {
          "Total" : 5790907,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 5790907,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -1289538854,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24262056,
            "rowCount" : 1010919,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 11 "
          },
          "4" : {
            "sign" : -2008992289,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 155341857216000000000,
            "rowCount" : 1941773215200000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "9" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "5" : {
            "sign" : 592979085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 170876042937600000000,
            "rowCount" : 1941773215200000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : -600031928,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 32349408000000,
            "rowCount" : 1010919000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "1" : {
            "sign" : -1902088528,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 318450807292800000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1073104703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -857518229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 318450807292800000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1592968670,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40436760000000,
            "rowCount" : 1010919000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "3" : {
            "sign" : -1926418532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 318450807292800000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- LogicalQueryStage Project [c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 11\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 194316664,
        "inputRowCount" : 3931719
      },
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],

        "6" : [ 62732, 58407, 58407, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 57029, 58407, 58407, 58407, 58407, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 59923, 58407, 62732, 57029, 58407, 58407, 58407, 58407, 59923, 58407, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 62732, 62732, 59923, 58407, 58407, 58407, 58407, 57029, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 62732, 62732, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 57029, 62732, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 57029, 58407, 58407, 57029, 64248, 59923, 58407, 58407, 58407, 58407, 62732, 58407, 58407, 58407, 59923, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 59923, 62732, 58407, 58407, 62732, 64248, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 57029, 62732, 59923, 58407, 62732, 59923, 58407, 58407, 58407, 57029, 58407, 58407, 58407, 58407, 58407, 58407, 58407 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226958623,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 5275,
        "IOBytes" : {
          "Total" : 73238181,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 57690632,
            "SW" : 15547549
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -254927857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : 923232803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "4" : {
            "sign" : 19284264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 124299226655072090332003226588346234327272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "15" : {
            "sign" : -1277048145,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#105], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 1636653102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -393824121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -1030503320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#143], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : 1255892470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136729149320579299365203549247180857760000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -157765072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "6" : {
            "sign" : -2039930465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 988658872753968972456525270483225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "1" : {
            "sign" : 1564426649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 254813414642897785180606614506109780370907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "14" : {
            "sign" : 394092130,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#51], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 1138108938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1860989132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 254813414642897785180606614506109780370907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : -892156021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1235823590942461215570656588104032,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "3" : {
            "sign" : -1981404923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 254813414642897785180606614506109780370907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#51], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#105], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#143], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5914445696,
        "inputRowCount" : 478403304
      },
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],


      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226922838,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 41060,
        "IOBytes" : {
          "Total" : 281208030,
          "Details" : {
            "IR" : 57896940,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 80884835
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1117233250,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 155341857216000,
            "rowCount" : 1941773215200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "5" : {
            "sign" : -675608584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 170876042937600,
            "rowCount" : 1941773215200,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "6" : {
            "sign" : 230100747,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32105872,
            "rowCount" : 1010919,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_current_cdemo_sk#11, ca_state#35], ShuffleQueryStage 12 "
          },
          "1" : {
            "sign" : 405815861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 318450807292800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -414863548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -922278674,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 318450807292800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "3" : {
            "sign" : -2033114615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 318450807292800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- LogicalQueryStage Project [c_current_cdemo_sk#11, ca_state#35], ShuffleQueryStage 12\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 170403472,
        "inputRowCount" : 2931719
      },
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "7" : [ 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 47574, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226960008,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3890,
        "IOBytes" : {
          "Total" : 43129167,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 37338260,
            "SW" : 5790907
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -254927857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : 923232803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6054497141056866191523840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "4" : {
            "sign" : 19284264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19338803572125944027669309165378040925090,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "15" : {
            "sign" : -1277048145,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 129747728,
            "rowCount" : 8109233,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#105], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 1636653102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5008397238437120,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -393824121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 8324933568953191013345280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -1030503320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#143], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : 1255892470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21272683929338538430436240081915845017600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -157765072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8324933568953191013345280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "6" : {
            "sign" : -2039930465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 153818171315616022479321695256576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "1" : {
            "sign" : 1564426649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 39644547322858185256722083789024983896434,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "14" : {
            "sign" : 394092130,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#51], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 1138108938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1860989132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 39644547322858185256722083789024983896434,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : -892156021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 192272714144520028099152119070720,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "3" : {
            "sign" : -1981404923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 39644547322858185256722083789024983896434,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#51], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#105], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#143], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5210246164,
        "inputRowCount" : 417016932
      },
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "4" : [ 38309, 39819, 37972, 37880, 38068, 40213, 38826, 39167, 38209, 38223, 39541, 37766, 40099, 40897, 38367, 38793, 40301, 39095, 38596, 38534, 38108, 39004, 40456, 39861, 38576, 39839, 38959, 39762, 37693, 37568, 37872, 36818, 37496, 39291, 38204, 38140, 38468, 38087, 38043, 37929, 37940, 37375, 41328, 38607, 39938, 39727, 39616, 38245, 39356, 38549, 40129, 38087, 38142, 38611, 38842, 37949, 39003, 37933, 38578, 38984, 37324, 38559, 37613, 38688, 38033, 39311, 39249, 38014, 38418, 39590, 38420, 38320, 37756, 38011, 38955, 38580, 38610, 37692, 39091, 39149, 38370, 38643, 39198, 37081, 38694, 38327, 39021, 38391, 38568, 40173, 39792, 39497, 39250, 38553, 38320, 40887, 38631, 37033, 38671, 38192, 37896, 39085, 39215, 38658, 38432, 37793, 37379, 39958, 38163, 40077, 39636, 38682, 39463, 38572, 38105, 37428, 38938, 38749, 38713, 36585, 39011, 38444, 40108, 37856, 37305, 40368, 38255, 38047, 38640, 38402, 38785, 39334, 38428, 39052, 37780, 38529, 39299, 39963, 38327, 39371, 38282, 37468, 36526, 40744, 38617, 38845, 39432, 38555, 38880, 38927, 39900, 38836, 38982, 39784, 39284, 38596, 38424, 38144, 38060, 39137, 36929, 37766, 38886, 38330, 38904, 39148, 39294, 38880, 39040, 38125, 39274, 39194, 37573, 38582, 38925, 37557, 38012, 37171, 38674, 37380, 37927, 38211, 39393, 38336, 39559, 38584, 40605, 38196, 37194, 39330, 39699, 38475, 39049, 38039, 38673, 40444, 38255, 38878, 40115, 38252 ],


      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 37160.0,
        "FinishedTasksDistributionInMs" : [ 589.0, 675.0, 4630.0, 6230.0, 6646.0 ]
      },
      "StartTimeInMs" : 1702226930097,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 33801,
        "IOBytes" : {
          "Total" : 265092190,
          "Details" : {
            "IR" : 49152433,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 73513502
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 383998189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143, cs_sold_date_sk#170] "
          },
          "12" : {
            "sign" : -522015548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : -1393861615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "19" : {
            "sign" : 1443761947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#72] "
          },
          "23" : {
            "sign" : -254218857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105] "
          },
          "4" : {
            "sign" : -1027583442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 86318907399355618286113351797462662727272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "40" : {
            "sign" : 1368653531,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#309], BroadcastQueryStage 5 "
          },
          "15" : {
            "sign" : 18456275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#71 = d_date_sk#72) "
          },
          "11" : {
            "sign" : -1062554393,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -1683395207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "33" : {
            "sign" : -1533716460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#170 = d_date_sk#309) "
          },
          "22" : {
            "sign" : -1097900016,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#72], BroadcastQueryStage 1 "
          },
          "26" : {
            "sign" : 1054612782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135]) "
          },
          "37" : {
            "sign" : -235108382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#309] "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "24" : {
            "sign" : 1947305767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#135 = d_date_sk#281) "
          },
          "35" : {
            "sign" : -1823874588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170]) "
          },
          "16" : {
            "sign" : 1269581808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51, ss_sold_date_sk#71] "
          },
          "5" : {
            "sign" : -319827792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 94950798139291180114724686977208929000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -1205711970,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "21" : {
            "sign" : -272999708,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#72, d_date_id#73, d_date#74, d_month_seq#75, d_week_seq#76, d_quarter_seq#77, d_year#78, d_dow#79, d_moy#80, d_dom#81, d_qoy#82, d_fy_year#83, d_fy_quarter_seq#84, d_fy_week_seq#85, d_day_name#86, d_quarter_name#87, d_holiday#88, d_weekend#89, d_following_holiday#90, d_first_dom#91, d_last_dom#92, d_same_day_ly#93, d_same_day_lq#94, d_current_day#95, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -782267515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143] "
          },
          "6" : {
            "sign" : 1627264229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 988658872753968972456525270483225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "36" : {
            "sign" : -265288399,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#137, cs_ship_date_sk#138, cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_bill_hdemo_sk#141, cs_bill_addr_sk#142, cs_ship_customer_sk#143, cs_ship_cdemo_sk#144, cs_ship_hdemo_sk#145, cs_ship_addr_sk#146, cs_call_center_sk#147, cs_catalog_page_sk#148, cs_ship_mode_sk#149, cs_warehouse_sk#150, cs_item_sk#151, cs_promo_sk#152, cs_order_number#153L, cs_quantity#154, cs_wholesale_cost#155, cs_list_price#156, cs_sales_price#157, cs_ext_discount_amt#158, cs_ext_sales_price#159, cs_ext_wholesale_cost#160, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -381855405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 176953760168679017486532371184798458590907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1231197803,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#309, d_date_id#310, d_date#311, d_month_seq#312, d_week_seq#313, d_quarter_seq#314, d_year#315, d_dow#316, d_moy#317, d_dom#318, d_qoy#319, d_fy_year#320, d_fy_quarter_seq#321, d_fy_week_seq#322, d_day_name#323, d_quarter_name#324, d_holiday#325, d_weekend#326, d_following_holiday#327, d_first_dom#328, d_last_dom#329, d_same_day_ly#330, d_same_day_lq#331, d_current_day#332, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1528993458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71]) "
          },
          "25" : {
            "sign" : -1938554229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105, ws_sold_date_sk#135] "
          },
          "14" : {
            "sign" : 1506382489,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51] "
          },
          "31" : {
            "sign" : 478209102,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#281], BroadcastQueryStage 3 "
          },
          "42" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96040000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "0" : {
            "sign" : -2074968560,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 438471766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72)) "
          },
          "27" : {
            "sign" : 1028127054,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#102, ws_ship_date_sk#103, ws_item_sk#104, ws_bill_customer_sk#105, ws_bill_cdemo_sk#106, ws_bill_hdemo_sk#107, ws_bill_addr_sk#108, ws_ship_customer_sk#109, ws_ship_cdemo_sk#110, ws_ship_hdemo_sk#111, ws_ship_addr_sk#112, ws_web_page_sk#113, ws_web_site_sk#114, ws_ship_mode_sk#115, ws_warehouse_sk#116, ws_promo_sk#117, ws_order_number#118L, ws_quantity#119, ws_wholesale_cost#120, ws_list_price#121, ws_sales_price#122, ws_ext_discount_amt#123, ws_ext_sales_price#124, ws_ext_wholesale_cost#125, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : 792818874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 176953760168679017486532371184798458590907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1893821254,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309)) "
          },
          "18" : {
            "sign" : 1326326748,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#49, ss_item_sk#50, ss_customer_sk#51, ss_cdemo_sk#52, ss_hdemo_sk#53, ss_addr_sk#54, ss_store_sk#55, ss_promo_sk#56, ss_ticket_number#57L, ss_quantity#58, ss_wholesale_cost#59, ss_list_price#60, ss_sales_price#61, ss_ext_discount_amt#62, ss_ext_sales_price#63, ss_ext_wholesale_cost#64, ss_ext_list_price#65, ss_ext_tax#66, ss_coupon_amt#67, ss_net_paid#68, ss_net_paid_inc_tax#69, ss_net_profit#70, ss_sold_date_sk#71], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1525339999,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#281, d_date_id#282, d_date#283, d_month_seq#284, d_week_seq#285, d_quarter_seq#286, d_year#287, d_dow#288, d_moy#289, d_dom#290, d_qoy#291, d_fy_year#292, d_fy_quarter_seq#293, d_fy_week_seq#294, d_day_name#295, d_quarter_name#296, d_holiday#297, d_weekend#298, d_following_holiday#299, d_first_dom#300, d_last_dom#301, d_same_day_ly#302, d_same_day_lq#303, d_current_day#304, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1720272479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1235823590942461215570656588104032,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "29" : {
            "sign" : 412073557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281)) "
          },
          "41" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "3" : {
            "sign" : -1756111041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 176953760168679017486532371184798458590907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          },
          "28" : {
            "sign" : 991757238,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#281] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- Project [ss_customer_sk#51]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n               :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n               :     :        :  :        :     :  +- Project [d_date_sk#72]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n               :     :        :  :        +- LogicalQueryStage Project [d_date_sk#72], BroadcastQueryStage 1\n               :     :        :  +- Project [ws_bill_customer_sk#105]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n               :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n               :     :        :        :     :  +- Project [d_date_sk#281]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n               :     :        :        +- LogicalQueryStage Project [d_date_sk#281], BroadcastQueryStage 3\n               :     :        +- Project [cs_ship_customer_sk#143]\n               :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n               :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n               :     :              :     :  +- Project [d_date_sk#309]\n               :     :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n               :     :              +- LogicalQueryStage Project [d_date_sk#309], BroadcastQueryStage 5\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86746696396,
        "inputRowCount" : 495154793
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 16,
        "FinishedTasksTotalTimeInMs" : 19808.0,
        "FinishedTasksDistributionInMs" : [ 134.0, 1240.0, 1275.0, 1333.0, 1896.0 ]
      },
      "StartTimeInMs" : 1702226919069,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 44829,
        "IOBytes" : {
          "Total" : 365620739,
          "Details" : {
            "IR" : 89786282,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 133408202
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 383998189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143, cs_sold_date_sk#170] "
          },
          "12" : {
            "sign" : -522015548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : -1393861615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "19" : {
            "sign" : 1443761947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#72] "
          },
          "23" : {
            "sign" : -254218857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105] "
          },
          "4" : {
            "sign" : -1027583442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 86318907399355618286113351797462662727272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "40" : {
            "sign" : 1368653531,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#309], BroadcastQueryStage 5 "
          },
          "15" : {
            "sign" : 18456275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#71 = d_date_sk#72) "
          },
          "11" : {
            "sign" : -1062554393,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -1683395207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "33" : {
            "sign" : -1533716460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#170 = d_date_sk#309) "
          },
          "22" : {
            "sign" : -1097900016,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#72], BroadcastQueryStage 1 "
          },
          "26" : {
            "sign" : 1054612782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135]) "
          },
          "37" : {
            "sign" : -235108382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#309] "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "24" : {
            "sign" : 1947305767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#135 = d_date_sk#281) "
          },
          "35" : {
            "sign" : -1823874588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170]) "
          },
          "16" : {
            "sign" : 1269581808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51, ss_sold_date_sk#71] "
          },
          "5" : {
            "sign" : -319827792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 94950798139291180114724686977208929000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -1205711970,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "21" : {
            "sign" : -272999708,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#72, d_date_id#73, d_date#74, d_month_seq#75, d_week_seq#76, d_quarter_seq#77, d_year#78, d_dow#79, d_moy#80, d_dom#81, d_qoy#82, d_fy_year#83, d_fy_quarter_seq#84, d_fy_week_seq#85, d_day_name#86, d_quarter_name#87, d_holiday#88, d_weekend#89, d_following_holiday#90, d_first_dom#91, d_last_dom#92, d_same_day_ly#93, d_same_day_lq#94, d_current_day#95, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -782267515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143] "
          },
          "6" : {
            "sign" : 1627264229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 988658872753968972456525270483225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "36" : {
            "sign" : -265288399,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#137, cs_ship_date_sk#138, cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_bill_hdemo_sk#141, cs_bill_addr_sk#142, cs_ship_customer_sk#143, cs_ship_cdemo_sk#144, cs_ship_hdemo_sk#145, cs_ship_addr_sk#146, cs_call_center_sk#147, cs_catalog_page_sk#148, cs_ship_mode_sk#149, cs_warehouse_sk#150, cs_item_sk#151, cs_promo_sk#152, cs_order_number#153L, cs_quantity#154, cs_wholesale_cost#155, cs_list_price#156, cs_sales_price#157, cs_ext_discount_amt#158, cs_ext_sales_price#159, cs_ext_wholesale_cost#160, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -381855405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 176953760168679017486532371184798458590907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1231197803,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#309, d_date_id#310, d_date#311, d_month_seq#312, d_week_seq#313, d_quarter_seq#314, d_year#315, d_dow#316, d_moy#317, d_dom#318, d_qoy#319, d_fy_year#320, d_fy_quarter_seq#321, d_fy_week_seq#322, d_day_name#323, d_quarter_name#324, d_holiday#325, d_weekend#326, d_following_holiday#327, d_first_dom#328, d_last_dom#329, d_same_day_ly#330, d_same_day_lq#331, d_current_day#332, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1528993458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71]) "
          },
          "25" : {
            "sign" : -1938554229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105, ws_sold_date_sk#135] "
          },
          "14" : {
            "sign" : 1506382489,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51] "
          },
          "31" : {
            "sign" : 478209102,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#281], BroadcastQueryStage 3 "
          },
          "42" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96040000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "0" : {
            "sign" : -2074968560,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 438471766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72)) "
          },
          "27" : {
            "sign" : 1028127054,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#102, ws_ship_date_sk#103, ws_item_sk#104, ws_bill_customer_sk#105, ws_bill_cdemo_sk#106, ws_bill_hdemo_sk#107, ws_bill_addr_sk#108, ws_ship_customer_sk#109, ws_ship_cdemo_sk#110, ws_ship_hdemo_sk#111, ws_ship_addr_sk#112, ws_web_page_sk#113, ws_web_site_sk#114, ws_ship_mode_sk#115, ws_warehouse_sk#116, ws_promo_sk#117, ws_order_number#118L, ws_quantity#119, ws_wholesale_cost#120, ws_list_price#121, ws_sales_price#122, ws_ext_discount_amt#123, ws_ext_sales_price#124, ws_ext_wholesale_cost#125, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : 792818874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 176953760168679017486532371184798458590907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1893821254,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309)) "
          },
          "18" : {
            "sign" : 1326326748,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#49, ss_item_sk#50, ss_customer_sk#51, ss_cdemo_sk#52, ss_hdemo_sk#53, ss_addr_sk#54, ss_store_sk#55, ss_promo_sk#56, ss_ticket_number#57L, ss_quantity#58, ss_wholesale_cost#59, ss_list_price#60, ss_sales_price#61, ss_ext_discount_amt#62, ss_ext_sales_price#63, ss_ext_wholesale_cost#64, ss_ext_list_price#65, ss_ext_tax#66, ss_coupon_amt#67, ss_net_paid#68, ss_net_paid_inc_tax#69, ss_net_profit#70, ss_sold_date_sk#71], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1525339999,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#281, d_date_id#282, d_date#283, d_month_seq#284, d_week_seq#285, d_quarter_seq#286, d_year#287, d_dow#288, d_moy#289, d_dom#290, d_qoy#291, d_fy_year#292, d_fy_quarter_seq#293, d_fy_week_seq#294, d_day_name#295, d_quarter_name#296, d_holiday#297, d_weekend#298, d_following_holiday#299, d_first_dom#300, d_last_dom#301, d_same_day_ly#302, d_same_day_lq#303, d_current_day#304, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1720272479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1235823590942461215570656588104032,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "29" : {
            "sign" : 412073557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281)) "
          },
          "41" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "3" : {
            "sign" : -1756111041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 176953760168679017486532371184798458590907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          },
          "28" : {
            "sign" : 991757238,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#281] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- Project [ss_customer_sk#51]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n               :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n               :     :        :  :        :     :  +- Project [d_date_sk#72]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n               :     :        :  :        +- LogicalQueryStage Project [d_date_sk#72], BroadcastQueryStage 1\n               :     :        :  +- Project [ws_bill_customer_sk#105]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n               :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n               :     :        :        :     :  +- Project [d_date_sk#281]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n               :     :        :        +- LogicalQueryStage Project [d_date_sk#281], BroadcastQueryStage 3\n               :     :        +- Project [cs_ship_customer_sk#143]\n               :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n               :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n               :     :              :     :  +- Project [d_date_sk#309]\n               :     :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n               :     :              +- LogicalQueryStage Project [d_date_sk#309], BroadcastQueryStage 5\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86769857020,
        "inputRowCount" : 495154793
      },
      "PD" : {


      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 134.0,
        "FinishedTasksDistributionInMs" : [ 134.0, 134.0, 134.0, 134.0, 134.0 ]
      },
      "StartTimeInMs" : 1702226919366,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 44532,
        "IOBytes" : {
          "Total" : 310868104,
          "Details" : {
            "IR" : 65766303,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 102675546
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -254927857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : 923232803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 927637167859377675960320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "4" : {
            "sign" : 19284264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2962986447509370985082086409013988258909,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "15" : {
            "sign" : -1277048145,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 129747728,
            "rowCount" : 8109233,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#105], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 1636653102,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5008397238437120,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -393824121,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1275501105806644304445440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -1030503320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 254672512,
            "rowCount" : 15917032,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#143], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : 1255892470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3259285092260308083590295049915387084800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -157765072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1275501105806644304445440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "6" : {
            "sign" : -2039930465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23567184768646079784394631938048,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "1" : {
            "sign" : 1564426649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 6074122217394210519418277138478675930763,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "14" : {
            "sign" : 394092130,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#51], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 1138108938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1860989132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 6074122217394210519418277138478675930763,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : -892156021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 29458980960807599730493289922560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "3" : {
            "sign" : -1981404923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6074122217394210519418277138478675930763,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#51], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#105], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#143], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3802723532,
        "inputRowCount" : 294417702
      },
      "PD" : {
        "4" : [ 38309, 39819, 37972, 37880, 38068, 40213, 38826, 39167, 38209, 38223, 39541, 37766, 40099, 40897, 38367, 38793, 40301, 39095, 38596, 38534, 38108, 39004, 40456, 39861, 38576, 39839, 38959, 39762, 37693, 37568, 37872, 36818, 37496, 39291, 38204, 38140, 38468, 38087, 38043, 37929, 37940, 37375, 41328, 38607, 39938, 39727, 39616, 38245, 39356, 38549, 40129, 38087, 38142, 38611, 38842, 37949, 39003, 37933, 38578, 38984, 37324, 38559, 37613, 38688, 38033, 39311, 39249, 38014, 38418, 39590, 38420, 38320, 37756, 38011, 38955, 38580, 38610, 37692, 39091, 39149, 38370, 38643, 39198, 37081, 38694, 38327, 39021, 38391, 38568, 40173, 39792, 39497, 39250, 38553, 38320, 40887, 38631, 37033, 38671, 38192, 37896, 39085, 39215, 38658, 38432, 37793, 37379, 39958, 38163, 40077, 39636, 38682, 39463, 38572, 38105, 37428, 38938, 38749, 38713, 36585, 39011, 38444, 40108, 37856, 37305, 40368, 38255, 38047, 38640, 38402, 38785, 39334, 38428, 39052, 37780, 38529, 39299, 39963, 38327, 39371, 38282, 37468, 36526, 40744, 38617, 38845, 39432, 38555, 38880, 38927, 39900, 38836, 38982, 39784, 39284, 38596, 38424, 38144, 38060, 39137, 36929, 37766, 38886, 38330, 38904, 39148, 39294, 38880, 39040, 38125, 39274, 39194, 37573, 38582, 38925, 37557, 38012, 37171, 38674, 37380, 37927, 38211, 39393, 38336, 39559, 38584, 40605, 38196, 37194, 39330, 39699, 38475, 39049, 38039, 38673, 40444, 38255, 38878, 40115, 38252 ],
        "5" : [ 95648, 97751, 95547, 96152, 96513, 97804, 95811, 94122, 94119, 94947, 97257, 93976, 95701, 94904, 95430, 95865, 96614, 97681, 95339, 94373, 96073, 96374, 94787, 97581, 95707, 95218, 95891, 97156, 97134, 94637, 96577, 95701, 93144, 96513, 97481, 96030, 96677, 95106, 93976, 96417, 93821, 95744, 165640, 94092, 96194, 93402, 95107, 95754, 97480, 97903, 97423, 95218, 96667, 95875, 96778, 97156, 92893, 91831, 93999, 95914, 94890, 96657, 92599, 94706, 95451, 95584, 96374, 93402, 95793, 99248, 96507, 94347, 95653, 95990, 96677, 96014, 97348, 97156, 96827, 97156, 97091, 96513, 95387, 92378, 98276, 93661, 93101, 94898, 95516, 98466, 94298, 96334, 94947, 94941, 95107, 98861, 92762, 93541, 97150, 96996, 95812, 97799, 93401, 95314, 95392, 97300, 96302, 94765, 97313, 92652, 93661, 96673, 98276, 96030, 96996, 95590, 93498, 94634, 97156, 97788, 93178, 96513, 98797, 97097, 97639, 99826, 96296, 93772, 94045, 94706, 96996, 98447, 94968, 97316, 96417, 94787, 96291, 96569, 96465, 95392, 95701, 93381, 96396, 95590, 96997, 98074, 96811, 95064, 99571, 95870, 98004, 96991, 96827, 97073, 95541, 97310, 94261, 99020, 96667, 97751, 93975, 94247, 95627, 95953, 97320, 96830, 96387, 97344, 96073, 95541, 97740, 98431, 94581, 96030, 95633, 94797, 95347, 94744, 96556, 96353, 96354, 94421, 96030, 95101, 97220, 94717, 98642, 96190, 94445, 94575, 96184, 97310, 93477, 95408, 95547, 97793, 96115, 95049, 98282, 95696 ],

        "0" : [ 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239, 164239 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 10,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 37160.0,
        "FinishedTasksDistributionInMs" : [ 589.0, 675.0, 4630.0, 6230.0, 6646.0 ]
      },
      "StartTimeInMs" : 1702226931232,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 32666,
        "IOBytes" : {
          "Total" : 223220809,
          "Details" : {
            "IR" : 25636030,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 55158524
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 383998189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143, cs_sold_date_sk#170] "
          },
          "12" : {
            "sign" : -522015548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "8" : {
            "sign" : -1393861615,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "19" : {
            "sign" : 1443761947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#72] "
          },
          "23" : {
            "sign" : -254218857,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105] "
          },
          "4" : {
            "sign" : -1027583442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 124299226655072090332003226588346234327272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "40" : {
            "sign" : 1368653531,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#309], BroadcastQueryStage 5 "
          },
          "15" : {
            "sign" : 18456275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#71 = d_date_sk#72) "
          },
          "11" : {
            "sign" : -1062554393,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          },
          "9" : {
            "sign" : -1683395207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "33" : {
            "sign" : -1533716460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#170 = d_date_sk#309) "
          },
          "22" : {
            "sign" : -1097900016,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#72], BroadcastQueryStage 1 "
          },
          "26" : {
            "sign" : 1054612782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135]) "
          },
          "37" : {
            "sign" : -235108382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#309] "
          },
          "13" : {
            "sign" : 1409490315,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0 "
          },
          "24" : {
            "sign" : 1947305767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#135 = d_date_sk#281) "
          },
          "35" : {
            "sign" : -1823874588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170]) "
          },
          "16" : {
            "sign" : 1269581808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51, ss_sold_date_sk#71] "
          },
          "5" : {
            "sign" : -319827792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 136729149320579299365203549247180857760000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          },
          "10" : {
            "sign" : -1205711970,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "21" : {
            "sign" : -272999708,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#72, d_date_id#73, d_date#74, d_month_seq#75, d_week_seq#76, d_quarter_seq#77, d_year#78, d_dow#79, d_moy#80, d_dom#81, d_qoy#82, d_fy_year#83, d_fy_quarter_seq#84, d_fy_week_seq#85, d_day_name#86, d_quarter_name#87, d_holiday#88, d_weekend#89, d_following_holiday#90, d_first_dom#91, d_last_dom#92, d_same_day_ly#93, d_same_day_lq#94, d_current_day#95, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -782267515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143] "
          },
          "6" : {
            "sign" : 1627264229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 988658872753968972456525270483225,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "36" : {
            "sign" : -265288399,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#137, cs_ship_date_sk#138, cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_bill_hdemo_sk#141, cs_bill_addr_sk#142, cs_ship_customer_sk#143, cs_ship_cdemo_sk#144, cs_ship_hdemo_sk#145, cs_ship_addr_sk#146, cs_call_center_sk#147, cs_catalog_page_sk#148, cs_ship_mode_sk#149, cs_warehouse_sk#150, cs_item_sk#151, cs_promo_sk#152, cs_order_number#153L, cs_quantity#154, cs_wholesale_cost#155, cs_list_price#156, cs_sales_price#157, cs_ext_discount_amt#158, cs_ext_sales_price#159, cs_ext_wholesale_cost#160, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -381855405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 254813414642897785180606614506109780370907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1231197803,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#309, d_date_id#310, d_date#311, d_month_seq#312, d_week_seq#313, d_quarter_seq#314, d_year#315, d_dow#316, d_moy#317, d_dom#318, d_qoy#319, d_fy_year#320, d_fy_quarter_seq#321, d_fy_week_seq#322, d_day_name#323, d_quarter_name#324, d_holiday#325, d_weekend#326, d_following_holiday#327, d_first_dom#328, d_last_dom#329, d_same_day_ly#330, d_same_day_lq#331, d_current_day#332, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 1528993458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71]) "
          },
          "25" : {
            "sign" : -1938554229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105, ws_sold_date_sk#135] "
          },
          "14" : {
            "sign" : 1506382489,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51] "
          },
          "31" : {
            "sign" : 478209102,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#281], BroadcastQueryStage 3 "
          },
          "42" : {
            "sign" : 1433023125,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7 "
          },
          "0" : {
            "sign" : -2074968560,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 438471766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72)) "
          },
          "27" : {
            "sign" : 1028127054,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#102, ws_ship_date_sk#103, ws_item_sk#104, ws_bill_customer_sk#105, ws_bill_cdemo_sk#106, ws_bill_hdemo_sk#107, ws_bill_addr_sk#108, ws_ship_customer_sk#109, ws_ship_cdemo_sk#110, ws_ship_hdemo_sk#111, ws_ship_addr_sk#112, ws_web_page_sk#113, ws_web_site_sk#114, ws_ship_mode_sk#115, ws_warehouse_sk#116, ws_promo_sk#117, ws_order_number#118L, ws_quantity#119, ws_wholesale_cost#120, ws_list_price#121, ws_sales_price#122, ws_ext_discount_amt#123, ws_ext_sales_price#124, ws_ext_wholesale_cost#125, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : 792818874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 254813414642897785180606614506109780370907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1893821254,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309)) "
          },
          "18" : {
            "sign" : 1326326748,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#49, ss_item_sk#50, ss_customer_sk#51, ss_cdemo_sk#52, ss_hdemo_sk#53, ss_addr_sk#54, ss_store_sk#55, ss_promo_sk#56, ss_ticket_number#57L, ss_quantity#58, ss_wholesale_cost#59, ss_list_price#60, ss_sales_price#61, ss_ext_discount_amt#62, ss_ext_sales_price#63, ss_ext_wholesale_cost#64, ss_ext_list_price#65, ss_ext_tax#66, ss_coupon_amt#67, ss_net_paid#68, ss_net_paid_inc_tax#69, ss_net_profit#70, ss_sold_date_sk#71], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : 1525339999,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#281, d_date_id#282, d_date#283, d_month_seq#284, d_week_seq#285, d_quarter_seq#286, d_year#287, d_dow#288, d_moy#289, d_dom#290, d_qoy#291, d_fy_year#292, d_fy_quarter_seq#293, d_fy_week_seq#294, d_day_name#295, d_quarter_name#296, d_holiday#297, d_weekend#298, d_following_holiday#299, d_first_dom#300, d_last_dom#301, d_same_day_ly#302, d_same_day_lq#303, d_current_day#304, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1720272479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1235823590942461215570656588104032,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          },
          "29" : {
            "sign" : 412073557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 159654,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281)) "
          },
          "41" : {
            "sign" : -1326695764,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6 "
          },
          "3" : {
            "sign" : -1756111041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 254813414642897785180606614506109780370907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          },
          "28" : {
            "sign" : 991757238,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#281] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13], ShuffleQueryStage 0\n               :     :        :  :  +- Project [ss_customer_sk#51]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n               :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n               :     :        :  :        :     :  +- Project [d_date_sk#72]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n               :     :        :  :        +- LogicalQueryStage Project [d_date_sk#72], BroadcastQueryStage 1\n               :     :        :  +- Project [ws_bill_customer_sk#105]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n               :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n               :     :        :        :     :  +- Project [d_date_sk#281]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n               :     :        :        +- LogicalQueryStage Project [d_date_sk#281], BroadcastQueryStage 3\n               :     :        +- Project [cs_ship_customer_sk#143]\n               :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n               :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n               :     :              :     :  +- Project [d_date_sk#309]\n               :     :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n               :     :              +- LogicalQueryStage Project [d_date_sk#309], BroadcastQueryStage 5\n               :     +- LogicalQueryStage Project [ca_address_sk#27, ca_state#35], ShuffleQueryStage 6\n               +- LogicalQueryStage Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86812114620,
        "inputRowCount" : 495154793
      },
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],


      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226921754,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 42144,
        "IOBytes" : {
          "Total" : 281301875,
          "Details" : {
            "IR" : 57990785,
            "IW" : 0,
            "SR" : 142426255,
            "SW" : 80884835
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1020594542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 809431754137643989757147683200000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 809431754137643989757147683200000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, ca_state#35] "
          },
          "1" : {
            "sign" : 765988692,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1011789692672054987196434604000000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1011789692672054987196434604000000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#13 = ca_address_sk#27) "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_current_cdemo_sk#11, ca_state#35]\n+- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n   :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n   :  +- Filter (exists#373 OR exists#374)\n   :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n   :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n   :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n   :        :  :  :- Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13]\n   :        :  :  :  +- Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n   :        :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#9,c_customer_id#10,c_current_cdemo_sk#11,c_current_hdemo_sk#12,c_current_addr_sk#13,c_first_shipto_date_sk#14,c_first_sales_date_sk#15,c_salutation#16,c_first_name#17,c_last_name#18,c_preferred_cust_flag#19,c_birth_day#20,c_birth_month#21,c_birth_year#22,c_birth_country#23,c_login#24,c_email_address#25,c_last_review_date#26] parquet\n   :        :  :  +- Project [ss_customer_sk#51]\n   :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n   :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n   :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n   :        :  :        :     :  +- Project [d_date_sk#72]\n   :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n   :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n   :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n   :        :  :        +- Project [d_date_sk#72]\n   :        :  :           +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n   :        :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n   :        :  +- Project [ws_bill_customer_sk#105]\n   :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n   :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n   :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n   :        :        :     :  +- Project [d_date_sk#281]\n   :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n   :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n   :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n   :        :        +- Project [d_date_sk#281]\n   :        :           +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n   :        :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n   :        +- Project [cs_ship_customer_sk#143]\n   :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n   :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n   :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n   :              :     :  +- Project [d_date_sk#309]\n   :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n   :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n   :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n   :              +- Project [d_date_sk#309]\n   :                 +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n   :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n   +- Project [ca_address_sk#27, ca_state#35]\n      +- Filter isnotnull(ca_address_sk#27)\n         +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_address_id#28,ca_street_number#29,ca_street_name#30,ca_street_type#31,ca_suite_number#32,ca_city#33,ca_county#34,ca_state#35,ca_zip#36,ca_country#37,ca_gmt_offset#38,ca_location_type#39] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1544697980,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#27, ca_state#35] Arguments: [ca_address_sk#27 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 25857378,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 31757008,
            "rowCount" : 1000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#27, ca_state#35] Arguments: 6 "
          },
          "1" : {
            "sign" : 912415478,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 1011789692672054987196434604000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_current_addr_sk#13] Right keys [1]: [ca_address_sk#27] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1309646184,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 809431754137643989757147683200000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [c_current_cdemo_sk#11, ca_state#35] Input [4]: [c_current_cdemo_sk#11, c_current_addr_sk#13, ca_address_sk#27, ca_state#35] "
          },
          "2" : {
            "sign" : 439365974,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [c_current_cdemo_sk#11, c_current_addr_sk#13] Arguments: [c_current_addr_sk#13 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : 876279703,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 24262056,
            "rowCount" : 1010919,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [c_current_cdemo_sk#11, c_current_addr_sk#13] Arguments: 11 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "SortMergeJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_current_cdemo_sk#11, ca_state#35]\n+- SortMergeJoin [c_current_addr_sk#13], [ca_address_sk#27], Inner\n   :- Sort [c_current_addr_sk#13 ASC NULLS FIRST], false, 0\n   :  +- ShuffleQueryStage 11\n   :     +- Exchange hashpartitioning(c_current_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1609]\n   :        +- *(16) Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n   :           +- *(16) Filter (exists#373 OR exists#374)\n   :              +- *(16) SortMergeJoin [c_customer_sk#9], [cs_ship_customer_sk#143], ExistenceJoin(exists#374)\n   :                 :- *(14) SortMergeJoin [c_customer_sk#9], [ws_bill_customer_sk#105], ExistenceJoin(exists#373)\n   :                 :  :- *(12) SortMergeJoin [c_customer_sk#9], [ss_customer_sk#51], LeftSemi\n   :                 :  :  :- *(10) Sort [c_customer_sk#9 ASC NULLS FIRST], false, 0\n   :                 :  :  :  +- AQEShuffleRead coalesced\n   :                 :  :  :     +- ShuffleQueryStage 0\n   :                 :  :  :        +- Exchange hashpartitioning(c_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=354]\n   :                 :  :  :           +- *(1) Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n   :                 :  :  :              +- *(1) ColumnarToRow\n   :                 :  :  :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#9,c_current_cdemo_sk#11,c_current_addr_sk#13] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#13), isnotnull(c_current_cdemo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n   :                 :  :  +- *(11) Sort [ss_customer_sk#51 ASC NULLS FIRST], false, 0\n   :                 :  :     +- AQEShuffleRead coalesced\n   :                 :  :        +- ShuffleQueryStage 8\n   :                 :  :           +- Exchange hashpartitioning(ss_customer_sk#51, 200), ENSURE_REQUIREMENTS, [plan_id=1088]\n   :                 :  :              +- *(7) Project [ss_customer_sk#51]\n   :                 :  :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#71], [d_date_sk#72], Inner, BuildRight, false\n   :                 :  :                    :- *(7) ColumnarToRow\n   :                 :  :                    :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#51,ss_sold_date_sk#71] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#71), dynamicpruningexpression(ss_sold_date_sk#71 IN dynamicpruning#375)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n   :                 :  :                    :        +- SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n   :                 :  :                    :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                            +- == Final Plan ==\n                                                               BroadcastQueryStage 1\n                                                               +- ReusedExchange [d_date_sk#72], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                                                            +- == Initial Plan ==\n                                                               BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1064]\n                                                               +- Project [d_date_sk#72]\n                                                                  +- Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :                 :  :                    +- BroadcastQueryStage 1\n   :                 :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n   :                 :  :                          +- *(2) Project [d_date_sk#72]\n   :                 :  :                             +- *(2) Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n   :                 :  :                                +- *(2) ColumnarToRow\n   :                 :  :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   :                 :  +- *(13) Sort [ws_bill_customer_sk#105 ASC NULLS FIRST], false, 0\n   :                 :     +- AQEShuffleRead coalesced\n   :                 :        +- ShuffleQueryStage 9\n   :                 :           +- Exchange hashpartitioning(ws_bill_customer_sk#105, 200), ENSURE_REQUIREMENTS, [plan_id=1130]\n   :                 :              +- *(8) Project [ws_bill_customer_sk#105]\n   :                 :                 +- *(8) BroadcastHashJoin [ws_sold_date_sk#135], [d_date_sk#281], Inner, BuildRight, false\n   :                 :                    :- *(8) ColumnarToRow\n   :                 :                    :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#105,ws_sold_date_sk#135] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#135), dynamicpruningexpression(ws_sold_date_sk#135 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n   :                 :                    :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n   :                 :                    +- BroadcastQueryStage 3\n   :                 :                       +- ReusedExchange [d_date_sk#281], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n   :                 +- *(15) Sort [cs_ship_customer_sk#143 ASC NULLS FIRST], false, 0\n   :                    +- AQEShuffleRead coalesced\n   :                       +- ShuffleQueryStage 10\n   :                          +- Exchange hashpartitioning(cs_ship_customer_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1172]\n   :                             +- *(9) Project [cs_ship_customer_sk#143]\n   :                                +- *(9) BroadcastHashJoin [cs_sold_date_sk#170], [d_date_sk#309], Inner, BuildRight, false\n   :                                   :- *(9) ColumnarToRow\n   :                                   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#143,cs_sold_date_sk#170] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#170), dynamicpruningexpression(cs_sold_date_sk#170 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n   :                                   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n   :                                   +- BroadcastQueryStage 5\n   :                                      +- ReusedExchange [d_date_sk#309], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n   +- Sort [ca_address_sk#27 ASC NULLS FIRST], false, 0\n      +- ShuffleQueryStage 6\n         +- Exchange hashpartitioning(ca_address_sk#27, 200), ENSURE_REQUIREMENTS, [plan_id=451]\n            +- *(5) Filter isnotnull(ca_address_sk#27)\n               +- *(5) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_state#35] Batched: true, DataFilters: [isnotnull(ca_address_sk#27)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 56019064,
        "inputRowCount" : 2010919
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574, 47574 ],
        "6" : [ 62732, 58407, 58407, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 57029, 58407, 58407, 58407, 58407, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 59923, 58407, 62732, 57029, 58407, 58407, 58407, 58407, 59923, 58407, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 62732, 62732, 59923, 58407, 58407, 58407, 58407, 57029, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 62732, 62732, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 57029, 62732, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 57029, 58407, 58407, 57029, 64248, 59923, 58407, 58407, 58407, 58407, 62732, 58407, 58407, 58407, 59923, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 59923, 62732, 58407, 58407, 62732, 64248, 58407, 59923, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 62732, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 58407, 57029, 62732, 59923, 58407, 62732, 59923, 58407, 58407, 58407, 57029, 58407, 58407, 58407, 58407, 58407, 58407, 58407 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 21 ],
      "Objectives" : {
        "DurationInMs" : 1281,
        "TotalTasksDurationInMs" : 1272,
        "IOBytes" : {
          "Total" : 30109014,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 20352372,
            "SW" : 9756642
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1326326748,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#49, ss_item_sk#50, ss_customer_sk#51, ss_cdemo_sk#52, ss_hdemo_sk#53, ss_addr_sk#54, ss_store_sk#55, ss_promo_sk#56, ss_ticket_number#57L, ss_quantity#58, ss_wholesale_cost#59, ss_list_price#60, ss_sales_price#61, ss_ext_discount_amt#62, ss_ext_sales_price#63, ss_ext_wholesale_cost#64, ss_ext_list_price#65, ss_ext_tax#66, ss_coupon_amt#67, ss_net_paid#68, ss_net_paid_inc_tax#69, ss_net_profit#70, ss_sold_date_sk#71], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 67927690,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#71 = d_date_sk#72) "
          },
          "0" : {
            "sign" : -374208284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3186487020,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 3186487020,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51] "
          },
          "2" : {
            "sign" : 1269581808,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#51, ss_sold_date_sk#71] "
          },
          "3" : {
            "sign" : 1528993458,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#51]\n+- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n   :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n   :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n   :     :  +- Project [d_date_sk#72]\n   :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n   +- Project [d_date_sk#72]\n      +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1544591625,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_customer_sk#51] Input [3]: [ss_customer_sk#51, ss_sold_date_sk#71, d_date_sk#72] "
          },
          "1" : {
            "sign" : 451088157,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#71] Right keys [1]: [d_date_sk#72] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : -403404120,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [2]: [ss_customer_sk#51, ss_sold_date_sk#71] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#71), dynamicpruningexpression(ss_sold_date_sk#71 IN dynamicpruning#375)] ReadSchema: struct<ss_customer_sk:int> "
          },
          "3" : {
            "sign" : 369008248,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1050768,
            "rowCount" : 274,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#72] Arguments: 1 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#51]\n+- BroadcastHashJoin [ss_sold_date_sk#71], [d_date_sk#72], Inner, BuildRight, false\n   :- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#51,ss_sold_date_sk#71] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#71), dynamicpruningexpression(ss_sold_date_sk#71 IN dynamicpruning#375)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n   :     +- SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n   :        +- AdaptiveSparkPlan isFinalPlan=false\n   :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1064]\n   :              +- Project [d_date_sk#72]\n   :                 +- Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n         +- *(2) Project [d_date_sk#72]\n            +- *(2) Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4401776416,
        "inputRowCount" : 275045627
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 17082,
        "TotalTasksDurationInMs" : 166576,
        "IOBytes" : {
          "Total" : 53912686,
          "Details" : {
            "IR" : 25636030,
            "IW" : 0,
            "SR" : 0,
            "SW" : 28276656
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2060838181,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 144875038743752385446697045603438545454544,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 144875038743752385446697045603438545454544,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L] "
          },
          "1" : {
            "sign" : 1640573132,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 70670750606708480705705875904116363636363,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 70670750606708480705705875904116363636363,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "2" : {
            "sign" : -837530486,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 77737825667379328776276463494528000000000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 77737825667379328776276463494528000000000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n+- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n   +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n      :- Project [c_current_cdemo_sk#11, ca_state#35]\n      :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n      :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n      :     :  +- Filter (exists#373 OR exists#374)\n      :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n      :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n      :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n      :     :        :  :  :- Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13]\n      :     :        :  :  :  +- Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n      :     :        :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#9,c_customer_id#10,c_current_cdemo_sk#11,c_current_hdemo_sk#12,c_current_addr_sk#13,c_first_shipto_date_sk#14,c_first_sales_date_sk#15,c_salutation#16,c_first_name#17,c_last_name#18,c_preferred_cust_flag#19,c_birth_day#20,c_birth_month#21,c_birth_year#22,c_birth_country#23,c_login#24,c_email_address#25,c_last_review_date#26] parquet\n      :     :        :  :  +- Project [ss_customer_sk#51]\n      :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n      :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n      :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n      :     :        :  :        :     :  +- Project [d_date_sk#72]\n      :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n      :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n      :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n      :     :        :  :        +- Project [d_date_sk#72]\n      :     :        :  :           +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n      :     :        :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n      :     :        :  +- Project [ws_bill_customer_sk#105]\n      :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n      :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n      :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n      :     :        :        :     :  +- Project [d_date_sk#281]\n      :     :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n      :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n      :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n      :     :        :        +- Project [d_date_sk#281]\n      :     :        :           +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n      :     :        :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n      :     :        +- Project [cs_ship_customer_sk#143]\n      :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n      :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n      :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n      :     :              :     :  +- Project [d_date_sk#309]\n      :     :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n      :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n      :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n      :     :              +- Project [d_date_sk#309]\n      :     :                 +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n      :     :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#27, ca_state#35]\n      :        +- Filter isnotnull(ca_address_sk#27)\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_address_id#28,ca_street_number#29,ca_street_name#30,ca_street_type#31,ca_suite_number#32,ca_city#33,ca_county#34,ca_state#35,ca_zip#36,ca_country#37,ca_gmt_offset#38,ca_location_type#39] parquet\n      +- Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n         +- Filter isnotnull(cd_demo_sk#40)\n            +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_education_status#43,cd_purchase_estimate#44,cd_credit_rating#45,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -475492336,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 32105872,
            "rowCount" : 1010919,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [c_current_cdemo_sk#11, ca_state#35] Arguments: 12 "
          },
          "5" : {
            "sign" : 1858504837,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [6]: [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Arguments: [cd_demo_sk#40 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -968252278,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 138297600,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Arguments: 7 "
          },
          "1" : {
            "sign" : 1006987049,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 70670750606708480705705875904116363636363,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Input [8]: [c_current_cdemo_sk#11, ca_state#35, cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "0" : {
            "sign" : 1521897832,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 144875038743752385446697045603438545454544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [6]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Keys [6]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Functions [10]: [partial_count(1), partial_avg(cd_dep_count#46), partial_max(cd_dep_count#46), partial_sum(cd_dep_count#46), partial_avg(cd_dep_employed_count#47), partial_max(cd_dep_employed_count#47), partial_sum(cd_dep_employed_count#47), partial_avg(cd_dep_college_count#48), partial_max(cd_dep_college_count#48), partial_sum(cd_dep_college_count#48)] Aggregate Attributes [13]: [count#378L, sum#379, count#380L, max#381, sum#382L, sum#383, count#384L, max#385, sum#386L, sum#387, count#388L, max#389, sum#390L] Results [19]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48, count#391L, sum#392, count#393L, max#394, sum#395L, sum#396, count#397L, max#398, sum#399L, sum#400, count#401L, max#402, sum#403L] "
          },
          "2" : {
            "sign" : -1547879409,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 77737825667379328776276463494528000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_current_cdemo_sk#11] Right keys [1]: [cd_demo_sk#40] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 803905282,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [c_current_cdemo_sk#11, ca_state#35] Arguments: [c_current_cdemo_sk#11 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], functions=[partial_count(1), partial_avg(cd_dep_count#46), partial_max(cd_dep_count#46), partial_sum(cd_dep_count#46), partial_avg(cd_dep_employed_count#47), partial_max(cd_dep_employed_count#47), partial_sum(cd_dep_employed_count#47), partial_avg(cd_dep_college_count#48), partial_max(cd_dep_college_count#48), partial_sum(cd_dep_college_count#48)], output=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48, count#391L, sum#392, count#393L, max#394, sum#395L, sum#396, count#397L, max#398, sum#399L, sum#400, count#401L, max#402, sum#403L])\n+- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n   +- SortMergeJoin [c_current_cdemo_sk#11], [cd_demo_sk#40], Inner\n      :- Sort [c_current_cdemo_sk#11 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 12\n      :     +- Exchange hashpartitioning(c_current_cdemo_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=1740]\n      :        +- *(19) Project [c_current_cdemo_sk#11, ca_state#35]\n      :           +- *(19) SortMergeJoin [c_current_addr_sk#13], [ca_address_sk#27], Inner\n      :              :- *(17) Sort [c_current_addr_sk#13 ASC NULLS FIRST], false, 0\n      :              :  +- AQEShuffleRead coalesced\n      :              :     +- ShuffleQueryStage 11\n      :              :        +- Exchange hashpartitioning(c_current_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1609]\n      :              :           +- *(16) Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n      :              :              +- *(16) Filter (exists#373 OR exists#374)\n      :              :                 +- *(16) SortMergeJoin [c_customer_sk#9], [cs_ship_customer_sk#143], ExistenceJoin(exists#374)\n      :              :                    :- *(14) SortMergeJoin [c_customer_sk#9], [ws_bill_customer_sk#105], ExistenceJoin(exists#373)\n      :              :                    :  :- *(12) SortMergeJoin [c_customer_sk#9], [ss_customer_sk#51], LeftSemi\n      :              :                    :  :  :- *(10) Sort [c_customer_sk#9 ASC NULLS FIRST], false, 0\n      :              :                    :  :  :  +- AQEShuffleRead coalesced\n      :              :                    :  :  :     +- ShuffleQueryStage 0\n      :              :                    :  :  :        +- Exchange hashpartitioning(c_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=354]\n      :              :                    :  :  :           +- *(1) Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n      :              :                    :  :  :              +- *(1) ColumnarToRow\n      :              :                    :  :  :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#9,c_current_cdemo_sk#11,c_current_addr_sk#13] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#13), isnotnull(c_current_cdemo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n      :              :                    :  :  +- *(11) Sort [ss_customer_sk#51 ASC NULLS FIRST], false, 0\n      :              :                    :  :     +- AQEShuffleRead coalesced\n      :              :                    :  :        +- ShuffleQueryStage 8\n      :              :                    :  :           +- Exchange hashpartitioning(ss_customer_sk#51, 200), ENSURE_REQUIREMENTS, [plan_id=1088]\n      :              :                    :  :              +- *(7) Project [ss_customer_sk#51]\n      :              :                    :  :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#71], [d_date_sk#72], Inner, BuildRight, false\n      :              :                    :  :                    :- *(7) ColumnarToRow\n      :              :                    :  :                    :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#51,ss_sold_date_sk#71] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#71), dynamicpruningexpression(ss_sold_date_sk#71 IN dynamicpruning#375)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n      :              :                    :  :                    :        +- SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n      :              :                    :  :                    :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                 +- == Final Plan ==\n                                                                                    BroadcastQueryStage 1\n                                                                                    +- ReusedExchange [d_date_sk#72], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                                                                                 +- == Initial Plan ==\n                                                                                    BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1064]\n                                                                                    +- Project [d_date_sk#72]\n                                                                                       +- Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n                                                                                          +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :              :                    :  :                    +- BroadcastQueryStage 1\n      :              :                    :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n      :              :                    :  :                          +- *(2) Project [d_date_sk#72]\n      :              :                    :  :                             +- *(2) Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n      :              :                    :  :                                +- *(2) ColumnarToRow\n      :              :                    :  :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :              :                    :  +- *(13) Sort [ws_bill_customer_sk#105 ASC NULLS FIRST], false, 0\n      :              :                    :     +- AQEShuffleRead coalesced\n      :              :                    :        +- ShuffleQueryStage 9\n      :              :                    :           +- Exchange hashpartitioning(ws_bill_customer_sk#105, 200), ENSURE_REQUIREMENTS, [plan_id=1130]\n      :              :                    :              +- *(8) Project [ws_bill_customer_sk#105]\n      :              :                    :                 +- *(8) BroadcastHashJoin [ws_sold_date_sk#135], [d_date_sk#281], Inner, BuildRight, false\n      :              :                    :                    :- *(8) ColumnarToRow\n      :              :                    :                    :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#105,ws_sold_date_sk#135] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#135), dynamicpruningexpression(ws_sold_date_sk#135 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n      :              :                    :                    :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n      :              :                    :                    +- BroadcastQueryStage 3\n      :              :                    :                       +- ReusedExchange [d_date_sk#281], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n      :              :                    +- *(15) Sort [cs_ship_customer_sk#143 ASC NULLS FIRST], false, 0\n      :              :                       +- AQEShuffleRead coalesced\n      :              :                          +- ShuffleQueryStage 10\n      :              :                             +- Exchange hashpartitioning(cs_ship_customer_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1172]\n      :              :                                +- *(9) Project [cs_ship_customer_sk#143]\n      :              :                                   +- *(9) BroadcastHashJoin [cs_sold_date_sk#170], [d_date_sk#309], Inner, BuildRight, false\n      :              :                                      :- *(9) ColumnarToRow\n      :              :                                      :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#143,cs_sold_date_sk#170] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#170), dynamicpruningexpression(cs_sold_date_sk#170 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n      :              :                                      :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n      :              :                                      +- BroadcastQueryStage 5\n      :              :                                         +- ReusedExchange [d_date_sk#309], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n      :              +- *(18) Sort [ca_address_sk#27 ASC NULLS FIRST], false, 0\n      :                 +- AQEShuffleRead coalesced\n      :                    +- ShuffleQueryStage 6\n      :                       +- Exchange hashpartitioning(ca_address_sk#27, 200), ENSURE_REQUIREMENTS, [plan_id=451]\n      :                          +- *(5) Filter isnotnull(ca_address_sk#27)\n      :                             +- *(5) ColumnarToRow\n      :                                +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_state#35] Batched: true, DataFilters: [isnotnull(ca_address_sk#27)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n      +- Sort [cd_demo_sk#40 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 7\n            +- Exchange hashpartitioning(cd_demo_sk#40, 200), ENSURE_REQUIREMENTS, [plan_id=472]\n               +- *(6) Filter isnotnull(cd_demo_sk#40)\n                  +- *(6) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] Batched: true, DataFilters: [isnotnull(cd_demo_sk#40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 170403472,
        "inputRowCount" : 2931719
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177, 112177 ],
        "7" : [ 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 47574, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 30 ],
      "Objectives" : {
        "DurationInMs" : 3028,
        "TotalTasksDurationInMs" : 3020,
        "IOBytes" : {
          "Total" : 37338260,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 31547353,
            "SW" : 5790907
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1028127054,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#102, ws_ship_date_sk#103, ws_item_sk#104, ws_bill_customer_sk#105, ws_bill_cdemo_sk#106, ws_bill_hdemo_sk#107, ws_bill_addr_sk#108, ws_ship_customer_sk#109, ws_ship_cdemo_sk#110, ws_ship_hdemo_sk#111, ws_ship_addr_sk#112, ws_web_page_sk#113, ws_web_site_sk#114, ws_ship_mode_sk#115, ws_warehouse_sk#116, ws_promo_sk#117, ws_order_number#118L, ws_quantity#119, ws_wholesale_cost#120, ws_list_price#121, ws_sales_price#122, ws_ext_discount_amt#123, ws_ext_sales_price#124, ws_ext_wholesale_cost#125, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1628659305,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#135 = d_date_sk#281) "
          },
          "0" : {
            "sign" : -1856538675,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 833947260,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 833947260,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105] "
          },
          "2" : {
            "sign" : -1938554229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1151737984,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 1151737984,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#105, ws_sold_date_sk#135] "
          },
          "3" : {
            "sign" : 1054612782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#105]\n+- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n   :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n   :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n   :     :  +- Project [d_date_sk#281]\n   :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n   +- Project [d_date_sk#281]\n      +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -597197555,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ws_bill_customer_sk#105] Input [3]: [ws_bill_customer_sk#105, ws_sold_date_sk#135, d_date_sk#281] "
          },
          "1" : {
            "sign" : -1338619805,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#135] Right keys [1]: [d_date_sk#281] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : 38898445,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [2]: [ws_bill_customer_sk#105, ws_sold_date_sk#135] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#135), dynamicpruningexpression(ws_sold_date_sk#135 IN dynamicpruning#375)] ReadSchema: struct<ws_bill_customer_sk:int> "
          },
          "3" : {
            "sign" : -237678130,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1050768,
            "rowCount" : 274,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#281] Arguments: 3 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#105]\n+- BroadcastHashJoin [ws_sold_date_sk#135], [d_date_sk#281], Inner, BuildRight, false\n   :- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#105,ws_sold_date_sk#135] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#135), dynamicpruningexpression(ws_sold_date_sk#135 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n   :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n   +- BroadcastQueryStage 3\n      +- ReusedExchange [d_date_sk#281], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1152788752,
        "inputRowCount" : 71983898
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 7315,
        "TotalTasksDurationInMs" : 6075,
        "IOBytes" : {
          "Total" : 16115840,
          "Details" : {
            "IR" : 8744507,
            "IW" : 0,
            "SR" : 0,
            "SW" : 7371333
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -266765270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16400,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 16400,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 1919974855,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 144875038743752385446697045603438545454544,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 144875038743752385446697045603438545454544,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 731176256,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 144875038743752385446697045603438545454544,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 144875038743752385446697045603438545454544,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], true\n      +- Aggregate [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1) AS cnt1#272L, avg(cd_dep_count#46) AS avg(cd_dep_count)#346, max(cd_dep_count#46) AS max(cd_dep_count)#347, sum(cd_dep_count#46) AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1) AS cnt2#273L, avg(cd_dep_employed_count#47) AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47) AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47) AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1) AS cnt3#274L, avg(cd_dep_college_count#48) AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48) AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48) AS sum(cd_dep_college_count)#354L]\n         +- Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n            +- Join Inner, (cd_demo_sk#40 = c_current_cdemo_sk#11)\n               :- Project [c_current_cdemo_sk#11, ca_state#35]\n               :  +- Join Inner, (c_current_addr_sk#13 = ca_address_sk#27)\n               :     :- Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :  +- Filter (exists#373 OR exists#374)\n               :     :     +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n               :     :        :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n               :     :        :  :  :- Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13]\n               :     :        :  :  :  +- Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n               :     :        :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#9,c_customer_id#10,c_current_cdemo_sk#11,c_current_hdemo_sk#12,c_current_addr_sk#13,c_first_shipto_date_sk#14,c_first_sales_date_sk#15,c_salutation#16,c_first_name#17,c_last_name#18,c_preferred_cust_flag#19,c_birth_day#20,c_birth_month#21,c_birth_year#22,c_birth_country#23,c_login#24,c_email_address#25,c_last_review_date#26] parquet\n               :     :        :  :  +- Project [ss_customer_sk#51]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n               :     :        :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n               :     :        :  :        :     :  +- Project [d_date_sk#72]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n               :     :        :  :        +- Project [d_date_sk#72]\n               :     :        :  :           +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n               :     :        :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n               :     :        :  +- Project [ws_bill_customer_sk#105]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n               :     :        :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n               :     :        :        :     :  +- Project [d_date_sk#281]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n               :     :        :        +- Project [d_date_sk#281]\n               :     :        :           +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n               :     :        :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n               :     :        +- Project [cs_ship_customer_sk#143]\n               :     :           +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n               :     :              :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n               :     :              :     :  +- Project [d_date_sk#309]\n               :     :              :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n               :     :              +- Project [d_date_sk#309]\n               :     :                 +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n               :     :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n               :     +- Project [ca_address_sk#27, ca_state#35]\n               :        +- Filter isnotnull(ca_address_sk#27)\n               :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_address_id#28,ca_street_number#29,ca_street_name#30,ca_street_type#31,ca_suite_number#32,ca_city#33,ca_county#34,ca_state#35,ca_zip#36,ca_country#37,ca_gmt_offset#38,ca_location_type#39] parquet\n               +- Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n                  +- Filter isnotnull(cd_demo_sk#40)\n                     +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_education_status#43,cd_purchase_estimate#44,cd_credit_rating#45,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 55149901,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 16400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [18]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cnt1#272L, avg(cd_dep_count)#346, max(cd_dep_count)#347, sum(cd_dep_count)#348L, cd_dep_employed_count#47, cnt2#273L, avg(cd_dep_employed_count)#349, max(cd_dep_employed_count)#350, sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, cnt3#274L, avg(cd_dep_college_count)#352, max(cd_dep_college_count)#353, sum(cd_dep_college_count)#354L] Arguments: 100, [ca_state#35 ASC NULLS FIRST, cd_gender#41 ASC NULLS FIRST, cd_marital_status#42 ASC NULLS FIRST, cd_dep_count#46 ASC NULLS FIRST, cd_dep_employed_count#47 ASC NULLS FIRST, cd_dep_college_count#48 ASC NULLS FIRST], [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cnt1#272L, avg(cd_dep_count)#346, max(cd_dep_count)#347, sum(cd_dep_count)#348L, cd_dep_employed_count#47, cnt2#273L, avg(cd_dep_employed_count)#349, max(cd_dep_employed_count)#350, sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, cnt3#274L, avg(cd_dep_college_count)#352, max(cd_dep_college_count)#353, sum(cd_dep_college_count)#354L] "
          },
          "1" : {
            "sign" : -1231541707,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 29076400,
            "rowCount" : 158173,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [19]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48, count#391L, sum#392, count#393L, max#394, sum#395L, sum#396, count#397L, max#398, sum#399L, sum#400, count#401L, max#402, sum#403L] Keys [6]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Functions [10]: [count(1), avg(cd_dep_count#46), max(cd_dep_count#46), sum(cd_dep_count#46), avg(cd_dep_employed_count#47), max(cd_dep_employed_count#47), sum(cd_dep_employed_count#47), avg(cd_dep_college_count#48), max(cd_dep_college_count#48), sum(cd_dep_college_count#48)] Aggregate Attributes [10]: [count(1)#278L, avg(cd_dep_count#46)#337, max(cd_dep_count#46)#338, sum(cd_dep_count#46)#339L, avg(cd_dep_employed_count#47)#340, max(cd_dep_employed_count#47)#341, sum(cd_dep_employed_count#47)#342L, avg(cd_dep_college_count#48)#343, max(cd_dep_college_count#48)#344, sum(cd_dep_college_count#48)#345L] Results [18]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, count(1)#278L AS cnt1#272L, avg(cd_dep_count#46)#337 AS avg(cd_dep_count)#346, max(cd_dep_count#46)#338 AS max(cd_dep_count)#347, sum(cd_dep_count#46)#339L AS sum(cd_dep_count)#348L, cd_dep_employed_count#47, count(1)#278L AS cnt2#273L, avg(cd_dep_employed_count#47)#340 AS avg(cd_dep_employed_count)#349, max(cd_dep_employed_count#47)#341 AS max(cd_dep_employed_count)#350, sum(cd_dep_employed_count#47)#342L AS sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, count(1)#278L AS cnt3#274L, avg(cd_dep_college_count#48)#343 AS avg(cd_dep_college_count)#352, max(cd_dep_college_count#48)#344 AS max(cd_dep_college_count)#353, sum(cd_dep_college_count#48)#345L AS sum(cd_dep_college_count)#354L] "
          },
          "2" : {
            "sign" : 1284393156,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 144875038743752385446697045603438545454544,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [19]: [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48, count#391L, sum#392, count#393L, max#394, sum#395L, sum#396, count#397L, max#398, sum#399L, sum#400, count#401L, max#402, sum#403L] Arguments: 13 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[ca_state#35 ASC NULLS FIRST,cd_gender#41 ASC NULLS FIRST,cd_marital_status#42 ASC NULLS FIRST,cd_dep_count#46 ASC NULLS FIRST,cd_dep_employed_count#47 ASC NULLS FIRST,cd_dep_college_count#48 ASC NULLS FIRST], output=[ca_state#35,cd_gender#41,cd_marital_status#42,cd_dep_count#46,cnt1#272L,avg(cd_dep_count)#346,max(cd_dep_count)#347,sum(cd_dep_count)#348L,cd_dep_employed_count#47,cnt2#273L,avg(cd_dep_employed_count)#349,max(cd_dep_employed_count)#350,sum(cd_dep_employed_count)#351L,cd_dep_college_count#48,cnt3#274L,avg(cd_dep_college_count)#352,max(cd_dep_college_count)#353,sum(cd_dep_college_count)#354L])\n+- HashAggregate(keys=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], functions=[count(1), avg(cd_dep_count#46), max(cd_dep_count#46), sum(cd_dep_count#46), avg(cd_dep_employed_count#47), max(cd_dep_employed_count#47), sum(cd_dep_employed_count#47), avg(cd_dep_college_count#48), max(cd_dep_college_count#48), sum(cd_dep_college_count#48)], output=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cnt1#272L, avg(cd_dep_count)#346, max(cd_dep_count)#347, sum(cd_dep_count)#348L, cd_dep_employed_count#47, cnt2#273L, avg(cd_dep_employed_count)#349, max(cd_dep_employed_count)#350, sum(cd_dep_employed_count)#351L, cd_dep_college_count#48, cnt3#274L, avg(cd_dep_college_count)#352, max(cd_dep_college_count)#353, sum(cd_dep_college_count)#354L])\n   +- ShuffleQueryStage 13\n      +- Exchange hashpartitioning(ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48, 200), ENSURE_REQUIREMENTS, [plan_id=1824]\n         +- *(22) HashAggregate(keys=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], functions=[partial_count(1), partial_avg(cd_dep_count#46), partial_max(cd_dep_count#46), partial_sum(cd_dep_count#46), partial_avg(cd_dep_employed_count#47), partial_max(cd_dep_employed_count#47), partial_sum(cd_dep_employed_count#47), partial_avg(cd_dep_college_count#48), partial_max(cd_dep_college_count#48), partial_sum(cd_dep_college_count#48)], output=[ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48, count#391L, sum#392, count#393L, max#394, sum#395L, sum#396, count#397L, max#398, sum#399L, sum#400, count#401L, max#402, sum#403L])\n            +- *(22) Project [ca_state#35, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n               +- *(22) SortMergeJoin [c_current_cdemo_sk#11], [cd_demo_sk#40], Inner\n                  :- *(20) Sort [c_current_cdemo_sk#11 ASC NULLS FIRST], false, 0\n                  :  +- AQEShuffleRead coalesced\n                  :     +- ShuffleQueryStage 12\n                  :        +- Exchange hashpartitioning(c_current_cdemo_sk#11, 200), ENSURE_REQUIREMENTS, [plan_id=1740]\n                  :           +- *(19) Project [c_current_cdemo_sk#11, ca_state#35]\n                  :              +- *(19) SortMergeJoin [c_current_addr_sk#13], [ca_address_sk#27], Inner\n                  :                 :- *(17) Sort [c_current_addr_sk#13 ASC NULLS FIRST], false, 0\n                  :                 :  +- AQEShuffleRead coalesced\n                  :                 :     +- ShuffleQueryStage 11\n                  :                 :        +- Exchange hashpartitioning(c_current_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1609]\n                  :                 :           +- *(16) Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n                  :                 :              +- *(16) Filter (exists#373 OR exists#374)\n                  :                 :                 +- *(16) SortMergeJoin [c_customer_sk#9], [cs_ship_customer_sk#143], ExistenceJoin(exists#374)\n                  :                 :                    :- *(14) SortMergeJoin [c_customer_sk#9], [ws_bill_customer_sk#105], ExistenceJoin(exists#373)\n                  :                 :                    :  :- *(12) SortMergeJoin [c_customer_sk#9], [ss_customer_sk#51], LeftSemi\n                  :                 :                    :  :  :- *(10) Sort [c_customer_sk#9 ASC NULLS FIRST], false, 0\n                  :                 :                    :  :  :  +- AQEShuffleRead coalesced\n                  :                 :                    :  :  :     +- ShuffleQueryStage 0\n                  :                 :                    :  :  :        +- Exchange hashpartitioning(c_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=354]\n                  :                 :                    :  :  :           +- *(1) Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n                  :                 :                    :  :  :              +- *(1) ColumnarToRow\n                  :                 :                    :  :  :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#9,c_current_cdemo_sk#11,c_current_addr_sk#13] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#13), isnotnull(c_current_cdemo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n                  :                 :                    :  :  +- *(11) Sort [ss_customer_sk#51 ASC NULLS FIRST], false, 0\n                  :                 :                    :  :     +- AQEShuffleRead coalesced\n                  :                 :                    :  :        +- ShuffleQueryStage 8\n                  :                 :                    :  :           +- Exchange hashpartitioning(ss_customer_sk#51, 200), ENSURE_REQUIREMENTS, [plan_id=1088]\n                  :                 :                    :  :              +- *(7) Project [ss_customer_sk#51]\n                  :                 :                    :  :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#71], [d_date_sk#72], Inner, BuildRight, false\n                  :                 :                    :  :                    :- *(7) ColumnarToRow\n                  :                 :                    :  :                    :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#51,ss_sold_date_sk#71] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#71), dynamicpruningexpression(ss_sold_date_sk#71 IN dynamicpruning#375)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n                  :                 :                    :  :                    :        +- SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n                  :                 :                    :  :                    :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                +- == Final Plan ==\n                                                                                                   BroadcastQueryStage 1\n                                                                                                   +- ReusedExchange [d_date_sk#72], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                                                                                                +- == Initial Plan ==\n                                                                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1064]\n                                                                                                   +- Project [d_date_sk#72]\n                                                                                                      +- Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n                                                                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n                  :                 :                    :  :                    +- BroadcastQueryStage 1\n                  :                 :                    :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                  :                 :                    :  :                          +- *(2) Project [d_date_sk#72]\n                  :                 :                    :  :                             +- *(2) Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n                  :                 :                    :  :                                +- *(2) ColumnarToRow\n                  :                 :                    :  :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n                  :                 :                    :  +- *(13) Sort [ws_bill_customer_sk#105 ASC NULLS FIRST], false, 0\n                  :                 :                    :     +- AQEShuffleRead coalesced\n                  :                 :                    :        +- ShuffleQueryStage 9\n                  :                 :                    :           +- Exchange hashpartitioning(ws_bill_customer_sk#105, 200), ENSURE_REQUIREMENTS, [plan_id=1130]\n                  :                 :                    :              +- *(8) Project [ws_bill_customer_sk#105]\n                  :                 :                    :                 +- *(8) BroadcastHashJoin [ws_sold_date_sk#135], [d_date_sk#281], Inner, BuildRight, false\n                  :                 :                    :                    :- *(8) ColumnarToRow\n                  :                 :                    :                    :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#105,ws_sold_date_sk#135] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#135), dynamicpruningexpression(ws_sold_date_sk#135 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n                  :                 :                    :                    :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n                  :                 :                    :                    +- BroadcastQueryStage 3\n                  :                 :                    :                       +- ReusedExchange [d_date_sk#281], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                  :                 :                    +- *(15) Sort [cs_ship_customer_sk#143 ASC NULLS FIRST], false, 0\n                  :                 :                       +- AQEShuffleRead coalesced\n                  :                 :                          +- ShuffleQueryStage 10\n                  :                 :                             +- Exchange hashpartitioning(cs_ship_customer_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1172]\n                  :                 :                                +- *(9) Project [cs_ship_customer_sk#143]\n                  :                 :                                   +- *(9) BroadcastHashJoin [cs_sold_date_sk#170], [d_date_sk#309], Inner, BuildRight, false\n                  :                 :                                      :- *(9) ColumnarToRow\n                  :                 :                                      :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#143,cs_sold_date_sk#170] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#170), dynamicpruningexpression(cs_sold_date_sk#170 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n                  :                 :                                      :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n                  :                 :                                      +- BroadcastQueryStage 5\n                  :                 :                                         +- ReusedExchange [d_date_sk#309], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                  :                 +- *(18) Sort [ca_address_sk#27 ASC NULLS FIRST], false, 0\n                  :                    +- AQEShuffleRead coalesced\n                  :                       +- ShuffleQueryStage 6\n                  :                          +- Exchange hashpartitioning(ca_address_sk#27, 200), ENSURE_REQUIREMENTS, [plan_id=451]\n                  :                             +- *(5) Filter isnotnull(ca_address_sk#27)\n                  :                                +- *(5) ColumnarToRow\n                  :                                   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_state#35] Batched: true, DataFilters: [isnotnull(ca_address_sk#27)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n                  +- *(21) Sort [cd_demo_sk#40 ASC NULLS FIRST], false, 0\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 7\n                           +- Exchange hashpartitioning(cd_demo_sk#40, 200), ENSURE_REQUIREMENTS, [plan_id=472]\n                              +- *(6) Filter isnotnull(cd_demo_sk#40)\n                                 +- *(6) ColumnarToRow\n                                    +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] Batched: true, DataFilters: [isnotnull(cd_demo_sk#40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 29076400,
        "inputRowCount" : 158173
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "8" : [ 32493, 29539, 29539, 29539, 32493, 32493, 29539, 32493, 32493, 29539, 29539, 29539, 29539, 32493, 29539, 26854, 29539, 29539, 26854, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 32493, 29539, 29539, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 32493, 32493, 32493, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 29539, 32493, 29539, 29539, 32493, 29539, 32493, 29539, 29539, 29539, 29539, 32493, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 32493, 29539, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 32493, 29539, 29539, 29539, 32493, 32493, 29539, 29539, 32493, 32493, 29539, 29539, 32493, 32493, 29539, 32493, 29539, 32493, 32493, 29539, 29539, 32493, 29539, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 32493, 32493, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 32493, 32493, 29539, 29539, 29539, 29539, 32493, 29539, 29539, 29539, 29539, 29539, 29539, 29539, 32493, 29539, 29539, 32493, 32493, 29539, 32493, 29539, 29539, 29539, 29539, 29539 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 40 ],
      "Objectives" : {
        "DurationInMs" : 460,
        "TotalTasksDurationInMs" : 451,
        "IOBytes" : {
          "Total" : 5790907,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 5790907,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -265288399,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#137, cs_ship_date_sk#138, cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_bill_hdemo_sk#141, cs_bill_addr_sk#142, cs_ship_customer_sk#143, cs_ship_cdemo_sk#144, cs_ship_hdemo_sk#145, cs_ship_addr_sk#146, cs_call_center_sk#147, cs_catalog_page_sk#148, cs_ship_mode_sk#149, cs_warehouse_sk#150, cs_item_sk#151, cs_promo_sk#152, cs_order_number#153L, cs_quantity#154, cs_wholesale_cost#155, cs_list_price#156, cs_sales_price#157, cs_ext_discount_amt#158, cs_ext_sales_price#159, cs_ext_wholesale_cost#160, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1771016843,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#170 = d_date_sk#309) "
          },
          "0" : {
            "sign" : -1387723848,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1662195144,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 1662195144,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143] "
          },
          "2" : {
            "sign" : 383998189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2292368272,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 2292368272,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#143, cs_sold_date_sk#170] "
          },
          "3" : {
            "sign" : -1823874588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_ship_customer_sk#143]\n+- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n   :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n   :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n   :     :  +- Project [d_date_sk#309]\n   :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n   +- Project [d_date_sk#309]\n      +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1313770590,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [cs_ship_customer_sk#143] Input [3]: [cs_ship_customer_sk#143, cs_sold_date_sk#170, d_date_sk#309] "
          },
          "1" : {
            "sign" : 451700423,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#170] Right keys [1]: [d_date_sk#309] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : -1380291050,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [2]: [cs_ship_customer_sk#143, cs_sold_date_sk#170] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#170), dynamicpruningexpression(cs_sold_date_sk#170 IN dynamicpruning#375)] ReadSchema: struct<cs_ship_customer_sk:int> "
          },
          "3" : {
            "sign" : -328541537,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1050768,
            "rowCount" : 274,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#309] Arguments: 5 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_ship_customer_sk#143]\n+- BroadcastHashJoin [cs_sold_date_sk#170], [d_date_sk#309], Inner, BuildRight, false\n   :- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#143,cs_sold_date_sk#170] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#170), dynamicpruningexpression(cs_sold_date_sk#170 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n   :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n   +- BroadcastQueryStage 5\n      +- ReusedExchange [d_date_sk#309], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2293419040,
        "inputRowCount" : 143273291
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 8396,
        "TotalTasksDurationInMs" : 6655,
        "IOBytes" : {
          "Total" : 41871381,
          "Details" : {
            "IR" : 23516403,
            "IW" : 0,
            "SR" : 0,
            "SW" : 18354978
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1978235836,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              },
              "compileTime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "1" : {
            "sign" : 438361105,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 482513000,
                "rowCount" : 1930052
              },
              "compileTime" : {
                "sizeInBytes" : 482513000,
                "rowCount" : 1930052
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11)) "
          },
          "2" : {
            "sign" : -1397996476,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#9, c_customer_id#10, c_current_cdemo_sk#11, c_current_hdemo_sk#12, c_current_addr_sk#13, c_first_shipto_date_sk#14, c_first_sales_date_sk#15, c_salutation#16, c_first_name#17, c_last_name#18, c_preferred_cust_flag#19, c_birth_day#20, c_birth_month#21, c_birth_year#22, c_birth_country#23, c_login#24, c_email_address#25, c_last_review_date#26], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13]\n+- Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#9,c_customer_id#10,c_current_cdemo_sk#11,c_current_hdemo_sk#12,c_current_addr_sk#13,c_first_shipto_date_sk#14,c_first_sales_date_sk#15,c_salutation#16,c_first_name#17,c_last_name#18,c_preferred_cust_flag#19,c_birth_day#20,c_birth_month#21,c_birth_year#22,c_birth_country#23,c_login#24,c_email_address#25,c_last_review_date#26] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -410747341,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13] Condition : (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11)) "
          },
          "1" : {
            "sign" : -932812064,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [3]: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)] ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#9,c_current_cdemo_sk#11,c_current_addr_sk#13] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#13), isnotnull(c_current_cdemo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 38601040,
        "inputRowCount" : 1930052
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 2567,
        "TotalTasksDurationInMs" : 22209,
        "IOBytes" : {
          "Total" : 54752635,
          "Details" : {
            "IR" : 24019979,
            "IW" : 0,
            "SR" : 0,
            "SW" : 30732656
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1443761947,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7788,
                "rowCount" : 649
              },
              "compileTime" : {
                "sizeInBytes" : 7788,
                "rowCount" : 649
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#72] "
          },
          "1" : {
            "sign" : 438471766,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 159654,
                "rowCount" : 649
              },
              "compileTime" : {
                "sizeInBytes" : 159654,
                "rowCount" : 649
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72)) "
          },
          "2" : {
            "sign" : -272999708,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#72, d_date_id#73, d_date#74, d_month_seq#75, d_week_seq#76, d_quarter_seq#77, d_year#78, d_dow#79, d_moy#80, d_dom#81, d_qoy#82, d_fy_year#83, d_fy_quarter_seq#84, d_fy_week_seq#85, d_day_name#86, d_quarter_name#87, d_holiday#88, d_weekend#89, d_following_holiday#90, d_first_dom#91, d_last_dom#92, d_same_day_ly#93, d_same_day_lq#94, d_current_day#95, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#72]\n+- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1519823744,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#72] Input [3]: [d_date_sk#72, d_year#78, d_qoy#82] "
          },
          "1" : {
            "sign" : -317113387,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#72, d_year#78, d_qoy#82] Condition : ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72)) "
          },
          "2" : {
            "sign" : 903608751,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7788,
            "rowCount" : 649,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#72, d_year#78, d_qoy#82] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#72]\n+- Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7788,
        "inputRowCount" : 649
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 5674,
        "TotalTasksDurationInMs" : 4494,
        "IOBytes" : {
          "Total" : 93845,
          "Details" : {
            "IR" : 93845,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1548377878,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 26000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 26000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#27, ca_state#35] "
          },
          "1" : {
            "sign" : 1662344908,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ca_address_sk#27) "
          },
          "2" : {
            "sign" : 327025701,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#27, ca_address_id#28, ca_street_number#29, ca_street_name#30, ca_street_type#31, ca_suite_number#32, ca_city#33, ca_county#34, ca_state#35, ca_zip#36, ca_country#37, ca_gmt_offset#38, ca_location_type#39], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#27, ca_state#35]\n+- Filter isnotnull(ca_address_sk#27)\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_address_id#28,ca_street_number#29,ca_street_name#30,ca_street_type#31,ca_suite_number#32,ca_city#33,ca_county#34,ca_state#35,ca_zip#36,ca_country#37,ca_gmt_offset#38,ca_location_type#39] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -704469832,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 26000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#27, ca_state#35] Condition : isnotnull(ca_address_sk#27) "
          },
          "1" : {
            "sign" : -1907570735,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 26000000,
            "rowCount" : 1000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#27, ca_state#35] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_state:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(ca_address_sk#27)\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#27,ca_state#35] Batched: true, DataFilters: [isnotnull(ca_address_sk#27)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 26000000,
        "inputRowCount" : 1000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 2211,
        "TotalTasksDurationInMs" : 1518,
        "IOBytes" : {
          "Total" : 13850224,
          "Details" : {
            "IR" : 4832171,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9018053
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 168614826,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              },
              "compileTime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#9 = ss_customer_sk#51) "
          },
          "1" : {
            "sign" : -1076765728,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#373 OR exists#374) "
          },
          "0" : {
            "sign" : 994195518,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38914988179694422584478254,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 38914988179694422584478254,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#11, c_current_addr_sk#13] "
          },
          "2" : {
            "sign" : 929130257,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143) "
          },
          "3" : {
            "sign" : -1593852221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 32191231541150400,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 32191231541150400,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n+- Filter (exists#373 OR exists#374)\n   +- Join ExistenceJoin(exists#374), (c_customer_sk#9 = cs_ship_customer_sk#143)\n      :- Join ExistenceJoin(exists#373), (c_customer_sk#9 = ws_bill_customer_sk#105)\n      :  :- Join LeftSemi, (c_customer_sk#9 = ss_customer_sk#51)\n      :  :  :- Project [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13]\n      :  :  :  +- Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n      :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#9,c_customer_id#10,c_current_cdemo_sk#11,c_current_hdemo_sk#12,c_current_addr_sk#13,c_first_shipto_date_sk#14,c_first_sales_date_sk#15,c_salutation#16,c_first_name#17,c_last_name#18,c_preferred_cust_flag#19,c_birth_day#20,c_birth_month#21,c_birth_year#22,c_birth_country#23,c_login#24,c_email_address#25,c_last_review_date#26] parquet\n      :  :  +- Project [ss_customer_sk#51]\n      :  :     +- Join Inner, (ss_sold_date_sk#71 = d_date_sk#72)\n      :  :        :- Project [ss_customer_sk#51, ss_sold_date_sk#71]\n      :  :        :  +- Filter (isnotnull(ss_sold_date_sk#71) AND dynamicpruning#375 [ss_sold_date_sk#71])\n      :  :        :     :  +- Project [d_date_sk#72]\n      :  :        :     :     +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n      :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n      :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#49,ss_item_sk#50,ss_customer_sk#51,ss_cdemo_sk#52,ss_hdemo_sk#53,ss_addr_sk#54,ss_store_sk#55,ss_promo_sk#56,ss_ticket_number#57L,ss_quantity#58,ss_wholesale_cost#59,ss_list_price#60,ss_sales_price#61,ss_ext_discount_amt#62,ss_ext_sales_price#63,ss_ext_wholesale_cost#64,ss_ext_list_price#65,ss_ext_tax#66,ss_coupon_amt#67,ss_net_paid#68,ss_net_paid_inc_tax#69,ss_net_profit#70,ss_sold_date_sk#71] parquet\n      :  :        +- Project [d_date_sk#72]\n      :  :           +- Filter (((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND ((d_year#78 = 1999) AND (d_qoy#82 < 4))) AND isnotnull(d_date_sk#72))\n      :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_date_id#73,d_date#74,d_month_seq#75,d_week_seq#76,d_quarter_seq#77,d_year#78,d_dow#79,d_moy#80,d_dom#81,d_qoy#82,d_fy_year#83,d_fy_quarter_seq#84,d_fy_week_seq#85,d_day_name#86,d_quarter_name#87,d_holiday#88,d_weekend#89,d_following_holiday#90,d_first_dom#91,d_last_dom#92,d_same_day_ly#93,d_same_day_lq#94,d_current_day#95,... 4 more fields] parquet\n      :  +- Project [ws_bill_customer_sk#105]\n      :     +- Join Inner, (ws_sold_date_sk#135 = d_date_sk#281)\n      :        :- Project [ws_bill_customer_sk#105, ws_sold_date_sk#135]\n      :        :  +- Filter (isnotnull(ws_sold_date_sk#135) AND dynamicpruning#376 [ws_sold_date_sk#135])\n      :        :     :  +- Project [d_date_sk#281]\n      :        :     :     +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n      :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n      :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#102,ws_ship_date_sk#103,ws_item_sk#104,ws_bill_customer_sk#105,ws_bill_cdemo_sk#106,ws_bill_hdemo_sk#107,ws_bill_addr_sk#108,ws_ship_customer_sk#109,ws_ship_cdemo_sk#110,ws_ship_hdemo_sk#111,ws_ship_addr_sk#112,ws_web_page_sk#113,ws_web_site_sk#114,ws_ship_mode_sk#115,ws_warehouse_sk#116,ws_promo_sk#117,ws_order_number#118L,ws_quantity#119,ws_wholesale_cost#120,ws_list_price#121,ws_sales_price#122,ws_ext_discount_amt#123,ws_ext_sales_price#124,ws_ext_wholesale_cost#125,... 10 more fields] parquet\n      :        +- Project [d_date_sk#281]\n      :           +- Filter (((isnotnull(d_year#287) AND isnotnull(d_qoy#291)) AND ((d_year#287 = 1999) AND (d_qoy#291 < 4))) AND isnotnull(d_date_sk#281))\n      :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#281,d_date_id#282,d_date#283,d_month_seq#284,d_week_seq#285,d_quarter_seq#286,d_year#287,d_dow#288,d_moy#289,d_dom#290,d_qoy#291,d_fy_year#292,d_fy_quarter_seq#293,d_fy_week_seq#294,d_day_name#295,d_quarter_name#296,d_holiday#297,d_weekend#298,d_following_holiday#299,d_first_dom#300,d_last_dom#301,d_same_day_ly#302,d_same_day_lq#303,d_current_day#304,... 4 more fields] parquet\n      +- Project [cs_ship_customer_sk#143]\n         +- Join Inner, (cs_sold_date_sk#170 = d_date_sk#309)\n            :- Project [cs_ship_customer_sk#143, cs_sold_date_sk#170]\n            :  +- Filter (isnotnull(cs_sold_date_sk#170) AND dynamicpruning#377 [cs_sold_date_sk#170])\n            :     :  +- Project [d_date_sk#309]\n            :     :     +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n            :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n            :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#137,cs_ship_date_sk#138,cs_bill_customer_sk#139,cs_bill_cdemo_sk#140,cs_bill_hdemo_sk#141,cs_bill_addr_sk#142,cs_ship_customer_sk#143,cs_ship_cdemo_sk#144,cs_ship_hdemo_sk#145,cs_ship_addr_sk#146,cs_call_center_sk#147,cs_catalog_page_sk#148,cs_ship_mode_sk#149,cs_warehouse_sk#150,cs_item_sk#151,cs_promo_sk#152,cs_order_number#153L,cs_quantity#154,cs_wholesale_cost#155,cs_list_price#156,cs_sales_price#157,cs_ext_discount_amt#158,cs_ext_sales_price#159,cs_ext_wholesale_cost#160,... 10 more fields] parquet\n            +- Project [d_date_sk#309]\n               +- Filter (((isnotnull(d_year#315) AND isnotnull(d_qoy#319)) AND ((d_year#315 = 1999) AND (d_qoy#319 < 4))) AND isnotnull(d_date_sk#309))\n                  +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#309,d_date_id#310,d_date#311,d_month_seq#312,d_week_seq#313,d_quarter_seq#314,d_year#315,d_dow#316,d_moy#317,d_dom#318,d_qoy#319,d_fy_year#320,d_fy_quarter_seq#321,d_fy_week_seq#322,d_day_name#323,d_quarter_name#324,d_holiday#325,d_weekend#326,d_following_holiday#327,d_first_dom#328,d_last_dom#329,d_same_day_ly#330,d_same_day_lq#331,d_current_day#332,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -2058636930,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 254672512,
            "rowCount" : 15917032,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [cs_ship_customer_sk#143] Arguments: 10 "
          },
          "8" : {
            "sign" : 77746550,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 495224192,
            "rowCount" : 30951512,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [ss_customer_sk#51] Arguments: 8 "
          },
          "4" : {
            "sign" : -207368428,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#9] Right keys [1]: [ss_customer_sk#51] Join type: LeftSemi Join condition: None "
          },
          "11" : {
            "sign" : 52190884,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [cs_ship_customer_sk#143] Arguments: [cs_ship_customer_sk#143 ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : -617822102,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [ws_bill_customer_sk#105] Arguments: [ws_bill_customer_sk#105 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 1361292999,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13] Arguments: [c_customer_sk#9 ASC NULLS FIRST], false, 0 "
          },
          "10" : {
            "sign" : -397417115,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 129747728,
            "rowCount" : 8109233,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [ws_bill_customer_sk#105] Arguments: 9 "
          },
          "6" : {
            "sign" : -982414960,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 61761664,
            "rowCount" : 1930052,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13] Arguments: 0 "
          },
          "1" : {
            "sign" : 1893807153,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13, exists#373, exists#374] Condition : (exists#373 OR exists#374) "
          },
          "0" : {
            "sign" : -1565786911,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [c_current_cdemo_sk#11, c_current_addr_sk#13] Input [5]: [c_customer_sk#9, c_current_cdemo_sk#11, c_current_addr_sk#13, exists#373, exists#374] "
          },
          "2" : {
            "sign" : -2043869778,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#9] Right keys [1]: [cs_ship_customer_sk#143] Join type: ExistenceJoin(exists#374) Join condition: None "
          },
          "7" : {
            "sign" : -852268625,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [ss_customer_sk#51] Arguments: [ss_customer_sk#51 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : 313514212,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#9] Right keys [1]: [ws_bill_customer_sk#105] Join type: ExistenceJoin(exists#373) Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "ShuffleQueryStage",
          "toId" : 9,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 11,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_current_cdemo_sk#11, c_current_addr_sk#13]\n+- Filter (exists#373 OR exists#374)\n   +- SortMergeJoin [c_customer_sk#9], [cs_ship_customer_sk#143], ExistenceJoin(exists#374)\n      :- SortMergeJoin [c_customer_sk#9], [ws_bill_customer_sk#105], ExistenceJoin(exists#373)\n      :  :- SortMergeJoin [c_customer_sk#9], [ss_customer_sk#51], LeftSemi\n      :  :  :- Sort [c_customer_sk#9 ASC NULLS FIRST], false, 0\n      :  :  :  +- ShuffleQueryStage 0\n      :  :  :     +- Exchange hashpartitioning(c_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=354]\n      :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#13) AND isnotnull(c_current_cdemo_sk#11))\n      :  :  :           +- *(1) ColumnarToRow\n      :  :  :              +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#9,c_current_cdemo_sk#11,c_current_addr_sk#13] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#13), isnotnull(c_current_cdemo_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n      :  :  +- Sort [ss_customer_sk#51 ASC NULLS FIRST], false, 0\n      :  :     +- ShuffleQueryStage 8\n      :  :        +- Exchange hashpartitioning(ss_customer_sk#51, 200), ENSURE_REQUIREMENTS, [plan_id=1088]\n      :  :           +- *(7) Project [ss_customer_sk#51]\n      :  :              +- *(7) BroadcastHashJoin [ss_sold_date_sk#71], [d_date_sk#72], Inner, BuildRight, false\n      :  :                 :- *(7) ColumnarToRow\n      :  :                 :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#51,ss_sold_date_sk#71] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#71), dynamicpruningexpression(ss_sold_date_sk#71 IN dynamicpruning#375)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n      :  :                 :        +- SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n      :  :                 :           +- AdaptiveSparkPlan isFinalPlan=true\n                                          +- == Final Plan ==\n                                             BroadcastQueryStage 1\n                                             +- ReusedExchange [d_date_sk#72], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n                                          +- == Initial Plan ==\n                                             BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1064]\n                                             +- Project [d_date_sk#72]\n                                                +- Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :  :                 +- BroadcastQueryStage 1\n      :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n      :  :                       +- *(2) Project [d_date_sk#72]\n      :  :                          +- *(2) Filter ((((isnotnull(d_year#78) AND isnotnull(d_qoy#82)) AND (d_year#78 = 1999)) AND (d_qoy#82 < 4)) AND isnotnull(d_date_sk#72))\n      :  :                             +- *(2) ColumnarToRow\n      :  :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#72,d_year#78,d_qoy#82] Batched: true, DataFilters: [isnotnull(d_year#78), isnotnull(d_qoy#82), (d_year#78 = 1999), (d_qoy#82 < 4), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_qoy), EqualTo(d_year,1999), LessThan(d_qoy,4), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>\n      :  +- Sort [ws_bill_customer_sk#105 ASC NULLS FIRST], false, 0\n      :     +- ShuffleQueryStage 9\n      :        +- Exchange hashpartitioning(ws_bill_customer_sk#105, 200), ENSURE_REQUIREMENTS, [plan_id=1130]\n      :           +- *(8) Project [ws_bill_customer_sk#105]\n      :              +- *(8) BroadcastHashJoin [ws_sold_date_sk#135], [d_date_sk#281], Inner, BuildRight, false\n      :                 :- *(8) ColumnarToRow\n      :                 :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#105,ws_sold_date_sk#135] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#135), dynamicpruningexpression(ws_sold_date_sk#135 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n      :                 :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n      :                 +- BroadcastQueryStage 3\n      :                    +- ReusedExchange [d_date_sk#281], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n      +- Sort [cs_ship_customer_sk#143 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 10\n            +- Exchange hashpartitioning(cs_ship_customer_sk#143, 200), ENSURE_REQUIREMENTS, [plan_id=1172]\n               +- *(9) Project [cs_ship_customer_sk#143]\n                  +- *(9) BroadcastHashJoin [cs_sold_date_sk#170], [d_date_sk#309], Inner, BuildRight, false\n                     :- *(9) ColumnarToRow\n                     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#143,cs_sold_date_sk#170] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#170), dynamicpruningexpression(cs_sold_date_sk#170 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n                     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#375, 0, [d_date_sk#72], [id=#1067]\n                     +- BroadcastQueryStage 5\n                        +- ReusedExchange [d_date_sk#309], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=373]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 941406096,
        "inputRowCount" : 56907829
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 95648, 97751, 95547, 96152, 96513, 97804, 95811, 94122, 94119, 94947, 97257, 93976, 95701, 94904, 95430, 95865, 96614, 97681, 95339, 94373, 96073, 96374, 94787, 97581, 95707, 95218, 95891, 97156, 97134, 94637, 96577, 95701, 93144, 96513, 97481, 96030, 96677, 95106, 93976, 96417, 93821, 95744, 165640, 94092, 96194, 93402, 95107, 95754, 97480, 97903, 97423, 95218, 96667, 95875, 96778, 97156, 92893, 91831, 93999, 95914, 94890, 96657, 92599, 94706, 95451, 95584, 96374, 93402, 95793, 99248, 96507, 94347, 95653, 95990, 96677, 96014, 97348, 97156, 96827, 97156, 97091, 96513, 95387, 92378, 98276, 93661, 93101, 94898, 95516, 98466, 94298, 96334, 94947, 94941, 95107, 98861, 92762, 93541, 97150, 96996, 95812, 97799, 93401, 95314, 95392, 97300, 96302, 94765, 97313, 92652, 93661, 96673, 98276, 96030, 96996, 95590, 93498, 94634, 97156, 97788, 93178, 96513, 98797, 97097, 97639, 99826, 96296, 93772, 94045, 94706, 96996, 98447, 94968, 97316, 96417, 94787, 96291, 96569, 96465, 95392, 95701, 93381, 96396, 95590, 96997, 98074, 96811, 95064, 99571, 95870, 98004, 96991, 96827, 97073, 95541, 97310, 94261, 99020, 96667, 97751, 93975, 94247, 95627, 95953, 97320, 96830, 96387, 97344, 96073, 95541, 97740, 98431, 94581, 96030, 95633, 94797, 95347, 94744, 96556, 96353, 96354, 94421, 96030, 95101, 97220, 94717, 98642, 96190, 94445, 94575, 96184, 97310, 93477, 95408, 95547, 97793, 96115, 95049, 98282, 95696 ],
        "4" : [ 38309, 39819, 37972, 37880, 38068, 40213, 38826, 39167, 38209, 38223, 39541, 37766, 40099, 40897, 38367, 38793, 40301, 39095, 38596, 38534, 38108, 39004, 40456, 39861, 38576, 39839, 38959, 39762, 37693, 37568, 37872, 36818, 37496, 39291, 38204, 38140, 38468, 38087, 38043, 37929, 37940, 37375, 41328, 38607, 39938, 39727, 39616, 38245, 39356, 38549, 40129, 38087, 38142, 38611, 38842, 37949, 39003, 37933, 38578, 38984, 37324, 38559, 37613, 38688, 38033, 39311, 39249, 38014, 38418, 39590, 38420, 38320, 37756, 38011, 38955, 38580, 38610, 37692, 39091, 39149, 38370, 38643, 39198, 37081, 38694, 38327, 39021, 38391, 38568, 40173, 39792, 39497, 39250, 38553, 38320, 40887, 38631, 37033, 38671, 38192, 37896, 39085, 39215, 38658, 38432, 37793, 37379, 39958, 38163, 40077, 39636, 38682, 39463, 38572, 38105, 37428, 38938, 38749, 38713, 36585, 39011, 38444, 40108, 37856, 37305, 40368, 38255, 38047, 38640, 38402, 38785, 39334, 38428, 39052, 37780, 38529, 39299, 39963, 38327, 39371, 38282, 37468, 36526, 40744, 38617, 38845, 39432, 38555, 38880, 38927, 39900, 38836, 38982, 39784, 39284, 38596, 38424, 38144, 38060, 39137, 36929, 37766, 38886, 38330, 38904, 39148, 39294, 38880, 39040, 38125, 39274, 39194, 37573, 38582, 38925, 37557, 38012, 37171, 38674, 37380, 37927, 38211, 39393, 38336, 39559, 38584, 40605, 38196, 37194, 39330, 39699, 38475, 39049, 38039, 38673, 40444, 38255, 38878, 40115, 38252 ],
        "3" : [ 148899, 148133, 144121, 147575, 145815, 151099, 143396, 145597, 145529, 150111, 148463, 144238, 151067, 149270, 147341, 146879, 149614, 152119, 149074, 144933, 146548, 143980, 146634, 149270, 148431, 150409, 146295, 144461, 148673, 144959, 145796, 143175, 146815, 148133, 148840, 148522, 144512, 144661, 145751, 146101, 145888, 151631, 405316, 152119, 149780, 144810, 148884, 147386, 148314, 149869, 148609, 148080, 145479, 145692, 148030, 146518, 146632, 145217, 146666, 147400, 145307, 152288, 146114, 144981, 145167, 149717, 147192, 146730, 146400, 149468, 149898, 147373, 143682, 147042, 149483, 149074, 148911, 145693, 147490, 145544, 148197, 150424, 147101, 145905, 146556, 143297, 144588, 145576, 146549, 150392, 147255, 149223, 149184, 146911, 146879, 154694, 147043, 145050, 147879, 146400, 144959, 147177, 147192, 143510, 145693, 147191, 147534, 149749, 144530, 145439, 145543, 147905, 149568, 144231, 148464, 145778, 141966, 146634, 145593, 145478, 145801, 146979, 148101, 145837, 150125, 153411, 146400, 142441, 146459, 145693, 148820, 146503, 147245, 147255, 145304, 145327, 146444, 144737, 144376, 151709, 145652, 141441, 146765, 148197, 149121, 148329, 150854, 146172, 149802, 145991, 149355, 146289, 146485, 149269, 147549, 151003, 145918, 146607, 151646, 142383, 145965, 144836, 152055, 146023, 146454, 146698, 147600, 149562, 148197, 148197, 147984, 150423, 149016, 146652, 145716, 145263, 148899, 146938, 146517, 144968, 144258, 147820, 145380, 145678, 153326, 147472, 152338, 146932, 144922, 148282, 148586, 148563, 142655, 145517, 148984, 147671, 146599, 145816, 151769, 143169 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 18556,
        "TotalTasksDurationInMs" : 25173,
        "IOBytes" : {
          "Total" : 96069942,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 84735623,
            "SW" : 11334319
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1308572580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 96040000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 96040000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] "
          },
          "1" : {
            "sign" : 2029358198,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cd_demo_sk#40) "
          },
          "2" : {
            "sign" : 900414210,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_education_status#43, cd_purchase_estimate#44, cd_credit_rating#45, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48]\n+- Filter isnotnull(cd_demo_sk#40)\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_education_status#43,cd_purchase_estimate#44,cd_credit_rating#45,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1281755775,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 96040000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Condition : isnotnull(cd_demo_sk#40) "
          },
          "1" : {
            "sign" : 614477429,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 96040000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [6]: [cd_demo_sk#40, cd_gender#41, cd_marital_status#42, cd_dep_count#46, cd_dep_employed_count#47, cd_dep_college_count#48] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cd_demo_sk#40)\n+- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#40,cd_gender#41,cd_marital_status#42,cd_dep_count#46,cd_dep_employed_count#47,cd_dep_college_count#48] Batched: true, DataFilters: [isnotnull(cd_demo_sk#40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 96040000,
        "inputRowCount" : 1920800
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 4874,
        "TotalTasksDurationInMs" : 3814,
        "IOBytes" : {
          "Total" : 29566229,
          "Details" : {
            "IR" : 7775518,
            "IW" : 0,
            "SR" : 0,
            "SW" : 21790711
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226916211,
  "SQLEndTimeInMs" : 1702226963898,
  "Objectives" : {
    "DurationInMs" : 47687,
    "IOBytes" : {
      "Total" : 379470963,
      "Details" : {
        "IR" : 94618453,
        "IW" : 0,
        "SR" : 142426255,
        "SW" : 142426255
      }
    }
  }
}
