{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 75384952,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 10621623400,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] "
        },
        "8" : {
          "sign" : -240853453,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 93612192318,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] "
        },
        "19" : {
          "sign" : 1120105147,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "23" : {
          "sign" : -361702277,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 16080,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#55, s_store_id#56] "
        },
        "4" : {
          "sign" : -284924600,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
          "sizeInBytes" : 893570926670,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Window Arguments: [rank(sumsales#0) windowspecdefinition(i_category#120, sumsales#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#1], [i_category#120], [sumsales#0 DESC NULLS LAST] "
        },
        "15" : {
          "sign" : -638708212,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39926379296,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#144 [ss_sold_date_sk#26]) "
        },
        "11" : {
          "sign" : 324673919,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 41939656466,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#84) "
        },
        "9" : {
          "sign" : -821197157,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 98235016630,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#10 = s_store_sk#55) "
        },
        "22" : {
          "sign" : -948605159,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#84, i_item_id#85, i_rec_start_date#86, i_rec_end_date#87, i_item_desc#88, i_current_price#89, i_wholesale_cost#90, i_brand_id#91, i_brand#92, i_class_id#93, i_class#94, i_category_id#95, i_category#96, i_manufact_id#97, i_manufact#98, i_size#99, i_formulation#100, i_color#101, i_units#102, i_container#103, i_manager_id#104, i_product_name#105], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "13" : {
          "sign" : 352234832,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 12745948080,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#27) "
        },
        "24" : {
          "sign" : -1918148270,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#55) "
        },
        "16" : {
          "sign" : 1769386681,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "5" : {
          "sign" : 1939217958,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
          "sizeInBytes" : 868040328766,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#120], [sumsales#0 DESC NULLS LAST], rank(sumsales#0), 100 "
        },
        "10" : {
          "sign" : -108517481,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 39641593098,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
        },
        "21" : {
          "sign" : -1437122227,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#84) "
        },
        "6" : {
          "sign" : -1926764525,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 868040328766,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_category#120, i_class#121, i_brand#122, i_product_name#123, d_year#124, d_qoy#125, d_moy#126, s_store_id#127, spark_grouping_id#119L], [i_category#120, i_class#121, i_brand#122, i_product_name#123, d_year#124, d_qoy#125, d_moy#126, s_store_id#127, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#0] "
        },
        "1" : {
          "sign" : -25568513,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 893570926670,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : 982340118,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8064,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] "
        },
        "25" : {
          "sign" : 2066238734,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#55, s_store_id#56, s_rec_start_date#57, s_rec_end_date#58, s_closed_date_sk#59, s_store_name#60, s_number_employees#61, s_floor_space#62, s_hours#63, s_manager#64, s_market_id#65, s_geography_class#66, s_market_desc#67, s_market_manager#68, s_division_id#69, s_division_name#70, s_company_id#71, s_company_name#72, s_street_number#73, s_street_name#74, s_street_type#75, s_suite_number#76, s_city#77, s_county#78, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1446557433,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8405553536,
          "rowCount" : 262673548,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26] "
        },
        "0" : {
          "sign" : 1555608950,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 14000,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 289790814,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23256000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
        },
        "2" : {
          "sign" : -727111156,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 893570926670,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [i_category#120 ASC NULLS FIRST, i_class#121 ASC NULLS FIRST, i_brand#122 ASC NULLS FIRST, i_product_name#123 ASC NULLS FIRST, d_year#124 ASC NULLS FIRST, d_qoy#125 ASC NULLS FIRST, d_moy#126 ASC NULLS FIRST, s_store_id#127 ASC NULLS FIRST, sumsales#0 ASC NULLS FIRST, rk#1 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : 2010119308,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27)) "
        },
        "7" : {
          "sign" : -811270719,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
          "sizeInBytes" : 893570926671,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Expand Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#120, i_class#121, i_brand#122, i_product_name#123, d_year#124, d_qoy#125, d_moy#126, s_store_id#127, spark_grouping_id#119L] "
        },
        "3" : {
          "sign" : -978762732,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 893570926670,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (rk#1 <= 100) "
        }
      },
      "links" : [ {
        "fromId" : 16,
        "fromName" : "LogicalRelation",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 15,
        "fromName" : "Filter",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Join",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "LogicalRelation",
        "toId" : 21,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Filter",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "LogicalRelation",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Filter",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Expand",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Expand",
        "toId" : 6,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Aggregate",
        "toId" : 5,
        "toName" : "WindowGroupLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "WindowGroupLimit",
        "toId" : 4,
        "toName" : "Window",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Window",
        "toId" : 3,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Filter",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#120 ASC NULLS FIRST, i_class#121 ASC NULLS FIRST, i_brand#122 ASC NULLS FIRST, i_product_name#123 ASC NULLS FIRST, d_year#124 ASC NULLS FIRST, d_qoy#125 ASC NULLS FIRST, d_moy#126 ASC NULLS FIRST, s_store_id#127 ASC NULLS FIRST, sumsales#0 ASC NULLS FIRST, rk#1 ASC NULLS FIRST], true\n      +- Filter (rk#1 <= 100)\n         +- Window [rank(sumsales#0) windowspecdefinition(i_category#120, sumsales#0 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#1], [i_category#120], [sumsales#0 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#120], [sumsales#0 DESC NULLS LAST], rank(sumsales#0), 100\n               +- Aggregate [i_category#120, i_class#121, i_brand#122, i_product_name#123, d_year#124, d_qoy#125, d_moy#126, s_store_id#127, spark_grouping_id#119L], [i_category#120, i_class#121, i_brand#122, i_product_name#123, d_year#124, d_qoy#125, d_moy#126, s_store_id#127, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#0]\n                  +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#120, i_class#121, i_brand#122, i_product_name#123, d_year#124, d_qoy#125, d_moy#126, s_store_id#127, spark_grouping_id#119L]\n                     +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                        +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n                           :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n                           :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n                           :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n                           :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n                           :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#144 [ss_sold_date_sk#26])\n                           :     :     :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                           :     :     :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n                           :     :     +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                           :     :        +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n                           :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n                           :     +- Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :        +- Filter isnotnull(i_item_sk#84)\n                           :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#84,i_item_id#85,i_rec_start_date#86,i_rec_end_date#87,i_item_desc#88,i_current_price#89,i_wholesale_cost#90,i_brand_id#91,i_brand#92,i_class_id#93,i_class#94,i_category_id#95,i_category#96,i_manufact_id#97,i_manufact#98,i_size#99,i_formulation#100,i_color#101,i_units#102,i_container#103,i_manager_id#104,i_product_name#105] parquet\n                           +- Project [s_store_sk#55, s_store_id#56]\n                              +- Filter isnotnull(s_store_sk#55)\n                                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56,s_rec_start_date#57,s_rec_end_date#58,s_closed_date_sk#59,s_store_name#60,s_number_employees#61,s_floor_space#62,s_hours#63,s_manager#64,s_market_id#65,s_geography_class#66,s_market_desc#67,s_market_manager#68,s_division_id#69,s_division_name#70,s_company_id#71,s_company_name#72,s_street_number#73,s_street_name#74,s_street_type#75,s_suite_number#76,s_city#77,s_county#78,... 5 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 41911960268,
      "inputRowCount" : 275322804
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 682816365,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3418441664,
            "rowCount" : 53413151,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37], ShuffleQueryStage 3 "
          },
          "8" : {
            "sign" : 708386892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 578200350711456000,
            "rowCount" : 4380305687208000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] "
          },
          "4" : {
            "sign" : -706879190,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 5519185165882080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "11" : {
            "sign" : 618316400,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1351139067696000,
            "rowCount" : 10896282804000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#84) "
          },
          "9" : {
            "sign" : 732167776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 613242796209120000,
            "rowCount" : 4380305687208000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#10 = s_store_sk#55) "
          },
          "13" : {
            "sign" : -626647682,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23088264,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1 "
          },
          "5" : {
            "sign" : 738898116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
            "sizeInBytes" : 5361494161142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100 "
          },
          "10" : {
            "sign" : -153073462,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1263968805264000,
            "rowCount" : 10896282804000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "6" : {
            "sign" : 79220475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5361494161142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157] "
          },
          "1" : {
            "sign" : -939645320,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 5519185165882080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : 771222517,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : -287728343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -784666285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 5519185165882080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -512660071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 5519185165882080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] "
          },
          "3" : {
            "sign" : 373705081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5519185165882080000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Expand",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "WindowGroupLimit",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n               +- Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n                  +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                     +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                        +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n                           :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n                           :     :- LogicalQueryStage Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37], ShuffleQueryStage 3\n                           :     +- LogicalQueryStage Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1\n                           +- LogicalQueryStage Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3442581720,
        "inputRowCount" : 53617553
      },
      "PD" : {
        "1" : [ 5068074, 4960429, 4812566, 5103230, 5088670, 4715515, 5311907, 4583198, 4643001, 5329974, 4918568, 4699091, 5293840, 4781211, 5133637, 5090890, 5210875, 5223215, 5613556, 5529677, 5205148, 5311907, 5060483, 4896108, 5103230, 5060483, 4968376, 5115570, 5178248, 4845414, 5631623, 5150061, 5192808, 4719228, 5140250, 5137721, 4731939, 4542321, 4674638, 5369720, 4948089, 5041530, 4828990, 5205148, 5078550, 5144334, 5205148, 4863481, 4816279, 5329974, 5349847, 5478799, 4843550, 5243723, 4924295, 5311907, 5332415, 5144334, 4845414, 5147841, 4795618, 4917682, 4962649, 5403166, 5131994, 4899615, 5313550, 5078550, 5078550, 5113350, 5162401, 4932242, 5241282, 5041530, 5005396, 4967042, 4847634, 5066210, 5119654, 4845414, 5008903, 4648207, 5336027, 5078550, 5119654, 4881548, 4845414, 5389593, 5311907, 5005396, 5329974, 4863481, 5063990, 4763294, 5113350, 5094974, 4972769, 5017736, 5349847, 4867344, 5026970, 5119654, 5115570, 5349847, 4998783, 5144334, 5064567, 5329974, 4908448, 5021243, 5115570, 5263433, 4746870, 5488958, 4631783, 5041530, 5090890, 4828990, 4763294, 5103230, 5113350, 4953816, 5556823, 5082634, 4978496, 5150061, 5131417, 4408427, 5066210, 4914175, 4968376, 4911955, 5257706, 4930022, 5008903, 5169014, 5030076, 5085163, 5078550, 4779718, 5169014, 5066210, 5329974, 5107314, 5140250, 5003176, 4881548, 5078550, 5369720, 5191165, 5011123, 4676655, 5192808, 4972769, 5169014, 5716582, 5187081, 5352288, 4845414, 4865701, 4691586, 5150061, 4899615, 5088670, 5329974, 5119654, 5094974, 4779718, 5187081, 4896108, 4643001, 5223215, 5223215, 4901835, 5225656, 4796142, 4571980, 4796142, 4914175, 4875821, 4881548, 5205148, 4847057, 4962649, 5647002, 5409466, 4875821, 5202928, 5012987, 4859974, 4863481, 4978496, 5311907, 4845414, 4883768, 4796142, 5127910, 5131994, 5383293, 5144334 ],
        "0" : [ 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 47574, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227250879,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 64086,
        "IOBytes" : {
          "Total" : 4671376719,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2822647852,
            "SW" : 1848728867
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1056775036,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 9686748589,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "5" : {
            "sign" : 779087952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
            "sizeInBytes" : 9409984344,
            "rowCount" : 48816579,
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100 "
          },
          "6" : {
            "sign" : -1105302901,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9409984344,
            "rowCount" : 48816579,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157], HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))]) "
          },
          "1" : {
            "sign" : 1217293212,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 9686748589,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -791960995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1045697869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 9686748589,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -1969476613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 9686748589,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "WindowGroupLimit",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n               +- LogicalQueryStage Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157], HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9409984344,
        "inputRowCount" : 48816579
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227280389,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34576,
        "IOBytes" : {
          "Total" : 1850468960,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1848728867,
            "SW" : 1740093
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -2026432131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 6137624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "5" : {
            "sign" : -822045173,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5962264,
            "rowCount" : 37779,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Final "
          },
          "1" : {
            "sign" : 1613113279,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 6137624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -776119010,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -797428108,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 6137624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 721646528,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 6137624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- LogicalQueryStage WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Final\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5962264,
        "inputRowCount" : 37779
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227314508,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 457,
        "IOBytes" : {
          "Total" : 1740093,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1740093,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2081664564,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] "
          },
          "8" : {
            "sign" : 312669941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17783563373268,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] "
          },
          "19" : {
            "sign" : 1120105147,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -173127337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "15" : {
            "sign" : -114699536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26]) "
          },
          "11" : {
            "sign" : 993740151,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 41939656466,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#84) "
          },
          "9" : {
            "sign" : -873334609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18707384847204,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#10 = s_store_sk#55) "
          },
          "22" : {
            "sign" : 771222517,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2 "
          },
          "13" : {
            "sign" : 1852815038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#27) "
          },
          "16" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1631797067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
            "sizeInBytes" : 164902133097576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100 "
          },
          "10" : {
            "sign" : -1332722639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39641593098,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "21" : {
            "sign" : -626647682,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1 "
          },
          "6" : {
            "sign" : -1266010138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 164902133097576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157] "
          },
          "1" : {
            "sign" : -870814569,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 982340118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8064,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] "
          },
          "14" : {
            "sign" : 443301341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8405553536,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26] "
          },
          "0" : {
            "sign" : -1327480392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 745743634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8064,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastQueryStage 0 "
          },
          "2" : {
            "sign" : 1059255822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 2010119308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27)) "
          },
          "7" : {
            "sign" : -1631175978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] "
          },
          "3" : {
            "sign" : 168909686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Expand",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "WindowGroupLimit",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n               +- Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n                  +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                     +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                        +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n                           :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n                           :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n                           :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n                           :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n                           :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26])\n                           :     :     :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                           :     :     :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n                           :     :     +- LogicalQueryStage Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastQueryStage 0\n                           :     +- LogicalQueryStage Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1\n                           +- LogicalQueryStage Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41831209512,
        "inputRowCount" : 275250091
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5760.0,
        "FinishedTasksDistributionInMs" : [ 1069.0, 1369.0, 1416.0, 1906.0, 1906.0 ]
      },
      "StartTimeInMs" : 1702227229786,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 85179,
        "IOBytes" : {
          "Total" : 6054154858,
          "Details" : {
            "IR" : 408859154,
            "IW" : 0,
            "SR" : 2822647852,
            "SW" : 2822647852
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2081664564,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3835033800800,
            "rowCount" : 95875845020,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] "
          },
          "8" : {
            "sign" : 312669941,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17783563373268,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] "
          },
          "19" : {
            "sign" : 1120105147,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "4" : {
            "sign" : -173127337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "15" : {
            "sign" : -114699536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39926379296,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26]) "
          },
          "11" : {
            "sign" : 993740151,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 41939656466,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#84) "
          },
          "9" : {
            "sign" : -873334609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18707384847204,
            "rowCount" : 115477684242,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#10 = s_store_sk#55) "
          },
          "22" : {
            "sign" : 771222517,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2 "
          },
          "13" : {
            "sign" : 1852815038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4602040560960,
            "rowCount" : 95875845020,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#27) "
          },
          "16" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1631797067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
            "sizeInBytes" : 164902133097576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100 "
          },
          "10" : {
            "sign" : -1332722639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39641593098,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "21" : {
            "sign" : -626647682,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1 "
          },
          "6" : {
            "sign" : -1266010138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 164902133097576,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157] "
          },
          "1" : {
            "sign" : -870814569,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 982340118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8064,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] "
          },
          "14" : {
            "sign" : 443301341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8405553536,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26] "
          },
          "0" : {
            "sign" : -1327480392,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 745743634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastQueryStage 0 "
          },
          "2" : {
            "sign" : 1059255822,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 2010119308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27)) "
          },
          "7" : {
            "sign" : -1631175978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] "
          },
          "3" : {
            "sign" : 168909686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 169752195835740,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Expand",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "WindowGroupLimit",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n               +- Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n                  +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                     +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                        +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n                           :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n                           :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n                           :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n                           :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n                           :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26])\n                           :     :     :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                           :     :     :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n                           :     :     +- LogicalQueryStage Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastQueryStage 0\n                           :     +- LogicalQueryStage Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1\n                           +- LogicalQueryStage Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41832252944,
        "inputRowCount" : 275250120
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5760.0,
        "FinishedTasksDistributionInMs" : [ 1069.0, 1369.0, 1416.0, 1906.0, 1906.0 ]
      },
      "StartTimeInMs" : 1702227230975,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 83990,
        "IOBytes" : {
          "Total" : 6054040352,
          "Details" : {
            "IR" : 408744648,
            "IW" : 0,
            "SR" : 2822647852,
            "SW" : 2822647852
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 682816365,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37], ShuffleQueryStage 3 "
          },
          "8" : {
            "sign" : 708386892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2874491702897760000,
            "rowCount" : 21776452294680000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] "
          },
          "4" : {
            "sign" : -706879190,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "sizeInBytes" : 27438329891296800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "11" : {
            "sign" : 618316400,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6717114638160000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#84) "
          },
          "9" : {
            "sign" : 732167776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3048703321255200000,
            "rowCount" : 21776452294680000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#10 = s_store_sk#55) "
          },
          "13" : {
            "sign" : -626647682,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23088264,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1 "
          },
          "5" : {
            "sign" : 738898116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
            "sizeInBytes" : 26654377608688320000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100 "
          },
          "10" : {
            "sign" : -153073462,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6283752403440000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "6" : {
            "sign" : 79220475,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 26654377608688320000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157] "
          },
          "1" : {
            "sign" : -939645320,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 27438329891296800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : 771222517,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : -287728343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -784666285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 27438329891296800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -512660071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 27438329891296800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] "
          },
          "3" : {
            "sign" : 373705081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 27438329891296800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Expand",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "WindowGroupLimit",
          "toId" : 4,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n               +- Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n                  +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                     +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                        +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n                           :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n                           :     :- LogicalQueryStage Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37], ShuffleQueryStage 3\n                           :     +- LogicalQueryStage Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105], ShuffleQueryStage 1\n                           +- LogicalQueryStage Project [s_store_sk#55, s_store_id#56], BroadcastQueryStage 2\n"
      },
      "IM" : {
        "inputSizeInBytes" : 10645763456,
        "inputRowCount" : 265744987
      },
      "PD" : {
        "0" : [ 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 47574, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 89426.0,
        "FinishedTasksDistributionInMs" : [ 1345.0, 1491.0, 9908.0, 10928.0, 11040.0 ]
      },
      "StartTimeInMs" : 1702227243190,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 71775,
        "IOBytes" : {
          "Total" : 6040832275,
          "Details" : {
            "IR" : 405833180,
            "IW" : 0,
            "SR" : 2822647852,
            "SW" : 2812351243
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -761424589,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39641593098,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 39641593098,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "5" : {
            "sign" : -26474469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41939656466,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 41939656466,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#5 = i_item_sk#84) "
          },
          "1" : {
            "sign" : -562368738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 893570926671,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 893570926671,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] "
          },
          "0" : {
            "sign" : 1529432072,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 868040328766,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 868040328766,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157] "
          },
          "2" : {
            "sign" : 1306668055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 93612192318,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 93612192318,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] "
          },
          "3" : {
            "sign" : -1558068937,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 98235016630,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 98235016630,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#10 = s_store_sk#55) "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n+- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n   +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n      +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n         :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n         :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n         :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n         :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n         :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n         :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26])\n         :     :     :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n         :     :     :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n         :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n         :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n         :     :     +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n         :     :        +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n         :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n         :     +- Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n         :        +- Filter isnotnull(i_item_sk#84)\n         :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#84,i_item_id#85,i_rec_start_date#86,i_rec_end_date#87,i_item_desc#88,i_current_price#89,i_wholesale_cost#90,i_brand_id#91,i_brand#92,i_class_id#93,i_class#94,i_category_id#95,i_category#96,i_manufact_id#97,i_manufact#98,i_size#99,i_formulation#100,i_color#101,i_units#102,i_container#103,i_manager_id#104,i_product_name#105] parquet\n         +- Project [s_store_sk#55, s_store_id#56]\n            +- Filter isnotnull(s_store_sk#55)\n               +- Relation spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56,s_rec_start_date#57,s_rec_end_date#58,s_closed_date_sk#59,s_store_name#60,s_number_employees#61,s_floor_space#62,s_hours#63,s_manager#64,s_market_id#65,s_geography_class#66,s_market_desc#67,s_market_manager#68,s_division_id#69,s_division_name#70,s_company_id#71,s_company_name#72,s_street_number#73,s_street_name#74,s_street_type#75,s_suite_number#76,s_city#77,s_county#78,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 1736429167,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [5]: [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] Arguments: [i_item_sk#84 ASC NULLS FIRST], false, 0 "
          },
          "4" : {
            "sign" : 1022181631,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 39641593098,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [10]: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105] Input [12]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "9" : {
            "sign" : -1968422454,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 23088264,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [5]: [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] Arguments: 1 "
          },
          "5" : {
            "sign" : 304311507,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 41939656466,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_item_sk#5] Right keys [1]: [i_item_sk#84] Join type: Inner Join condition: None "
          },
          "10" : {
            "sign" : -1348064989,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [s_store_sk#55, s_store_id#56] Arguments: 2 "
          },
          "6" : {
            "sign" : -589975169,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [7]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] Arguments: [ss_item_sk#5 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -1944519818,
            "className" : "org.apache.spark.sql.execution.ExpandExec",
            "sizeInBytes" : 893570926671,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Input [10]: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] Arguments: [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] "
          },
          "0" : {
            "sign" : 2101263336,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 868040328766,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [11]: [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] Keys [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] Functions [1]: [partial_sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))] Aggregate Attributes [2]: [sum#196, isEmpty#197] Results [11]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, sum#198, isEmpty#199] "
          },
          "2" : {
            "sign" : -1293472573,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 93612192318,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [10]: [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56] Input [12]: [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105, s_store_sk#55, s_store_id#56] "
          },
          "7" : {
            "sign" : -282433802,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3418441664,
            "rowCount" : 53413151,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] Arguments: 3 "
          },
          "3" : {
            "sign" : -1157787139,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 98235016630,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#10] Right keys [1]: [s_store_sk#55] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "ShuffleQueryStage",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[partial_sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))], output=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, sum#198, isEmpty#199])\n+- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n   +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n      +- BroadcastHashJoin [ss_store_sk#10], [s_store_sk#55], Inner, BuildRight, false\n         :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n         :  +- SortMergeJoin [ss_item_sk#5], [i_item_sk#84], Inner\n         :     :- Sort [ss_item_sk#5 ASC NULLS FIRST], false, 0\n         :     :  +- ShuffleQueryStage 3\n         :     :     +- Exchange hashpartitioning(ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=549]\n         :     :        +- *(4) Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n         :     :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#26], [d_date_sk#27], Inner, BuildRight, false\n         :     :              :- *(4) Filter (isnotnull(ss_store_sk#10) AND isnotnull(ss_item_sk#5))\n         :     :              :  +- *(4) ColumnarToRow\n         :     :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#5,ss_store_sk#10,ss_quantity#13,ss_sales_price#16,ss_sold_date_sk#26] Batched: true, DataFilters: [isnotnull(ss_store_sk#10), isnotnull(ss_item_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#195)], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n         :     :              :           +- SubqueryBroadcast dynamicpruning#195, 0, [d_date_sk#27], [id=#523]\n         :     :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   BroadcastQueryStage 1\n                                                   +- ReusedExchange [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n                                                +- == Initial Plan ==\n                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=520]\n                                                   +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                                                      +- Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n         :     :              +- BroadcastQueryStage 0\n         :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n         :     :                    +- *(1) Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n         :     :                       +- *(1) Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n         :     :                          +- *(1) ColumnarToRow\n         :     :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n         :     +- Sort [i_item_sk#84 ASC NULLS FIRST], false, 0\n         :        +- ShuffleQueryStage 1\n         :           +- Exchange hashpartitioning(i_item_sk#84, 200), ENSURE_REQUIREMENTS, [plan_id=241]\n         :              +- *(2) Filter isnotnull(i_item_sk#84)\n         :                 +- *(2) ColumnarToRow\n         :                    +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#84,i_brand#92,i_class#94,i_category#96,i_product_name#105] Batched: true, DataFilters: [isnotnull(i_item_sk#84)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n         +- BroadcastQueryStage 2\n            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=260]\n               +- *(3) Filter isnotnull(s_store_sk#55)\n                  +- *(3) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56] Batched: true, DataFilters: [isnotnull(s_store_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3442581720,
        "inputRowCount" : 53617553
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "1" : [ 5068074, 4960429, 4812566, 5103230, 5088670, 4715515, 5311907, 4583198, 4643001, 5329974, 4918568, 4699091, 5293840, 4781211, 5133637, 5090890, 5210875, 5223215, 5613556, 5529677, 5205148, 5311907, 5060483, 4896108, 5103230, 5060483, 4968376, 5115570, 5178248, 4845414, 5631623, 5150061, 5192808, 4719228, 5140250, 5137721, 4731939, 4542321, 4674638, 5369720, 4948089, 5041530, 4828990, 5205148, 5078550, 5144334, 5205148, 4863481, 4816279, 5329974, 5349847, 5478799, 4843550, 5243723, 4924295, 5311907, 5332415, 5144334, 4845414, 5147841, 4795618, 4917682, 4962649, 5403166, 5131994, 4899615, 5313550, 5078550, 5078550, 5113350, 5162401, 4932242, 5241282, 5041530, 5005396, 4967042, 4847634, 5066210, 5119654, 4845414, 5008903, 4648207, 5336027, 5078550, 5119654, 4881548, 4845414, 5389593, 5311907, 5005396, 5329974, 4863481, 5063990, 4763294, 5113350, 5094974, 4972769, 5017736, 5349847, 4867344, 5026970, 5119654, 5115570, 5349847, 4998783, 5144334, 5064567, 5329974, 4908448, 5021243, 5115570, 5263433, 4746870, 5488958, 4631783, 5041530, 5090890, 4828990, 4763294, 5103230, 5113350, 4953816, 5556823, 5082634, 4978496, 5150061, 5131417, 4408427, 5066210, 4914175, 4968376, 4911955, 5257706, 4930022, 5008903, 5169014, 5030076, 5085163, 5078550, 4779718, 5169014, 5066210, 5329974, 5107314, 5140250, 5003176, 4881548, 5078550, 5369720, 5191165, 5011123, 4676655, 5192808, 4972769, 5169014, 5716582, 5187081, 5352288, 4845414, 4865701, 4691586, 5150061, 4899615, 5088670, 5329974, 5119654, 5094974, 4779718, 5187081, 4896108, 4643001, 5223215, 5223215, 4901835, 5225656, 4796142, 4571980, 4796142, 4914175, 4875821, 4881548, 5205148, 4847057, 4962649, 5647002, 5409466, 4875821, 5202928, 5012987, 4859974, 4863481, 4978496, 5311907, 4845414, 4883768, 4796142, 5127910, 5131994, 5383293, 5144334 ],
        "0" : [ 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 47574, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 57565, 52331, 57565, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 57565, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 57565, 52331, 52331, 52331, 57565, 52331, 57565, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 52331, 57565, 52331, 47574, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 57565, 57565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 29207,
        "TotalTasksDurationInMs" : 420086,
        "IOBytes" : {
          "Total" : 2820907759,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 973918985,
            "SW" : 1846988774
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 2100009299,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.WindowGroupLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 868040328766,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 868040328766,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100 "
          }
        },
        "links" : [ ],
        "rawPlan" : "WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n+- Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n   +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n      +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n         +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n            :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n            :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n            :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n            :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n            :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n            :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26])\n            :     :     :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n            :     :     :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n            :     :     +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n            :     :        +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n            :     +- Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n            :        +- Filter isnotnull(i_item_sk#84)\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#84,i_item_id#85,i_rec_start_date#86,i_rec_end_date#87,i_item_desc#88,i_current_price#89,i_wholesale_cost#90,i_brand_id#91,i_brand#92,i_class_id#93,i_class#94,i_category_id#95,i_category#96,i_manufact_id#97,i_manufact#98,i_size#99,i_formulation#100,i_color#101,i_units#102,i_container#103,i_manager_id#104,i_product_name#105] parquet\n            +- Project [s_store_sk#55, s_store_id#56]\n               +- Filter isnotnull(s_store_sk#55)\n                  +- Relation spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56,s_rec_start_date#57,s_rec_end_date#58,s_closed_date_sk#59,s_store_name#60,s_number_employees#61,s_floor_space#62,s_hours#63,s_manager#64,s_market_id#65,s_geography_class#66,s_market_desc#67,s_market_manager#68,s_division_id#69,s_division_name#70,s_company_id#71,s_company_name#72,s_street_number#73,s_street_name#74,s_street_type#75,s_suite_number#76,s_city#77,s_county#78,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 476224706,
            "className" : "org.apache.spark.sql.execution.window.WindowGroupLimitExec",
            "sizeInBytes" : 868040328766,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) WindowGroupLimit Input [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157] Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Partial "
          },
          "1" : {
            "sign" : 866439842,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157] Arguments: [i_category#171 ASC NULLS FIRST, sumsales#157 DESC NULLS LAST], false, 0 "
          },
          "2" : {
            "sign" : 271066826,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 9409984344,
            "rowCount" : 48816579,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [11]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, sum#198, isEmpty#199] Keys [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L] Functions [1]: [sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))] Aggregate Attributes [1]: [sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))#161] Results [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))#161 AS sumsales#157] "
          },
          "3" : {
            "sign" : 829089396,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 868040328766,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [11]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, sum#198, isEmpty#199] Arguments: 4 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Sort",
          "toId" : 0,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Partial\n+- Sort [i_category#171 ASC NULLS FIRST, sumsales#157 DESC NULLS LAST], false, 0\n   +- HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))], output=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157])\n      +- ShuffleQueryStage 4\n         +- Exchange hashpartitioning(i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, 200), ENSURE_REQUIREMENTS, [plan_id=772]\n            +- *(7) HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[partial_sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))], output=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, sum#198, isEmpty#199])\n               +- *(7) Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                  +- *(7) Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                     +- *(7) BroadcastHashJoin [ss_store_sk#10], [s_store_sk#55], Inner, BuildRight, false\n                        :- *(7) Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                        :  +- *(7) SortMergeJoin [ss_item_sk#5], [i_item_sk#84], Inner\n                        :     :- *(5) Sort [ss_item_sk#5 ASC NULLS FIRST], false, 0\n                        :     :  +- AQEShuffleRead coalesced\n                        :     :     +- ShuffleQueryStage 3\n                        :     :        +- Exchange hashpartitioning(ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=549]\n                        :     :           +- *(4) Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n                        :     :              +- *(4) BroadcastHashJoin [ss_sold_date_sk#26], [d_date_sk#27], Inner, BuildRight, false\n                        :     :                 :- *(4) Filter (isnotnull(ss_store_sk#10) AND isnotnull(ss_item_sk#5))\n                        :     :                 :  +- *(4) ColumnarToRow\n                        :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#5,ss_store_sk#10,ss_quantity#13,ss_sales_price#16,ss_sold_date_sk#26] Batched: true, DataFilters: [isnotnull(ss_store_sk#10), isnotnull(ss_item_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#195)], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                        :     :                 :           +- SubqueryBroadcast dynamicpruning#195, 0, [d_date_sk#27], [id=#523]\n                        :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     BroadcastQueryStage 1\n                                                                     +- ReusedExchange [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n                                                                  +- == Initial Plan ==\n                                                                     BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=520]\n                                                                     +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                                                                        +- Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n                                                                           +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n                        :     :                 +- BroadcastQueryStage 0\n                        :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n                        :     :                       +- *(1) Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                        :     :                          +- *(1) Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n                        :     :                             +- *(1) ColumnarToRow\n                        :     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n                        :     +- *(6) Sort [i_item_sk#84 ASC NULLS FIRST], false, 0\n                        :        +- AQEShuffleRead coalesced\n                        :           +- ShuffleQueryStage 1\n                        :              +- Exchange hashpartitioning(i_item_sk#84, 200), ENSURE_REQUIREMENTS, [plan_id=241]\n                        :                 +- *(2) Filter isnotnull(i_item_sk#84)\n                        :                    +- *(2) ColumnarToRow\n                        :                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#84,i_brand#92,i_class#94,i_category#96,i_product_name#105] Batched: true, DataFilters: [isnotnull(i_item_sk#84)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n                        +- BroadcastQueryStage 2\n                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=260]\n                              +- *(3) Filter isnotnull(s_store_sk#55)\n                                 +- *(3) ColumnarToRow\n                                    +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56] Batched: true, DataFilters: [isnotnull(s_store_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9409984344,
        "inputRowCount" : 48816579
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 9589760, 9589760, 9646460, 9589760, 9589760, 9618856, 9646460, 9646460, 9646460, 9646460, 9646460, 9646460, 9646460, 9589760, 9646460, 9589760, 9646460, 9646460, 9646460, 9646460, 9589760, 9646460, 9646460, 9589760, 9646460, 9646460, 9589760, 9589760, 9589760, 9589760, 9589760, 9646460, 9646460, 9589760, 9589760, 9589760, 9646460, 9589760, 9646460, 9589760, 9646460, 9646460, 9589760, 9646460, 9589760, 9646460, 9646460, 9589760, 9589760, 9646460, 9589760, 9589760, 9646460, 9646460, 9646460, 9646460, 9646460, 9646460, 9646460, 9646460, 9589760, 9589760, 9589760, 9646460, 9646460, 9646460, 9646460, 9646460, 9589760, 9589760, 9646460, 9646460, 9646460, 9589760, 9646460, 9589760, 9646460, 9646460, 9589760, 9646460, 9646460, 9646460, 9589760, 9646460, 9589760, 9589760, 9589760, 9646460, 9646460, 9589760, 9589760, 9589760, 9646460, 9646460, 9589760, 9646460, 9646460, 9589760, 9589760, 9589760, 9646460, 9589760, 9646460, 9589760, 9589760, 9589760, 9646460, 9589760, 9589760, 9646460, 9589760, 9589760, 9646460, 9589760, 9589760, 9589760, 9589760, 9589760, 9589760, 9589760, 9589760, 9589760, 9646460, 9589760, 9646460, 9589760, 9646460, 9646460, 9646460, 9589760, 9646460, 9589760, 9589760, 9646460, 9646460, 9589760, 9589760, 9646460, 9589760, 9589760, 9589760, 9646460, 9589760, 9589760, 9589760, 9646460, 9646460, 9589760, 9646460, 9646460, 9589760, 9589760, 9646460, 9589760, 9589760, 9646460, 9646460, 9589760, 9646460, 9589760, 9646460, 9646460, 9589760, 9589760, 9646460, 9589760, 9646460, 9646460, 9589760, 9646460, 9646460, 9646460, 9646460, 9646460, 9589760, 9646460, 9646460, 9646460, 9589760, 9589760, 9646460, 9589760, 9589760, 9589760, 9589760, 9646460, 9646460, 9589760, 9646460, 9589760, 9646460, 9589760, 9589760, 9589760, 9589760, 9646460, 9589760, 9589760, 9589760, 9589760 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 34031,
        "TotalTasksDurationInMs" : 453543,
        "IOBytes" : {
          "Total" : 1848728867,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1846988774,
            "SW" : 1740093
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -950035591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Window",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Window Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "1" : {
            "sign" : 2110199839,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1889682586,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14000,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 14000,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1857519024,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 563994686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 893570926670,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (rk#158 <= 100) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "Window",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], true\n      +- Filter (rk#158 <= 100)\n         +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n            +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100\n               +- Aggregate [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00)) AS sumsales#157]\n                  +- Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                     +- Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                        +- Join Inner, (ss_store_sk#10 = s_store_sk#55)\n                           :- Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :  +- Join Inner, (ss_item_sk#5 = i_item_sk#84)\n                           :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n                           :     :  +- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n                           :     :     :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n                           :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26])\n                           :     :     :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                           :     :     :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n                           :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n                           :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n                           :     :     +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                           :     :        +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n                           :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n                           :     +- Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                           :        +- Filter isnotnull(i_item_sk#84)\n                           :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#84,i_item_id#85,i_rec_start_date#86,i_rec_end_date#87,i_item_desc#88,i_current_price#89,i_wholesale_cost#90,i_brand_id#91,i_brand#92,i_class_id#93,i_class#94,i_category_id#95,i_category#96,i_manufact_id#97,i_manufact#98,i_size#99,i_formulation#100,i_color#101,i_units#102,i_container#103,i_manager_id#104,i_product_name#105] parquet\n                           +- Project [s_store_sk#55, s_store_id#56]\n                              +- Filter isnotnull(s_store_sk#55)\n                                 +- Relation spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56,s_rec_start_date#57,s_rec_end_date#58,s_closed_date_sk#59,s_store_name#60,s_number_employees#61,s_floor_space#62,s_hours#63,s_manager#64,s_market_id#65,s_geography_class#66,s_market_desc#67,s_market_manager#68,s_division_id#69,s_division_name#70,s_company_id#71,s_company_name#72,s_street_number#73,s_street_name#74,s_street_type#75,s_suite_number#76,s_city#77,s_county#78,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1508001071,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : 5962264,
            "rowCount" : 37779,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Input [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157] Arguments: [i_category#171 ASC NULLS FIRST, sumsales#157 DESC NULLS LAST], false, 0 "
          },
          "5" : {
            "sign" : 1852180021,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 868040328766,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157] Arguments: 5 "
          },
          "1" : {
            "sign" : -1498968563,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 893570926670,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [10]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157, rk#158] Condition : (rk#158 <= 100) "
          },
          "0" : {
            "sign" : 1622141431,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 14000,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [10]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157, rk#158] Arguments: 100, [i_category#171 ASC NULLS FIRST, i_class#172 ASC NULLS FIRST, i_brand#173 ASC NULLS FIRST, i_product_name#174 ASC NULLS FIRST, d_year#175 ASC NULLS FIRST, d_qoy#176 ASC NULLS FIRST, d_moy#177 ASC NULLS FIRST, s_store_id#178 ASC NULLS FIRST, sumsales#157 ASC NULLS FIRST, rk#158 ASC NULLS FIRST], [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157, rk#158] "
          },
          "2" : {
            "sign" : -173806446,
            "className" : "org.apache.spark.sql.execution.window.WindowExec",
            "sizeInBytes" : 893570926670,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Window Input [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157] Arguments: [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST] "
          },
          "3" : {
            "sign" : -220640542,
            "className" : "org.apache.spark.sql.execution.window.WindowGroupLimitExec",
            "sizeInBytes" : 5962264,
            "rowCount" : 37779,
            "isRuntime" : true,
            "predicate" : " (unknown) WindowGroupLimit Input [9]: [i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157] Arguments: [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Final "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "WindowGroupLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "WindowGroupLimit",
          "toId" : 2,
          "toName" : "Window",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Window",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[i_category#171 ASC NULLS FIRST,i_class#172 ASC NULLS FIRST,i_brand#173 ASC NULLS FIRST,i_product_name#174 ASC NULLS FIRST,d_year#175 ASC NULLS FIRST,d_qoy#176 ASC NULLS FIRST,d_moy#177 ASC NULLS FIRST,s_store_id#178 ASC NULLS FIRST,sumsales#157 ASC NULLS FIRST,rk#158 ASC NULLS FIRST], output=[i_category#171,i_class#172,i_brand#173,i_product_name#174,d_year#175,d_qoy#176,d_moy#177,s_store_id#178,sumsales#157,rk#158])\n+- Filter (rk#158 <= 100)\n   +- Window [rank(sumsales#157) windowspecdefinition(i_category#171, sumsales#157 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#158], [i_category#171], [sumsales#157 DESC NULLS LAST]\n      +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Final\n         +- Sort [i_category#171 ASC NULLS FIRST, sumsales#157 DESC NULLS LAST], false, 0\n            +- ShuffleQueryStage 5\n               +- Exchange hashpartitioning(i_category#171, 200), ENSURE_REQUIREMENTS, [plan_id=852]\n                  +- WindowGroupLimit [i_category#171], [sumsales#157 DESC NULLS LAST], rank(sumsales#157), 100, Partial\n                     +- *(8) Sort [i_category#171 ASC NULLS FIRST, sumsales#157 DESC NULLS LAST], false, 0\n                        +- *(8) HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))], output=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, sumsales#157])\n                           +- AQEShuffleRead coalesced\n                              +- ShuffleQueryStage 4\n                                 +- Exchange hashpartitioning(i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, 200), ENSURE_REQUIREMENTS, [plan_id=772]\n                                    +- *(7) HashAggregate(keys=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L], functions=[partial_sum(coalesce((ss_sales_price#16 * cast(ss_quantity#13 as decimal(10,0))), 0.00))], output=[i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L, sum#198, isEmpty#199])\n                                       +- *(7) Expand [[ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56, 0], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, null, 1], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, null, null, 3], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, null, null, null, 7], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, null, null, null, null, 15], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, null, null, null, null, null, 31], [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, null, null, null, null, null, null, 63], [ss_quantity#13, ss_sales_price#16, i_category#96, null, null, null, null, null, null, null, 127], [ss_quantity#13, ss_sales_price#16, null, null, null, null, null, null, null, null, 255]], [ss_quantity#13, ss_sales_price#16, i_category#171, i_class#172, i_brand#173, i_product_name#174, d_year#175, d_qoy#176, d_moy#177, s_store_id#178, spark_grouping_id#170L]\n                                          +- *(7) Project [ss_quantity#13, ss_sales_price#16, i_category#96, i_class#94, i_brand#92, i_product_name#105, d_year#33, d_qoy#37, d_moy#35, s_store_id#56]\n                                             +- *(7) BroadcastHashJoin [ss_store_sk#10], [s_store_sk#55], Inner, BuildRight, false\n                                                :- *(7) Project [ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n                                                :  +- *(7) SortMergeJoin [ss_item_sk#5], [i_item_sk#84], Inner\n                                                :     :- *(5) Sort [ss_item_sk#5 ASC NULLS FIRST], false, 0\n                                                :     :  +- AQEShuffleRead coalesced\n                                                :     :     +- ShuffleQueryStage 3\n                                                :     :        +- Exchange hashpartitioning(ss_item_sk#5, 200), ENSURE_REQUIREMENTS, [plan_id=549]\n                                                :     :           +- *(4) Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n                                                :     :              +- *(4) BroadcastHashJoin [ss_sold_date_sk#26], [d_date_sk#27], Inner, BuildRight, false\n                                                :     :                 :- *(4) Filter (isnotnull(ss_store_sk#10) AND isnotnull(ss_item_sk#5))\n                                                :     :                 :  +- *(4) ColumnarToRow\n                                                :     :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#5,ss_store_sk#10,ss_quantity#13,ss_sales_price#16,ss_sold_date_sk#26] Batched: true, DataFilters: [isnotnull(ss_store_sk#10), isnotnull(ss_item_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#195)], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n                                                :     :                 :           +- SubqueryBroadcast dynamicpruning#195, 0, [d_date_sk#27], [id=#523]\n                                                :     :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                          +- == Final Plan ==\n                                                                                             BroadcastQueryStage 1\n                                                                                             +- ReusedExchange [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n                                                                                          +- == Initial Plan ==\n                                                                                             BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=520]\n                                                                                             +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                                                                                                +- Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n                                                                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n                                                :     :                 +- BroadcastQueryStage 0\n                                                :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n                                                :     :                       +- *(1) Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n                                                :     :                          +- *(1) Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n                                                :     :                             +- *(1) ColumnarToRow\n                                                :     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n                                                :     +- *(6) Sort [i_item_sk#84 ASC NULLS FIRST], false, 0\n                                                :        +- AQEShuffleRead coalesced\n                                                :           +- ShuffleQueryStage 1\n                                                :              +- Exchange hashpartitioning(i_item_sk#84, 200), ENSURE_REQUIREMENTS, [plan_id=241]\n                                                :                 +- *(2) Filter isnotnull(i_item_sk#84)\n                                                :                    +- *(2) ColumnarToRow\n                                                :                       +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#84,i_brand#92,i_class#94,i_category#96,i_product_name#105] Batched: true, DataFilters: [isnotnull(i_item_sk#84)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n                                                +- BroadcastQueryStage 2\n                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=260]\n                                                      +- *(3) Filter isnotnull(s_store_sk#55)\n                                                         +- *(3) ColumnarToRow\n                                                            +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56] Batched: true, DataFilters: [isnotnull(s_store_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5962264,
        "inputRowCount" : 37779
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "3" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180642, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179676, 0, 0, 172479, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181704, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181704, 0, 0, 0, 0, 0, 0, 148861, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149260, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149260, 0, 0, 0, 0, 148861, 0, 0, 0, 0, 0, 0, 0, 0, 0, 180159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150140, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 279,
        "TotalTasksDurationInMs" : 270,
        "IOBytes" : {
          "Total" : 1740093,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1740093,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -361702277,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16080,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 16080,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#55, s_store_id#56] "
          },
          "1" : {
            "sign" : -1918148270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#55) "
          },
          "2" : {
            "sign" : 2066238734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#55, s_store_id#56, s_rec_start_date#57, s_rec_end_date#58, s_closed_date_sk#59, s_store_name#60, s_number_employees#61, s_floor_space#62, s_hours#63, s_manager#64, s_market_id#65, s_geography_class#66, s_market_desc#67, s_market_manager#68, s_division_id#69, s_division_name#70, s_company_id#71, s_company_name#72, s_street_number#73, s_street_name#74, s_street_type#75, s_suite_number#76, s_city#77, s_county#78, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#55, s_store_id#56]\n+- Filter isnotnull(s_store_sk#55)\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56,s_rec_start_date#57,s_rec_end_date#58,s_closed_date_sk#59,s_store_name#60,s_number_employees#61,s_floor_space#62,s_hours#63,s_manager#64,s_market_id#65,s_geography_class#66,s_market_desc#67,s_market_manager#68,s_division_id#69,s_division_name#70,s_company_id#71,s_company_name#72,s_street_number#73,s_street_name#74,s_street_type#75,s_suite_number#76,s_city#77,s_county#78,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 401429725,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 16080,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [s_store_sk#55, s_store_id#56] Condition : isnotnull(s_store_sk#55) "
          },
          "1" : {
            "sign" : -1802358367,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 16080,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [2]: [s_store_sk#55, s_store_id#56] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [IsNotNull(s_store_sk)] ReadSchema: struct<s_store_sk:int,s_store_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(s_store_sk#55)\n+- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#55,s_store_id#56] Batched: true, DataFilters: [isnotnull(s_store_sk#55)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 16080,
        "inputRowCount" : 402
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1849,
        "TotalTasksDurationInMs" : 1841,
        "IOBytes" : {
          "Total" : 15575,
          "Details" : {
            "IR" : 15575,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 982340118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8064,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 8064,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] "
          },
          "1" : {
            "sign" : 2010119308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27)) "
          },
          "2" : {
            "sign" : 1120105147,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#27, d_date_id#28, d_date#29, d_month_seq#30, d_week_seq#31, d_quarter_seq#32, d_year#33, d_dow#34, d_moy#35, d_dom#36, d_qoy#37, d_fy_year#38, d_fy_quarter_seq#39, d_fy_week_seq#40, d_day_name#41, d_quarter_name#42, d_holiday#43, d_weekend#44, d_following_holiday#45, d_first_dom#46, d_last_dom#47, d_same_day_ly#48, d_same_day_lq#49, d_current_day#50, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n+- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1537572883,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 8064,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] Input [5]: [d_date_sk#27, d_month_seq#30, d_year#33, d_moy#35, d_qoy#37] "
          },
          "1" : {
            "sign" : 1071231319,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8064,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [d_date_sk#27, d_month_seq#30, d_year#33, d_moy#35, d_qoy#37] Condition : (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27)) "
          },
          "2" : {
            "sign" : 1620952312,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8064,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [5]: [d_date_sk#27, d_month_seq#30, d_year#33, d_moy#35, d_qoy#37] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n+- Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8064,
        "inputRowCount" : 336
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 3064,
        "TotalTasksDurationInMs" : 3059,
        "IOBytes" : {
          "Total" : 114506,
          "Details" : {
            "IR" : 114506,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 289790814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23256000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 23256000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] "
          },
          "1" : {
            "sign" : -1437122227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#84) "
          },
          "2" : {
            "sign" : -948605159,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#84, i_item_id#85, i_rec_start_date#86, i_rec_end_date#87, i_item_desc#88, i_current_price#89, i_wholesale_cost#90, i_brand_id#91, i_brand#92, i_class_id#93, i_class#94, i_category_id#95, i_category#96, i_manufact_id#97, i_manufact#98, i_size#99, i_formulation#100, i_color#101, i_units#102, i_container#103, i_manager_id#104, i_product_name#105], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105]\n+- Filter isnotnull(i_item_sk#84)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#84,i_item_id#85,i_rec_start_date#86,i_rec_end_date#87,i_item_desc#88,i_current_price#89,i_wholesale_cost#90,i_brand_id#91,i_brand#92,i_class_id#93,i_class#94,i_category_id#95,i_category#96,i_manufact_id#97,i_manufact#98,i_size#99,i_formulation#100,i_color#101,i_units#102,i_container#103,i_manager_id#104,i_product_name#105] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1512639951,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] Condition : isnotnull(i_item_sk#84) "
          },
          "1" : {
            "sign" : 113143293,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 23256000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [5]: [i_item_sk#84, i_brand#92, i_class#94, i_category#96, i_product_name#105] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#84)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#84,i_brand#92,i_class#94,i_category#96,i_product_name#105] Batched: true, DataFilters: [isnotnull(i_item_sk#84)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23256000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 15344,
        "TotalTasksDurationInMs" : 21072,
        "IOBytes" : {
          "Total" : 13208077,
          "Details" : {
            "IR" : 2911468,
            "IW" : 0,
            "SR" : 0,
            "SW" : 10296609
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1769386681,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#4, ss_item_sk#5, ss_customer_sk#6, ss_cdemo_sk#7, ss_hdemo_sk#8, ss_addr_sk#9, ss_store_sk#10, ss_promo_sk#11, ss_ticket_number#12L, ss_quantity#13, ss_wholesale_cost#14, ss_list_price#15, ss_sales_price#16, ss_ext_discount_amt#17, ss_ext_sales_price#18, ss_ext_wholesale_cost#19, ss_ext_list_price#20, ss_ext_tax#21, ss_coupon_amt#22, ss_net_paid#23, ss_net_paid_inc_tax#24, ss_net_profit#25, ss_sold_date_sk#26], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 422270700,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#26 = d_date_sk#27) "
          },
          "0" : {
            "sign" : -712837028,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] "
          },
          "2" : {
            "sign" : 443301341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8405553536,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 8405553536,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26] "
          },
          "3" : {
            "sign" : -114699536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              },
              "compileTime" : {
                "sizeInBytes" : 39926379296,
                "rowCount" : 262673548
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n+- Join Inner, (ss_sold_date_sk#26 = d_date_sk#27)\n   :- Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26]\n   :  +- Filter (((isnotnull(ss_sold_date_sk#26) AND isnotnull(ss_store_sk#10)) AND isnotnull(ss_item_sk#5)) AND dynamicpruning#195 [ss_sold_date_sk#26])\n   :     :  +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n   :     :     +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#4,ss_item_sk#5,ss_customer_sk#6,ss_cdemo_sk#7,ss_hdemo_sk#8,ss_addr_sk#9,ss_store_sk#10,ss_promo_sk#11,ss_ticket_number#12L,ss_quantity#13,ss_wholesale_cost#14,ss_list_price#15,ss_sales_price#16,ss_ext_discount_amt#17,ss_ext_sales_price#18,ss_ext_wholesale_cost#19,ss_ext_list_price#20,ss_ext_tax#21,ss_coupon_amt#22,ss_net_paid#23,ss_net_paid_inc_tax#24,ss_net_profit#25,ss_sold_date_sk#26] parquet\n   +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n      +- Filter ((isnotnull(d_month_seq#30) AND ((d_month_seq#30 >= 1212) AND (d_month_seq#30 <= 1223))) AND isnotnull(d_date_sk#27))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_date_id#28,d_date#29,d_month_seq#30,d_week_seq#31,d_quarter_seq#32,d_year#33,d_dow#34,d_moy#35,d_dom#36,d_qoy#37,d_fy_year#38,d_fy_quarter_seq#39,d_fy_week_seq#40,d_day_name#41,d_quarter_name#42,d_holiday#43,d_weekend#44,d_following_holiday#45,d_first_dom#46,d_last_dom#47,d_same_day_ly#48,d_same_day_lq#49,d_current_day#50,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -154409058,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] Arguments: 0 "
          },
          "1" : {
            "sign" : 949899677,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#26] Right keys [1]: [d_date_sk#27] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 3914465,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37] Input [9]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26, d_date_sk#27, d_year#33, d_moy#35, d_qoy#37] "
          },
          "2" : {
            "sign" : -1003875144,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8405553536,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26] Condition : (isnotnull(ss_store_sk#10) AND isnotnull(ss_item_sk#5)) "
          },
          "3" : {
            "sign" : -1918523240,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8405553536,
            "rowCount" : 262673548,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [5]: [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, ss_sold_date_sk#26] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#195)] PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#5, ss_store_sk#10, ss_quantity#13, ss_sales_price#16, d_year#33, d_moy#35, d_qoy#37]\n+- BroadcastHashJoin [ss_sold_date_sk#26], [d_date_sk#27], Inner, BuildRight, false\n   :- Filter (isnotnull(ss_store_sk#10) AND isnotnull(ss_item_sk#5))\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#5,ss_store_sk#10,ss_quantity#13,ss_sales_price#16,ss_sold_date_sk#26] Batched: true, DataFilters: [isnotnull(ss_store_sk#10), isnotnull(ss_item_sk#5)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#195)], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#195, 0, [d_date_sk#27], [id=#523]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=520]\n   :                 +- Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n   :                    +- Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=220]\n         +- *(1) Project [d_date_sk#27, d_year#33, d_moy#35, d_qoy#37]\n            +- *(1) Filter (((isnotnull(d_month_seq#30) AND (d_month_seq#30 >= 1212)) AND (d_month_seq#30 <= 1223)) AND isnotnull(d_date_sk#27))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#27,d_month_seq#30,d_year#33,d_moy#35,d_qoy#37] Batched: true, DataFilters: [isnotnull(d_month_seq#30), (d_month_seq#30 >= 1212), (d_month_seq#30 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8406605032,
        "inputRowCount" : 262673913
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5760.0,
        "FinishedTasksDistributionInMs" : [ 1069.0, 1369.0, 1416.0, 1906.0, 1906.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 19696,
        "TotalTasksDurationInMs" : 226969,
        "IOBytes" : {
          "Total" : 1369455556,
          "Details" : {
            "IR" : 405833180,
            "IW" : 0,
            "SR" : 0,
            "SW" : 963622376
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227227150,
  "SQLEndTimeInMs" : 1702227314965,
  "Objectives" : {
    "DurationInMs" : 87815,
    "IOBytes" : {
      "Total" : 6054170433,
      "Details" : {
        "IR" : 408874729,
        "IW" : 0,
        "SR" : 2822647852,
        "SW" : 2822647852
      }
    }
  }
}
