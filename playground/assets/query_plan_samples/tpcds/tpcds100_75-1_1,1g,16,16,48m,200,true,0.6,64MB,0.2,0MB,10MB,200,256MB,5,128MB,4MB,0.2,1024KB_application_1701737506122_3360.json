{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -545576896,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3466025200,
          "rowCount" : 86650630,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#304, i_brand_id#283, i_class_id#285, i_category_id#287, i_manufact_id#289, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#10, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#11] "
        },
        "98" : {
          "sign" : 2034765766,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8587308,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#817) AND (i_category#817 = Sports)) AND isnotnull(i_item_sk#805)) AND (((isnotnull(i_brand_id#812) AND isnotnull(i_class_id#814)) AND isnotnull(i_category_id#816)) AND isnotnull(i_manufact_id#818))) "
        },
        "113" : {
          "sign" : -1788270267,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#937) AND (d_year#937 = 2001)) AND isnotnull(d_date_sk#931)) "
        },
        "34" : {
          "sign" : 677732977,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#986 [ss_sold_date_sk#147]) "
        },
        "67" : {
          "sign" : 1791470513,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5754978120,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, (cs_quantity#688 - coalesce(cr_return_quantity#771, 0)) AS sales_cnt#6, (cs_ext_sales_price#693 - coalesce(cr_return_amount#772, 0.00)) AS sales_amt#7] "
        },
        "120" : {
          "sign" : 2059407341,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 1036712016,
          "rowCount" : 7199389,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#959, wr_item_sk#960, wr_refunded_customer_sk#961, wr_refunded_cdemo_sk#962, wr_refunded_hdemo_sk#963, wr_refunded_addr_sk#964, wr_returning_customer_sk#965, wr_returning_cdemo_sk#966, wr_returning_hdemo_sk#967, wr_returning_addr_sk#968, wr_web_page_sk#969, wr_reason_sk#970, wr_order_number#971L, wr_return_quantity#972, wr_return_amt#973, wr_return_tax#974, wr_return_amt_inc_tax#975, wr_fee#976, wr_return_ship_cost#977, wr_refunded_cash#978, wr_reversed_charge#979, wr_account_credit#980, wr_net_loss#981, wr_returned_date_sk#982], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "93" : {
          "sign" : 469364075,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#782, ss_item_sk#783, ss_customer_sk#784, ss_cdemo_sk#785, ss_hdemo_sk#786, ss_addr_sk#787, ss_store_sk#788, ss_promo_sk#789, ss_ticket_number#790L, ss_quantity#791, ss_wholesale_cost#792, ss_list_price#793, ss_sales_price#794, ss_ext_discount_amt#795, ss_ext_sales_price#796, ss_ext_wholesale_cost#797, ss_ext_list_price#798, ss_ext_tax#799, ss_coupon_amt#800, ss_net_paid#801, ss_net_paid_inc_tax#802, ss_net_profit#803, ss_sold_date_sk#804], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "12" : {
          "sign" : 569246249,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8056969368,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#48 = cs_item_sk#28) "
        },
        "66" : {
          "sign" : -1286102558,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 23120167520,
          "rowCount" : 578004188,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "89" : {
          "sign" : -2131342562,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9559461060,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#783, ss_ticket_number#790L, ss_quantity#791, ss_ext_sales_price#796, d_year#833] "
        },
        "51" : {
          "sign" : 220334478,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2591410464,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201] "
        },
        "84" : {
          "sign" : -1200419762,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 2246060232,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#755, cr_item_sk#756, cr_refunded_customer_sk#757, cr_refunded_cdemo_sk#758, cr_refunded_hdemo_sk#759, cr_refunded_addr_sk#760, cr_returning_customer_sk#761, cr_returning_cdemo_sk#762, cr_returning_hdemo_sk#763, cr_returning_addr_sk#764, cr_call_center_sk#765, cr_catalog_page_sk#766, cr_ship_mode_sk#767, cr_warehouse_sk#768, cr_reason_sk#769, cr_order_number#770L, cr_return_quantity#771, cr_return_amount#772, cr_return_tax#773, cr_return_amt_inc_tax#774, cr_fee#775, cr_return_ship_cost#776, cr_refunded_cash#777, cr_reversed_charge#778, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "8" : {
          "sign" : 920280434,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 23120167520,
          "rowCount" : 578004188,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "73" : {
          "sign" : 878007357,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5157828612,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#685, cs_order_number#687L, cs_quantity#688, cs_ext_sales_price#693, cs_sold_date_sk#704] "
        },
        "78" : {
          "sign" : -1510887701,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#727, d_date_id#728, d_date#729, d_month_seq#730, d_week_seq#731, d_quarter_seq#732, d_year#733, d_dow#734, d_moy#735, d_dom#736, d_qoy#737, d_fy_year#738, d_fy_quarter_seq#739, d_fy_week_seq#740, d_day_name#741, d_quarter_name#742, d_holiday#743, d_weekend#744, d_following_holiday#745, d_first_dom#746, d_last_dom#747, d_same_day_ly#748, d_same_day_lq#749, d_current_day#750, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "19" : {
          "sign" : 2008150228,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70)) "
        },
        "100" : {
          "sign" : 920491534,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 921651552,
          "rowCount" : 28801611,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [sr_item_sk#856, sr_ticket_number#863L, sr_return_quantity#864, sr_return_amt#865] "
        },
        "23" : {
          "sign" : 65686849,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#48, i_item_id#49, i_rec_start_date#50, i_rec_end_date#51, i_item_desc#52, i_current_price#53, i_wholesale_cost#54, i_brand_id#55, i_brand#56, i_class_id#57, i_class#58, i_category_id#59, i_category#60, i_manufact_id#61, i_manufact#62, i_size#63, i_formulation#64, i_color#65, i_units#66, i_container#67, i_manager_id#68, i_product_name#69], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "62" : {
          "sign" : 1990304044,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 1036712016,
          "rowCount" : 7199389,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#202, wr_item_sk#203, wr_refunded_customer_sk#204, wr_refunded_cdemo_sk#205, wr_refunded_hdemo_sk#206, wr_refunded_addr_sk#207, wr_returning_customer_sk#208, wr_returning_cdemo_sk#209, wr_returning_hdemo_sk#210, wr_returning_addr_sk#211, wr_web_page_sk#212, wr_reason_sk#213, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216, wr_return_tax#217, wr_return_amt_inc_tax#218, wr_fee#219, wr_return_ship_cost#220, wr_refunded_cash#221, wr_reversed_charge#222, wr_account_credit#223, wr_net_loss#224, wr_returned_date_sk#225], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "4" : {
          "sign" : -1200969544,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 646795996844964169984,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#712) AND (i_class_id#57 = i_class_id#714)) AND (i_category_id#59 = i_category_id#716)) AND (i_manufact_id#61 = i_manufact_id#718)) AND ((cast(sales_cnt#12L as decimal(17,2)) / cast(sales_cnt#345L as decimal(17,2))) < 0.90000000000000000000)) "
        },
        "88" : {
          "sign" : -932641322,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 16086443576,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#805 = ss_item_sk#783) "
        },
        "77" : {
          "sign" : 196178399,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#733) AND (d_year#733 = 2001)) AND isnotnull(d_date_sk#727)) "
        },
        "40" : {
          "sign" : -159252341,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8587308,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#238) AND (i_category#238 = Sports)) AND isnotnull(i_item_sk#226)) AND (((isnotnull(i_brand_id#233) AND isnotnull(i_class_id#235)) AND isnotnull(i_category_id#237)) AND isnotnull(i_manufact_id#239))) "
        },
        "110" : {
          "sign" : -1131246779,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#877) AND isnotnull(ws_sold_date_sk#908)) AND dynamicpruning#990 [ws_sold_date_sk#908]) "
        },
        "15" : {
          "sign" : -1037271273,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5157828612,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47] "
        },
        "11" : {
          "sign" : -1175838188,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7481471556,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76] "
        },
        "104" : {
          "sign" : 584354544,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6585447880,
          "rowCount" : 86650630,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#891L = wr_order_number#971L) AND (ws_item_sk#877 = wr_item_sk#960)) "
        },
        "90" : {
          "sign" : -460505406,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 11683785740,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#827 = ss_sold_date_sk#804) "
        },
        "9" : {
          "sign" : 1310532498,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5754978120,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#6, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#7] "
        },
        "44" : {
          "sign" : 973399255,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 3686606208,
          "rowCount" : 28801611,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#148, sr_item_sk#149, sr_customer_sk#150, sr_cdemo_sk#151, sr_hdemo_sk#152, sr_addr_sk#153, sr_store_sk#154, sr_reason_sk#155, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158, sr_return_tax#159, sr_return_amt_inc_tax#160, sr_fee#161, sr_return_ship_cost#162, sr_refunded_cash#163, sr_reversed_charge#164, sr_store_credit#165, sr_net_loss#166, sr_returned_date_sk#167], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "33" : {
          "sign" : 28501526,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9901632708,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147] "
        },
        "117" : {
          "sign" : 723201276,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#909, i_item_id#910, i_rec_start_date#911, i_rec_end_date#912, i_item_desc#913, i_current_price#914, i_wholesale_cost#915, i_brand_id#916, i_brand#917, i_class_id#918, i_class#919, i_category_id#920, i_category#921, i_manufact_id#922, i_manufact#923, i_size#924, i_formulation#925, i_color#926, i_units#927, i_container#928, i_manager_id#929, i_product_name#930], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "22" : {
          "sign" : -1651031296,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8587308,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))) "
        },
        "56" : {
          "sign" : 2039260342,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#298, d_date_id#299, d_date#300, d_month_seq#301, d_week_seq#302, d_quarter_seq#303, d_year#304, d_dow#305, d_moy#306, d_dom#307, d_qoy#308, d_fy_year#309, d_fy_quarter_seq#310, d_fy_week_seq#311, d_day_name#312, d_quarter_name#313, d_holiday#314, d_weekend#315, d_following_holiday#316, d_first_dom#317, d_last_dom#318, d_same_day_ly#319, d_same_day_lq#320, d_current_day#321, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "55" : {
          "sign" : 1730891136,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#304) AND (d_year#304 = 2002)) AND isnotnull(d_date_sk#298)) "
        },
        "26" : {
          "sign" : -1373528142,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 2246060232,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#98, cr_item_sk#99, cr_refunded_customer_sk#100, cr_refunded_cdemo_sk#101, cr_refunded_hdemo_sk#102, cr_refunded_addr_sk#103, cr_returning_customer_sk#104, cr_returning_cdemo_sk#105, cr_returning_hdemo_sk#106, cr_returning_addr_sk#107, cr_call_center_sk#108, cr_catalog_page_sk#109, cr_ship_mode_sk#110, cr_warehouse_sk#111, cr_reason_sk#112, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115, cr_return_tax#116, cr_return_amt_inc_tax#117, cr_fee#118, cr_return_ship_cost#119, cr_refunded_cash#120, cr_reversed_charge#121, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "50" : {
          "sign" : -276305433,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3057806620,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#298 = ws_sold_date_sk#201) "
        },
        "37" : {
          "sign" : 1849880387,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#254) AND (d_year#254 = 2002)) AND isnotnull(d_date_sk#248)) "
        },
        "68" : {
          "sign" : 467378119,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10934458428,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#687L = cr_order_number#770L) AND (cs_item_sk#685 = cr_item_sk#756)) "
        },
        "61" : {
          "sign" : -371559938,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 1036712016,
          "rowCount" : 7199389,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203)) "
        },
        "107" : {
          "sign" : -869588648,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2501841780,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#877, ws_order_number#891L, ws_quantity#892, ws_ext_sales_price#897, d_year#937] "
        },
        "13" : {
          "sign" : 1926277114,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4986585432,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76] "
        },
        "46" : {
          "sign" : 766160218,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6585447880,
          "rowCount" : 86650630,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
        },
        "99" : {
          "sign" : -596009259,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#805, i_item_id#806, i_rec_start_date#807, i_rec_end_date#808, i_item_desc#809, i_current_price#810, i_wholesale_cost#811, i_brand_id#812, i_brand#813, i_class_id#814, i_class#815, i_category_id#816, i_category#817, i_manufact_id#818, i_manufact#819, i_size#820, i_formulation#821, i_color#822, i_units#823, i_container#824, i_manager_id#825, i_product_name#826], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "24" : {
          "sign" : 1903066963,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 460730304,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115] "
        },
        "94" : {
          "sign" : -1766525200,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#827, d_year#833] "
        },
        "83" : {
          "sign" : 1729642764,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2246060232,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cr_order_number#770L) AND isnotnull(cr_item_sk#756)) "
        },
        "35" : {
          "sign" : -1918584823,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#125, ss_item_sk#126, ss_customer_sk#127, ss_cdemo_sk#128, ss_hdemo_sk#129, ss_addr_sk#130, ss_store_sk#131, ss_promo_sk#132, ss_ticket_number#133L, ss_quantity#134, ss_wholesale_cost#135, ss_list_price#136, ss_sales_price#137, ss_ext_discount_amt#138, ss_ext_sales_price#139, ss_ext_wholesale_cost#140, ss_ext_list_price#141, ss_ext_tax#142, ss_coupon_amt#143, ss_net_paid#144, ss_net_paid_inc_tax#145, ss_net_profit#146, ss_sold_date_sk#147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 406554060,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#985 [cs_sold_date_sk#47]) "
        },
        "79" : {
          "sign" : 101429589,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 564424,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#705, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718] "
        },
        "5" : {
          "sign" : 1640320743,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 25432184272,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#12L) "
        },
        "103" : {
          "sign" : -545334469,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3466025200,
          "rowCount" : 86650630,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#937, i_brand_id#916, i_class_id#918, i_category_id#920, i_manufact_id#922, (ws_quantity#892 - coalesce(wr_return_quantity#972, 0)) AS sales_cnt#10, (ws_ext_sales_price#897 - coalesce(wr_return_amt#973, 0.00)) AS sales_amt#11] "
        },
        "112" : {
          "sign" : -933330336,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#931, d_year#937] "
        },
        "72" : {
          "sign" : -1387181207,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6094715528,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#727 = cs_sold_date_sk#704) "
        },
        "10" : {
          "sign" : 1470224634,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10934458428,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
        },
        "59" : {
          "sign" : 752791381,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#276, i_item_id#277, i_rec_start_date#278, i_rec_end_date#279, i_item_desc#280, i_current_price#281, i_wholesale_cost#282, i_brand_id#283, i_brand#284, i_class_id#285, i_class#286, i_category_id#287, i_category#288, i_manufact_id#289, i_manufact#290, i_size#291, i_formulation#292, i_color#293, i_units#294, i_container#295, i_manager_id#296, i_product_name#297], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "87" : {
          "sign" : 661911354,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 14937411892,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#783, ss_ticket_number#790L, ss_quantity#791, ss_ext_sales_price#796, i_brand_id#812, i_class_id#814, i_category_id#816, i_manufact_id#818, d_year#833] "
        },
        "48" : {
          "sign" : -1664581458,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4027346680,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#276 = ws_item_sk#170) "
        },
        "21" : {
          "sign" : 1903028525,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 564424,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] "
        },
        "116" : {
          "sign" : 1747054704,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8587308,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#921) AND (i_category#921 = Sports)) AND isnotnull(i_item_sk#909)) AND (((isnotnull(i_brand_id#916) AND isnotnull(i_class_id#918)) AND isnotnull(i_category_id#920)) AND isnotnull(i_manufact_id#922))) "
        },
        "76" : {
          "sign" : -1138106735,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#727, d_year#733] "
        },
        "54" : {
          "sign" : -239165391,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#298, d_year#304] "
        },
        "43" : {
          "sign" : -704416029,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 3686606208,
          "rowCount" : 28801611,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149)) "
        },
        "65" : {
          "sign" : -1385023409,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 23120167520,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, sales_cnt#6, sales_amt#7], [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, sales_cnt#6, sales_amt#7] "
        },
        "71" : {
          "sign" : -196633589,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4986585432,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#685, cs_order_number#687L, cs_quantity#688, cs_ext_sales_price#693, d_year#733] "
        },
        "57" : {
          "sign" : 857244211,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 564424,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#276, i_brand_id#283, i_class_id#285, i_category_id#287, i_manufact_id#289] "
        },
        "108" : {
          "sign" : 883935555,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3057806620,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#931 = ws_sold_date_sk#908) "
        },
        "32" : {
          "sign" : 1148683401,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 11683785740,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#248 = ss_sold_date_sk#147) "
        },
        "80" : {
          "sign" : -684590599,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8587308,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#717) AND (i_category#717 = Sports)) AND isnotnull(i_item_sk#705)) AND (((isnotnull(i_brand_id#712) AND isnotnull(i_class_id#714)) AND isnotnull(i_category_id#716)) AND isnotnull(i_manufact_id#718))) "
        },
        "106" : {
          "sign" : -1493922180,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4027346680,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#909 = ws_item_sk#877) "
        },
        "82" : {
          "sign" : -1097687303,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 460730304,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_item_sk#756, cr_order_number#770L, cr_return_quantity#771, cr_return_amount#772] "
        },
        "49" : {
          "sign" : 1602065320,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2501841780,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#304] "
        },
        "6" : {
          "sign" : -517525216,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 25432184272,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#6) AS sales_cnt#12L, MakeDecimal(sum(UnscaledValue(sales_amt#7)),18,2) AS sales_amt#13] "
        },
        "36" : {
          "sign" : 879370283,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#248, d_year#254] "
        },
        "1" : {
          "sign" : -1323307801,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 582116397160467752985,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : 1791219089,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 564424,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#226, i_brand_id#233, i_class_id#235, i_category_id#237, i_manufact_id#239] "
        },
        "17" : {
          "sign" : -1998356572,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#14, cs_ship_date_sk#15, cs_bill_customer_sk#16, cs_bill_cdemo_sk#17, cs_bill_hdemo_sk#18, cs_bill_addr_sk#19, cs_ship_customer_sk#20, cs_ship_cdemo_sk#21, cs_ship_hdemo_sk#22, cs_ship_addr_sk#23, cs_call_center_sk#24, cs_catalog_page_sk#25, cs_ship_mode_sk#26, cs_warehouse_sk#27, cs_item_sk#28, cs_promo_sk#29, cs_order_number#30L, cs_quantity#31, cs_wholesale_cost#32, cs_list_price#33, cs_sales_price#34, cs_ext_discount_amt#35, cs_ext_sales_price#36, cs_ext_wholesale_cost#37, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : -124936655,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2246060232,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99)) "
        },
        "60" : {
          "sign" : 1993223375,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 230380448,
          "rowCount" : 7199389,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216] "
        },
        "14" : {
          "sign" : -1514137574,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6094715528,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#70 = cs_sold_date_sk#47) "
        },
        "47" : {
          "sign" : 2009148303,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3739679060,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#283, i_class_id#285, i_category_id#287, i_manufact_id#289, d_year#304] "
        },
        "111" : {
          "sign" : -2007444722,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#875, ws_ship_date_sk#876, ws_item_sk#877, ws_bill_customer_sk#878, ws_bill_cdemo_sk#879, ws_bill_hdemo_sk#880, ws_bill_addr_sk#881, ws_ship_customer_sk#882, ws_ship_cdemo_sk#883, ws_ship_hdemo_sk#884, ws_ship_addr_sk#885, ws_web_page_sk#886, ws_web_site_sk#887, ws_ship_mode_sk#888, ws_warehouse_sk#889, ws_promo_sk#890, ws_order_number#891L, ws_quantity#892, ws_wholesale_cost#893, ws_list_price#894, ws_sales_price#895, ws_ext_discount_amt#896, ws_ext_sales_price#897, ws_ext_wholesale_cost#898, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "102" : {
          "sign" : -492757815,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 3686606208,
          "rowCount" : 28801611,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#855, sr_item_sk#856, sr_customer_sk#857, sr_cdemo_sk#858, sr_hdemo_sk#859, sr_addr_sk#860, sr_store_sk#861, sr_reason_sk#862, sr_ticket_number#863L, sr_return_quantity#864, sr_return_amt#865, sr_return_tax#866, sr_return_amt_inc_tax#867, sr_fee#868, sr_return_ship_cost#869, sr_refunded_cash#870, sr_reversed_charge#871, sr_store_credit#872, sr_net_loss#873, sr_returned_date_sk#874], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "31" : {
          "sign" : 433839076,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9559461060,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#254] "
        },
        "96" : {
          "sign" : 1729287053,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#827, d_date_id#828, d_date#829, d_month_seq#830, d_week_seq#831, d_quarter_seq#832, d_year#833, d_dow#834, d_moy#835, d_dom#836, d_qoy#837, d_fy_year#838, d_fy_quarter_seq#839, d_fy_week_seq#840, d_day_name#841, d_quarter_name#842, d_holiday#843, d_weekend#844, d_following_holiday#845, d_first_dom#846, d_last_dom#847, d_same_day_ly#848, d_same_day_lq#849, d_current_day#850, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "69" : {
          "sign" : 1557997861,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7481471556,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#685, cs_order_number#687L, cs_quantity#688, cs_ext_sales_price#693, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, d_year#733] "
        },
        "95" : {
          "sign" : -845069982,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#833) AND (d_year#833 = 2001)) AND isnotnull(d_date_sk#827)) "
        },
        "58" : {
          "sign" : 2080468842,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8587308,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#288) AND (i_category#288 = Sports)) AND isnotnull(i_item_sk#276)) AND (((isnotnull(i_brand_id#283) AND isnotnull(i_class_id#285)) AND isnotnull(i_category_id#287)) AND isnotnull(i_manufact_id#289))) "
        },
        "64" : {
          "sign" : 425944116,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 25432184272,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718], [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, sum(sales_cnt#6) AS sales_cnt#345L, MakeDecimal(sum(UnscaledValue(sales_amt#7)),18,2) AS sales_amt#346] "
        },
        "53" : {
          "sign" : 1115355852,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#168, ws_ship_date_sk#169, ws_item_sk#170, ws_bill_customer_sk#171, ws_bill_cdemo_sk#172, ws_bill_hdemo_sk#173, ws_bill_addr_sk#174, ws_ship_customer_sk#175, ws_ship_cdemo_sk#176, ws_ship_hdemo_sk#177, ws_ship_addr_sk#178, ws_web_page_sk#179, ws_web_site_sk#180, ws_ship_mode_sk#181, ws_warehouse_sk#182, ws_promo_sk#183, ws_order_number#184L, ws_quantity#185, ws_wholesale_cost#186, ws_list_price#187, ws_sales_price#188, ws_ext_discount_amt#189, ws_ext_sales_price#190, ws_ext_wholesale_cost#191, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "42" : {
          "sign" : 1941477794,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 921651552,
          "rowCount" : 28801611,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158] "
        },
        "75" : {
          "sign" : -1085272632,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#671, cs_ship_date_sk#672, cs_bill_customer_sk#673, cs_bill_cdemo_sk#674, cs_bill_hdemo_sk#675, cs_bill_addr_sk#676, cs_ship_customer_sk#677, cs_ship_cdemo_sk#678, cs_ship_hdemo_sk#679, cs_ship_addr_sk#680, cs_call_center_sk#681, cs_catalog_page_sk#682, cs_ship_mode_sk#683, cs_warehouse_sk#684, cs_item_sk#685, cs_promo_sk#686, cs_order_number#687L, cs_quantity#688, cs_wholesale_cost#689, cs_list_price#690, cs_sales_price#691, cs_ext_discount_amt#692, cs_ext_sales_price#693, cs_ext_wholesale_cost#694, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "115" : {
          "sign" : -1976018130,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 564424,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#909, i_brand_id#916, i_class_id#918, i_category_id#920, i_manufact_id#922] "
        },
        "109" : {
          "sign" : -1970993147,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2591410464,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#877, ws_order_number#891L, ws_quantity#892, ws_ext_sales_price#897, ws_sold_date_sk#908] "
        },
        "0" : {
          "sign" : 1138769808,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 7200,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : -232749464,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : -36282543,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13899164200,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#254, i_brand_id#233, i_class_id#235, i_category_id#237, i_manufact_id#239, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#8, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#9] "
        },
        "70" : {
          "sign" : -824423047,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8056969368,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#705 = cs_item_sk#685) "
        },
        "2" : {
          "sign" : -992867354,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 582116397160467752985,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#4L ASC NULLS FIRST], true "
        },
        "86" : {
          "sign" : 1497555885,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 26408411980,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#790L = sr_ticket_number#863L) AND (ss_item_sk#783 = sr_item_sk#856)) "
        },
        "38" : {
          "sign" : 1283288084,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#248, d_date_id#249, d_date#250, d_month_seq#251, d_week_seq#252, d_quarter_seq#253, d_year#254, d_dow#255, d_moy#256, d_dom#257, d_qoy#258, d_fy_year#259, d_fy_quarter_seq#260, d_fy_week_seq#261, d_day_name#262, d_quarter_name#263, d_holiday#264, d_weekend#265, d_following_holiday#266, d_first_dom#267, d_last_dom#268, d_same_day_ly#269, d_same_day_lq#270, d_current_day#271, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "81" : {
          "sign" : 2005786413,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#705, i_item_id#706, i_rec_start_date#707, i_rec_end_date#708, i_item_desc#709, i_current_price#710, i_wholesale_cost#711, i_brand_id#712, i_brand#713, i_class_id#714, i_class#715, i_category_id#716, i_category#717, i_manufact_id#718, i_manufact#719, i_size#720, i_formulation#721, i_color#722, i_units#723, i_container#724, i_manager_id#725, i_product_name#726], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "118" : {
          "sign" : -1964752560,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 230380448,
          "rowCount" : 7199389,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_item_sk#960, wr_order_number#971L, wr_return_quantity#972, wr_return_amt#973] "
        },
        "92" : {
          "sign" : -28981794,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#783) AND isnotnull(ss_sold_date_sk#804)) AND dynamicpruning#989 [ss_sold_date_sk#804]) "
        },
        "18" : {
          "sign" : -382545733,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9216,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#70, d_year#76] "
        },
        "101" : {
          "sign" : 1666511477,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 3686606208,
          "rowCount" : 28801611,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(sr_ticket_number#863L) AND isnotnull(sr_item_sk#856)) "
        },
        "30" : {
          "sign" : 7412720,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 16086443576,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#226 = ss_item_sk#126) "
        },
        "7" : {
          "sign" : 2129328243,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 23120167520,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#6, sales_amt#7], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#6, sales_amt#7] "
        },
        "97" : {
          "sign" : 1182733019,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 564424,
          "rowCount" : 20158,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#805, i_brand_id#812, i_class_id#814, i_category_id#816, i_manufact_id#818] "
        },
        "114" : {
          "sign" : -413645386,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#931, d_date_id#932, d_date#933, d_month_seq#934, d_week_seq#935, d_quarter_seq#936, d_year#937, d_dow#938, d_moy#939, d_dom#940, d_qoy#941, d_fy_year#942, d_fy_quarter_seq#943, d_fy_week_seq#944, d_day_name#945, d_quarter_name#946, d_holiday#947, d_weekend#948, d_following_holiday#949, d_first_dom#950, d_last_dom#951, d_same_day_ly#952, d_same_day_lq#953, d_current_day#954, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "29" : {
          "sign" : -1313853675,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 14937411892,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#233, i_class_id#235, i_category_id#237, i_manufact_id#239, d_year#254] "
        },
        "41" : {
          "sign" : 2003719837,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#226, i_item_id#227, i_rec_start_date#228, i_rec_end_date#229, i_item_desc#230, i_current_price#231, i_wholesale_cost#232, i_brand_id#233, i_brand#234, i_class_id#235, i_class#236, i_category_id#237, i_category#238, i_manufact_id#239, i_manufact#240, i_size#241, i_formulation#242, i_color#243, i_units#244, i_container#245, i_manager_id#246, i_product_name#247], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "105" : {
          "sign" : -847898683,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3739679060,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#877, ws_order_number#891L, ws_quantity#892, ws_ext_sales_price#897, i_brand_id#916, i_class_id#918, i_category_id#920, i_manufact_id#922, d_year#937] "
        },
        "63" : {
          "sign" : -2071306050,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 25432184272,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#345L) "
        },
        "3" : {
          "sign" : -1693368132,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 582116397160467752985,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#733 AS prev_year#0, d_year#76 AS year#1, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#345L AS prev_yr_cnt#2L, sales_cnt#12L AS curr_yr_cnt#3L, (sales_cnt#12L - sales_cnt#345L) AS sales_cnt_diff#4L, (sales_amt#13 - sales_amt#346) AS sales_amt_diff#5] "
        },
        "74" : {
          "sign" : 918765164,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#685) AND isnotnull(cs_sold_date_sk#704)) AND dynamicpruning#988 [cs_sold_date_sk#704]) "
        },
        "91" : {
          "sign" : 725047437,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9901632708,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#783, ss_ticket_number#790L, ss_quantity#791, ss_ext_sales_price#796, ss_sold_date_sk#804] "
        },
        "52" : {
          "sign" : 465319710,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#987 [ws_sold_date_sk#201]) "
        },
        "85" : {
          "sign" : 949315031,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13899164200,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_year#833, i_brand_id#812, i_class_id#814, i_category_id#816, i_manufact_id#818, (ss_quantity#791 - coalesce(sr_return_quantity#864, 0)) AS sales_cnt#8, (ss_ext_sales_price#796 - coalesce(sr_return_amt#865, 0.00)) AS sales_amt#9] "
        },
        "28" : {
          "sign" : -1947868726,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 26408411980,
          "rowCount" : 347479105,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
        },
        "119" : {
          "sign" : -54161153,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 1036712016,
          "rowCount" : 7199389,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(wr_order_number#971L) AND isnotnull(wr_item_sk#960)) "
        }
      },
      "links" : [ {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Join",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "LogicalRelation",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "LogicalRelation",
        "toId" : 37,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Filter",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 34,
        "fromName" : "Filter",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "LogicalRelation",
        "toId" : 40,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Filter",
        "toId" : 39,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Join",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "LogicalRelation",
        "toId" : 43,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Filter",
        "toId" : 42,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Join",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "LogicalRelation",
        "toId" : 52,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "LogicalRelation",
        "toId" : 55,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Filter",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 52,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 52,
        "fromName" : "Filter",
        "toId" : 51,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Project",
        "toId" : 50,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 50,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Join",
        "toId" : 49,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Project",
        "toId" : 48,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "LogicalRelation",
        "toId" : 58,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Filter",
        "toId" : 57,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Project",
        "toId" : 48,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Join",
        "toId" : 47,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "LogicalRelation",
        "toId" : 61,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Filter",
        "toId" : 60,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "Project",
        "toId" : 46,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Join",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Union",
        "toId" : 7,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Aggregate",
        "toId" : 6,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Aggregate",
        "toId" : 5,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Filter",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 75,
        "fromName" : "LogicalRelation",
        "toId" : 74,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 78,
        "fromName" : "LogicalRelation",
        "toId" : 77,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 77,
        "fromName" : "Filter",
        "toId" : 76,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 76,
        "fromName" : "Project",
        "toId" : 74,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 74,
        "fromName" : "Filter",
        "toId" : 73,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 76,
        "fromName" : "Project",
        "toId" : 72,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Join",
        "toId" : 71,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Project",
        "toId" : 70,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 81,
        "fromName" : "LogicalRelation",
        "toId" : 80,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 80,
        "fromName" : "Filter",
        "toId" : 79,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 79,
        "fromName" : "Project",
        "toId" : 70,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "Join",
        "toId" : 69,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Project",
        "toId" : 68,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 84,
        "fromName" : "LogicalRelation",
        "toId" : 83,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 83,
        "fromName" : "Filter",
        "toId" : 82,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 82,
        "fromName" : "Project",
        "toId" : 68,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Join",
        "toId" : 67,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Project",
        "toId" : 66,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 93,
        "fromName" : "LogicalRelation",
        "toId" : 92,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 96,
        "fromName" : "LogicalRelation",
        "toId" : 95,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 95,
        "fromName" : "Filter",
        "toId" : 94,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "Project",
        "toId" : 92,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 92,
        "fromName" : "Filter",
        "toId" : 91,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 91,
        "fromName" : "Project",
        "toId" : 90,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 94,
        "fromName" : "Project",
        "toId" : 90,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 90,
        "fromName" : "Join",
        "toId" : 89,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 89,
        "fromName" : "Project",
        "toId" : 88,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 99,
        "fromName" : "LogicalRelation",
        "toId" : 98,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 98,
        "fromName" : "Filter",
        "toId" : 97,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 97,
        "fromName" : "Project",
        "toId" : 88,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 88,
        "fromName" : "Join",
        "toId" : 87,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 87,
        "fromName" : "Project",
        "toId" : 86,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 102,
        "fromName" : "LogicalRelation",
        "toId" : 101,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 101,
        "fromName" : "Filter",
        "toId" : 100,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 100,
        "fromName" : "Project",
        "toId" : 86,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 86,
        "fromName" : "Join",
        "toId" : 85,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 85,
        "fromName" : "Project",
        "toId" : 66,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 111,
        "fromName" : "LogicalRelation",
        "toId" : 110,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 114,
        "fromName" : "LogicalRelation",
        "toId" : 113,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 113,
        "fromName" : "Filter",
        "toId" : 112,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 112,
        "fromName" : "Project",
        "toId" : 110,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 110,
        "fromName" : "Filter",
        "toId" : 109,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 109,
        "fromName" : "Project",
        "toId" : 108,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 112,
        "fromName" : "Project",
        "toId" : 108,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 108,
        "fromName" : "Join",
        "toId" : 107,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 107,
        "fromName" : "Project",
        "toId" : 106,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 117,
        "fromName" : "LogicalRelation",
        "toId" : 116,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 116,
        "fromName" : "Filter",
        "toId" : 115,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 115,
        "fromName" : "Project",
        "toId" : 106,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 106,
        "fromName" : "Join",
        "toId" : 105,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 105,
        "fromName" : "Project",
        "toId" : 104,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 120,
        "fromName" : "LogicalRelation",
        "toId" : 119,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 119,
        "fromName" : "Filter",
        "toId" : 118,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 118,
        "fromName" : "Project",
        "toId" : 104,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 104,
        "fromName" : "Join",
        "toId" : 103,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 103,
        "fromName" : "Project",
        "toId" : 66,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "Union",
        "toId" : 65,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Aggregate",
        "toId" : 64,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Aggregate",
        "toId" : 63,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "Filter",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#4L ASC NULLS FIRST], true\n      +- Project [d_year#733 AS prev_year#0, d_year#76 AS year#1, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#345L AS prev_yr_cnt#2L, sales_cnt#12L AS curr_yr_cnt#3L, (sales_cnt#12L - sales_cnt#345L) AS sales_cnt_diff#4L, (sales_amt#13 - sales_amt#346) AS sales_amt_diff#5]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#712) AND (i_class_id#57 = i_class_id#714)) AND (i_category_id#59 = i_category_id#716)) AND (i_manufact_id#61 = i_manufact_id#718)) AND ((cast(sales_cnt#12L as decimal(17,2)) / cast(sales_cnt#345L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#12L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#6) AS sales_cnt#12L, MakeDecimal(sum(UnscaledValue(sales_amt#7)),18,2) AS sales_amt#13]\n            :     +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#6, sales_amt#7], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#6, sales_amt#7]\n            :        +- Union false, false\n            :           :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#6, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#7]\n            :           :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n            :           :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n            :           :     :  +- Join Inner, (i_item_sk#48 = cs_item_sk#28)\n            :           :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n            :           :     :     :  +- Join Inner, (d_date_sk#70 = cs_sold_date_sk#47)\n            :           :     :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47]\n            :           :     :     :     :  +- Filter ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#985 [cs_sold_date_sk#47])\n            :           :     :     :     :     :  +- Project [d_date_sk#70, d_year#76]\n            :           :     :     :     :     :     +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n            :           :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n            :           :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#14,cs_ship_date_sk#15,cs_bill_customer_sk#16,cs_bill_cdemo_sk#17,cs_bill_hdemo_sk#18,cs_bill_addr_sk#19,cs_ship_customer_sk#20,cs_ship_cdemo_sk#21,cs_ship_hdemo_sk#22,cs_ship_addr_sk#23,cs_call_center_sk#24,cs_catalog_page_sk#25,cs_ship_mode_sk#26,cs_warehouse_sk#27,cs_item_sk#28,cs_promo_sk#29,cs_order_number#30L,cs_quantity#31,cs_wholesale_cost#32,cs_list_price#33,cs_sales_price#34,cs_ext_discount_amt#35,cs_ext_sales_price#36,cs_ext_wholesale_cost#37,... 10 more fields] parquet\n            :           :     :     :     +- Project [d_date_sk#70, d_year#76]\n            :           :     :     :        +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n            :           :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n            :           :     :     +- Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n            :           :     :        +- Filter (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61)))\n            :           :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#48,i_item_id#49,i_rec_start_date#50,i_rec_end_date#51,i_item_desc#52,i_current_price#53,i_wholesale_cost#54,i_brand_id#55,i_brand#56,i_class_id#57,i_class#58,i_category_id#59,i_category#60,i_manufact_id#61,i_manufact#62,i_size#63,i_formulation#64,i_color#65,i_units#66,i_container#67,i_manager_id#68,i_product_name#69] parquet\n            :           :     +- Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n            :           :        +- Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n            :           :           +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#98,cr_item_sk#99,cr_refunded_customer_sk#100,cr_refunded_cdemo_sk#101,cr_refunded_hdemo_sk#102,cr_refunded_addr_sk#103,cr_returning_customer_sk#104,cr_returning_cdemo_sk#105,cr_returning_hdemo_sk#106,cr_returning_addr_sk#107,cr_call_center_sk#108,cr_catalog_page_sk#109,cr_ship_mode_sk#110,cr_warehouse_sk#111,cr_reason_sk#112,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_return_tax#116,cr_return_amt_inc_tax#117,cr_fee#118,cr_return_ship_cost#119,cr_refunded_cash#120,cr_reversed_charge#121,... 3 more fields] parquet\n            :           :- Project [d_year#254, i_brand_id#233, i_class_id#235, i_category_id#237, i_manufact_id#239, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#8, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#9]\n            :           :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n            :           :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#233, i_class_id#235, i_category_id#237, i_manufact_id#239, d_year#254]\n            :           :     :  +- Join Inner, (i_item_sk#226 = ss_item_sk#126)\n            :           :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#254]\n            :           :     :     :  +- Join Inner, (d_date_sk#248 = ss_sold_date_sk#147)\n            :           :     :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147]\n            :           :     :     :     :  +- Filter ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#986 [ss_sold_date_sk#147])\n            :           :     :     :     :     :  +- Project [d_date_sk#248, d_year#254]\n            :           :     :     :     :     :     +- Filter ((isnotnull(d_year#254) AND (d_year#254 = 2002)) AND isnotnull(d_date_sk#248))\n            :           :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#248,d_date_id#249,d_date#250,d_month_seq#251,d_week_seq#252,d_quarter_seq#253,d_year#254,d_dow#255,d_moy#256,d_dom#257,d_qoy#258,d_fy_year#259,d_fy_quarter_seq#260,d_fy_week_seq#261,d_day_name#262,d_quarter_name#263,d_holiday#264,d_weekend#265,d_following_holiday#266,d_first_dom#267,d_last_dom#268,d_same_day_ly#269,d_same_day_lq#270,d_current_day#271,... 4 more fields] parquet\n            :           :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#125,ss_item_sk#126,ss_customer_sk#127,ss_cdemo_sk#128,ss_hdemo_sk#129,ss_addr_sk#130,ss_store_sk#131,ss_promo_sk#132,ss_ticket_number#133L,ss_quantity#134,ss_wholesale_cost#135,ss_list_price#136,ss_sales_price#137,ss_ext_discount_amt#138,ss_ext_sales_price#139,ss_ext_wholesale_cost#140,ss_ext_list_price#141,ss_ext_tax#142,ss_coupon_amt#143,ss_net_paid#144,ss_net_paid_inc_tax#145,ss_net_profit#146,ss_sold_date_sk#147] parquet\n            :           :     :     :     +- Project [d_date_sk#248, d_year#254]\n            :           :     :     :        +- Filter ((isnotnull(d_year#254) AND (d_year#254 = 2002)) AND isnotnull(d_date_sk#248))\n            :           :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#248,d_date_id#249,d_date#250,d_month_seq#251,d_week_seq#252,d_quarter_seq#253,d_year#254,d_dow#255,d_moy#256,d_dom#257,d_qoy#258,d_fy_year#259,d_fy_quarter_seq#260,d_fy_week_seq#261,d_day_name#262,d_quarter_name#263,d_holiday#264,d_weekend#265,d_following_holiday#266,d_first_dom#267,d_last_dom#268,d_same_day_ly#269,d_same_day_lq#270,d_current_day#271,... 4 more fields] parquet\n            :           :     :     +- Project [i_item_sk#226, i_brand_id#233, i_class_id#235, i_category_id#237, i_manufact_id#239]\n            :           :     :        +- Filter (((isnotnull(i_category#238) AND (i_category#238 = Sports)) AND isnotnull(i_item_sk#226)) AND (((isnotnull(i_brand_id#233) AND isnotnull(i_class_id#235)) AND isnotnull(i_category_id#237)) AND isnotnull(i_manufact_id#239)))\n            :           :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#226,i_item_id#227,i_rec_start_date#228,i_rec_end_date#229,i_item_desc#230,i_current_price#231,i_wholesale_cost#232,i_brand_id#233,i_brand#234,i_class_id#235,i_class#236,i_category_id#237,i_category#238,i_manufact_id#239,i_manufact#240,i_size#241,i_formulation#242,i_color#243,i_units#244,i_container#245,i_manager_id#246,i_product_name#247] parquet\n            :           :     +- Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n            :           :        +- Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n            :           :           +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#148,sr_item_sk#149,sr_customer_sk#150,sr_cdemo_sk#151,sr_hdemo_sk#152,sr_addr_sk#153,sr_store_sk#154,sr_reason_sk#155,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_return_tax#159,sr_return_amt_inc_tax#160,sr_fee#161,sr_return_ship_cost#162,sr_refunded_cash#163,sr_reversed_charge#164,sr_store_credit#165,sr_net_loss#166,sr_returned_date_sk#167] parquet\n            :           +- Project [d_year#304, i_brand_id#283, i_class_id#285, i_category_id#287, i_manufact_id#289, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#10, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#11]\n            :              +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :                 :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#283, i_class_id#285, i_category_id#287, i_manufact_id#289, d_year#304]\n            :                 :  +- Join Inner, (i_item_sk#276 = ws_item_sk#170)\n            :                 :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#304]\n            :                 :     :  +- Join Inner, (d_date_sk#298 = ws_sold_date_sk#201)\n            :                 :     :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201]\n            :                 :     :     :  +- Filter ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#987 [ws_sold_date_sk#201])\n            :                 :     :     :     :  +- Project [d_date_sk#298, d_year#304]\n            :                 :     :     :     :     +- Filter ((isnotnull(d_year#304) AND (d_year#304 = 2002)) AND isnotnull(d_date_sk#298))\n            :                 :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#298,d_date_id#299,d_date#300,d_month_seq#301,d_week_seq#302,d_quarter_seq#303,d_year#304,d_dow#305,d_moy#306,d_dom#307,d_qoy#308,d_fy_year#309,d_fy_quarter_seq#310,d_fy_week_seq#311,d_day_name#312,d_quarter_name#313,d_holiday#314,d_weekend#315,d_following_holiday#316,d_first_dom#317,d_last_dom#318,d_same_day_ly#319,d_same_day_lq#320,d_current_day#321,... 4 more fields] parquet\n            :                 :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#168,ws_ship_date_sk#169,ws_item_sk#170,ws_bill_customer_sk#171,ws_bill_cdemo_sk#172,ws_bill_hdemo_sk#173,ws_bill_addr_sk#174,ws_ship_customer_sk#175,ws_ship_cdemo_sk#176,ws_ship_hdemo_sk#177,ws_ship_addr_sk#178,ws_web_page_sk#179,ws_web_site_sk#180,ws_ship_mode_sk#181,ws_warehouse_sk#182,ws_promo_sk#183,ws_order_number#184L,ws_quantity#185,ws_wholesale_cost#186,ws_list_price#187,ws_sales_price#188,ws_ext_discount_amt#189,ws_ext_sales_price#190,ws_ext_wholesale_cost#191,... 10 more fields] parquet\n            :                 :     :     +- Project [d_date_sk#298, d_year#304]\n            :                 :     :        +- Filter ((isnotnull(d_year#304) AND (d_year#304 = 2002)) AND isnotnull(d_date_sk#298))\n            :                 :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#298,d_date_id#299,d_date#300,d_month_seq#301,d_week_seq#302,d_quarter_seq#303,d_year#304,d_dow#305,d_moy#306,d_dom#307,d_qoy#308,d_fy_year#309,d_fy_quarter_seq#310,d_fy_week_seq#311,d_day_name#312,d_quarter_name#313,d_holiday#314,d_weekend#315,d_following_holiday#316,d_first_dom#317,d_last_dom#318,d_same_day_ly#319,d_same_day_lq#320,d_current_day#321,... 4 more fields] parquet\n            :                 :     +- Project [i_item_sk#276, i_brand_id#283, i_class_id#285, i_category_id#287, i_manufact_id#289]\n            :                 :        +- Filter (((isnotnull(i_category#288) AND (i_category#288 = Sports)) AND isnotnull(i_item_sk#276)) AND (((isnotnull(i_brand_id#283) AND isnotnull(i_class_id#285)) AND isnotnull(i_category_id#287)) AND isnotnull(i_manufact_id#289)))\n            :                 :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#276,i_item_id#277,i_rec_start_date#278,i_rec_end_date#279,i_item_desc#280,i_current_price#281,i_wholesale_cost#282,i_brand_id#283,i_brand#284,i_class_id#285,i_class#286,i_category_id#287,i_category#288,i_manufact_id#289,i_manufact#290,i_size#291,i_formulation#292,i_color#293,i_units#294,i_container#295,i_manager_id#296,i_product_name#297] parquet\n            :                 +- Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n            :                    +- Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n            :                       +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#202,wr_item_sk#203,wr_refunded_customer_sk#204,wr_refunded_cdemo_sk#205,wr_refunded_hdemo_sk#206,wr_refunded_addr_sk#207,wr_returning_customer_sk#208,wr_returning_cdemo_sk#209,wr_returning_hdemo_sk#210,wr_returning_addr_sk#211,wr_web_page_sk#212,wr_reason_sk#213,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_return_tax#217,wr_return_amt_inc_tax#218,wr_fee#219,wr_return_ship_cost#220,wr_refunded_cash#221,wr_reversed_charge#222,wr_account_credit#223,wr_net_loss#224,wr_returned_date_sk#225] parquet\n            +- Filter isnotnull(sales_cnt#345L)\n               +- Aggregate [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718], [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, sum(sales_cnt#6) AS sales_cnt#345L, MakeDecimal(sum(UnscaledValue(sales_amt#7)),18,2) AS sales_amt#346]\n                  +- Aggregate [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, sales_cnt#6, sales_amt#7], [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, sales_cnt#6, sales_amt#7]\n                     +- Union false, false\n                        :- Project [d_year#733, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, (cs_quantity#688 - coalesce(cr_return_quantity#771, 0)) AS sales_cnt#6, (cs_ext_sales_price#693 - coalesce(cr_return_amount#772, 0.00)) AS sales_amt#7]\n                        :  +- Join LeftOuter, ((cs_order_number#687L = cr_order_number#770L) AND (cs_item_sk#685 = cr_item_sk#756))\n                        :     :- Project [cs_item_sk#685, cs_order_number#687L, cs_quantity#688, cs_ext_sales_price#693, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718, d_year#733]\n                        :     :  +- Join Inner, (i_item_sk#705 = cs_item_sk#685)\n                        :     :     :- Project [cs_item_sk#685, cs_order_number#687L, cs_quantity#688, cs_ext_sales_price#693, d_year#733]\n                        :     :     :  +- Join Inner, (d_date_sk#727 = cs_sold_date_sk#704)\n                        :     :     :     :- Project [cs_item_sk#685, cs_order_number#687L, cs_quantity#688, cs_ext_sales_price#693, cs_sold_date_sk#704]\n                        :     :     :     :  +- Filter ((isnotnull(cs_item_sk#685) AND isnotnull(cs_sold_date_sk#704)) AND dynamicpruning#988 [cs_sold_date_sk#704])\n                        :     :     :     :     :  +- Project [d_date_sk#727, d_year#733]\n                        :     :     :     :     :     +- Filter ((isnotnull(d_year#733) AND (d_year#733 = 2001)) AND isnotnull(d_date_sk#727))\n                        :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#727,d_date_id#728,d_date#729,d_month_seq#730,d_week_seq#731,d_quarter_seq#732,d_year#733,d_dow#734,d_moy#735,d_dom#736,d_qoy#737,d_fy_year#738,d_fy_quarter_seq#739,d_fy_week_seq#740,d_day_name#741,d_quarter_name#742,d_holiday#743,d_weekend#744,d_following_holiday#745,d_first_dom#746,d_last_dom#747,d_same_day_ly#748,d_same_day_lq#749,d_current_day#750,... 4 more fields] parquet\n                        :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#671,cs_ship_date_sk#672,cs_bill_customer_sk#673,cs_bill_cdemo_sk#674,cs_bill_hdemo_sk#675,cs_bill_addr_sk#676,cs_ship_customer_sk#677,cs_ship_cdemo_sk#678,cs_ship_hdemo_sk#679,cs_ship_addr_sk#680,cs_call_center_sk#681,cs_catalog_page_sk#682,cs_ship_mode_sk#683,cs_warehouse_sk#684,cs_item_sk#685,cs_promo_sk#686,cs_order_number#687L,cs_quantity#688,cs_wholesale_cost#689,cs_list_price#690,cs_sales_price#691,cs_ext_discount_amt#692,cs_ext_sales_price#693,cs_ext_wholesale_cost#694,... 10 more fields] parquet\n                        :     :     :     +- Project [d_date_sk#727, d_year#733]\n                        :     :     :        +- Filter ((isnotnull(d_year#733) AND (d_year#733 = 2001)) AND isnotnull(d_date_sk#727))\n                        :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#727,d_date_id#728,d_date#729,d_month_seq#730,d_week_seq#731,d_quarter_seq#732,d_year#733,d_dow#734,d_moy#735,d_dom#736,d_qoy#737,d_fy_year#738,d_fy_quarter_seq#739,d_fy_week_seq#740,d_day_name#741,d_quarter_name#742,d_holiday#743,d_weekend#744,d_following_holiday#745,d_first_dom#746,d_last_dom#747,d_same_day_ly#748,d_same_day_lq#749,d_current_day#750,... 4 more fields] parquet\n                        :     :     +- Project [i_item_sk#705, i_brand_id#712, i_class_id#714, i_category_id#716, i_manufact_id#718]\n                        :     :        +- Filter (((isnotnull(i_category#717) AND (i_category#717 = Sports)) AND isnotnull(i_item_sk#705)) AND (((isnotnull(i_brand_id#712) AND isnotnull(i_class_id#714)) AND isnotnull(i_category_id#716)) AND isnotnull(i_manufact_id#718)))\n                        :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#705,i_item_id#706,i_rec_start_date#707,i_rec_end_date#708,i_item_desc#709,i_current_price#710,i_wholesale_cost#711,i_brand_id#712,i_brand#713,i_class_id#714,i_class#715,i_category_id#716,i_category#717,i_manufact_id#718,i_manufact#719,i_size#720,i_formulation#721,i_color#722,i_units#723,i_container#724,i_manager_id#725,i_product_name#726] parquet\n                        :     +- Project [cr_item_sk#756, cr_order_number#770L, cr_return_quantity#771, cr_return_amount#772]\n                        :        +- Filter (isnotnull(cr_order_number#770L) AND isnotnull(cr_item_sk#756))\n                        :           +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#755,cr_item_sk#756,cr_refunded_customer_sk#757,cr_refunded_cdemo_sk#758,cr_refunded_hdemo_sk#759,cr_refunded_addr_sk#760,cr_returning_customer_sk#761,cr_returning_cdemo_sk#762,cr_returning_hdemo_sk#763,cr_returning_addr_sk#764,cr_call_center_sk#765,cr_catalog_page_sk#766,cr_ship_mode_sk#767,cr_warehouse_sk#768,cr_reason_sk#769,cr_order_number#770L,cr_return_quantity#771,cr_return_amount#772,cr_return_tax#773,cr_return_amt_inc_tax#774,cr_fee#775,cr_return_ship_cost#776,cr_refunded_cash#777,cr_reversed_charge#778,... 3 more fields] parquet\n                        :- Project [d_year#833, i_brand_id#812, i_class_id#814, i_category_id#816, i_manufact_id#818, (ss_quantity#791 - coalesce(sr_return_quantity#864, 0)) AS sales_cnt#8, (ss_ext_sales_price#796 - coalesce(sr_return_amt#865, 0.00)) AS sales_amt#9]\n                        :  +- Join LeftOuter, ((ss_ticket_number#790L = sr_ticket_number#863L) AND (ss_item_sk#783 = sr_item_sk#856))\n                        :     :- Project [ss_item_sk#783, ss_ticket_number#790L, ss_quantity#791, ss_ext_sales_price#796, i_brand_id#812, i_class_id#814, i_category_id#816, i_manufact_id#818, d_year#833]\n                        :     :  +- Join Inner, (i_item_sk#805 = ss_item_sk#783)\n                        :     :     :- Project [ss_item_sk#783, ss_ticket_number#790L, ss_quantity#791, ss_ext_sales_price#796, d_year#833]\n                        :     :     :  +- Join Inner, (d_date_sk#827 = ss_sold_date_sk#804)\n                        :     :     :     :- Project [ss_item_sk#783, ss_ticket_number#790L, ss_quantity#791, ss_ext_sales_price#796, ss_sold_date_sk#804]\n                        :     :     :     :  +- Filter ((isnotnull(ss_item_sk#783) AND isnotnull(ss_sold_date_sk#804)) AND dynamicpruning#989 [ss_sold_date_sk#804])\n                        :     :     :     :     :  +- Project [d_date_sk#827, d_year#833]\n                        :     :     :     :     :     +- Filter ((isnotnull(d_year#833) AND (d_year#833 = 2001)) AND isnotnull(d_date_sk#827))\n                        :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#827,d_date_id#828,d_date#829,d_month_seq#830,d_week_seq#831,d_quarter_seq#832,d_year#833,d_dow#834,d_moy#835,d_dom#836,d_qoy#837,d_fy_year#838,d_fy_quarter_seq#839,d_fy_week_seq#840,d_day_name#841,d_quarter_name#842,d_holiday#843,d_weekend#844,d_following_holiday#845,d_first_dom#846,d_last_dom#847,d_same_day_ly#848,d_same_day_lq#849,d_current_day#850,... 4 more fields] parquet\n                        :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#782,ss_item_sk#783,ss_customer_sk#784,ss_cdemo_sk#785,ss_hdemo_sk#786,ss_addr_sk#787,ss_store_sk#788,ss_promo_sk#789,ss_ticket_number#790L,ss_quantity#791,ss_wholesale_cost#792,ss_list_price#793,ss_sales_price#794,ss_ext_discount_amt#795,ss_ext_sales_price#796,ss_ext_wholesale_cost#797,ss_ext_list_price#798,ss_ext_tax#799,ss_coupon_amt#800,ss_net_paid#801,ss_net_paid_inc_tax#802,ss_net_profit#803,ss_sold_date_sk#804] parquet\n                        :     :     :     +- Project [d_date_sk#827, d_year#833]\n                        :     :     :        +- Filter ((isnotnull(d_year#833) AND (d_year#833 = 2001)) AND isnotnull(d_date_sk#827))\n                        :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#827,d_date_id#828,d_date#829,d_month_seq#830,d_week_seq#831,d_quarter_seq#832,d_year#833,d_dow#834,d_moy#835,d_dom#836,d_qoy#837,d_fy_year#838,d_fy_quarter_seq#839,d_fy_week_seq#840,d_day_name#841,d_quarter_name#842,d_holiday#843,d_weekend#844,d_following_holiday#845,d_first_dom#846,d_last_dom#847,d_same_day_ly#848,d_same_day_lq#849,d_current_day#850,... 4 more fields] parquet\n                        :     :     +- Project [i_item_sk#805, i_brand_id#812, i_class_id#814, i_category_id#816, i_manufact_id#818]\n                        :     :        +- Filter (((isnotnull(i_category#817) AND (i_category#817 = Sports)) AND isnotnull(i_item_sk#805)) AND (((isnotnull(i_brand_id#812) AND isnotnull(i_class_id#814)) AND isnotnull(i_category_id#816)) AND isnotnull(i_manufact_id#818)))\n                        :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#805,i_item_id#806,i_rec_start_date#807,i_rec_end_date#808,i_item_desc#809,i_current_price#810,i_wholesale_cost#811,i_brand_id#812,i_brand#813,i_class_id#814,i_class#815,i_category_id#816,i_category#817,i_manufact_id#818,i_manufact#819,i_size#820,i_formulation#821,i_color#822,i_units#823,i_container#824,i_manager_id#825,i_product_name#826] parquet\n                        :     +- Project [sr_item_sk#856, sr_ticket_number#863L, sr_return_quantity#864, sr_return_amt#865]\n                        :        +- Filter (isnotnull(sr_ticket_number#863L) AND isnotnull(sr_item_sk#856))\n                        :           +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#855,sr_item_sk#856,sr_customer_sk#857,sr_cdemo_sk#858,sr_hdemo_sk#859,sr_addr_sk#860,sr_store_sk#861,sr_reason_sk#862,sr_ticket_number#863L,sr_return_quantity#864,sr_return_amt#865,sr_return_tax#866,sr_return_amt_inc_tax#867,sr_fee#868,sr_return_ship_cost#869,sr_refunded_cash#870,sr_reversed_charge#871,sr_store_credit#872,sr_net_loss#873,sr_returned_date_sk#874] parquet\n                        +- Project [d_year#937, i_brand_id#916, i_class_id#918, i_category_id#920, i_manufact_id#922, (ws_quantity#892 - coalesce(wr_return_quantity#972, 0)) AS sales_cnt#10, (ws_ext_sales_price#897 - coalesce(wr_return_amt#973, 0.00)) AS sales_amt#11]\n                           +- Join LeftOuter, ((ws_order_number#891L = wr_order_number#971L) AND (ws_item_sk#877 = wr_item_sk#960))\n                              :- Project [ws_item_sk#877, ws_order_number#891L, ws_quantity#892, ws_ext_sales_price#897, i_brand_id#916, i_class_id#918, i_category_id#920, i_manufact_id#922, d_year#937]\n                              :  +- Join Inner, (i_item_sk#909 = ws_item_sk#877)\n                              :     :- Project [ws_item_sk#877, ws_order_number#891L, ws_quantity#892, ws_ext_sales_price#897, d_year#937]\n                              :     :  +- Join Inner, (d_date_sk#931 = ws_sold_date_sk#908)\n                              :     :     :- Project [ws_item_sk#877, ws_order_number#891L, ws_quantity#892, ws_ext_sales_price#897, ws_sold_date_sk#908]\n                              :     :     :  +- Filter ((isnotnull(ws_item_sk#877) AND isnotnull(ws_sold_date_sk#908)) AND dynamicpruning#990 [ws_sold_date_sk#908])\n                              :     :     :     :  +- Project [d_date_sk#931, d_year#937]\n                              :     :     :     :     +- Filter ((isnotnull(d_year#937) AND (d_year#937 = 2001)) AND isnotnull(d_date_sk#931))\n                              :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#931,d_date_id#932,d_date#933,d_month_seq#934,d_week_seq#935,d_quarter_seq#936,d_year#937,d_dow#938,d_moy#939,d_dom#940,d_qoy#941,d_fy_year#942,d_fy_quarter_seq#943,d_fy_week_seq#944,d_day_name#945,d_quarter_name#946,d_holiday#947,d_weekend#948,d_following_holiday#949,d_first_dom#950,d_last_dom#951,d_same_day_ly#952,d_same_day_lq#953,d_current_day#954,... 4 more fields] parquet\n                              :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#875,ws_ship_date_sk#876,ws_item_sk#877,ws_bill_customer_sk#878,ws_bill_cdemo_sk#879,ws_bill_hdemo_sk#880,ws_bill_addr_sk#881,ws_ship_customer_sk#882,ws_ship_cdemo_sk#883,ws_ship_hdemo_sk#884,ws_ship_addr_sk#885,ws_web_page_sk#886,ws_web_site_sk#887,ws_ship_mode_sk#888,ws_warehouse_sk#889,ws_promo_sk#890,ws_order_number#891L,ws_quantity#892,ws_wholesale_cost#893,ws_list_price#894,ws_sales_price#895,ws_ext_discount_amt#896,ws_ext_sales_price#897,ws_ext_wholesale_cost#898,... 10 more fields] parquet\n                              :     :     +- Project [d_date_sk#931, d_year#937]\n                              :     :        +- Filter ((isnotnull(d_year#937) AND (d_year#937 = 2001)) AND isnotnull(d_date_sk#931))\n                              :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#931,d_date_id#932,d_date#933,d_month_seq#934,d_week_seq#935,d_quarter_seq#936,d_year#937,d_dow#938,d_moy#939,d_dom#940,d_qoy#941,d_fy_year#942,d_fy_quarter_seq#943,d_fy_week_seq#944,d_day_name#945,d_quarter_name#946,d_holiday#947,d_weekend#948,d_following_holiday#949,d_first_dom#950,d_last_dom#951,d_same_day_ly#952,d_same_day_lq#953,d_current_day#954,... 4 more fields] parquet\n                              :     +- Project [i_item_sk#909, i_brand_id#916, i_class_id#918, i_category_id#920, i_manufact_id#922]\n                              :        +- Filter (((isnotnull(i_category#921) AND (i_category#921 = Sports)) AND isnotnull(i_item_sk#909)) AND (((isnotnull(i_brand_id#916) AND isnotnull(i_class_id#918)) AND isnotnull(i_category_id#920)) AND isnotnull(i_manufact_id#922)))\n                              :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#909,i_item_id#910,i_rec_start_date#911,i_rec_end_date#912,i_item_desc#913,i_current_price#914,i_wholesale_cost#915,i_brand_id#916,i_brand#917,i_class_id#918,i_class#919,i_category_id#920,i_category#921,i_manufact_id#922,i_manufact#923,i_size#924,i_formulation#925,i_color#926,i_units#927,i_container#928,i_manager_id#929,i_product_name#930] parquet\n                              +- Project [wr_item_sk#960, wr_order_number#971L, wr_return_quantity#972, wr_return_amt#973]\n                                 +- Filter (isnotnull(wr_order_number#971L) AND isnotnull(wr_item_sk#960))\n                                    +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#959,wr_item_sk#960,wr_refunded_customer_sk#961,wr_refunded_cdemo_sk#962,wr_refunded_hdemo_sk#963,wr_refunded_addr_sk#964,wr_returning_customer_sk#965,wr_returning_cdemo_sk#966,wr_returning_hdemo_sk#967,wr_returning_addr_sk#968,wr_web_page_sk#969,wr_reason_sk#970,wr_order_number#971L,wr_return_quantity#972,wr_return_amt#973,wr_return_tax#974,wr_return_amt_inc_tax#975,wr_fee#976,wr_return_ship_cost#977,wr_refunded_cash#978,wr_reversed_charge#979,wr_account_credit#980,wr_net_loss#981,wr_returned_date_sk#982] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 187728551204,
      "inputRowCount" : 1083063926
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 83137081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 866696286793891840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "5" : {
            "sign" : 312717958,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34078720,
            "rowCount" : 10019,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(sales_cnt#1003L), BroadcastQueryStage 40 "
          },
          "6" : {
            "sign" : 1713162364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "1" : {
            "sign" : 1904247320,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 780026658114502656,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -523585099,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1002016927,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 780026658114502656,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 580435615,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          },
          "3" : {
            "sign" : 1228637644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 780026658114502656,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- LogicalQueryStage Filter isnotnull(sales_cnt#1003L), BroadcastQueryStage 40\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- LogicalQueryStage Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25466262992,
        "inputRowCount" : 10019
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 1079.0,
        "FinishedTasksDistributionInMs" : [ 1079.0, 1079.0, 1079.0, 1079.0, 1079.0 ]
      },
      "StartTimeInMs" : 1702227352209,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11479,
        "IOBytes" : {
          "Total" : 218686826,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 217634866,
            "SW" : 1051960
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1642936620245760,
            "rowCount" : 41073415506144,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "8" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 9192592762843380,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "19" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "23" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "4" : {
            "sign" : 972645484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 233787713082086434835319360,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          },
          "11" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 8356902511675800,
            "rowCount" : 208922562791895,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "9" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9192592762843380,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "22" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 114437040,
            "rowCount" : 1430463,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "13" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3121579578466944,
            "rowCount" : 41073415506144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "16" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6302027507945760,
            "rowCount" : 157550687698644,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "5" : {
            "sign" : 947277519,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 8356902511675800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "21" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 782682928620132,
            "rowCount" : 10298459587107,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "6" : {
            "sign" : 1704586369,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "1" : {
            "sign" : 19387195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 210408941773877791351787424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11973852265096944,
            "rowCount" : 157550687698644,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "14" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 228220160,
            "rowCount" : 2852752,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "0" : {
            "sign" : -1664785424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 411938383484280,
            "rowCount" : 10298459587107,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "2" : {
            "sign" : 28999302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 210408941773877791351787424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 437616320,
            "rowCount" : 5470204,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "7" : {
            "sign" : -1869987750,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[]) "
          },
          "3" : {
            "sign" : -270420281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 210408941773877791351787424,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Union",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25916393920,
        "inputRowCount" : 60152241
      },
      "PD" : {
        "8" : [ 253751, 253598, 257328, 262680, 256819, 259497, 257691, 254592, 256768, 258066, 255869, 253375, 257158, 252717, 257125, 254777, 258621, 257747, 255553, 253063, 257082, 260076, 252175, 256520, 254902, 258685, 258910, 258465, 260322, 252043, 257285, 254833, 260464, 252998, 254264, 247197, 251736, 254057, 253533, 254715, 254630, 256167, 254605, 259981, 256886, 256557, 259388, 258525, 255598, 261163, 257288, 259376, 251608, 251861, 262655, 259570, 255031, 256668, 260099, 257925, 253939, 252639, 255644, 262520, 255370, 257340, 255760, 257903, 257820, 251821, 258806, 255363, 261989, 255263, 254436, 250629, 253237, 256924, 253535, 256955, 254768, 256380, 253051, 258922, 266689, 251379, 254467, 251901, 259416, 259778, 253176, 257501, 255290, 257574, 253892, 253493, 255074, 254444, 256663, 253653, 251861, 254001, 250949, 253096, 250142, 255977, 258844, 259931, 253696, 260641, 252443, 261329, 252552, 253696, 262105, 262426, 254233, 252389, 256569, 257893, 259307, 256402, 256781, 258522, 254768, 257212, 257865, 265117, 262784, 257687, 248889, 250601, 261981, 253893, 254084, 257872, 260066, 258095, 259419, 257579, 254481, 256924, 249755, 250608, 256016, 260804, 257727, 259203, 254701, 254258, 249542, 249636, 251963, 250862, 251346, 252599, 258583, 254753, 251286, 256565, 253337, 253573, 248829, 256387, 248608, 249567, 254552, 256206, 258207, 254376, 259080, 255089, 255513, 255136, 260948, 256550, 252065, 253716, 254931, 254995, 257865, 259662, 254496, 249628, 252998, 260988, 257037, 252338, 255375, 254630, 256258, 259328, 257127, 253174, 255600, 250561, 256444, 257105, 252506, 251133 ],
        "6" : [ 486967, 496061, 492848, 494365, 499195, 489244, 489610, 500480, 486129, 498399, 508627, 490688, 489578, 498594, 490342, 492266, 491745, 489885, 492130, 485658, 492912, 487675, 484405, 495154, 494083, 486704, 502126, 492769, 497831, 494251, 498326, 482877, 493865, 503861, 488264, 494051, 496225, 491941, 494433, 485687, 488896, 490202, 487893, 484837, 494615, 485137, 493839, 493133, 495047, 495221, 493212, 489296, 490902, 489021, 492994, 504125, 477797, 496685, 490948, 500787, 493244, 486672, 502294, 497007, 492594, 486561, 494490, 489635, 493155, 508070, 489296, 484955, 500986, 480064, 498280, 488564, 497021, 487825, 492758, 492755, 498934, 503049, 495179, 493612, 486133, 495136, 491038, 498756, 487072, 497464, 495578, 495229, 490888, 488871, 488439, 489035, 488121, 484498, 491791, 486390, 487700, 496350, 497535, 495525, 488419, 489256, 486968, 491934, 490524, 495643, 489610, 494740, 494226, 484655, 487925, 492111, 497385, 496232, 489492, 492416, 490180, 495786, 492341, 490801, 487367, 496903, 489817, 489064, 488564, 484530, 486411, 498078, 501733, 501330, 497717, 484173, 490092, 487700, 485337, 491070, 493280, 492141, 491295, 493769, 495147, 486979, 484794, 486967, 489576, 491177, 498424, 491666, 487493, 489799, 488075, 482995, 490927, 493430, 495652, 498602, 493430, 500095, 496425, 500134, 485840, 498389, 489713, 491777, 493087, 489499, 494972, 490431, 481474, 492712, 487950, 491334, 496882, 500873, 484751, 497678, 502513, 489842, 500252, 490888, 493087, 497628, 502890, 488075, 500073, 499149, 498274, 494647, 490674, 500027, 495643, 493286, 483859, 491151, 492987, 481010 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ],
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "7" : [ 963297, 967708, 975591, 964534, 960266, 969415, 976031, 968076, 960045, 971208, 955825, 959133, 965090, 964530, 960532, 953002, 971427, 978899, 968692, 965412, 959577, 957557, 963076, 968986, 974629, 958205, 971033, 971147, 970531, 967796, 961779, 966766, 970664, 955546, 968986, 973868, 956853, 971103, 956578, 970338, 959705, 970987, 960266, 969690, 955826, 959912, 968090, 947620, 964222, 959839, 979058, 957902, 966661, 970048, 963327, 971648, 945207, 966766, 969827, 965193, 972411, 953357, 962782, 955222, 984002, 964705, 967812, 956147, 977811, 974782, 969207, 958205, 972719, 963401, 971473, 960705, 961779, 960238, 961296, 958693, 973544, 960019, 975470, 960586, 974094, 960665, 957177, 962763, 965927, 962043, 966928, 976943, 959372, 966663, 968222, 970823, 950105, 949002, 966704, 973914, 957442, 967090, 969031, 968660, 974825, 961029, 963675, 949544, 974135, 973544, 968664, 968767, 967368, 964680, 966617, 967090, 958369, 961649, 967265, 976724, 960443, 971030, 955785, 971397, 961029, 965412, 973868, 966383, 959532, 969825, 977925, 972165, 967899, 963896, 962866, 967249, 959235, 961296, 966766, 964546, 972961, 974458, 954223, 979883, 975546, 981221, 962782, 969676, 971308, 966442, 971250, 970987, 971910, 966547, 973264, 957177, 968664, 970340, 979486, 968797, 960856, 962707, 969781, 980692, 964659, 952031, 954089, 967737, 976309, 965239, 971135, 972886, 969779, 965296, 975869, 965547, 960459, 966223, 970809, 975569, 969590, 976279, 958884, 961838, 972560, 969900, 980913, 965957, 966356, 961045, 966116, 965571, 966601, 964972, 976838, 970777, 962383, 966987, 964972, 978518 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227335634,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 28054,
        "IOBytes" : {
          "Total" : 3702372501,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 437218853
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "12" : {
            "sign" : -2042474324,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2 "
          },
          "8" : {
            "sign" : -1984226082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 28675549130714000,
            "rowCount" : 716888728267850,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "19" : {
            "sign" : -351879075,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32 "
          },
          "23" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "4" : {
            "sign" : 2077590741,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15076342236376975541709280315979200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : -1466167147,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 439404080,
            "rowCount" : 5492551,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31 "
          },
          "11" : {
            "sign" : -1430223338,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227460160,
            "rowCount" : 2843252,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30 "
          },
          "9" : {
            "sign" : -688266131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1637465447885760,
            "rowCount" : 40936636197144,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] "
          },
          "33" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "22" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "26" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 157432386112743816,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "13" : {
            "sign" : -1432418482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6327772691986440,
            "rowCount" : 158194317299661,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] "
          },
          "24" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : 10862727436723142,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "35" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "16" : {
            "sign" : 1245242112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7 "
          },
          "5" : {
            "sign" : 1166577236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 31543104043785400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : 1385666295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3111184350982944,
            "rowCount" : 40936636197144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
          },
          "21" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "32" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "6" : {
            "sign" : -1054921494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 31543104043785400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "36" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "1" : {
            "sign" : -1972225952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 13568708012739277987538352284381280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1896115454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] "
          },
          "25" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 82859150585654640,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "14" : {
            "sign" : -605279682,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12022768114774236,
            "rowCount" : 158194317299661,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
          },
          "31" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "0" : {
            "sign" : 2079417561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -940804366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12 "
          },
          "27" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "2" : {
            "sign" : -1392128849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 13568708012739277987538352284381280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 426492419,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
          },
          "30" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "7" : {
            "sign" : -238181911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 28675549130714000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "29" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "3" : {
            "sign" : 613482068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13568708012739277987538352284381280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          },
          "28" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Union",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n            :        +- Union false, false\n            :           :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n            :           :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n            :           :     :- LogicalQueryStage Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30\n            :           :     +- LogicalQueryStage Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2\n            :           :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n            :           :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n            :           :     :- LogicalQueryStage Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31\n            :           :     +- LogicalQueryStage Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7\n            :           +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n            :              +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :                 :- LogicalQueryStage Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32\n            :                 +- LogicalQueryStage Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34597011568,
        "inputRowCount" : 684099631
      },
      "PD" : {
        "4" : [ 964649, 974351, 962752, 964719, 976355, 971620, 968559, 958149, 959826, 947931, 954841, 975486, 966663, 955529, 977134, 960648, 969309, 972117, 957709, 973795, 964106, 983400, 962647, 971635, 957984, 973838, 968222, 967780, 965736, 955577, 963561, 962046, 973474, 966326, 968489, 982415, 965075, 958018, 956635, 966501, 978194, 964651, 968279, 956589, 961961, 959942, 966766, 961870, 968767, 978032, 973838, 967062, 965136, 976355, 954841, 955030, 956635, 970664, 959338, 972120, 963516, 981722, 972560, 967796, 959178, 958807, 974458, 966869, 974459, 965309, 964297, 962162, 970987, 983338, 979867, 963882, 968767, 963167, 975427, 964546, 967092, 954472, 965104, 956192, 964460, 974351, 967249, 959281, 949649, 974561, 964603, 964192, 963267, 974073, 963106, 956815, 959560, 948838, 958180, 973588, 984123, 976179, 975160, 955661, 968767, 957036, 975545, 969619, 966633, 971956, 958159, 963707, 970237, 966766, 968740, 966253, 961620, 956589, 969253, 970485, 958855, 966461, 977118, 958666, 972341, 969310, 962941, 981339, 968074, 966766, 957016, 962866, 965412, 972719, 968929, 965355, 976792, 970014, 967386, 964061, 986388, 968227, 962103, 962563, 967853, 972268, 959179, 971308, 960238, 959723, 963162, 963167, 964681, 957970, 970663, 961250, 968603, 965784, 963634, 963901, 970663, 964106, 967135, 974073, 958149, 967898, 954223, 974828, 962866, 963516, 957797, 994988, 966034, 967456, 965957, 942987, 969166, 964209, 975001, 965957, 983621, 985180, 968061, 954766, 965353, 972678, 972416, 964603, 955354, 968843, 956368, 949838, 969309, 959048, 959809, 960322, 981358, 976252, 974782, 960135 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ],
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "3" : [ 480992, 485312, 490856, 481531, 490274, 478950, 484455, 485044, 484851, 488996, 487072, 480371, 484530, 479746, 478197, 487325, 480189, 497664, 491195, 482095, 481260, 487868, 484166, 485947, 486229, 487675, 480646, 492084, 488735, 492098, 490913, 494364, 487561, 487061, 482845, 473945, 484987, 495860, 481424, 496096, 483666, 486879, 490274, 484669, 490731, 495322, 486818, 490242, 485658, 480803, 492848, 480885, 484405, 490288, 491013, 485819, 485326, 489760, 485533, 477865, 489278, 484680, 491855, 485194, 489617, 493362, 487800, 480078, 494865, 489178, 480107, 482859, 493212, 487032, 483184, 474470, 492986, 482388, 495543, 484712, 491070, 490356, 492647, 488225, 482095, 486886, 495386, 487996, 487782, 478197, 483916, 480246, 488546, 484604, 495379, 495304, 494497, 478686, 479425, 495422, 487004, 487111, 486979, 496721, 481999, 488168, 489277, 475755, 485112, 491313, 500018, 484248, 488385, 481067, 485829, 498463, 483659, 494336, 486879, 484348, 494083, 480371, 491165, 482970, 472110, 486115, 492705, 484462, 492287, 488578, 484211, 491052, 484569, 487085, 483473, 481135, 484915, 486297, 494840, 485112, 498719, 479243, 494722, 483334, 482834, 489192, 479914, 484237, 498852, 482277, 478033, 488714, 486836, 488664, 489635, 487129, 485783, 483766, 486804, 493187, 477533, 484587, 483766, 501166, 495192, 482955, 483901, 481399, 482099, 489703, 483309, 489160, 487418, 495518, 484862, 490217, 489760, 489478, 499134, 491415, 485001, 482902, 488714, 484405, 477904, 489021, 490637, 481913, 482940, 492177, 489578, 489760, 483373, 488421, 498338, 494140, 481228, 490112, 487860, 485126 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 903.0,
        "FinishedTasksDistributionInMs" : [ 417.0, 417.0, 486.0, 486.0, 486.0 ]
      },
      "StartTimeInMs" : 1702227332942,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30746,
        "IOBytes" : {
          "Total" : 5188708058,
          "Details" : {
            "IR" : 1110972398,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 812582012
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 580435615,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          },
          "4" : {
            "sign" : -1488322876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 44845689542925568,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "5" : {
            "sign" : 828192905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1763344,
            "rowCount" : 40076,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "6" : {
            "sign" : -2053908183,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2564864,
            "rowCount" : 40076,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          },
          "1" : {
            "sign" : -175234635,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 40361120588633011,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -971104696,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1194201182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 40361120588633011,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1713162364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "3" : {
            "sign" : -296798359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 40361120588633011,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- LogicalQueryStage Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25434749136,
        "inputRowCount" : 40076
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227351917,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11771,
        "IOBytes" : {
          "Total" : 219748839,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 218696879,
            "SW" : 1051960
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 248766370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "4" : {
            "sign" : -966811750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 17466129783082421584,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "9" : {
            "sign" : -1344332853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "5" : {
            "sign" : 947277519,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 686772697,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : -476800086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[]) "
          },
          "6" : {
            "sign" : 1704586369,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 686772697,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "1" : {
            "sign" : -1461941509,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 15719516804774179425,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1962871582,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1115423692,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 15719516804774179425,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1869987750,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 624338816,
            "rowCount" : 9755294,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[]) "
          },
          "3" : {
            "sign" : -540240977,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15719516804774179425,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- LogicalQueryStage Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23744506336,
        "inputRowCount" : 9755294
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 7,
        "FinishedTasksTotalTimeInMs" : 16936.0,
        "FinishedTasksDistributionInMs" : [ 1334.0, 2471.0, 2597.0, 2652.0, 2713.0 ]
      },
      "StartTimeInMs" : 1702227342064,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 21624,
        "IOBytes" : {
          "Total" : 2070415257,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1851718378,
            "SW" : 218696879
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 83137081,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31919732480,
            "rowCount" : 398996656,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "5" : {
            "sign" : 312717958,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 34078720,
            "rowCount" : 10019,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(sales_cnt#1003L), BroadcastQueryStage 40 "
          },
          "6" : {
            "sign" : 1713162364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1752256,
            "rowCount" : 39824,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "1" : {
            "sign" : 1904247320,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 28727759232,
            "rowCount" : 398996656,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -523585099,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1002016927,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 28727759232,
            "rowCount" : 398996656,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 580435615,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2548736,
            "rowCount" : 39824,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          },
          "3" : {
            "sign" : 1228637644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 28727759232,
            "rowCount" : 398996656,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- LogicalQueryStage Filter isnotnull(sales_cnt#1003L), BroadcastQueryStage 40\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- LogicalQueryStage Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36627456,
        "inputRowCount" : 49843
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227363264,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 424,
        "IOBytes" : {
          "Total" : 1051960,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1051960,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "12" : {
            "sign" : -2042474324,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2 "
          },
          "8" : {
            "sign" : -1984226082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 8379375792708200,
            "rowCount" : 209484394817705,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "19" : {
            "sign" : -351879075,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 115048000,
            "rowCount" : 1438100,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32 "
          },
          "23" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "4" : {
            "sign" : 2077590741,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4405507165781550426260624389156960,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : -1466167147,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 439404080,
            "rowCount" : 5492551,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31 "
          },
          "11" : {
            "sign" : -1430223338,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227460160,
            "rowCount" : 2843252,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30 "
          },
          "9" : {
            "sign" : -688266131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1637465447885760,
            "rowCount" : 40936636197144,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] "
          },
          "33" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "22" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "26" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 157432386112743816,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "13" : {
            "sign" : -1432418482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6327772691986440,
            "rowCount" : 158194317299661,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] "
          },
          "24" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : 10862727436723142,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "35" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "16" : {
            "sign" : 1245242112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7 "
          },
          "5" : {
            "sign" : 1166577236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 9217313371979020,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : 1385666295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3111184350982944,
            "rowCount" : 40936636197144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
          },
          "21" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "32" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "6" : {
            "sign" : -1054921494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9217313371979020,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "36" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "1" : {
            "sign" : -1972225952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3964956449203395383634561950241264,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1896115454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 414137652836000,
            "rowCount" : 10353441320900,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] "
          },
          "25" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 82859150585654640,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "14" : {
            "sign" : -605279682,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 12022768114774236,
            "rowCount" : 158194317299661,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
          },
          "31" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "0" : {
            "sign" : 2079417561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -940804366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12 "
          },
          "27" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "2" : {
            "sign" : -1392128849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3964956449203395383634561950241264,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 426492419,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 786861540388400,
            "rowCount" : 10353441320900,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
          },
          "30" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "7" : {
            "sign" : -238181911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 8379375792708200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "29" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "3" : {
            "sign" : 613482068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3964956449203395383634561950241264,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          },
          "28" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Union",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n            :        +- Union false, false\n            :           :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n            :           :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n            :           :     :- LogicalQueryStage Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30\n            :           :     +- LogicalQueryStage Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2\n            :           :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n            :           :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n            :           :     :- LogicalQueryStage Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31\n            :           :     +- LogicalQueryStage Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7\n            :           +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n            :              +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :                 :- LogicalQueryStage Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32\n            :                 +- LogicalQueryStage Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 30972380508,
        "inputRowCount" : 613620826
      },
      "PD" : {
        "4" : [ 964649, 974351, 962752, 964719, 976355, 971620, 968559, 958149, 959826, 947931, 954841, 975486, 966663, 955529, 977134, 960648, 969309, 972117, 957709, 973795, 964106, 983400, 962647, 971635, 957984, 973838, 968222, 967780, 965736, 955577, 963561, 962046, 973474, 966326, 968489, 982415, 965075, 958018, 956635, 966501, 978194, 964651, 968279, 956589, 961961, 959942, 966766, 961870, 968767, 978032, 973838, 967062, 965136, 976355, 954841, 955030, 956635, 970664, 959338, 972120, 963516, 981722, 972560, 967796, 959178, 958807, 974458, 966869, 974459, 965309, 964297, 962162, 970987, 983338, 979867, 963882, 968767, 963167, 975427, 964546, 967092, 954472, 965104, 956192, 964460, 974351, 967249, 959281, 949649, 974561, 964603, 964192, 963267, 974073, 963106, 956815, 959560, 948838, 958180, 973588, 984123, 976179, 975160, 955661, 968767, 957036, 975545, 969619, 966633, 971956, 958159, 963707, 970237, 966766, 968740, 966253, 961620, 956589, 969253, 970485, 958855, 966461, 977118, 958666, 972341, 969310, 962941, 981339, 968074, 966766, 957016, 962866, 965412, 972719, 968929, 965355, 976792, 970014, 967386, 964061, 986388, 968227, 962103, 962563, 967853, 972268, 959179, 971308, 960238, 959723, 963162, 963167, 964681, 957970, 970663, 961250, 968603, 965784, 963634, 963901, 970663, 964106, 967135, 974073, 958149, 967898, 954223, 974828, 962866, 963516, 957797, 994988, 966034, 967456, 965957, 942987, 969166, 964209, 975001, 965957, 983621, 985180, 968061, 954766, 965353, 972678, 972416, 964603, 955354, 968843, 956368, 949838, 969309, 959048, 959809, 960322, 981358, 976252, 974782, 960135 ],
        "5" : [ 251324, 251861, 257144, 255408, 251502, 258611, 251899, 251809, 254462, 253433, 259793, 260185, 258250, 255501, 260948, 255780, 250724, 255584, 245754, 250355, 255290, 256671, 262170, 261427, 251090, 256435, 255724, 257844, 256032, 254233, 256302, 254959, 257597, 257468, 260484, 252458, 255186, 255493, 260767, 258016, 254933, 256479, 258314, 251627, 260222, 251653, 255696, 262332, 252946, 256756, 255865, 258335, 257212, 256231, 251977, 255749, 261485, 254173, 253067, 258066, 260385, 259478, 257758, 256331, 256475, 246954, 255431, 251846, 259243, 257950, 255912, 261889, 250383, 258326, 253840, 255403, 256387, 258754, 259766, 251762, 252944, 254715, 254093, 256334, 255328, 250608, 255463, 253761, 258803, 255805, 257351, 258435, 255004, 253711, 253809, 255644, 251566, 259927, 253736, 255862, 255900, 254270, 256115, 250601, 254919, 254065, 255330, 256422, 256148, 251424, 256007, 254968, 248048, 253675, 249321, 256420, 257885, 252657, 255415, 256806, 262170, 251417, 250496, 258016, 258179, 260825, 255191, 255885, 252513, 250842, 253768, 256638, 258850, 251756, 251801, 256841, 257706, 248789, 253252, 256380, 250192, 259135, 250483, 261920, 258591, 259865, 258655, 258987, 258465, 253493, 256266, 252646, 252190, 252951, 255812, 257446, 253743, 254079, 261012, 246976, 252483, 261078, 254462, 254314, 256507, 256552, 252062, 253297, 256579, 256494, 250297, 258420, 255252, 253892, 255089, 256311, 254850, 260491, 249567, 258833, 250287, 257956, 251511, 251939, 250049, 260374, 259570, 254183, 254015, 255004, 253402, 255587, 252095, 258127, 257053, 252684, 253847, 259453, 255400, 257392 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ],
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "3" : [ 480992, 485312, 490856, 481531, 490274, 478950, 484455, 485044, 484851, 488996, 487072, 480371, 484530, 479746, 478197, 487325, 480189, 497664, 491195, 482095, 481260, 487868, 484166, 485947, 486229, 487675, 480646, 492084, 488735, 492098, 490913, 494364, 487561, 487061, 482845, 473945, 484987, 495860, 481424, 496096, 483666, 486879, 490274, 484669, 490731, 495322, 486818, 490242, 485658, 480803, 492848, 480885, 484405, 490288, 491013, 485819, 485326, 489760, 485533, 477865, 489278, 484680, 491855, 485194, 489617, 493362, 487800, 480078, 494865, 489178, 480107, 482859, 493212, 487032, 483184, 474470, 492986, 482388, 495543, 484712, 491070, 490356, 492647, 488225, 482095, 486886, 495386, 487996, 487782, 478197, 483916, 480246, 488546, 484604, 495379, 495304, 494497, 478686, 479425, 495422, 487004, 487111, 486979, 496721, 481999, 488168, 489277, 475755, 485112, 491313, 500018, 484248, 488385, 481067, 485829, 498463, 483659, 494336, 486879, 484348, 494083, 480371, 491165, 482970, 472110, 486115, 492705, 484462, 492287, 488578, 484211, 491052, 484569, 487085, 483473, 481135, 484915, 486297, 494840, 485112, 498719, 479243, 494722, 483334, 482834, 489192, 479914, 484237, 498852, 482277, 478033, 488714, 486836, 488664, 489635, 487129, 485783, 483766, 486804, 493187, 477533, 484587, 483766, 501166, 495192, 482955, 483901, 481399, 482099, 489703, 483309, 489160, 487418, 495518, 484862, 490217, 489760, 489478, 499134, 491415, 485001, 482902, 488714, 484405, 477904, 489021, 490637, 481913, 482940, 492177, 489578, 489760, 483373, 488421, 498338, 494140, 481228, 490112, 487860, 485126 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227333355,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30333,
        "IOBytes" : {
          "Total" : 4996966545,
          "Details" : {
            "IR" : 967900498,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 763912399
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -1344332853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 685345619,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "4" : {
            "sign" : -961368314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 17429836072415904368,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "9" : {
            "sign" : -476800086,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 623041472,
            "rowCount" : 9735023,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[]) "
          },
          "5" : {
            "sign" : 828192905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "6" : {
            "sign" : -2053908183,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          },
          "1" : {
            "sign" : 563003803,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 15686852465174313931,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 2027201794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1889330092,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 15686852465174313931,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 248766370,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 685345619,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "3" : {
            "sign" : -1395828849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 15686852465174313931,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- LogicalQueryStage Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 26055225744,
        "inputRowCount" : 9735023
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 989.0,
        "FinishedTasksDistributionInMs" : [ 989.0, 989.0, 989.0, 989.0, 989.0 ]
      },
      "StartTimeInMs" : 1702227350909,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12779,
        "IOBytes" : {
          "Total" : 439332826,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 437218853,
            "SW" : 2113973
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1642936620245760,
            "rowCount" : 41073415506144,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "8" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 388622171853868480,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "19" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "23" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "4" : {
            "sign" : 972645484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9883510686772435039412546560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          },
          "11" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 353292883503516800,
            "rowCount" : 8832322087587920,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "9" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 388622171853868480,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "22" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "13" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3121579578466944,
            "rowCount" : 41073415506144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "16" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "5" : {
            "sign" : 947277519,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 353292883503516800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "21" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "6" : {
            "sign" : 1704586369,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "1" : {
            "sign" : 19387195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 8895159618095191535471291904,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "14" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 228220160,
            "rowCount" : 2852752,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "0" : {
            "sign" : -1664785424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "2" : {
            "sign" : 28999302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 8895159618095191535471291904,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "7" : {
            "sign" : -1869987750,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[]) "
          },
          "3" : {
            "sign" : -270420281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8895159618095191535471291904,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Union",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 44041431512,
        "inputRowCount" : 412426400
      },
      "PD" : {
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "6" : [ 486967, 496061, 492848, 494365, 499195, 489244, 489610, 500480, 486129, 498399, 508627, 490688, 489578, 498594, 490342, 492266, 491745, 489885, 492130, 485658, 492912, 487675, 484405, 495154, 494083, 486704, 502126, 492769, 497831, 494251, 498326, 482877, 493865, 503861, 488264, 494051, 496225, 491941, 494433, 485687, 488896, 490202, 487893, 484837, 494615, 485137, 493839, 493133, 495047, 495221, 493212, 489296, 490902, 489021, 492994, 504125, 477797, 496685, 490948, 500787, 493244, 486672, 502294, 497007, 492594, 486561, 494490, 489635, 493155, 508070, 489296, 484955, 500986, 480064, 498280, 488564, 497021, 487825, 492758, 492755, 498934, 503049, 495179, 493612, 486133, 495136, 491038, 498756, 487072, 497464, 495578, 495229, 490888, 488871, 488439, 489035, 488121, 484498, 491791, 486390, 487700, 496350, 497535, 495525, 488419, 489256, 486968, 491934, 490524, 495643, 489610, 494740, 494226, 484655, 487925, 492111, 497385, 496232, 489492, 492416, 490180, 495786, 492341, 490801, 487367, 496903, 489817, 489064, 488564, 484530, 486411, 498078, 501733, 501330, 497717, 484173, 490092, 487700, 485337, 491070, 493280, 492141, 491295, 493769, 495147, 486979, 484794, 486967, 489576, 491177, 498424, 491666, 487493, 489799, 488075, 482995, 490927, 493430, 495652, 498602, 493430, 500095, 496425, 500134, 485840, 498389, 489713, 491777, 493087, 489499, 494972, 490431, 481474, 492712, 487950, 491334, 496882, 500873, 484751, 497678, 502513, 489842, 500252, 490888, 493087, 497628, 502890, 488075, 500073, 499149, 498274, 494647, 490674, 500027, 495643, 493286, 483859, 491151, 492987, 481010 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227334071,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 29617,
        "IOBytes" : {
          "Total" : 4608545257,
          "Details" : {
            "IR" : 673274212,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 670117397
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1612299874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2591410464,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201] "
          },
          "98" : {
            "sign" : -1212684380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702)) "
          },
          "34" : {
            "sign" : 1287777684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027)) "
          },
          "67" : {
            "sign" : 836927213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1498, d_year#1504] "
          },
          "93" : {
            "sign" : -200205067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1156057001440,
            "rowCount" : 26274022760,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1702 = ws_sold_date_sk#1679) "
          },
          "12" : {
            "sign" : 744585173,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 59641840520697680,
            "rowCount" : 1065032866441030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#48 = cs_item_sk#28) "
          },
          "66" : {
            "sign" : -1859537272,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#1442, cs_ship_date_sk#1443, cs_bill_customer_sk#1444, cs_bill_cdemo_sk#1445, cs_bill_hdemo_sk#1446, cs_bill_addr_sk#1447, cs_ship_customer_sk#1448, cs_ship_cdemo_sk#1449, cs_ship_hdemo_sk#1450, cs_ship_addr_sk#1451, cs_call_center_sk#1452, cs_catalog_page_sk#1453, cs_ship_mode_sk#1454, cs_warehouse_sk#1455, cs_item_sk#1456, cs_promo_sk#1457, cs_order_number#1458L, cs_quantity#1459, cs_wholesale_cost#1460, cs_list_price#1461, cs_sales_price#1462, cs_ext_discount_amt#1463, cs_ext_sales_price#1464, cs_ext_wholesale_cost#1465, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "89" : {
            "sign" : 1433544476,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40667352812292160,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "51" : {
            "sign" : -1223443295,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1077, d_year#1083], BroadcastQueryStage 9 "
          },
          "84" : {
            "sign" : -1100211948,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1598, d_date_id#1599, d_date#1600, d_month_seq#1601, d_week_seq#1602, d_quarter_seq#1603, d_year#1604, d_dow#1605, d_moy#1606, d_dom#1607, d_qoy#1608, d_fy_year#1609, d_fy_quarter_seq#1610, d_fy_week_seq#1611, d_day_name#1612, d_quarter_name#1613, d_holiday#1614, d_weekend#1615, d_following_holiday#1616, d_first_dom#1617, d_last_dom#1618, d_same_day_ly#1619, d_same_day_lq#1620, d_current_day#1621, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : -739765152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 2968847611403562411151600,
            "rowCount" : 74221190285089060278790,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "73" : {
            "sign" : -1771273801,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2355481444592983572478800,
            "rowCount" : 58887036114824589311970,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "78" : {
            "sign" : -2123871420,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4417228369180,
            "rowCount" : 100391553845,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1598 = ss_sold_date_sk#1575) "
          },
          "19" : {
            "sign" : 2008150228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70)) "
          },
          "100" : {
            "sign" : -1938969278,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1702, d_year#1708], BroadcastQueryStage 25 "
          },
          "23" : {
            "sign" : -2042474324,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2 "
          },
          "62" : {
            "sign" : 1807904900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1882607443380,
            "rowCount" : 52294651205,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504] "
          },
          "4" : {
            "sign" : 1970772476,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10665007929081331885180186123393128583286200897600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "88" : {
            "sign" : 75681192,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21403869901206400,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "77" : {
            "sign" : -596817907,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3614095938420,
            "rowCount" : 100391553845,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604] "
          },
          "40" : {
            "sign" : 968494775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40667352812292160,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
          },
          "15" : {
            "sign" : 436801988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5157828612,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47] "
          },
          "11" : {
            "sign" : 1843169046,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 55381709054933560,
            "rowCount" : 1065032866441030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76] "
          },
          "90" : {
            "sign" : 1261106019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27825030871568320,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708] "
          },
          "9" : {
            "sign" : -1154607073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 613366145406708937466400,
            "rowCount" : 15334153635167723436660,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] "
          },
          "44" : {
            "sign" : -147934779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1156057001440,
            "rowCount" : 26274022760,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1077 = ws_sold_date_sk#201) "
          },
          "33" : {
            "sign" : 881221562,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1027, d_year#1033] "
          },
          "22" : {
            "sign" : 1072810794,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], BroadcastQueryStage 1 "
          },
          "56" : {
            "sign" : -228978261,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2968847611403562411151600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "55" : {
            "sign" : 848823698,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3265732372543918652266760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "26" : {
            "sign" : -690969759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106317868051578040,
            "rowCount" : 2044574385607270,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033] "
          },
          "50" : {
            "sign" : 506322002,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1077, d_date_id#1078, d_date#1079, d_month_seq#1080, d_week_seq#1081, d_quarter_seq#1082, d_year#1083, d_dow#1084, d_moy#1085, d_dom#1086, d_qoy#1087, d_fy_year#1088, d_fy_quarter_seq#1089, d_fy_week_seq#1090, d_day_name#1091, d_quarter_name#1092, d_holiday#1093, d_weekend#1094, d_following_holiday#1095, d_first_dom#1096, d_last_dom#1097, d_same_day_ly#1098, d_same_day_lq#1099, d_current_day#1100, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "37" : {
            "sign" : -1711641894,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastQueryStage 6 "
          },
          "68" : {
            "sign" : 698658366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498)) "
          },
          "61" : {
            "sign" : -1507598304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 59641840520697680,
            "rowCount" : 1065032866441030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1476 = cs_item_sk#1456) "
          },
          "13" : {
            "sign" : -567556185,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1882607443380,
            "rowCount" : 52294651205,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76] "
          },
          "46" : {
            "sign" : 1200813552,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#1758 [ws_sold_date_sk#201]) "
          },
          "99" : {
            "sign" : 456802346,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1702, d_date_id#1703, d_date#1704, d_month_seq#1705, d_week_seq#1706, d_quarter_seq#1707, d_year#1708, d_dow#1709, d_moy#1710, d_dom#1711, d_qoy#1712, d_fy_year#1713, d_fy_quarter_seq#1714, d_fy_week_seq#1715, d_day_name#1716, d_quarter_name#1717, d_holiday#1718, d_weekend#1719, d_following_holiday#1720, d_first_dom#1721, d_last_dom#1722, d_same_day_ly#1723, d_same_day_lq#1724, d_current_day#1725, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : -1157160116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2355481444592983572478800,
            "rowCount" : 58887036114824589311970,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] "
          },
          "94" : {
            "sign" : 2105951504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2591410464,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679] "
          },
          "83" : {
            "sign" : 668616607,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598)) "
          },
          "35" : {
            "sign" : 147642013,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1027, d_date_id#1028, d_date#1029, d_month_seq#1030, d_week_seq#1031, d_quarter_seq#1032, d_year#1033, d_dow#1034, d_moy#1035, d_dom#1036, d_qoy#1037, d_fy_year#1038, d_fy_quarter_seq#1039, d_fy_week_seq#1040, d_day_name#1041, d_quarter_name#1042, d_holiday#1043, d_weekend#1044, d_following_holiday#1045, d_first_dom#1046, d_last_dom#1047, d_same_day_ly#1048, d_same_day_lq#1049, d_current_day#1050, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -1981491477,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#1756 [cs_sold_date_sk#47]) "
          },
          "79" : {
            "sign" : -1643639460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9901632708,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575] "
          },
          "5" : {
            "sign" : 566021838,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3265732372543918652266760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "72" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          },
          "10" : {
            "sign" : 1405941067,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1165395676272746981186160,
            "rowCount" : 15334153635167723436660,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
          },
          "59" : {
            "sign" : 683143901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1165395676272746981186160,
            "rowCount" : 15334153635167723436660,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "87" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "48" : {
            "sign" : -1384821538,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1077, d_year#1083] "
          },
          "21" : {
            "sign" : 1201206335,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#70, d_year#76], BroadcastQueryStage 0 "
          },
          "76" : {
            "sign" : 1052754179,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 114496165594007120,
            "rowCount" : 2044574385607270,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1576 = ss_item_sk#1554) "
          },
          "54" : {
            "sign" : 313800627,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3265732372543918652266760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "43" : {
            "sign" : -378390763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 945864819360,
            "rowCount" : 26274022760,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083] "
          },
          "65" : {
            "sign" : -466231910,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#1456) AND isnotnull(cs_sold_date_sk#1475)) AND dynamicpruning#1759 [cs_sold_date_sk#1475]) "
          },
          "71" : {
            "sign" : 1359136058,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], BroadcastQueryStage 15 "
          },
          "57" : {
            "sign" : 1687894872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 2968847611403562411151600,
            "rowCount" : 74221190285089060278790,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "32" : {
            "sign" : -1918584823,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#125, ss_item_sk#126, ss_customer_sk#127, ss_cdemo_sk#128, ss_hdemo_sk#129, ss_addr_sk#130, ss_store_sk#131, ss_promo_sk#132, ss_ticket_number#133L, ss_quantity#134, ss_wholesale_cost#135, ss_list_price#136, ss_sales_price#137, ss_ext_discount_amt#138, ss_ext_sales_price#139, ss_ext_wholesale_cost#140, ss_ext_list_price#141, ss_ext_tax#142, ss_coupon_amt#143, ss_net_paid#144, ss_net_paid_inc_tax#145, ss_net_profit#146, ss_sold_date_sk#147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "80" : {
            "sign" : -111951003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1554) AND isnotnull(ss_sold_date_sk#1575)) AND dynamicpruning#1760 [ss_sold_date_sk#1575]) "
          },
          "82" : {
            "sign" : -83010936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1598, d_year#1604] "
          },
          "49" : {
            "sign" : 1520570906,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077)) "
          },
          "6" : {
            "sign" : 1980146900,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3265732372543918652266760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "36" : {
            "sign" : -454511642,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1027, d_year#1033], BroadcastQueryStage 4 "
          },
          "1" : {
            "sign" : 1224306251,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 9598507136173198696662167511053815724957580807840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 2079374536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21403869901206400,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] "
          },
          "17" : {
            "sign" : -1998356572,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#14, cs_ship_date_sk#15, cs_bill_customer_sk#16, cs_bill_cdemo_sk#17, cs_bill_hdemo_sk#18, cs_bill_addr_sk#19, cs_ship_customer_sk#20, cs_ship_cdemo_sk#21, cs_ship_hdemo_sk#22, cs_ship_addr_sk#23, cs_call_center_sk#24, cs_catalog_page_sk#25, cs_ship_mode_sk#26, cs_warehouse_sk#27, cs_item_sk#28, cs_promo_sk#29, cs_order_number#30L, cs_quantity#31, cs_wholesale_cost#32, cs_list_price#33, cs_sales_price#34, cs_ext_discount_amt#35, cs_ext_sales_price#36, cs_ext_wholesale_cost#37, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 1764418522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4475414744726668787709720,
            "rowCount" : 58887036114824589311970,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
          },
          "60" : {
            "sign" : 2062829729,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 55381709054933560,
            "rowCount" : 1065032866441030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504] "
          },
          "14" : {
            "sign" : -7615855,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2300964653020,
            "rowCount" : 52294651205,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#70 = cs_sold_date_sk#47) "
          },
          "47" : {
            "sign" : 1115355852,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#168, ws_ship_date_sk#169, ws_item_sk#170, ws_bill_customer_sk#171, ws_bill_cdemo_sk#172, ws_bill_hdemo_sk#173, ws_bill_addr_sk#174, ws_ship_customer_sk#175, ws_ship_cdemo_sk#176, ws_ship_hdemo_sk#177, ws_ship_addr_sk#178, ws_web_page_sk#179, ws_web_site_sk#180, ws_ship_mode_sk#181, ws_warehouse_sk#182, ws_promo_sk#183, ws_order_number#184L, ws_quantity#185, ws_wholesale_cost#186, ws_list_price#187, ws_sales_price#188, ws_ext_discount_amt#189, ws_ext_sales_price#190, ws_ext_wholesale_cost#191, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "102" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 230380448,
            "rowCount" : 7199389,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "31" : {
            "sign" : 658956217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#1757 [ss_sold_date_sk#147]) "
          },
          "96" : {
            "sign" : -1343118222,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1646, ws_ship_date_sk#1647, ws_item_sk#1648, ws_bill_customer_sk#1649, ws_bill_cdemo_sk#1650, ws_bill_hdemo_sk#1651, ws_bill_addr_sk#1652, ws_ship_customer_sk#1653, ws_ship_cdemo_sk#1654, ws_ship_hdemo_sk#1655, ws_ship_addr_sk#1656, ws_web_page_sk#1657, ws_web_site_sk#1658, ws_ship_mode_sk#1659, ws_warehouse_sk#1660, ws_promo_sk#1661, ws_order_number#1662L, ws_quantity#1663, ws_wholesale_cost#1664, ws_list_price#1665, ws_sales_price#1666, ws_ext_discount_amt#1667, ws_ext_sales_price#1668, ws_ext_wholesale_cost#1669, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "69" : {
            "sign" : -132681226,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1498, d_date_id#1499, d_date#1500, d_month_seq#1501, d_week_seq#1502, d_quarter_seq#1503, d_year#1504, d_dow#1505, d_moy#1506, d_dom#1507, d_qoy#1508, d_fy_year#1509, d_fy_quarter_seq#1510, d_fy_week_seq#1511, d_day_name#1512, d_quarter_name#1513, d_holiday#1514, d_weekend#1515, d_following_holiday#1516, d_first_dom#1517, d_last_dom#1518, d_same_day_ly#1519, d_same_day_lq#1520, d_current_day#1521, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "95" : {
            "sign" : -456730162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#1648) AND isnotnull(ws_sold_date_sk#1679)) AND dynamicpruning#1761 [ws_sold_date_sk#1679]) "
          },
          "58" : {
            "sign" : -1510403046,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 613366145406708937466400,
            "rowCount" : 15334153635167723436660,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "64" : {
            "sign" : -1158456971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5157828612,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475] "
          },
          "53" : {
            "sign" : -940804366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 230380448,
            "rowCount" : 7199389,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12 "
          },
          "42" : {
            "sign" : -310498869,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 29965417861688960,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1055 = ws_item_sk#170) "
          },
          "75" : {
            "sign" : 994877416,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106317868051578040,
            "rowCount" : 2044574385607270,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604] "
          },
          "0" : {
            "sign" : 172084736,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : 892080478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 114496165594007120,
            "rowCount" : 2044574385607270,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1005 = ss_item_sk#126) "
          },
          "70" : {
            "sign" : 984557091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1498, d_year#1504], BroadcastQueryStage 13 "
          },
          "2" : {
            "sign" : 1747145430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 9598507136173198696662167511053815724957580807840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "86" : {
            "sign" : -197818270,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589], BroadcastQueryStage 21 "
          },
          "38" : {
            "sign" : 1245242112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7 "
          },
          "81" : {
            "sign" : -207052733,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1553, ss_item_sk#1554, ss_customer_sk#1555, ss_cdemo_sk#1556, ss_hdemo_sk#1557, ss_addr_sk#1558, ss_store_sk#1559, ss_promo_sk#1560, ss_ticket_number#1561L, ss_quantity#1562, ss_wholesale_cost#1563, ss_list_price#1564, ss_sales_price#1565, ss_ext_discount_amt#1566, ss_ext_sales_price#1567, ss_ext_wholesale_cost#1568, ss_ext_list_price#1569, ss_ext_tax#1570, ss_coupon_amt#1571, ss_net_paid#1572, ss_net_paid_inc_tax#1573, ss_net_profit#1574, ss_sold_date_sk#1575], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "92" : {
            "sign" : -595159205,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 945864819360,
            "rowCount" : 26274022760,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708] "
          },
          "18" : {
            "sign" : -382545733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70, d_year#76] "
          },
          "101" : {
            "sign" : -362909622,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693], BroadcastQueryStage 27 "
          },
          "30" : {
            "sign" : -1743850508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9901632708,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147] "
          },
          "7" : {
            "sign" : -2070778077,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2968847611403562411151600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "97" : {
            "sign" : 756529103,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1702, d_year#1708] "
          },
          "29" : {
            "sign" : -1254446514,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4417228369180,
            "rowCount" : 100391553845,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1027 = ss_sold_date_sk#147) "
          },
          "41" : {
            "sign" : -595940343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27825030871568320,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083] "
          },
          "63" : {
            "sign" : -1062971171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2300964653020,
            "rowCount" : 52294651205,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1498 = cs_sold_date_sk#1475) "
          },
          "3" : {
            "sign" : 569101247,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9598507136173198696662167511053815724957580807840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          },
          "74" : {
            "sign" : 874602665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4475414744726668787709720,
            "rowCount" : 58887036114824589311970,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "91" : {
            "sign" : 1892424359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 29965417861688960,
            "rowCount" : 535096747530160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1680 = ws_item_sk#1648) "
          },
          "52" : {
            "sign" : 167246101,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastQueryStage 11 "
          },
          "85" : {
            "sign" : 1801732221,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#1598, d_year#1604], BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -1344191629,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3614095938420,
            "rowCount" : 100391553845,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033] "
          }
        },
        "links" : [ {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalRelation",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalRelation",
          "toId" : 34,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Filter",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalRelation",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalRelation",
          "toId" : 49,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Filter",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 44,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Join",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 42,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Join",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 39,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalRelation",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "LogicalRelation",
          "toId" : 68,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "Filter",
          "toId" : 67,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 67,
          "fromName" : "Project",
          "toId" : 65,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 65,
          "fromName" : "Filter",
          "toId" : 64,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "LogicalQueryStage",
          "toId" : 63,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Join",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 61,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 61,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Join",
          "toId" : 60,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 59,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Join",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 81,
          "fromName" : "LogicalRelation",
          "toId" : 80,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 84,
          "fromName" : "LogicalRelation",
          "toId" : 83,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 83,
          "fromName" : "Filter",
          "toId" : 82,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 82,
          "fromName" : "Project",
          "toId" : 80,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 80,
          "fromName" : "Filter",
          "toId" : 79,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 79,
          "fromName" : "Project",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 85,
          "fromName" : "LogicalQueryStage",
          "toId" : 78,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 78,
          "fromName" : "Join",
          "toId" : 77,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 77,
          "fromName" : "Project",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 86,
          "fromName" : "LogicalQueryStage",
          "toId" : 76,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 76,
          "fromName" : "Join",
          "toId" : 75,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 75,
          "fromName" : "Project",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 87,
          "fromName" : "LogicalQueryStage",
          "toId" : 74,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 74,
          "fromName" : "Join",
          "toId" : 73,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 73,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 96,
          "fromName" : "LogicalRelation",
          "toId" : 95,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 99,
          "fromName" : "LogicalRelation",
          "toId" : 98,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 98,
          "fromName" : "Filter",
          "toId" : 97,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 97,
          "fromName" : "Project",
          "toId" : 95,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 95,
          "fromName" : "Filter",
          "toId" : 94,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 94,
          "fromName" : "Project",
          "toId" : 93,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 100,
          "fromName" : "LogicalQueryStage",
          "toId" : 93,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 93,
          "fromName" : "Join",
          "toId" : 92,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 92,
          "fromName" : "Project",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 101,
          "fromName" : "LogicalQueryStage",
          "toId" : 91,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 91,
          "fromName" : "Join",
          "toId" : 90,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 90,
          "fromName" : "Project",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 102,
          "fromName" : "LogicalQueryStage",
          "toId" : 89,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 89,
          "fromName" : "Join",
          "toId" : 88,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 88,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Union",
          "toId" : 56,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Aggregate",
          "toId" : 55,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Aggregate",
          "toId" : 54,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n            :        +- Union false, false\n            :           :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n            :           :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n            :           :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n            :           :     :  +- Join Inner, (i_item_sk#48 = cs_item_sk#28)\n            :           :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n            :           :     :     :  +- Join Inner, (d_date_sk#70 = cs_sold_date_sk#47)\n            :           :     :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47]\n            :           :     :     :     :  +- Filter ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#1756 [cs_sold_date_sk#47])\n            :           :     :     :     :     :  +- Project [d_date_sk#70, d_year#76]\n            :           :     :     :     :     :     +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n            :           :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n            :           :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#14,cs_ship_date_sk#15,cs_bill_customer_sk#16,cs_bill_cdemo_sk#17,cs_bill_hdemo_sk#18,cs_bill_addr_sk#19,cs_ship_customer_sk#20,cs_ship_cdemo_sk#21,cs_ship_hdemo_sk#22,cs_ship_addr_sk#23,cs_call_center_sk#24,cs_catalog_page_sk#25,cs_ship_mode_sk#26,cs_warehouse_sk#27,cs_item_sk#28,cs_promo_sk#29,cs_order_number#30L,cs_quantity#31,cs_wholesale_cost#32,cs_list_price#33,cs_sales_price#34,cs_ext_discount_amt#35,cs_ext_sales_price#36,cs_ext_wholesale_cost#37,... 10 more fields] parquet\n            :           :     :     :     +- LogicalQueryStage Project [d_date_sk#70, d_year#76], BroadcastQueryStage 0\n            :           :     :     +- LogicalQueryStage Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], BroadcastQueryStage 1\n            :           :     +- LogicalQueryStage Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2\n            :           :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n            :           :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n            :           :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n            :           :     :  +- Join Inner, (i_item_sk#1005 = ss_item_sk#126)\n            :           :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n            :           :     :     :  +- Join Inner, (d_date_sk#1027 = ss_sold_date_sk#147)\n            :           :     :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147]\n            :           :     :     :     :  +- Filter ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#1757 [ss_sold_date_sk#147])\n            :           :     :     :     :     :  +- Project [d_date_sk#1027, d_year#1033]\n            :           :     :     :     :     :     +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n            :           :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n            :           :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#125,ss_item_sk#126,ss_customer_sk#127,ss_cdemo_sk#128,ss_hdemo_sk#129,ss_addr_sk#130,ss_store_sk#131,ss_promo_sk#132,ss_ticket_number#133L,ss_quantity#134,ss_wholesale_cost#135,ss_list_price#136,ss_sales_price#137,ss_ext_discount_amt#138,ss_ext_sales_price#139,ss_ext_wholesale_cost#140,ss_ext_list_price#141,ss_ext_tax#142,ss_coupon_amt#143,ss_net_paid#144,ss_net_paid_inc_tax#145,ss_net_profit#146,ss_sold_date_sk#147] parquet\n            :           :     :     :     +- LogicalQueryStage Project [d_date_sk#1027, d_year#1033], BroadcastQueryStage 4\n            :           :     :     +- LogicalQueryStage Project [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastQueryStage 6\n            :           :     +- LogicalQueryStage Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7\n            :           +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n            :              +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :                 :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n            :                 :  +- Join Inner, (i_item_sk#1055 = ws_item_sk#170)\n            :                 :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n            :                 :     :  +- Join Inner, (d_date_sk#1077 = ws_sold_date_sk#201)\n            :                 :     :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201]\n            :                 :     :     :  +- Filter ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#1758 [ws_sold_date_sk#201])\n            :                 :     :     :     :  +- Project [d_date_sk#1077, d_year#1083]\n            :                 :     :     :     :     +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n            :                 :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n            :                 :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#168,ws_ship_date_sk#169,ws_item_sk#170,ws_bill_customer_sk#171,ws_bill_cdemo_sk#172,ws_bill_hdemo_sk#173,ws_bill_addr_sk#174,ws_ship_customer_sk#175,ws_ship_cdemo_sk#176,ws_ship_hdemo_sk#177,ws_ship_addr_sk#178,ws_web_page_sk#179,ws_web_site_sk#180,ws_ship_mode_sk#181,ws_warehouse_sk#182,ws_promo_sk#183,ws_order_number#184L,ws_quantity#185,ws_wholesale_cost#186,ws_list_price#187,ws_sales_price#188,ws_ext_discount_amt#189,ws_ext_sales_price#190,ws_ext_wholesale_cost#191,... 10 more fields] parquet\n            :                 :     :     +- LogicalQueryStage Project [d_date_sk#1077, d_year#1083], BroadcastQueryStage 9\n            :                 :     +- LogicalQueryStage Project [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastQueryStage 11\n            :                 +- LogicalQueryStage Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n                        :     :  +- Join Inner, (i_item_sk#1476 = cs_item_sk#1456)\n                        :     :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n                        :     :     :  +- Join Inner, (d_date_sk#1498 = cs_sold_date_sk#1475)\n                        :     :     :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475]\n                        :     :     :     :  +- Filter ((isnotnull(cs_item_sk#1456) AND isnotnull(cs_sold_date_sk#1475)) AND dynamicpruning#1759 [cs_sold_date_sk#1475])\n                        :     :     :     :     :  +- Project [d_date_sk#1498, d_year#1504]\n                        :     :     :     :     :     +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n                        :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n                        :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#1442,cs_ship_date_sk#1443,cs_bill_customer_sk#1444,cs_bill_cdemo_sk#1445,cs_bill_hdemo_sk#1446,cs_bill_addr_sk#1447,cs_ship_customer_sk#1448,cs_ship_cdemo_sk#1449,cs_ship_hdemo_sk#1450,cs_ship_addr_sk#1451,cs_call_center_sk#1452,cs_catalog_page_sk#1453,cs_ship_mode_sk#1454,cs_warehouse_sk#1455,cs_item_sk#1456,cs_promo_sk#1457,cs_order_number#1458L,cs_quantity#1459,cs_wholesale_cost#1460,cs_list_price#1461,cs_sales_price#1462,cs_ext_discount_amt#1463,cs_ext_sales_price#1464,cs_ext_wholesale_cost#1465,... 10 more fields] parquet\n                        :     :     :     +- LogicalQueryStage Project [d_date_sk#1498, d_year#1504], BroadcastQueryStage 13\n                        :     :     +- LogicalQueryStage Project [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], BroadcastQueryStage 15\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n                        :     :  +- Join Inner, (i_item_sk#1576 = ss_item_sk#1554)\n                        :     :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n                        :     :     :  +- Join Inner, (d_date_sk#1598 = ss_sold_date_sk#1575)\n                        :     :     :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575]\n                        :     :     :     :  +- Filter ((isnotnull(ss_item_sk#1554) AND isnotnull(ss_sold_date_sk#1575)) AND dynamicpruning#1760 [ss_sold_date_sk#1575])\n                        :     :     :     :     :  +- Project [d_date_sk#1598, d_year#1604]\n                        :     :     :     :     :     +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n                        :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n                        :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1553,ss_item_sk#1554,ss_customer_sk#1555,ss_cdemo_sk#1556,ss_hdemo_sk#1557,ss_addr_sk#1558,ss_store_sk#1559,ss_promo_sk#1560,ss_ticket_number#1561L,ss_quantity#1562,ss_wholesale_cost#1563,ss_list_price#1564,ss_sales_price#1565,ss_ext_discount_amt#1566,ss_ext_sales_price#1567,ss_ext_wholesale_cost#1568,ss_ext_list_price#1569,ss_ext_tax#1570,ss_coupon_amt#1571,ss_net_paid#1572,ss_net_paid_inc_tax#1573,ss_net_profit#1574,ss_sold_date_sk#1575] parquet\n                        :     :     :     +- LogicalQueryStage Project [d_date_sk#1598, d_year#1604], BroadcastQueryStage 19\n                        :     :     +- LogicalQueryStage Project [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589], BroadcastQueryStage 21\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n                              :  +- Join Inner, (i_item_sk#1680 = ws_item_sk#1648)\n                              :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n                              :     :  +- Join Inner, (d_date_sk#1702 = ws_sold_date_sk#1679)\n                              :     :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679]\n                              :     :     :  +- Filter ((isnotnull(ws_item_sk#1648) AND isnotnull(ws_sold_date_sk#1679)) AND dynamicpruning#1761 [ws_sold_date_sk#1679])\n                              :     :     :     :  +- Project [d_date_sk#1702, d_year#1708]\n                              :     :     :     :     +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n                              :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n                              :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1646,ws_ship_date_sk#1647,ws_item_sk#1648,ws_bill_customer_sk#1649,ws_bill_cdemo_sk#1650,ws_bill_hdemo_sk#1651,ws_bill_addr_sk#1652,ws_ship_customer_sk#1653,ws_ship_cdemo_sk#1654,ws_ship_hdemo_sk#1655,ws_ship_addr_sk#1656,ws_web_page_sk#1657,ws_web_site_sk#1658,ws_ship_mode_sk#1659,ws_warehouse_sk#1660,ws_promo_sk#1661,ws_order_number#1662L,ws_quantity#1663,ws_wholesale_cost#1664,ws_list_price#1665,ws_sales_price#1666,ws_ext_discount_amt#1667,ws_ext_sales_price#1668,ws_ext_wholesale_cost#1669,... 10 more fields] parquet\n                              :     :     +- LogicalQueryStage Project [d_date_sk#1702, d_year#1708], BroadcastQueryStage 25\n                              :     +- LogicalQueryStage Project [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693], BroadcastQueryStage 27\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 177102448848,
        "inputRowCount" : 1081526018
      },
      "PD" : {
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227328968,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 34720,
        "IOBytes" : {
          "Total" : 6572897252,
          "Details" : {
            "IR" : 2061532778,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 1246210826
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "12" : {
            "sign" : -2042474324,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2 "
          },
          "8" : {
            "sign" : -1984226082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : 10862727436723142,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "19" : {
            "sign" : -351879075,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32 "
          },
          "23" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "4" : {
            "sign" : 2077590741,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 228445768497745031696192988169789504,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : -1466167147,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31 "
          },
          "11" : {
            "sign" : -1430223338,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30 "
          },
          "9" : {
            "sign" : -688266131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 82859150585654640,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] "
          },
          "33" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "22" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "26" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 157432386112743816,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "13" : {
            "sign" : -1432418482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] "
          },
          "24" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : 10862727436723142,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "35" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "16" : {
            "sign" : 1245242112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7 "
          },
          "5" : {
            "sign" : 1166577236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : 1385666295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 157432386112743816,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
          },
          "21" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "32" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "6" : {
            "sign" : -1054921494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "36" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "1" : {
            "sign" : -1972225952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 205601191647970528526573689352810553,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1896115454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] "
          },
          "25" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 82859150585654640,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "14" : {
            "sign" : -605279682,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
          },
          "31" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "0" : {
            "sign" : 2079417561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -940804366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12 "
          },
          "27" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "2" : {
            "sign" : -1392128849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 205601191647970528526573689352810553,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 426492419,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
          },
          "30" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "7" : {
            "sign" : -238181911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "29" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "3" : {
            "sign" : 613482068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 205601191647970528526573689352810553,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          },
          "28" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Union",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n            :        +- Union false, false\n            :           :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n            :           :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n            :           :     :- LogicalQueryStage Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30\n            :           :     +- LogicalQueryStage Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2\n            :           :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n            :           :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n            :           :     :- LogicalQueryStage Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31\n            :           :     +- LogicalQueryStage Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7\n            :           +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n            :              +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :                 :- LogicalQueryStage Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32\n            :                 +- LogicalQueryStage Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 56349030776,
        "inputRowCount" : 1106896202
      },
      "PD" : {
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227331116,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 32572,
        "IOBytes" : {
          "Total" : 6293732978,
          "Details" : {
            "IR" : 1939037640,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 1089541690
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1642936620245760,
            "rowCount" : 41073415506144,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "8" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 31520802630936652,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "19" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "23" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "4" : {
            "sign" : 972645484,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 801642860911323341622737344,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          },
          "11" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 28655275119033320,
            "rowCount" : 716381877975833,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "9" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 31520802630936652,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "22" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "13" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3121579578466944,
            "rowCount" : 41073415506144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "16" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6302027507945760,
            "rowCount" : 157550687698644,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "5" : {
            "sign" : 947277519,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 28655275119033320,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "21" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "6" : {
            "sign" : 1704586369,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "1" : {
            "sign" : 19387195,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 721478574820191007460463609,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11973852265096944,
            "rowCount" : 157550687698644,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "14" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 228220160,
            "rowCount" : 2852752,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "0" : {
            "sign" : -1664785424,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "2" : {
            "sign" : 28999302,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 721478574820191007460463609,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 437616320,
            "rowCount" : 5470204,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "7" : {
            "sign" : -1869987750,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[]) "
          },
          "3" : {
            "sign" : -270420281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 721478574820191007460463609,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Union",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 29541635940,
        "inputRowCount" : 130638683
      },
      "PD" : {
        "6" : [ 486967, 496061, 492848, 494365, 499195, 489244, 489610, 500480, 486129, 498399, 508627, 490688, 489578, 498594, 490342, 492266, 491745, 489885, 492130, 485658, 492912, 487675, 484405, 495154, 494083, 486704, 502126, 492769, 497831, 494251, 498326, 482877, 493865, 503861, 488264, 494051, 496225, 491941, 494433, 485687, 488896, 490202, 487893, 484837, 494615, 485137, 493839, 493133, 495047, 495221, 493212, 489296, 490902, 489021, 492994, 504125, 477797, 496685, 490948, 500787, 493244, 486672, 502294, 497007, 492594, 486561, 494490, 489635, 493155, 508070, 489296, 484955, 500986, 480064, 498280, 488564, 497021, 487825, 492758, 492755, 498934, 503049, 495179, 493612, 486133, 495136, 491038, 498756, 487072, 497464, 495578, 495229, 490888, 488871, 488439, 489035, 488121, 484498, 491791, 486390, 487700, 496350, 497535, 495525, 488419, 489256, 486968, 491934, 490524, 495643, 489610, 494740, 494226, 484655, 487925, 492111, 497385, 496232, 489492, 492416, 490180, 495786, 492341, 490801, 487367, 496903, 489817, 489064, 488564, 484530, 486411, 498078, 501733, 501330, 497717, 484173, 490092, 487700, 485337, 491070, 493280, 492141, 491295, 493769, 495147, 486979, 484794, 486967, 489576, 491177, 498424, 491666, 487493, 489799, 488075, 482995, 490927, 493430, 495652, 498602, 493430, 500095, 496425, 500134, 485840, 498389, 489713, 491777, 493087, 489499, 494972, 490431, 481474, 492712, 487950, 491334, 496882, 500873, 484751, 497678, 502513, 489842, 500252, 490888, 493087, 497628, 502890, 488075, 500073, 499149, 498274, 494647, 490674, 500027, 495643, 493286, 483859, 491151, 492987, 481010 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ],
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "7" : [ 963297, 967708, 975591, 964534, 960266, 969415, 976031, 968076, 960045, 971208, 955825, 959133, 965090, 964530, 960532, 953002, 971427, 978899, 968692, 965412, 959577, 957557, 963076, 968986, 974629, 958205, 971033, 971147, 970531, 967796, 961779, 966766, 970664, 955546, 968986, 973868, 956853, 971103, 956578, 970338, 959705, 970987, 960266, 969690, 955826, 959912, 968090, 947620, 964222, 959839, 979058, 957902, 966661, 970048, 963327, 971648, 945207, 966766, 969827, 965193, 972411, 953357, 962782, 955222, 984002, 964705, 967812, 956147, 977811, 974782, 969207, 958205, 972719, 963401, 971473, 960705, 961779, 960238, 961296, 958693, 973544, 960019, 975470, 960586, 974094, 960665, 957177, 962763, 965927, 962043, 966928, 976943, 959372, 966663, 968222, 970823, 950105, 949002, 966704, 973914, 957442, 967090, 969031, 968660, 974825, 961029, 963675, 949544, 974135, 973544, 968664, 968767, 967368, 964680, 966617, 967090, 958369, 961649, 967265, 976724, 960443, 971030, 955785, 971397, 961029, 965412, 973868, 966383, 959532, 969825, 977925, 972165, 967899, 963896, 962866, 967249, 959235, 961296, 966766, 964546, 972961, 974458, 954223, 979883, 975546, 981221, 962782, 969676, 971308, 966442, 971250, 970987, 971910, 966547, 973264, 957177, 968664, 970340, 979486, 968797, 960856, 962707, 969781, 980692, 964659, 952031, 954089, 967737, 976309, 965239, 971135, 972886, 969779, 965296, 975869, 965547, 960459, 966223, 970809, 975569, 969590, 976279, 958884, 961838, 972560, 969900, 980913, 965957, 966356, 961045, 966116, 965571, 966601, 964972, 976838, 970777, 962383, 966987, 964972, 978518 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 1245.0,
        "FinishedTasksDistributionInMs" : [ 398.0, 398.0, 423.0, 424.0, 424.0 ]
      },
      "StartTimeInMs" : 1702227335098,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 28590,
        "IOBytes" : {
          "Total" : 3893511705,
          "Details" : {
            "IR" : 142382024,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 485976033
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 540680811,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "12" : {
            "sign" : -2042474324,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2 "
          },
          "8" : {
            "sign" : -1984226082,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 353287412331156800,
            "rowCount" : 8832185308278920,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "19" : {
            "sign" : -351879075,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32 "
          },
          "23" : {
            "sign" : -893054676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "4" : {
            "sign" : 2077590741,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 185742979561763206897447602028215040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "15" : {
            "sign" : -1466167147,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31 "
          },
          "11" : {
            "sign" : -1430223338,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227460160,
            "rowCount" : 2843252,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30 "
          },
          "9" : {
            "sign" : -688266131,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1637465447885760,
            "rowCount" : 40936636197144,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] "
          },
          "33" : {
            "sign" : 73767921,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "22" : {
            "sign" : 1682824093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          },
          "26" : {
            "sign" : 2044796703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 157432386112743816,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          },
          "13" : {
            "sign" : -1432418482,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] "
          },
          "24" : {
            "sign" : 2127120599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 434509097468925680,
            "rowCount" : 10862727436723142,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "35" : {
            "sign" : 699710868,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35 "
          },
          "16" : {
            "sign" : 1245242112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7 "
          },
          "5" : {
            "sign" : 1166577236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 388616153564272480,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "10" : {
            "sign" : 1385666295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3111184350982944,
            "rowCount" : 40936636197144,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
          },
          "21" : {
            "sign" : 1160741556,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 477960007215818248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "32" : {
            "sign" : -1196345792,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23 "
          },
          "6" : {
            "sign" : -1054921494,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 388616153564272480,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          },
          "36" : {
            "sign" : 1184798788,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29 "
          },
          "1" : {
            "sign" : -1972225952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 167168681605586886207702841825393536,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1896115454,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20710310990841800,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] "
          },
          "25" : {
            "sign" : 704765180,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 82859150585654640,
            "rowCount" : 2071478764641366,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "14" : {
            "sign" : -605279682,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
          },
          "31" : {
            "sign" : 1645032156,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34 "
          },
          "0" : {
            "sign" : 2079417561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -940804366,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12 "
          },
          "27" : {
            "sign" : -1539767527,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33 "
          },
          "2" : {
            "sign" : -1392128849,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 167168681605586886207702841825393536,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 426492419,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 39349590882599420,
            "rowCount" : 517757774771045,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
          },
          "30" : {
            "sign" : -594406007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 628785308195615556,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "7" : {
            "sign" : -238181911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 353287412331156800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "29" : {
            "sign" : 229929323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 330939635892429240,
            "rowCount" : 8273490897310731,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "3" : {
            "sign" : 613482068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 167168681605586886207702841825393536,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          },
          "28" : {
            "sign" : 390160687,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17 "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 18,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Join",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Union",
          "toId" : 7,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Aggregate",
          "toId" : 6,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Aggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 26,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Join",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 30,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Join",
          "toId" : 29,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Union",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n            :     +- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n            :        +- Union false, false\n            :           :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n            :           :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n            :           :     :- LogicalQueryStage Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76], ShuffleQueryStage 30\n            :           :     +- LogicalQueryStage Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115], ShuffleQueryStage 2\n            :           :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n            :           :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n            :           :     :- LogicalQueryStage Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033], ShuffleQueryStage 31\n            :           :     +- LogicalQueryStage Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158], ShuffleQueryStage 7\n            :           +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n            :              +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :                 :- LogicalQueryStage Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083], ShuffleQueryStage 32\n            :                 +- LogicalQueryStage Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216], ShuffleQueryStage 12\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n                  +- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n                     +- Union false, false\n                        :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                        :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n                        :     :- LogicalQueryStage Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504], ShuffleQueryStage 33\n                        :     +- LogicalQueryStage Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], ShuffleQueryStage 17\n                        :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                        :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n                        :     :- LogicalQueryStage Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604], ShuffleQueryStage 34\n                        :     +- LogicalQueryStage Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], ShuffleQueryStage 23\n                        +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                           +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n                              :- LogicalQueryStage Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708], ShuffleQueryStage 35\n                              +- LogicalQueryStage Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], ShuffleQueryStage 29\n"
      },
      "IM" : {
        "inputSizeInBytes" : 49095019380,
        "inputRowCount" : 965865001
      },
      "PD" : {
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "3" : [ 480992, 485312, 490856, 481531, 490274, 478950, 484455, 485044, 484851, 488996, 487072, 480371, 484530, 479746, 478197, 487325, 480189, 497664, 491195, 482095, 481260, 487868, 484166, 485947, 486229, 487675, 480646, 492084, 488735, 492098, 490913, 494364, 487561, 487061, 482845, 473945, 484987, 495860, 481424, 496096, 483666, 486879, 490274, 484669, 490731, 495322, 486818, 490242, 485658, 480803, 492848, 480885, 484405, 490288, 491013, 485819, 485326, 489760, 485533, 477865, 489278, 484680, 491855, 485194, 489617, 493362, 487800, 480078, 494865, 489178, 480107, 482859, 493212, 487032, 483184, 474470, 492986, 482388, 495543, 484712, 491070, 490356, 492647, 488225, 482095, 486886, 495386, 487996, 487782, 478197, 483916, 480246, 488546, 484604, 495379, 495304, 494497, 478686, 479425, 495422, 487004, 487111, 486979, 496721, 481999, 488168, 489277, 475755, 485112, 491313, 500018, 484248, 488385, 481067, 485829, 498463, 483659, 494336, 486879, 484348, 494083, 480371, 491165, 482970, 472110, 486115, 492705, 484462, 492287, 488578, 484211, 491052, 484569, 487085, 483473, 481135, 484915, 486297, 494840, 485112, 498719, 479243, 494722, 483334, 482834, 489192, 479914, 484237, 498852, 482277, 478033, 488714, 486836, 488664, 489635, 487129, 485783, 483766, 486804, 493187, 477533, 484587, 483766, 501166, 495192, 482955, 483901, 481399, 482099, 489703, 483309, 489160, 487418, 495518, 484862, 490217, 489760, 489478, 499134, 491415, 485001, 482902, 488714, 484405, 477904, 489021, 490637, 481913, 482940, 492177, 489578, 489760, 483373, 488421, 498338, 494140, 481228, 490112, 487860, 485126 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227331912,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 31776,
        "IOBytes" : {
          "Total" : 5906315079,
          "Details" : {
            "IR" : 1644456037,
            "IW" : 0,
            "SR" : 3265153648,
            "SW" : 996705394
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1198642823,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13899164200,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 13899164200,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] "
          },
          "5" : {
            "sign" : -1714548207,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 26408411980,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 26408411980,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149)) "
          },
          "6" : {
            "sign" : -1176702006,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3466025200,
                "rowCount" : 86650630
              },
              "compileTime" : {
                "sizeInBytes" : 3466025200,
                "rowCount" : 86650630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] "
          },
          "1" : {
            "sign" : 846422545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : 578004188
              },
              "compileTime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : 578004188
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "0" : {
            "sign" : 2066998744,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "2" : {
            "sign" : 111296151,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5754978120,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 5754978120,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] "
          },
          "7" : {
            "sign" : 702741267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6585447880,
                "rowCount" : 86650630
              },
              "compileTime" : {
                "sizeInBytes" : 6585447880,
                "rowCount" : 86650630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203)) "
          },
          "3" : {
            "sign" : -1222497487,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10934458428,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 10934458428,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99)) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n+- Union false, false\n   :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n   :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n   :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n   :     :  +- Join Inner, (i_item_sk#48 = cs_item_sk#28)\n   :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n   :     :     :  +- Join Inner, (d_date_sk#70 = cs_sold_date_sk#47)\n   :     :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47]\n   :     :     :     :  +- Filter ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#1756 [cs_sold_date_sk#47])\n   :     :     :     :     :  +- Project [d_date_sk#70, d_year#76]\n   :     :     :     :     :     +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n   :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#14,cs_ship_date_sk#15,cs_bill_customer_sk#16,cs_bill_cdemo_sk#17,cs_bill_hdemo_sk#18,cs_bill_addr_sk#19,cs_ship_customer_sk#20,cs_ship_cdemo_sk#21,cs_ship_hdemo_sk#22,cs_ship_addr_sk#23,cs_call_center_sk#24,cs_catalog_page_sk#25,cs_ship_mode_sk#26,cs_warehouse_sk#27,cs_item_sk#28,cs_promo_sk#29,cs_order_number#30L,cs_quantity#31,cs_wholesale_cost#32,cs_list_price#33,cs_sales_price#34,cs_ext_discount_amt#35,cs_ext_sales_price#36,cs_ext_wholesale_cost#37,... 10 more fields] parquet\n   :     :     :     +- Project [d_date_sk#70, d_year#76]\n   :     :     :        +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n   :     :     +- Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n   :     :        +- Filter (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61)))\n   :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#48,i_item_id#49,i_rec_start_date#50,i_rec_end_date#51,i_item_desc#52,i_current_price#53,i_wholesale_cost#54,i_brand_id#55,i_brand#56,i_class_id#57,i_class#58,i_category_id#59,i_category#60,i_manufact_id#61,i_manufact#62,i_size#63,i_formulation#64,i_color#65,i_units#66,i_container#67,i_manager_id#68,i_product_name#69] parquet\n   :     +- Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n   :        +- Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n   :           +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#98,cr_item_sk#99,cr_refunded_customer_sk#100,cr_refunded_cdemo_sk#101,cr_refunded_hdemo_sk#102,cr_refunded_addr_sk#103,cr_returning_customer_sk#104,cr_returning_cdemo_sk#105,cr_returning_hdemo_sk#106,cr_returning_addr_sk#107,cr_call_center_sk#108,cr_catalog_page_sk#109,cr_ship_mode_sk#110,cr_warehouse_sk#111,cr_reason_sk#112,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_return_tax#116,cr_return_amt_inc_tax#117,cr_fee#118,cr_return_ship_cost#119,cr_refunded_cash#120,cr_reversed_charge#121,... 3 more fields] parquet\n   :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n   :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n   :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n   :     :  +- Join Inner, (i_item_sk#1005 = ss_item_sk#126)\n   :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n   :     :     :  +- Join Inner, (d_date_sk#1027 = ss_sold_date_sk#147)\n   :     :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147]\n   :     :     :     :  +- Filter ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#1757 [ss_sold_date_sk#147])\n   :     :     :     :     :  +- Project [d_date_sk#1027, d_year#1033]\n   :     :     :     :     :     +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n   :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n   :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#125,ss_item_sk#126,ss_customer_sk#127,ss_cdemo_sk#128,ss_hdemo_sk#129,ss_addr_sk#130,ss_store_sk#131,ss_promo_sk#132,ss_ticket_number#133L,ss_quantity#134,ss_wholesale_cost#135,ss_list_price#136,ss_sales_price#137,ss_ext_discount_amt#138,ss_ext_sales_price#139,ss_ext_wholesale_cost#140,ss_ext_list_price#141,ss_ext_tax#142,ss_coupon_amt#143,ss_net_paid#144,ss_net_paid_inc_tax#145,ss_net_profit#146,ss_sold_date_sk#147] parquet\n   :     :     :     +- Project [d_date_sk#1027, d_year#1033]\n   :     :     :        +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n   :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n   :     :     +- Project [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018]\n   :     :        +- Filter (((isnotnull(i_category#1017) AND (i_category#1017 = Sports)) AND isnotnull(i_item_sk#1005)) AND (((isnotnull(i_brand_id#1012) AND isnotnull(i_class_id#1014)) AND isnotnull(i_category_id#1016)) AND isnotnull(i_manufact_id#1018)))\n   :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1005,i_item_id#1006,i_rec_start_date#1007,i_rec_end_date#1008,i_item_desc#1009,i_current_price#1010,i_wholesale_cost#1011,i_brand_id#1012,i_brand#1013,i_class_id#1014,i_class#1015,i_category_id#1016,i_category#1017,i_manufact_id#1018,i_manufact#1019,i_size#1020,i_formulation#1021,i_color#1022,i_units#1023,i_container#1024,i_manager_id#1025,i_product_name#1026] parquet\n   :     +- Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n   :        +- Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n   :           +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#148,sr_item_sk#149,sr_customer_sk#150,sr_cdemo_sk#151,sr_hdemo_sk#152,sr_addr_sk#153,sr_store_sk#154,sr_reason_sk#155,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_return_tax#159,sr_return_amt_inc_tax#160,sr_fee#161,sr_return_ship_cost#162,sr_refunded_cash#163,sr_reversed_charge#164,sr_store_credit#165,sr_net_loss#166,sr_returned_date_sk#167] parquet\n   +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n      +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n         :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n         :  +- Join Inner, (i_item_sk#1055 = ws_item_sk#170)\n         :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n         :     :  +- Join Inner, (d_date_sk#1077 = ws_sold_date_sk#201)\n         :     :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201]\n         :     :     :  +- Filter ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#1758 [ws_sold_date_sk#201])\n         :     :     :     :  +- Project [d_date_sk#1077, d_year#1083]\n         :     :     :     :     +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n         :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n         :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#168,ws_ship_date_sk#169,ws_item_sk#170,ws_bill_customer_sk#171,ws_bill_cdemo_sk#172,ws_bill_hdemo_sk#173,ws_bill_addr_sk#174,ws_ship_customer_sk#175,ws_ship_cdemo_sk#176,ws_ship_hdemo_sk#177,ws_ship_addr_sk#178,ws_web_page_sk#179,ws_web_site_sk#180,ws_ship_mode_sk#181,ws_warehouse_sk#182,ws_promo_sk#183,ws_order_number#184L,ws_quantity#185,ws_wholesale_cost#186,ws_list_price#187,ws_sales_price#188,ws_ext_discount_amt#189,ws_ext_sales_price#190,ws_ext_wholesale_cost#191,... 10 more fields] parquet\n         :     :     +- Project [d_date_sk#1077, d_year#1083]\n         :     :        +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n         :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n         :     +- Project [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068]\n         :        +- Filter (((isnotnull(i_category#1067) AND (i_category#1067 = Sports)) AND isnotnull(i_item_sk#1055)) AND (((isnotnull(i_brand_id#1062) AND isnotnull(i_class_id#1064)) AND isnotnull(i_category_id#1066)) AND isnotnull(i_manufact_id#1068)))\n         :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1055,i_item_id#1056,i_rec_start_date#1057,i_rec_end_date#1058,i_item_desc#1059,i_current_price#1060,i_wholesale_cost#1061,i_brand_id#1062,i_brand#1063,i_class_id#1064,i_class#1065,i_category_id#1066,i_category#1067,i_manufact_id#1068,i_manufact#1069,i_size#1070,i_formulation#1071,i_color#1072,i_units#1073,i_container#1074,i_manager_id#1075,i_product_name#1076] parquet\n         +- Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n            +- Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n               +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#202,wr_item_sk#203,wr_refunded_customer_sk#204,wr_refunded_cdemo_sk#205,wr_refunded_hdemo_sk#206,wr_refunded_addr_sk#207,wr_returning_customer_sk#208,wr_returning_cdemo_sk#209,wr_returning_hdemo_sk#210,wr_returning_addr_sk#211,wr_web_page_sk#212,wr_reason_sk#213,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_return_tax#217,wr_return_amt_inc_tax#218,wr_fee#219,wr_return_ship_cost#220,wr_refunded_cash#221,wr_reversed_charge#222,wr_account_credit#223,wr_net_loss#224,wr_returned_date_sk#225] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -1796328151,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158] Arguments: [sr_ticket_number#156L ASC NULLS FIRST, sr_item_sk#149 ASC NULLS FIRST], false, 0 "
          },
          "8" : {
            "sign" : -588453107,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13899164200,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000] Input [13]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033, sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158] "
          },
          "19" : {
            "sign" : -2137432400,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216] Arguments: 12 "
          },
          "4" : {
            "sign" : -1438109637,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76] Arguments: [cs_order_number#30L ASC NULLS FIRST, cs_item_sk#28 ASC NULLS FIRST], false, 0 "
          },
          "15" : {
            "sign" : 593755887,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 6585447880,
            "rowCount" : 86650630,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [2]: [ws_order_number#184L, ws_item_sk#170] Right keys [2]: [wr_order_number#214L, wr_item_sk#203] Join type: LeftOuter Join condition: None "
          },
          "11" : {
            "sign" : 359669600,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 439404080,
            "rowCount" : 5492551,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033] Arguments: 31 "
          },
          "9" : {
            "sign" : 818133089,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 26408411980,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [2]: [ss_ticket_number#133L, ss_item_sk#126] Right keys [2]: [sr_ticket_number#156L, sr_item_sk#149] Join type: LeftOuter Join condition: None "
          },
          "13" : {
            "sign" : 2140535182,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158] Arguments: 7 "
          },
          "16" : {
            "sign" : 1627172744,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083] Arguments: [ws_order_number#184L ASC NULLS FIRST, ws_item_sk#170 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : -1184236707,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 227460160,
            "rowCount" : 2843252,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76] Arguments: 30 "
          },
          "10" : {
            "sign" : 333156983,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033] Arguments: [ss_ticket_number#133L ASC NULLS FIRST, ss_item_sk#126 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1294014266,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115] Arguments: [cr_order_number#113L ASC NULLS FIRST, cr_item_sk#99 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -1141717432,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 23120167520,
            "rowCount" : 578004188,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "17" : {
            "sign" : 1030781184,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 115048000,
            "rowCount" : 1438100,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083] Arguments: 32 "
          },
          "14" : {
            "sign" : -1469802646,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3466025200,
            "rowCount" : 86650630,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002] Input [13]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083, wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216] "
          },
          "0" : {
            "sign" : 533139815,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] Keys [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] Functions: [] Aggregate Attributes: [] Results [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "2" : {
            "sign" : 2014797764,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5754978120,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998] Input [13]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76, cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115] "
          },
          "18" : {
            "sign" : -1017269273,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216] Arguments: [wr_order_number#214L ASC NULLS FIRST, wr_item_sk#203 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : 332922582,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115] Arguments: 2 "
          },
          "3" : {
            "sign" : -556258728,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 10934458428,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [2]: [cs_order_number#30L, cs_item_sk#28] Right keys [2]: [cr_order_number#113L, cr_item_sk#99] Join type: LeftOuter Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "ShuffleQueryStage",
          "toId" : 10,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Sort",
          "toId" : 9,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "ShuffleQueryStage",
          "toId" : 12,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Sort",
          "toId" : 9,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "SortMergeJoin",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "ShuffleQueryStage",
          "toId" : 16,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Sort",
          "toId" : 15,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "ShuffleQueryStage",
          "toId" : 18,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Sort",
          "toId" : 15,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "SortMergeJoin",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n+- Union\n   :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n   :  +- SortMergeJoin [cs_order_number#30L, cs_item_sk#28], [cr_order_number#113L, cr_item_sk#99], LeftOuter\n   :     :- Sort [cs_order_number#30L ASC NULLS FIRST, cs_item_sk#28 ASC NULLS FIRST], false, 0\n   :     :  +- ShuffleQueryStage 30\n   :     :     +- Exchange hashpartitioning(cs_order_number#30L, cs_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=1901]\n   :     :        +- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n   :     :           +- *(19) BroadcastHashJoin [cs_item_sk#28], [i_item_sk#48], Inner, BuildRight, false\n   :     :              :- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n   :     :              :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#47], [d_date_sk#70], Inner, BuildRight, false\n   :     :              :     :- *(19) Filter isnotnull(cs_item_sk#28)\n   :     :              :     :  +- *(19) ColumnarToRow\n   :     :              :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#28,cs_order_number#30L,cs_quantity#31,cs_ext_sales_price#36,cs_sold_date_sk#47] Batched: true, DataFilters: [isnotnull(cs_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#47), dynamicpruningexpression(cs_sold_date_sk#47 IN dynamicpruning#1756)], PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n   :     :              :     :           +- SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n   :     :              :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   BroadcastQueryStage 1\n                                                   +- ReusedExchange [d_date_sk#70, d_year#76], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                                                +- == Initial Plan ==\n                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1861]\n                                                   +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :              :     +- BroadcastQueryStage 0\n   :     :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n   :     :              :           +- *(1) Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :     :              :              +- *(1) ColumnarToRow\n   :     :              :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :              +- BroadcastQueryStage 1\n   :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n   :     :                    +- *(2) Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n   :     :                       +- *(2) Filter ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))\n   :     :                          +- *(2) ColumnarToRow\n   :     :                             +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#48,i_brand_id#55,i_class_id#57,i_category_id#59,i_category#60,i_manufact_id#61] Batched: true, DataFilters: [isnotnull(i_category#60), (i_category#60 = Sports), isnotnull(i_item_sk#48), isnotnull(i_brand_i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...\n   :     +- Sort [cr_order_number#113L ASC NULLS FIRST, cr_item_sk#99 ASC NULLS FIRST], false, 0\n   :        +- ShuffleQueryStage 2\n   :           +- Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n   :              +- *(3) Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n   :                 +- *(3) Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n   :                    +- *(3) ColumnarToRow\n   :                       +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_item_sk#99,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_returned_date_sk#124] Batched: true, DataFilters: [isnotnull(cr_order_number#113L), isnotnull(cr_item_sk#99)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_re..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>\n   :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n   :  +- SortMergeJoin [ss_ticket_number#133L, ss_item_sk#126], [sr_ticket_number#156L, sr_item_sk#149], LeftOuter\n   :     :- Sort [ss_ticket_number#133L ASC NULLS FIRST, ss_item_sk#126 ASC NULLS FIRST], false, 0\n   :     :  +- ShuffleQueryStage 31\n   :     :     +- Exchange hashpartitioning(ss_ticket_number#133L, ss_item_sk#126, 200), ENSURE_REQUIREMENTS, [plan_id=1970]\n   :     :        +- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n   :     :           +- *(20) BroadcastHashJoin [ss_item_sk#126], [i_item_sk#1005], Inner, BuildRight, false\n   :     :              :- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n   :     :              :  +- *(20) BroadcastHashJoin [ss_sold_date_sk#147], [d_date_sk#1027], Inner, BuildRight, false\n   :     :              :     :- *(20) Filter isnotnull(ss_item_sk#126)\n   :     :              :     :  +- *(20) ColumnarToRow\n   :     :              :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#126,ss_ticket_number#133L,ss_quantity#134,ss_ext_sales_price#139,ss_sold_date_sk#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#147), dynamicpruningexpression(ss_sold_date_sk#147 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n   :     :              :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n   :     :              :     +- BroadcastQueryStage 4\n   :     :              :        +- ReusedExchange [d_date_sk#1027, d_year#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n   :     :              +- BroadcastQueryStage 6\n   :     :                 +- ReusedExchange [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n   :     +- Sort [sr_ticket_number#156L ASC NULLS FIRST, sr_item_sk#149 ASC NULLS FIRST], false, 0\n   :        +- ShuffleQueryStage 7\n   :           +- Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n   :              +- *(6) Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n   :                 +- *(6) Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n   :                    +- *(6) ColumnarToRow\n   :                       +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#149,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_returned_date_sk#167] Batched: true, DataFilters: [isnotnull(sr_ticket_number#156L), isnotnull(sr_item_sk#149)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>\n   +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n      +- SortMergeJoin [ws_order_number#184L, ws_item_sk#170], [wr_order_number#214L, wr_item_sk#203], LeftOuter\n         :- Sort [ws_order_number#184L ASC NULLS FIRST, ws_item_sk#170 ASC NULLS FIRST], false, 0\n         :  +- ShuffleQueryStage 32\n         :     +- Exchange hashpartitioning(ws_order_number#184L, ws_item_sk#170, 200), ENSURE_REQUIREMENTS, [plan_id=2039]\n         :        +- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n         :           +- *(21) BroadcastHashJoin [ws_item_sk#170], [i_item_sk#1055], Inner, BuildRight, false\n         :              :- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n         :              :  +- *(21) BroadcastHashJoin [ws_sold_date_sk#201], [d_date_sk#1077], Inner, BuildRight, false\n         :              :     :- *(21) Filter isnotnull(ws_item_sk#170)\n         :              :     :  +- *(21) ColumnarToRow\n         :              :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#170,ws_order_number#184L,ws_quantity#185,ws_ext_sales_price#190,ws_sold_date_sk#201] Batched: true, DataFilters: [isnotnull(ws_item_sk#170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#201), dynamicpruningexpression(ws_sold_date_sk#201 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n         :              :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n         :              :     +- BroadcastQueryStage 9\n         :              :        +- ReusedExchange [d_date_sk#1077, d_year#1083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n         :              +- BroadcastQueryStage 11\n         :                 +- ReusedExchange [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n         +- Sort [wr_order_number#214L ASC NULLS FIRST, wr_item_sk#203 ASC NULLS FIRST], false, 0\n            +- ShuffleQueryStage 12\n               +- Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n                  +- *(9) Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n                     +- *(9) Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n                        +- *(9) ColumnarToRow\n                           +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_item_sk#203,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_returned_date_sk#225] Batched: true, DataFilters: [isnotnull(wr_order_number#214L), isnotnull(wr_item_sk#203)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2797865120,
        "inputRowCount" : 60172725
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "4" : [ 964649, 974351, 962752, 964719, 976355, 971620, 968559, 958149, 959826, 947931, 954841, 975486, 966663, 955529, 977134, 960648, 969309, 972117, 957709, 973795, 964106, 983400, 962647, 971635, 957984, 973838, 968222, 967780, 965736, 955577, 963561, 962046, 973474, 966326, 968489, 982415, 965075, 958018, 956635, 966501, 978194, 964651, 968279, 956589, 961961, 959942, 966766, 961870, 968767, 978032, 973838, 967062, 965136, 976355, 954841, 955030, 956635, 970664, 959338, 972120, 963516, 981722, 972560, 967796, 959178, 958807, 974458, 966869, 974459, 965309, 964297, 962162, 970987, 983338, 979867, 963882, 968767, 963167, 975427, 964546, 967092, 954472, 965104, 956192, 964460, 974351, 967249, 959281, 949649, 974561, 964603, 964192, 963267, 974073, 963106, 956815, 959560, 948838, 958180, 973588, 984123, 976179, 975160, 955661, 968767, 957036, 975545, 969619, 966633, 971956, 958159, 963707, 970237, 966766, 968740, 966253, 961620, 956589, 969253, 970485, 958855, 966461, 977118, 958666, 972341, 969310, 962941, 981339, 968074, 966766, 957016, 962866, 965412, 972719, 968929, 965355, 976792, 970014, 967386, 964061, 986388, 968227, 962103, 962563, 967853, 972268, 959179, 971308, 960238, 959723, 963162, 963167, 964681, 957970, 970663, 961250, 968603, 965784, 963634, 963901, 970663, 964106, 967135, 974073, 958149, 967898, 954223, 974828, 962866, 963516, 957797, 994988, 966034, 967456, 965957, 942987, 969166, 964209, 975001, 965957, 983621, 985180, 968061, 954766, 965353, 972678, 972416, 964603, 955354, 968843, 956368, 949838, 969309, 959048, 959809, 960322, 981358, 976252, 974782, 960135 ],
        "5" : [ 251324, 251861, 257144, 255408, 251502, 258611, 251899, 251809, 254462, 253433, 259793, 260185, 258250, 255501, 260948, 255780, 250724, 255584, 245754, 250355, 255290, 256671, 262170, 261427, 251090, 256435, 255724, 257844, 256032, 254233, 256302, 254959, 257597, 257468, 260484, 252458, 255186, 255493, 260767, 258016, 254933, 256479, 258314, 251627, 260222, 251653, 255696, 262332, 252946, 256756, 255865, 258335, 257212, 256231, 251977, 255749, 261485, 254173, 253067, 258066, 260385, 259478, 257758, 256331, 256475, 246954, 255431, 251846, 259243, 257950, 255912, 261889, 250383, 258326, 253840, 255403, 256387, 258754, 259766, 251762, 252944, 254715, 254093, 256334, 255328, 250608, 255463, 253761, 258803, 255805, 257351, 258435, 255004, 253711, 253809, 255644, 251566, 259927, 253736, 255862, 255900, 254270, 256115, 250601, 254919, 254065, 255330, 256422, 256148, 251424, 256007, 254968, 248048, 253675, 249321, 256420, 257885, 252657, 255415, 256806, 262170, 251417, 250496, 258016, 258179, 260825, 255191, 255885, 252513, 250842, 253768, 256638, 258850, 251756, 251801, 256841, 257706, 248789, 253252, 256380, 250192, 259135, 250483, 261920, 258591, 259865, 258655, 258987, 258465, 253493, 256266, 252646, 252190, 252951, 255812, 257446, 253743, 254079, 261012, 246976, 252483, 261078, 254462, 254314, 256507, 256552, 252062, 253297, 256579, 256494, 250297, 258420, 255252, 253892, 255089, 256311, 254850, 260491, 249567, 258833, 250287, 257956, 251511, 251939, 250049, 260374, 259570, 254183, 254015, 255004, 253402, 255587, 252095, 258127, 257053, 252684, 253847, 259453, 255400, 257392 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ],
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "3" : [ 480992, 485312, 490856, 481531, 490274, 478950, 484455, 485044, 484851, 488996, 487072, 480371, 484530, 479746, 478197, 487325, 480189, 497664, 491195, 482095, 481260, 487868, 484166, 485947, 486229, 487675, 480646, 492084, 488735, 492098, 490913, 494364, 487561, 487061, 482845, 473945, 484987, 495860, 481424, 496096, 483666, 486879, 490274, 484669, 490731, 495322, 486818, 490242, 485658, 480803, 492848, 480885, 484405, 490288, 491013, 485819, 485326, 489760, 485533, 477865, 489278, 484680, 491855, 485194, 489617, 493362, 487800, 480078, 494865, 489178, 480107, 482859, 493212, 487032, 483184, 474470, 492986, 482388, 495543, 484712, 491070, 490356, 492647, 488225, 482095, 486886, 495386, 487996, 487782, 478197, 483916, 480246, 488546, 484604, 495379, 495304, 494497, 478686, 479425, 495422, 487004, 487111, 486979, 496721, 481999, 488168, 489277, 475755, 485112, 491313, 500018, 484248, 488385, 481067, 485829, 498463, 483659, 494336, 486879, 484348, 494083, 480371, 491165, 482970, 472110, 486115, 492705, 484462, 492287, 488578, 484211, 491052, 484569, 487085, 483473, 481135, 484915, 486297, 494840, 485112, 498719, 479243, 494722, 483334, 482834, 489192, 479914, 484237, 498852, 482277, 478033, 488714, 486836, 488664, 489635, 487129, 485783, 483766, 486804, 493187, 477533, 484587, 483766, 501166, 495192, 482955, 483901, 481399, 482099, 489703, 483309, 489160, 487418, 495518, 484862, 490217, 489760, 489478, 499134, 491415, 485001, 482902, 488714, 484405, 477904, 489021, 490637, 481913, 482940, 492177, 489578, 489760, 483373, 488421, 498338, 494140, 481228, 490112, 487860, 485126 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 373.0,
        "FinishedTasksDistributionInMs" : [ 373.0, 373.0, 373.0, 373.0, 373.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 8269,
        "TotalTasksDurationInMs" : 78239,
        "IOBytes" : {
          "Total" : 1631957244,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1413435270,
            "SW" : 218521974
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1612299874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2591410464,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 2591410464,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201] "
          },
          "5" : {
            "sign" : 1200813552,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#1758 [ws_sold_date_sk#201]) "
          },
          "6" : {
            "sign" : 1115355852,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#168, ws_ship_date_sk#169, ws_item_sk#170, ws_bill_customer_sk#171, ws_bill_cdemo_sk#172, ws_bill_hdemo_sk#173, ws_bill_addr_sk#174, ws_ship_customer_sk#175, ws_ship_cdemo_sk#176, ws_ship_hdemo_sk#177, ws_ship_addr_sk#178, ws_web_page_sk#179, ws_web_site_sk#180, ws_ship_mode_sk#181, ws_warehouse_sk#182, ws_promo_sk#183, ws_order_number#184L, ws_quantity#185, ws_wholesale_cost#186, ws_list_price#187, ws_sales_price#188, ws_ext_discount_amt#189, ws_ext_sales_price#190, ws_ext_wholesale_cost#191, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 283404956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4027346680,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 4027346680,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1055 = ws_item_sk#170) "
          },
          "0" : {
            "sign" : 1277556922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083] "
          },
          "2" : {
            "sign" : -352289814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083] "
          },
          "3" : {
            "sign" : -1211307190,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3057806620,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 3057806620,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1077 = ws_sold_date_sk#201) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n+- Join Inner, (i_item_sk#1055 = ws_item_sk#170)\n   :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n   :  +- Join Inner, (d_date_sk#1077 = ws_sold_date_sk#201)\n   :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201]\n   :     :  +- Filter ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#1758 [ws_sold_date_sk#201])\n   :     :     :  +- Project [d_date_sk#1077, d_year#1083]\n   :     :     :     +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#168,ws_ship_date_sk#169,ws_item_sk#170,ws_bill_customer_sk#171,ws_bill_cdemo_sk#172,ws_bill_hdemo_sk#173,ws_bill_addr_sk#174,ws_ship_customer_sk#175,ws_ship_cdemo_sk#176,ws_ship_hdemo_sk#177,ws_ship_addr_sk#178,ws_web_page_sk#179,ws_web_site_sk#180,ws_ship_mode_sk#181,ws_warehouse_sk#182,ws_promo_sk#183,ws_order_number#184L,ws_quantity#185,ws_wholesale_cost#186,ws_list_price#187,ws_sales_price#188,ws_ext_discount_amt#189,ws_ext_sales_price#190,ws_ext_wholesale_cost#191,... 10 more fields] parquet\n   :     +- Project [d_date_sk#1077, d_year#1083]\n   :        +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n   +- Project [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068]\n      +- Filter (((isnotnull(i_category#1067) AND (i_category#1067 = Sports)) AND isnotnull(i_item_sk#1055)) AND (((isnotnull(i_brand_id#1062) AND isnotnull(i_class_id#1064)) AND isnotnull(i_category_id#1066)) AND isnotnull(i_manufact_id#1068)))\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#1055,i_item_id#1056,i_rec_start_date#1057,i_rec_end_date#1058,i_item_desc#1059,i_current_price#1060,i_wholesale_cost#1061,i_brand_id#1062,i_brand#1063,i_class_id#1064,i_class#1065,i_category_id#1066,i_category#1067,i_manufact_id#1068,i_manufact#1069,i_size#1070,i_formulation#1071,i_color#1072,i_units#1073,i_container#1074,i_manager_id#1075,i_product_name#1076] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1903541805,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2591410464,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201] Condition : isnotnull(ws_item_sk#170) "
          },
          "5" : {
            "sign" : -2082884586,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2591410464,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [5]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#201), dynamicpruningexpression(ws_sold_date_sk#201 IN dynamicpruning#1756)] PushedFilters: [IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)> "
          },
          "6" : {
            "sign" : -1365291918,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#1077, d_year#1083] Arguments: 9 "
          },
          "1" : {
            "sign" : 402790074,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4027346680,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#170] Right keys [1]: [i_item_sk#1055] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1439735224,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083] Input [10]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083, i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068] "
          },
          "2" : {
            "sign" : -1417798895,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083] Input [7]: [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201, d_date_sk#1077, d_year#1083] "
          },
          "7" : {
            "sign" : 1248620100,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068] Arguments: 11 "
          },
          "3" : {
            "sign" : -757044289,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3057806620,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#201] Right keys [1]: [d_date_sk#1077] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n+- BroadcastHashJoin [ws_item_sk#170], [i_item_sk#1055], Inner, BuildRight, false\n   :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n   :  +- BroadcastHashJoin [ws_sold_date_sk#201], [d_date_sk#1077], Inner, BuildRight, false\n   :     :- Filter isnotnull(ws_item_sk#170)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#170,ws_order_number#184L,ws_quantity#185,ws_ext_sales_price#190,ws_sold_date_sk#201] Batched: true, DataFilters: [isnotnull(ws_item_sk#170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#201), dynamicpruningexpression(ws_sold_date_sk#201 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n   :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n   :     +- BroadcastQueryStage 9\n   :        +- ReusedExchange [d_date_sk#1077, d_year#1083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n   +- BroadcastQueryStage 11\n      +- ReusedExchange [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2595607688,
        "inputRowCount" : 72004355
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 3623,
        "TotalTasksDurationInMs" : 8259,
        "IOBytes" : {
          "Total" : 191741513,
          "Details" : {
            "IR" : 143071900,
            "IW" : 0,
            "SR" : 0,
            "SW" : 48669613
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1941477794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 921651552,
                "rowCount" : 28801611
              },
              "compileTime" : {
                "sizeInBytes" : 921651552,
                "rowCount" : 28801611
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158] "
          },
          "1" : {
            "sign" : -704416029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3686606208,
                "rowCount" : 28801611
              },
              "compileTime" : {
                "sizeInBytes" : 3686606208,
                "rowCount" : 28801611
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149)) "
          },
          "2" : {
            "sign" : 973399255,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3686606208,
                "rowCount" : 28801611
              },
              "compileTime" : {
                "sizeInBytes" : 3686606208,
                "rowCount" : 28801611
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [sr_return_time_sk#148, sr_item_sk#149, sr_customer_sk#150, sr_cdemo_sk#151, sr_hdemo_sk#152, sr_addr_sk#153, sr_store_sk#154, sr_reason_sk#155, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158, sr_return_tax#159, sr_return_amt_inc_tax#160, sr_fee#161, sr_return_ship_cost#162, sr_refunded_cash#163, sr_reversed_charge#164, sr_store_credit#165, sr_net_loss#166, sr_returned_date_sk#167], `spark_catalog`.`tpcds_100`.`store_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n+- Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n   +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#148,sr_item_sk#149,sr_customer_sk#150,sr_cdemo_sk#151,sr_hdemo_sk#152,sr_addr_sk#153,sr_store_sk#154,sr_reason_sk#155,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_return_tax#159,sr_return_amt_inc_tax#160,sr_fee#161,sr_return_ship_cost#162,sr_refunded_cash#163,sr_reversed_charge#164,sr_store_credit#165,sr_net_loss#166,sr_returned_date_sk#167] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1079997296,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 921651552,
            "rowCount" : 28801611,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158] Input [5]: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158, sr_returned_date_sk#167] "
          },
          "1" : {
            "sign" : -561020847,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 921651552,
            "rowCount" : 28801611,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158, sr_returned_date_sk#167] Condition : (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149)) "
          },
          "2" : {
            "sign" : 415522885,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 921651552,
            "rowCount" : 28801611,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_returns Output [5]: [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158, sr_returned_date_sk#167] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_returns] PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)] ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_returns",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n+- Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n   +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#149,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_returned_date_sk#167] Batched: true, DataFilters: [isnotnull(sr_ticket_number#156L), isnotnull(sr_item_sk#149)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 921651552,
        "inputRowCount" : 28801611
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 4677,
        "TotalTasksDurationInMs" : 56202,
        "IOBytes" : {
          "Total" : 1037472460,
          "Details" : {
            "IR" : 413796422,
            "IW" : 0,
            "SR" : 0,
            "SW" : 623676038
          }
        }
      }
    },
    "15" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1089985130,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25432184272,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 25432184272,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117] "
          }
        },
        "links" : [ ],
        "rawPlan" : "Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117]\n+- Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n   +- Union false, false\n      :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n      :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n      :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n      :     :  +- Join Inner, (i_item_sk#1476 = cs_item_sk#1456)\n      :     :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n      :     :     :  +- Join Inner, (d_date_sk#1498 = cs_sold_date_sk#1475)\n      :     :     :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475]\n      :     :     :     :  +- Filter ((isnotnull(cs_item_sk#1456) AND isnotnull(cs_sold_date_sk#1475)) AND dynamicpruning#1759 [cs_sold_date_sk#1475])\n      :     :     :     :     :  +- Project [d_date_sk#1498, d_year#1504]\n      :     :     :     :     :     +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n      :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n      :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#1442,cs_ship_date_sk#1443,cs_bill_customer_sk#1444,cs_bill_cdemo_sk#1445,cs_bill_hdemo_sk#1446,cs_bill_addr_sk#1447,cs_ship_customer_sk#1448,cs_ship_cdemo_sk#1449,cs_ship_hdemo_sk#1450,cs_ship_addr_sk#1451,cs_call_center_sk#1452,cs_catalog_page_sk#1453,cs_ship_mode_sk#1454,cs_warehouse_sk#1455,cs_item_sk#1456,cs_promo_sk#1457,cs_order_number#1458L,cs_quantity#1459,cs_wholesale_cost#1460,cs_list_price#1461,cs_sales_price#1462,cs_ext_discount_amt#1463,cs_ext_sales_price#1464,cs_ext_wholesale_cost#1465,... 10 more fields] parquet\n      :     :     :     +- Project [d_date_sk#1498, d_year#1504]\n      :     :     :        +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n      :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n      :     :     +- Project [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489]\n      :     :        +- Filter (((isnotnull(i_category#1488) AND (i_category#1488 = Sports)) AND isnotnull(i_item_sk#1476)) AND (((isnotnull(i_brand_id#1483) AND isnotnull(i_class_id#1485)) AND isnotnull(i_category_id#1487)) AND isnotnull(i_manufact_id#1489)))\n      :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1476,i_item_id#1477,i_rec_start_date#1478,i_rec_end_date#1479,i_item_desc#1480,i_current_price#1481,i_wholesale_cost#1482,i_brand_id#1483,i_brand#1484,i_class_id#1485,i_class#1486,i_category_id#1487,i_category#1488,i_manufact_id#1489,i_manufact#1490,i_size#1491,i_formulation#1492,i_color#1493,i_units#1494,i_container#1495,i_manager_id#1496,i_product_name#1497] parquet\n      :     +- Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543]\n      :        +- Filter (isnotnull(cr_order_number#1541L) AND isnotnull(cr_item_sk#1527))\n      :           +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#1526,cr_item_sk#1527,cr_refunded_customer_sk#1528,cr_refunded_cdemo_sk#1529,cr_refunded_hdemo_sk#1530,cr_refunded_addr_sk#1531,cr_returning_customer_sk#1532,cr_returning_cdemo_sk#1533,cr_returning_hdemo_sk#1534,cr_returning_addr_sk#1535,cr_call_center_sk#1536,cr_catalog_page_sk#1537,cr_ship_mode_sk#1538,cr_warehouse_sk#1539,cr_reason_sk#1540,cr_order_number#1541L,cr_return_quantity#1542,cr_return_amount#1543,cr_return_tax#1544,cr_return_amt_inc_tax#1545,cr_fee#1546,cr_return_ship_cost#1547,cr_refunded_cash#1548,cr_reversed_charge#1549,... 3 more fields] parquet\n      :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n      :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n      :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n      :     :  +- Join Inner, (i_item_sk#1576 = ss_item_sk#1554)\n      :     :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n      :     :     :  +- Join Inner, (d_date_sk#1598 = ss_sold_date_sk#1575)\n      :     :     :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575]\n      :     :     :     :  +- Filter ((isnotnull(ss_item_sk#1554) AND isnotnull(ss_sold_date_sk#1575)) AND dynamicpruning#1760 [ss_sold_date_sk#1575])\n      :     :     :     :     :  +- Project [d_date_sk#1598, d_year#1604]\n      :     :     :     :     :     +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n      :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n      :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1553,ss_item_sk#1554,ss_customer_sk#1555,ss_cdemo_sk#1556,ss_hdemo_sk#1557,ss_addr_sk#1558,ss_store_sk#1559,ss_promo_sk#1560,ss_ticket_number#1561L,ss_quantity#1562,ss_wholesale_cost#1563,ss_list_price#1564,ss_sales_price#1565,ss_ext_discount_amt#1566,ss_ext_sales_price#1567,ss_ext_wholesale_cost#1568,ss_ext_list_price#1569,ss_ext_tax#1570,ss_coupon_amt#1571,ss_net_paid#1572,ss_net_paid_inc_tax#1573,ss_net_profit#1574,ss_sold_date_sk#1575] parquet\n      :     :     :     +- Project [d_date_sk#1598, d_year#1604]\n      :     :     :        +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n      :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n      :     :     +- Project [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589]\n      :     :        +- Filter (((isnotnull(i_category#1588) AND (i_category#1588 = Sports)) AND isnotnull(i_item_sk#1576)) AND (((isnotnull(i_brand_id#1583) AND isnotnull(i_class_id#1585)) AND isnotnull(i_category_id#1587)) AND isnotnull(i_manufact_id#1589)))\n      :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1576,i_item_id#1577,i_rec_start_date#1578,i_rec_end_date#1579,i_item_desc#1580,i_current_price#1581,i_wholesale_cost#1582,i_brand_id#1583,i_brand#1584,i_class_id#1585,i_class#1586,i_category_id#1587,i_category#1588,i_manufact_id#1589,i_manufact#1590,i_size#1591,i_formulation#1592,i_color#1593,i_units#1594,i_container#1595,i_manager_id#1596,i_product_name#1597] parquet\n      :     +- Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636]\n      :        +- Filter (isnotnull(sr_ticket_number#1634L) AND isnotnull(sr_item_sk#1627))\n      :           +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#1626,sr_item_sk#1627,sr_customer_sk#1628,sr_cdemo_sk#1629,sr_hdemo_sk#1630,sr_addr_sk#1631,sr_store_sk#1632,sr_reason_sk#1633,sr_ticket_number#1634L,sr_return_quantity#1635,sr_return_amt#1636,sr_return_tax#1637,sr_return_amt_inc_tax#1638,sr_fee#1639,sr_return_ship_cost#1640,sr_refunded_cash#1641,sr_reversed_charge#1642,sr_store_credit#1643,sr_net_loss#1644,sr_returned_date_sk#1645] parquet\n      +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n         +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n            :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n            :  +- Join Inner, (i_item_sk#1680 = ws_item_sk#1648)\n            :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n            :     :  +- Join Inner, (d_date_sk#1702 = ws_sold_date_sk#1679)\n            :     :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679]\n            :     :     :  +- Filter ((isnotnull(ws_item_sk#1648) AND isnotnull(ws_sold_date_sk#1679)) AND dynamicpruning#1761 [ws_sold_date_sk#1679])\n            :     :     :     :  +- Project [d_date_sk#1702, d_year#1708]\n            :     :     :     :     +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1646,ws_ship_date_sk#1647,ws_item_sk#1648,ws_bill_customer_sk#1649,ws_bill_cdemo_sk#1650,ws_bill_hdemo_sk#1651,ws_bill_addr_sk#1652,ws_ship_customer_sk#1653,ws_ship_cdemo_sk#1654,ws_ship_hdemo_sk#1655,ws_ship_addr_sk#1656,ws_web_page_sk#1657,ws_web_site_sk#1658,ws_ship_mode_sk#1659,ws_warehouse_sk#1660,ws_promo_sk#1661,ws_order_number#1662L,ws_quantity#1663,ws_wholesale_cost#1664,ws_list_price#1665,ws_sales_price#1666,ws_ext_discount_amt#1667,ws_ext_sales_price#1668,ws_ext_wholesale_cost#1669,... 10 more fields] parquet\n            :     :     +- Project [d_date_sk#1702, d_year#1708]\n            :     :        +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n            :     +- Project [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693]\n            :        +- Filter (((isnotnull(i_category#1692) AND (i_category#1692 = Sports)) AND isnotnull(i_item_sk#1680)) AND (((isnotnull(i_brand_id#1687) AND isnotnull(i_class_id#1689)) AND isnotnull(i_category_id#1691)) AND isnotnull(i_manufact_id#1693)))\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1680,i_item_id#1681,i_rec_start_date#1682,i_rec_end_date#1683,i_item_desc#1684,i_current_price#1685,i_wholesale_cost#1686,i_brand_id#1687,i_brand#1688,i_class_id#1689,i_class#1690,i_category_id#1691,i_category#1692,i_manufact_id#1693,i_manufact#1694,i_size#1695,i_formulation#1696,i_color#1697,i_units#1698,i_container#1699,i_manager_id#1700,i_product_name#1701] parquet\n            +- Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744]\n               +- Filter (isnotnull(wr_order_number#1742L) AND isnotnull(wr_item_sk#1731))\n                  +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#1730,wr_item_sk#1731,wr_refunded_customer_sk#1732,wr_refunded_cdemo_sk#1733,wr_refunded_hdemo_sk#1734,wr_refunded_addr_sk#1735,wr_returning_customer_sk#1736,wr_returning_cdemo_sk#1737,wr_returning_hdemo_sk#1738,wr_returning_addr_sk#1739,wr_web_page_sk#1740,wr_reason_sk#1741,wr_order_number#1742L,wr_return_quantity#1743,wr_return_amt#1744,wr_return_tax#1745,wr_return_amt_inc_tax#1746,wr_fee#1747,wr_return_ship_cost#1748,wr_refunded_cash#1749,wr_reversed_charge#1750,wr_account_credit#1751,wr_net_loss#1752,wr_returned_date_sk#1753] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1373761801,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] Keys [5]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489] Functions [2]: [partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))] Aggregate Attributes [2]: [sum#1762L, sum#1766L] Results [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum#1764L, sum#1767L] "
          },
          "1" : {
            "sign" : -2065341872,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 623041472,
            "rowCount" : 9735023,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] Keys [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] Functions: [] Aggregate Attributes: [] Results [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "2" : {
            "sign" : 1733526587,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] Arguments: 37 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum#1764L, sum#1767L])\n+- HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998])\n   +- ShuffleQueryStage 37\n      +- Exchange hashpartitioning(d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998, 200), ENSURE_REQUIREMENTS, [plan_id=3589]\n         +- *(44) HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998])\n            +- Union\n               :- *(37) Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n               :  +- *(37) SortMergeJoin [cs_order_number#1458L, cs_item_sk#1456], [cr_order_number#1541L, cr_item_sk#1527], LeftOuter\n               :     :- *(35) Sort [cs_order_number#1458L ASC NULLS FIRST, cs_item_sk#1456 ASC NULLS FIRST], false, 0\n               :     :  +- AQEShuffleRead coalesced\n               :     :     +- ShuffleQueryStage 33\n               :     :        +- Exchange hashpartitioning(cs_order_number#1458L, cs_item_sk#1456, 200), ENSURE_REQUIREMENTS, [plan_id=2182]\n               :     :           +- *(22) Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n               :     :              +- *(22) BroadcastHashJoin [cs_item_sk#1456], [i_item_sk#1476], Inner, BuildRight, false\n               :     :                 :- *(22) Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n               :     :                 :  +- *(22) BroadcastHashJoin [cs_sold_date_sk#1475], [d_date_sk#1498], Inner, BuildRight, false\n               :     :                 :     :- *(22) Filter isnotnull(cs_item_sk#1456)\n               :     :                 :     :  +- *(22) ColumnarToRow\n               :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#1456,cs_order_number#1458L,cs_quantity#1459,cs_ext_sales_price#1464,cs_sold_date_sk#1475] Batched: true, DataFilters: [isnotnull(cs_item_sk#1456)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#1475), dynamicpruningexpression(cs_sold_date_sk#1475 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n               :     :                 :     :           +- SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n               :     :                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                               +- == Final Plan ==\n                                                                  BroadcastQueryStage 1\n                                                                  +- ReusedExchange [d_date_sk#1498, d_year#1504], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                                                               +- == Initial Plan ==\n                                                                  BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2142]\n                                                                  +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               :     :                 :     +- BroadcastQueryStage 13\n               :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n               :     :                 :           +- *(10) Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n               :     :                 :              +- *(10) ColumnarToRow\n               :     :                 :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               :     :                 +- BroadcastQueryStage 15\n               :     :                    +- ReusedExchange [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n               :     +- *(36) Sort [cr_order_number#1541L ASC NULLS FIRST, cr_item_sk#1527 ASC NULLS FIRST], false, 0\n               :        +- AQEShuffleRead coalesced\n               :           +- ShuffleQueryStage 17\n               :              +- ReusedExchange [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n               :- *(40) Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n               :  +- *(40) SortMergeJoin [ss_ticket_number#1561L, ss_item_sk#1554], [sr_ticket_number#1634L, sr_item_sk#1627], LeftOuter\n               :     :- *(38) Sort [ss_ticket_number#1561L ASC NULLS FIRST, ss_item_sk#1554 ASC NULLS FIRST], false, 0\n               :     :  +- AQEShuffleRead coalesced\n               :     :     +- ShuffleQueryStage 34\n               :     :        +- Exchange hashpartitioning(ss_ticket_number#1561L, ss_item_sk#1554, 200), ENSURE_REQUIREMENTS, [plan_id=2251]\n               :     :           +- *(23) Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n               :     :              +- *(23) BroadcastHashJoin [ss_item_sk#1554], [i_item_sk#1576], Inner, BuildRight, false\n               :     :                 :- *(23) Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n               :     :                 :  +- *(23) BroadcastHashJoin [ss_sold_date_sk#1575], [d_date_sk#1598], Inner, BuildRight, false\n               :     :                 :     :- *(23) Filter isnotnull(ss_item_sk#1554)\n               :     :                 :     :  +- *(23) ColumnarToRow\n               :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1554,ss_ticket_number#1561L,ss_quantity#1562,ss_ext_sales_price#1567,ss_sold_date_sk#1575] Batched: true, DataFilters: [isnotnull(ss_item_sk#1554)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1575), dynamicpruningexpression(ss_sold_date_sk#1575 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n               :     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n               :     :                 :     +- BroadcastQueryStage 19\n               :     :                 :        +- ReusedExchange [d_date_sk#1598, d_year#1604], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n               :     :                 +- BroadcastQueryStage 21\n               :     :                    +- ReusedExchange [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n               :     +- *(39) Sort [sr_ticket_number#1634L ASC NULLS FIRST, sr_item_sk#1627 ASC NULLS FIRST], false, 0\n               :        +- AQEShuffleRead coalesced\n               :           +- ShuffleQueryStage 23\n               :              +- ReusedExchange [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n               +- *(43) Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                  +- *(43) SortMergeJoin [ws_order_number#1662L, ws_item_sk#1648], [wr_order_number#1742L, wr_item_sk#1731], LeftOuter\n                     :- *(41) Sort [ws_order_number#1662L ASC NULLS FIRST, ws_item_sk#1648 ASC NULLS FIRST], false, 0\n                     :  +- AQEShuffleRead coalesced\n                     :     +- ShuffleQueryStage 35\n                     :        +- Exchange hashpartitioning(ws_order_number#1662L, ws_item_sk#1648, 200), ENSURE_REQUIREMENTS, [plan_id=2320]\n                     :           +- *(24) Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n                     :              +- *(24) BroadcastHashJoin [ws_item_sk#1648], [i_item_sk#1680], Inner, BuildRight, false\n                     :                 :- *(24) Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n                     :                 :  +- *(24) BroadcastHashJoin [ws_sold_date_sk#1679], [d_date_sk#1702], Inner, BuildRight, false\n                     :                 :     :- *(24) Filter isnotnull(ws_item_sk#1648)\n                     :                 :     :  +- *(24) ColumnarToRow\n                     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#1648,ws_order_number#1662L,ws_quantity#1663,ws_ext_sales_price#1668,ws_sold_date_sk#1679] Batched: true, DataFilters: [isnotnull(ws_item_sk#1648)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1679), dynamicpruningexpression(ws_sold_date_sk#1679 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n                     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n                     :                 :     +- BroadcastQueryStage 25\n                     :                 :        +- ReusedExchange [d_date_sk#1702, d_year#1708], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                     :                 +- BroadcastQueryStage 27\n                     :                    +- ReusedExchange [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                     +- *(42) Sort [wr_order_number#1742L ASC NULLS FIRST, wr_item_sk#1731 ASC NULLS FIRST], false, 0\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 29\n                              +- ReusedExchange [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 623041472,
        "inputRowCount" : 9735023
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "10" : [ 1139696, 1140835, 1139696, 1131750, 1145638, 1141916, 1138180, 1141916, 1137591, 1144453, 1138298, 1141916, 1141916, 1130614, 1145329, 1140400, 1125425, 1141916, 1126101, 1128509, 1142937, 1131753, 1139319, 1143055, 1134562, 1130614, 1134994, 1134939, 1131753, 1134608, 1141916, 1135371, 1135643, 1138298, 1133904, 1145638, 1137159, 1136782, 1148340, 1143055, 1137159, 1135371, 1134939, 1131753, 1141916, 1135643, 1140835, 1132402, 1145638, 1132025, 1144722, 1141916, 1141539, 1146296, 1138661, 1137159, 1138298, 1141916, 1131318, 1139696, 1136510, 1130237, 1136782, 1143055, 1137591, 1136782, 1138298, 1136782, 1143055, 1138180, 1140835, 1142937, 1144453, 1140835, 1140835, 1139319, 1143055, 1141539, 1137591, 1138180, 1145592, 1147812, 1141916, 1141539, 1132834, 1145638, 1137591, 1126289, 1137591, 1131321, 1141916, 1137591, 1139365, 1144308, 1140835, 1145592, 1140400, 1139696, 1143418, 1140835, 1139696, 1131318, 1139696, 1134562, 1131321, 1135371, 1131753, 1134336, 1143055, 1136078, 1130614, 1142937, 1137745, 1146673, 1131367, 1142937, 1144453, 1141916, 1134562, 1138730, 1144453, 1136247, 1142348, 1135371, 1139696, 1144076, 1139696, 1133973, 1141916, 1137159, 1130182, 1134939, 1138298, 1122943, 1148833, 1138612, 1140881, 1128509, 1136782, 1137159, 1140400, 1129530, 1141539, 1140400, 1141916, 1147694, 1138298, 1141916, 1127700, 1130614, 1125425, 1140835, 1138298, 1138177, 1137159, 1142937, 1142937, 1142348, 1132834, 1149914, 1132402, 1143055, 1133904, 1137159, 1138180, 1140835, 1143055, 1146673, 1138298, 1139696, 1140835, 1140835, 1145589, 1137591, 1141313, 1140835, 1143055, 1141916, 1140400, 1130614, 1147694, 1141916, 1143055, 1136510, 1136782, 1138180, 1140400, 1141916, 1140835, 1134994, 1139696, 1141916, 1136075, 1130614, 1136782, 1136510, 1122888, 1144453, 1132889, 1137159 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 989.0,
        "FinishedTasksDistributionInMs" : [ 989.0, 989.0, 989.0, 989.0, 989.0 ]
      },
      "QueryStageOptimizationId" : 15,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 38 ],
      "Objectives" : {
        "DurationInMs" : 12251,
        "TotalTasksDurationInMs" : 35151,
        "IOBytes" : {
          "Total" : 217634866,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 216582906,
            "SW" : 1051960
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 2105951504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2591410464,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 2591410464,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679] "
          },
          "5" : {
            "sign" : -456730162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#1648) AND isnotnull(ws_sold_date_sk#1679)) AND dynamicpruning#1761 [ws_sold_date_sk#1679]) "
          },
          "6" : {
            "sign" : -1343118222,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#1646, ws_ship_date_sk#1647, ws_item_sk#1648, ws_bill_customer_sk#1649, ws_bill_cdemo_sk#1650, ws_bill_hdemo_sk#1651, ws_bill_addr_sk#1652, ws_ship_customer_sk#1653, ws_ship_cdemo_sk#1654, ws_ship_hdemo_sk#1655, ws_ship_addr_sk#1656, ws_web_page_sk#1657, ws_web_site_sk#1658, ws_ship_mode_sk#1659, ws_warehouse_sk#1660, ws_promo_sk#1661, ws_order_number#1662L, ws_quantity#1663, ws_wholesale_cost#1664, ws_list_price#1665, ws_sales_price#1666, ws_ext_discount_amt#1667, ws_ext_sales_price#1668, ws_ext_wholesale_cost#1669, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -3782469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4027346680,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 4027346680,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1680 = ws_item_sk#1648) "
          },
          "0" : {
            "sign" : -65668565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708] "
          },
          "2" : {
            "sign" : -1199122840,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2501841780,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708] "
          },
          "3" : {
            "sign" : -937062346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3057806620,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 3057806620,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1702 = ws_sold_date_sk#1679) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n+- Join Inner, (i_item_sk#1680 = ws_item_sk#1648)\n   :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n   :  +- Join Inner, (d_date_sk#1702 = ws_sold_date_sk#1679)\n   :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679]\n   :     :  +- Filter ((isnotnull(ws_item_sk#1648) AND isnotnull(ws_sold_date_sk#1679)) AND dynamicpruning#1761 [ws_sold_date_sk#1679])\n   :     :     :  +- Project [d_date_sk#1702, d_year#1708]\n   :     :     :     +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1646,ws_ship_date_sk#1647,ws_item_sk#1648,ws_bill_customer_sk#1649,ws_bill_cdemo_sk#1650,ws_bill_hdemo_sk#1651,ws_bill_addr_sk#1652,ws_ship_customer_sk#1653,ws_ship_cdemo_sk#1654,ws_ship_hdemo_sk#1655,ws_ship_addr_sk#1656,ws_web_page_sk#1657,ws_web_site_sk#1658,ws_ship_mode_sk#1659,ws_warehouse_sk#1660,ws_promo_sk#1661,ws_order_number#1662L,ws_quantity#1663,ws_wholesale_cost#1664,ws_list_price#1665,ws_sales_price#1666,ws_ext_discount_amt#1667,ws_ext_sales_price#1668,ws_ext_wholesale_cost#1669,... 10 more fields] parquet\n   :     +- Project [d_date_sk#1702, d_year#1708]\n   :        +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n   +- Project [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693]\n      +- Filter (((isnotnull(i_category#1692) AND (i_category#1692 = Sports)) AND isnotnull(i_item_sk#1680)) AND (((isnotnull(i_brand_id#1687) AND isnotnull(i_class_id#1689)) AND isnotnull(i_category_id#1691)) AND isnotnull(i_manufact_id#1693)))\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#1680,i_item_id#1681,i_rec_start_date#1682,i_rec_end_date#1683,i_item_desc#1684,i_current_price#1685,i_wholesale_cost#1686,i_brand_id#1687,i_brand#1688,i_class_id#1689,i_class#1690,i_category_id#1691,i_category#1692,i_manufact_id#1693,i_manufact#1694,i_size#1695,i_formulation#1696,i_color#1697,i_units#1698,i_container#1699,i_manager_id#1700,i_product_name#1701] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1676591996,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2591410464,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679] Condition : isnotnull(ws_item_sk#1648) "
          },
          "5" : {
            "sign" : 1306247794,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2591410464,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [5]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#1679), dynamicpruningexpression(ws_sold_date_sk#1679 IN dynamicpruning#1759)] PushedFilters: [IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)> "
          },
          "6" : {
            "sign" : -330787827,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#1702, d_year#1708] Arguments: 25 "
          },
          "1" : {
            "sign" : 1011247311,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4027346680,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#1648] Right keys [1]: [i_item_sk#1680] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1395279453,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708] Input [10]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708, i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693] "
          },
          "2" : {
            "sign" : 1300012328,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2501841780,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708] Input [7]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679, d_date_sk#1702, d_year#1708] "
          },
          "7" : {
            "sign" : -1269751739,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693] Arguments: 27 "
          },
          "3" : {
            "sign" : 1527571308,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3057806620,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#1679] Right keys [1]: [d_date_sk#1702] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n+- BroadcastHashJoin [ws_item_sk#1648], [i_item_sk#1680], Inner, BuildRight, false\n   :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n   :  +- BroadcastHashJoin [ws_sold_date_sk#1679], [d_date_sk#1702], Inner, BuildRight, false\n   :     :- Filter isnotnull(ws_item_sk#1648)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#1648,ws_order_number#1662L,ws_quantity#1663,ws_ext_sales_price#1668,ws_sold_date_sk#1679] Batched: true, DataFilters: [isnotnull(ws_item_sk#1648)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1679), dynamicpruningexpression(ws_sold_date_sk#1679 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n   :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n   :     +- BroadcastQueryStage 25\n   :        +- ReusedExchange [d_date_sk#1702, d_year#1708], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n   +- BroadcastQueryStage 27\n      +- ReusedExchange [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2595607688,
        "inputRowCount" : 72004355
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 5729,
        "TotalTasksDurationInMs" : 8488,
        "IOBytes" : {
          "Total" : 191139204,
          "Details" : {
            "IR" : 142382024,
            "IW" : 0,
            "SR" : 0,
            "SW" : 48757180
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1158456971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5157828612,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 5157828612,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475] "
          },
          "5" : {
            "sign" : -466231910,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#1456) AND isnotnull(cs_sold_date_sk#1475)) AND dynamicpruning#1759 [cs_sold_date_sk#1475]) "
          },
          "6" : {
            "sign" : -1859537272,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#1442, cs_ship_date_sk#1443, cs_bill_customer_sk#1444, cs_bill_cdemo_sk#1445, cs_bill_hdemo_sk#1446, cs_bill_addr_sk#1447, cs_ship_customer_sk#1448, cs_ship_cdemo_sk#1449, cs_ship_hdemo_sk#1450, cs_ship_addr_sk#1451, cs_call_center_sk#1452, cs_catalog_page_sk#1453, cs_ship_mode_sk#1454, cs_warehouse_sk#1455, cs_item_sk#1456, cs_promo_sk#1457, cs_order_number#1458L, cs_quantity#1459, cs_wholesale_cost#1460, cs_list_price#1461, cs_sales_price#1462, cs_ext_discount_amt#1463, cs_ext_sales_price#1464, cs_ext_wholesale_cost#1465, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1098466517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8056969368,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 8056969368,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1476 = cs_item_sk#1456) "
          },
          "0" : {
            "sign" : -525418322,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504] "
          },
          "2" : {
            "sign" : 2000544846,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4986585432,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 4986585432,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504] "
          },
          "3" : {
            "sign" : -1864285449,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6094715528,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 6094715528,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1498 = cs_sold_date_sk#1475) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n+- Join Inner, (i_item_sk#1476 = cs_item_sk#1456)\n   :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n   :  +- Join Inner, (d_date_sk#1498 = cs_sold_date_sk#1475)\n   :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475]\n   :     :  +- Filter ((isnotnull(cs_item_sk#1456) AND isnotnull(cs_sold_date_sk#1475)) AND dynamicpruning#1759 [cs_sold_date_sk#1475])\n   :     :     :  +- Project [d_date_sk#1498, d_year#1504]\n   :     :     :     +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#1442,cs_ship_date_sk#1443,cs_bill_customer_sk#1444,cs_bill_cdemo_sk#1445,cs_bill_hdemo_sk#1446,cs_bill_addr_sk#1447,cs_ship_customer_sk#1448,cs_ship_cdemo_sk#1449,cs_ship_hdemo_sk#1450,cs_ship_addr_sk#1451,cs_call_center_sk#1452,cs_catalog_page_sk#1453,cs_ship_mode_sk#1454,cs_warehouse_sk#1455,cs_item_sk#1456,cs_promo_sk#1457,cs_order_number#1458L,cs_quantity#1459,cs_wholesale_cost#1460,cs_list_price#1461,cs_sales_price#1462,cs_ext_discount_amt#1463,cs_ext_sales_price#1464,cs_ext_wholesale_cost#1465,... 10 more fields] parquet\n   :     +- Project [d_date_sk#1498, d_year#1504]\n   :        +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n   +- Project [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489]\n      +- Filter (((isnotnull(i_category#1488) AND (i_category#1488 = Sports)) AND isnotnull(i_item_sk#1476)) AND (((isnotnull(i_brand_id#1483) AND isnotnull(i_class_id#1485)) AND isnotnull(i_category_id#1487)) AND isnotnull(i_manufact_id#1489)))\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#1476,i_item_id#1477,i_rec_start_date#1478,i_rec_end_date#1479,i_item_desc#1480,i_current_price#1481,i_wholesale_cost#1482,i_brand_id#1483,i_brand#1484,i_class_id#1485,i_class#1486,i_category_id#1487,i_category#1488,i_manufact_id#1489,i_manufact#1490,i_size#1491,i_formulation#1492,i_color#1493,i_units#1494,i_container#1495,i_manager_id#1496,i_product_name#1497] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1694713244,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5157828612,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475] Condition : isnotnull(cs_item_sk#1456) "
          },
          "5" : {
            "sign" : -2000679125,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5157828612,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [5]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#1475), dynamicpruningexpression(cs_sold_date_sk#1475 IN dynamicpruning#1759)] PushedFilters: [IsNotNull(cs_item_sk)] ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)> "
          },
          "6" : {
            "sign" : -679426347,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#1498, d_year#1504] Arguments: 13 "
          },
          "1" : {
            "sign" : -1262446764,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8056969368,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#1456] Right keys [1]: [i_item_sk#1476] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -1591626745,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504] Input [10]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504, i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489] "
          },
          "2" : {
            "sign" : -1089069753,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4986585432,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504] Input [7]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475, d_date_sk#1498, d_year#1504] "
          },
          "7" : {
            "sign" : 1711565559,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489] Arguments: 15 "
          },
          "3" : {
            "sign" : -1202230980,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6094715528,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#1475] Right keys [1]: [d_date_sk#1498] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n+- BroadcastHashJoin [cs_item_sk#1456], [i_item_sk#1476], Inner, BuildRight, false\n   :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n   :  +- BroadcastHashJoin [cs_sold_date_sk#1475], [d_date_sk#1498], Inner, BuildRight, false\n   :     :- Filter isnotnull(cs_item_sk#1456)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#1456,cs_order_number#1458L,cs_quantity#1459,cs_ext_sales_price#1464,cs_sold_date_sk#1475] Batched: true, DataFilters: [isnotnull(cs_item_sk#1456)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#1475), dynamicpruningexpression(cs_sold_date_sk#1475 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n   :     :        +- SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n   :     :           +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2142]\n   :     :                 +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     +- BroadcastQueryStage 13\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n   :           +- *(10) Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :              +- *(10) ColumnarToRow\n   :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 15\n      +- ReusedExchange [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5162025836,
        "inputRowCount" : 143293748
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 4268,
        "TotalTasksDurationInMs" : 10743,
        "IOBytes" : {
          "Total" : 388421288,
          "Details" : {
            "IR" : 294626286,
            "IW" : 0,
            "SR" : 0,
            "SW" : 93795002
          }
        }
      }
    },
    "13" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1029434423,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13899164200,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 13899164200,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] "
          },
          "5" : {
            "sign" : 2136699125,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 26408411980,
                "rowCount" : 347479105
              },
              "compileTime" : {
                "sizeInBytes" : 26408411980,
                "rowCount" : 347479105
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627)) "
          },
          "6" : {
            "sign" : -1529317459,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3466025200,
                "rowCount" : 86650630
              },
              "compileTime" : {
                "sizeInBytes" : 3466025200,
                "rowCount" : 86650630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] "
          },
          "1" : {
            "sign" : 2085760100,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : 578004188
              },
              "compileTime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : 578004188
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "0" : {
            "sign" : 103663761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 23120167520,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "2" : {
            "sign" : -838006041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5754978120,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 5754978120,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] "
          },
          "7" : {
            "sign" : 957147385,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6585447880,
                "rowCount" : 86650630
              },
              "compileTime" : {
                "sizeInBytes" : 6585447880,
                "rowCount" : 86650630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731)) "
          },
          "3" : {
            "sign" : -1831201380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10934458428,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 10934458428,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527)) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998]\n+- Union false, false\n   :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n   :  +- Join LeftOuter, ((cs_order_number#1458L = cr_order_number#1541L) AND (cs_item_sk#1456 = cr_item_sk#1527))\n   :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n   :     :  +- Join Inner, (i_item_sk#1476 = cs_item_sk#1456)\n   :     :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n   :     :     :  +- Join Inner, (d_date_sk#1498 = cs_sold_date_sk#1475)\n   :     :     :     :- Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, cs_sold_date_sk#1475]\n   :     :     :     :  +- Filter ((isnotnull(cs_item_sk#1456) AND isnotnull(cs_sold_date_sk#1475)) AND dynamicpruning#1759 [cs_sold_date_sk#1475])\n   :     :     :     :     :  +- Project [d_date_sk#1498, d_year#1504]\n   :     :     :     :     :     +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n   :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#1442,cs_ship_date_sk#1443,cs_bill_customer_sk#1444,cs_bill_cdemo_sk#1445,cs_bill_hdemo_sk#1446,cs_bill_addr_sk#1447,cs_ship_customer_sk#1448,cs_ship_cdemo_sk#1449,cs_ship_hdemo_sk#1450,cs_ship_addr_sk#1451,cs_call_center_sk#1452,cs_catalog_page_sk#1453,cs_ship_mode_sk#1454,cs_warehouse_sk#1455,cs_item_sk#1456,cs_promo_sk#1457,cs_order_number#1458L,cs_quantity#1459,cs_wholesale_cost#1460,cs_list_price#1461,cs_sales_price#1462,cs_ext_discount_amt#1463,cs_ext_sales_price#1464,cs_ext_wholesale_cost#1465,... 10 more fields] parquet\n   :     :     :     +- Project [d_date_sk#1498, d_year#1504]\n   :     :     :        +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n   :     :     +- Project [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489]\n   :     :        +- Filter (((isnotnull(i_category#1488) AND (i_category#1488 = Sports)) AND isnotnull(i_item_sk#1476)) AND (((isnotnull(i_brand_id#1483) AND isnotnull(i_class_id#1485)) AND isnotnull(i_category_id#1487)) AND isnotnull(i_manufact_id#1489)))\n   :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1476,i_item_id#1477,i_rec_start_date#1478,i_rec_end_date#1479,i_item_desc#1480,i_current_price#1481,i_wholesale_cost#1482,i_brand_id#1483,i_brand#1484,i_class_id#1485,i_class#1486,i_category_id#1487,i_category#1488,i_manufact_id#1489,i_manufact#1490,i_size#1491,i_formulation#1492,i_color#1493,i_units#1494,i_container#1495,i_manager_id#1496,i_product_name#1497] parquet\n   :     +- Project [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543]\n   :        +- Filter (isnotnull(cr_order_number#1541L) AND isnotnull(cr_item_sk#1527))\n   :           +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#1526,cr_item_sk#1527,cr_refunded_customer_sk#1528,cr_refunded_cdemo_sk#1529,cr_refunded_hdemo_sk#1530,cr_refunded_addr_sk#1531,cr_returning_customer_sk#1532,cr_returning_cdemo_sk#1533,cr_returning_hdemo_sk#1534,cr_returning_addr_sk#1535,cr_call_center_sk#1536,cr_catalog_page_sk#1537,cr_ship_mode_sk#1538,cr_warehouse_sk#1539,cr_reason_sk#1540,cr_order_number#1541L,cr_return_quantity#1542,cr_return_amount#1543,cr_return_tax#1544,cr_return_amt_inc_tax#1545,cr_fee#1546,cr_return_ship_cost#1547,cr_refunded_cash#1548,cr_reversed_charge#1549,... 3 more fields] parquet\n   :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n   :  +- Join LeftOuter, ((ss_ticket_number#1561L = sr_ticket_number#1634L) AND (ss_item_sk#1554 = sr_item_sk#1627))\n   :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n   :     :  +- Join Inner, (i_item_sk#1576 = ss_item_sk#1554)\n   :     :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n   :     :     :  +- Join Inner, (d_date_sk#1598 = ss_sold_date_sk#1575)\n   :     :     :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575]\n   :     :     :     :  +- Filter ((isnotnull(ss_item_sk#1554) AND isnotnull(ss_sold_date_sk#1575)) AND dynamicpruning#1760 [ss_sold_date_sk#1575])\n   :     :     :     :     :  +- Project [d_date_sk#1598, d_year#1604]\n   :     :     :     :     :     +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n   :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n   :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1553,ss_item_sk#1554,ss_customer_sk#1555,ss_cdemo_sk#1556,ss_hdemo_sk#1557,ss_addr_sk#1558,ss_store_sk#1559,ss_promo_sk#1560,ss_ticket_number#1561L,ss_quantity#1562,ss_wholesale_cost#1563,ss_list_price#1564,ss_sales_price#1565,ss_ext_discount_amt#1566,ss_ext_sales_price#1567,ss_ext_wholesale_cost#1568,ss_ext_list_price#1569,ss_ext_tax#1570,ss_coupon_amt#1571,ss_net_paid#1572,ss_net_paid_inc_tax#1573,ss_net_profit#1574,ss_sold_date_sk#1575] parquet\n   :     :     :     +- Project [d_date_sk#1598, d_year#1604]\n   :     :     :        +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n   :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n   :     :     +- Project [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589]\n   :     :        +- Filter (((isnotnull(i_category#1588) AND (i_category#1588 = Sports)) AND isnotnull(i_item_sk#1576)) AND (((isnotnull(i_brand_id#1583) AND isnotnull(i_class_id#1585)) AND isnotnull(i_category_id#1587)) AND isnotnull(i_manufact_id#1589)))\n   :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1576,i_item_id#1577,i_rec_start_date#1578,i_rec_end_date#1579,i_item_desc#1580,i_current_price#1581,i_wholesale_cost#1582,i_brand_id#1583,i_brand#1584,i_class_id#1585,i_class#1586,i_category_id#1587,i_category#1588,i_manufact_id#1589,i_manufact#1590,i_size#1591,i_formulation#1592,i_color#1593,i_units#1594,i_container#1595,i_manager_id#1596,i_product_name#1597] parquet\n   :     +- Project [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636]\n   :        +- Filter (isnotnull(sr_ticket_number#1634L) AND isnotnull(sr_item_sk#1627))\n   :           +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#1626,sr_item_sk#1627,sr_customer_sk#1628,sr_cdemo_sk#1629,sr_hdemo_sk#1630,sr_addr_sk#1631,sr_store_sk#1632,sr_reason_sk#1633,sr_ticket_number#1634L,sr_return_quantity#1635,sr_return_amt#1636,sr_return_tax#1637,sr_return_amt_inc_tax#1638,sr_fee#1639,sr_return_ship_cost#1640,sr_refunded_cash#1641,sr_reversed_charge#1642,sr_store_credit#1643,sr_net_loss#1644,sr_returned_date_sk#1645] parquet\n   +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n      +- Join LeftOuter, ((ws_order_number#1662L = wr_order_number#1742L) AND (ws_item_sk#1648 = wr_item_sk#1731))\n         :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n         :  +- Join Inner, (i_item_sk#1680 = ws_item_sk#1648)\n         :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n         :     :  +- Join Inner, (d_date_sk#1702 = ws_sold_date_sk#1679)\n         :     :     :- Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, ws_sold_date_sk#1679]\n         :     :     :  +- Filter ((isnotnull(ws_item_sk#1648) AND isnotnull(ws_sold_date_sk#1679)) AND dynamicpruning#1761 [ws_sold_date_sk#1679])\n         :     :     :     :  +- Project [d_date_sk#1702, d_year#1708]\n         :     :     :     :     +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n         :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n         :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#1646,ws_ship_date_sk#1647,ws_item_sk#1648,ws_bill_customer_sk#1649,ws_bill_cdemo_sk#1650,ws_bill_hdemo_sk#1651,ws_bill_addr_sk#1652,ws_ship_customer_sk#1653,ws_ship_cdemo_sk#1654,ws_ship_hdemo_sk#1655,ws_ship_addr_sk#1656,ws_web_page_sk#1657,ws_web_site_sk#1658,ws_ship_mode_sk#1659,ws_warehouse_sk#1660,ws_promo_sk#1661,ws_order_number#1662L,ws_quantity#1663,ws_wholesale_cost#1664,ws_list_price#1665,ws_sales_price#1666,ws_ext_discount_amt#1667,ws_ext_sales_price#1668,ws_ext_wholesale_cost#1669,... 10 more fields] parquet\n         :     :     +- Project [d_date_sk#1702, d_year#1708]\n         :     :        +- Filter ((isnotnull(d_year#1708) AND (d_year#1708 = 2001)) AND isnotnull(d_date_sk#1702))\n         :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1702,d_date_id#1703,d_date#1704,d_month_seq#1705,d_week_seq#1706,d_quarter_seq#1707,d_year#1708,d_dow#1709,d_moy#1710,d_dom#1711,d_qoy#1712,d_fy_year#1713,d_fy_quarter_seq#1714,d_fy_week_seq#1715,d_day_name#1716,d_quarter_name#1717,d_holiday#1718,d_weekend#1719,d_following_holiday#1720,d_first_dom#1721,d_last_dom#1722,d_same_day_ly#1723,d_same_day_lq#1724,d_current_day#1725,... 4 more fields] parquet\n         :     +- Project [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693]\n         :        +- Filter (((isnotnull(i_category#1692) AND (i_category#1692 = Sports)) AND isnotnull(i_item_sk#1680)) AND (((isnotnull(i_brand_id#1687) AND isnotnull(i_class_id#1689)) AND isnotnull(i_category_id#1691)) AND isnotnull(i_manufact_id#1693)))\n         :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1680,i_item_id#1681,i_rec_start_date#1682,i_rec_end_date#1683,i_item_desc#1684,i_current_price#1685,i_wholesale_cost#1686,i_brand_id#1687,i_brand#1688,i_class_id#1689,i_class#1690,i_category_id#1691,i_category#1692,i_manufact_id#1693,i_manufact#1694,i_size#1695,i_formulation#1696,i_color#1697,i_units#1698,i_container#1699,i_manager_id#1700,i_product_name#1701] parquet\n         +- Project [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744]\n            +- Filter (isnotnull(wr_order_number#1742L) AND isnotnull(wr_item_sk#1731))\n               +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#1730,wr_item_sk#1731,wr_refunded_customer_sk#1732,wr_refunded_cdemo_sk#1733,wr_refunded_hdemo_sk#1734,wr_refunded_addr_sk#1735,wr_returning_customer_sk#1736,wr_returning_cdemo_sk#1737,wr_returning_hdemo_sk#1738,wr_returning_addr_sk#1739,wr_web_page_sk#1740,wr_reason_sk#1741,wr_order_number#1742L,wr_return_quantity#1743,wr_return_amt#1744,wr_return_tax#1745,wr_return_amt_inc_tax#1746,wr_fee#1747,wr_return_ship_cost#1748,wr_refunded_cash#1749,wr_reversed_charge#1750,wr_account_credit#1751,wr_net_loss#1752,wr_returned_date_sk#1753] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -1277350361,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636] Arguments: [sr_ticket_number#1634L ASC NULLS FIRST, sr_item_sk#1627 ASC NULLS FIRST], false, 0 "
          },
          "8" : {
            "sign" : -1670343231,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13899164200,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000] Input [13]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604, sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636] "
          },
          "19" : {
            "sign" : 1245499754,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 287975560,
            "rowCount" : 7199389,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744] Arguments: 29 "
          },
          "4" : {
            "sign" : -456608391,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504] Arguments: [cs_order_number#1458L ASC NULLS FIRST, cs_item_sk#1456 ASC NULLS FIRST], false, 0 "
          },
          "15" : {
            "sign" : -871602785,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 6585447880,
            "rowCount" : 86650630,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [2]: [ws_order_number#1662L, ws_item_sk#1648] Right keys [2]: [wr_order_number#1742L, wr_item_sk#1731] Join type: LeftOuter Join condition: None "
          },
          "11" : {
            "sign" : 427088440,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 437616320,
            "rowCount" : 5470204,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604] Arguments: 34 "
          },
          "9" : {
            "sign" : -1355388147,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 26408411980,
            "rowCount" : 347479105,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [2]: [ss_ticket_number#1561L, ss_item_sk#1554] Right keys [2]: [sr_ticket_number#1634L, sr_item_sk#1627] Join type: LeftOuter Join condition: None "
          },
          "13" : {
            "sign" : -1834551946,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1152064440,
            "rowCount" : 28801611,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636] Arguments: 23 "
          },
          "16" : {
            "sign" : 1768831711,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708] Arguments: [ws_order_number#1662L ASC NULLS FIRST, ws_item_sk#1648 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : -858531228,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 228220160,
            "rowCount" : 2852752,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504] Arguments: 33 "
          },
          "10" : {
            "sign" : -1081158743,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [9]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604] Arguments: [ss_ticket_number#1561L ASC NULLS FIRST, ss_item_sk#1554 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1041442380,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543] Arguments: [cr_order_number#1541L ASC NULLS FIRST, cr_item_sk#1527 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -945418864,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 23120167520,
            "rowCount" : 578004188,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "17" : {
            "sign" : 1421770562,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 114437040,
            "rowCount" : 1430463,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708] Arguments: 35 "
          },
          "14" : {
            "sign" : -470164593,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3466025200,
            "rowCount" : 86650630,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002] Input [13]: [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708, wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744] "
          },
          "0" : {
            "sign" : 1846468393,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] Keys [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] Functions: [] Aggregate Attributes: [] Results [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998] "
          },
          "2" : {
            "sign" : -1317439315,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5754978120,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998] Input [13]: [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504, cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543] "
          },
          "18" : {
            "sign" : 1847245017,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744] Arguments: [wr_order_number#1742L ASC NULLS FIRST, wr_item_sk#1731 ASC NULLS FIRST], false, 0 "
          },
          "7" : {
            "sign" : -998246433,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 575912880,
            "rowCount" : 14397822,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543] Arguments: 17 "
          },
          "3" : {
            "sign" : -9725652,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 10934458428,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [2]: [cs_order_number#1458L, cs_item_sk#1456] Right keys [2]: [cr_order_number#1541L, cr_item_sk#1527] Join type: LeftOuter Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "ShuffleQueryStage",
          "toId" : 10,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Sort",
          "toId" : 9,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "ShuffleQueryStage",
          "toId" : 12,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Sort",
          "toId" : 9,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "SortMergeJoin",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "ShuffleQueryStage",
          "toId" : 16,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Sort",
          "toId" : 15,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "ShuffleQueryStage",
          "toId" : 18,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Sort",
          "toId" : 15,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "SortMergeJoin",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998])\n+- Union\n   :- Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n   :  +- SortMergeJoin [cs_order_number#1458L, cs_item_sk#1456], [cr_order_number#1541L, cr_item_sk#1527], LeftOuter\n   :     :- Sort [cs_order_number#1458L ASC NULLS FIRST, cs_item_sk#1456 ASC NULLS FIRST], false, 0\n   :     :  +- ShuffleQueryStage 33\n   :     :     +- Exchange hashpartitioning(cs_order_number#1458L, cs_item_sk#1456, 200), ENSURE_REQUIREMENTS, [plan_id=2182]\n   :     :        +- *(22) Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n   :     :           +- *(22) BroadcastHashJoin [cs_item_sk#1456], [i_item_sk#1476], Inner, BuildRight, false\n   :     :              :- *(22) Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n   :     :              :  +- *(22) BroadcastHashJoin [cs_sold_date_sk#1475], [d_date_sk#1498], Inner, BuildRight, false\n   :     :              :     :- *(22) Filter isnotnull(cs_item_sk#1456)\n   :     :              :     :  +- *(22) ColumnarToRow\n   :     :              :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#1456,cs_order_number#1458L,cs_quantity#1459,cs_ext_sales_price#1464,cs_sold_date_sk#1475] Batched: true, DataFilters: [isnotnull(cs_item_sk#1456)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#1475), dynamicpruningexpression(cs_sold_date_sk#1475 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n   :     :              :     :           +- SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n   :     :              :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   BroadcastQueryStage 1\n                                                   +- ReusedExchange [d_date_sk#1498, d_year#1504], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                                                +- == Initial Plan ==\n                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2142]\n                                                   +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :              :     +- BroadcastQueryStage 13\n   :     :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n   :     :              :           +- *(10) Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   :     :              :              +- *(10) ColumnarToRow\n   :     :              :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :              +- BroadcastQueryStage 15\n   :     :                 +- ReusedExchange [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n   :     +- Sort [cr_order_number#1541L ASC NULLS FIRST, cr_item_sk#1527 ASC NULLS FIRST], false, 0\n   :        +- ShuffleQueryStage 17\n   :           +- ReusedExchange [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n   :- Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n   :  +- SortMergeJoin [ss_ticket_number#1561L, ss_item_sk#1554], [sr_ticket_number#1634L, sr_item_sk#1627], LeftOuter\n   :     :- Sort [ss_ticket_number#1561L ASC NULLS FIRST, ss_item_sk#1554 ASC NULLS FIRST], false, 0\n   :     :  +- ShuffleQueryStage 34\n   :     :     +- Exchange hashpartitioning(ss_ticket_number#1561L, ss_item_sk#1554, 200), ENSURE_REQUIREMENTS, [plan_id=2251]\n   :     :        +- *(23) Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n   :     :           +- *(23) BroadcastHashJoin [ss_item_sk#1554], [i_item_sk#1576], Inner, BuildRight, false\n   :     :              :- *(23) Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n   :     :              :  +- *(23) BroadcastHashJoin [ss_sold_date_sk#1575], [d_date_sk#1598], Inner, BuildRight, false\n   :     :              :     :- *(23) Filter isnotnull(ss_item_sk#1554)\n   :     :              :     :  +- *(23) ColumnarToRow\n   :     :              :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1554,ss_ticket_number#1561L,ss_quantity#1562,ss_ext_sales_price#1567,ss_sold_date_sk#1575] Batched: true, DataFilters: [isnotnull(ss_item_sk#1554)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1575), dynamicpruningexpression(ss_sold_date_sk#1575 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n   :     :              :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n   :     :              :     +- BroadcastQueryStage 19\n   :     :              :        +- ReusedExchange [d_date_sk#1598, d_year#1604], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n   :     :              +- BroadcastQueryStage 21\n   :     :                 +- ReusedExchange [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n   :     +- Sort [sr_ticket_number#1634L ASC NULLS FIRST, sr_item_sk#1627 ASC NULLS FIRST], false, 0\n   :        +- ShuffleQueryStage 23\n   :           +- ReusedExchange [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n   +- Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n      +- SortMergeJoin [ws_order_number#1662L, ws_item_sk#1648], [wr_order_number#1742L, wr_item_sk#1731], LeftOuter\n         :- Sort [ws_order_number#1662L ASC NULLS FIRST, ws_item_sk#1648 ASC NULLS FIRST], false, 0\n         :  +- ShuffleQueryStage 35\n         :     +- Exchange hashpartitioning(ws_order_number#1662L, ws_item_sk#1648, 200), ENSURE_REQUIREMENTS, [plan_id=2320]\n         :        +- *(24) Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n         :           +- *(24) BroadcastHashJoin [ws_item_sk#1648], [i_item_sk#1680], Inner, BuildRight, false\n         :              :- *(24) Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n         :              :  +- *(24) BroadcastHashJoin [ws_sold_date_sk#1679], [d_date_sk#1702], Inner, BuildRight, false\n         :              :     :- *(24) Filter isnotnull(ws_item_sk#1648)\n         :              :     :  +- *(24) ColumnarToRow\n         :              :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#1648,ws_order_number#1662L,ws_quantity#1663,ws_ext_sales_price#1668,ws_sold_date_sk#1679] Batched: true, DataFilters: [isnotnull(ws_item_sk#1648)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1679), dynamicpruningexpression(ws_sold_date_sk#1679 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n         :              :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n         :              :     +- BroadcastQueryStage 25\n         :              :        +- ReusedExchange [d_date_sk#1702, d_year#1708], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n         :              +- BroadcastQueryStage 27\n         :                 +- ReusedExchange [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n         +- Sort [wr_order_number#1742L ASC NULLS FIRST, wr_item_sk#1731 ASC NULLS FIRST], false, 0\n            +- ShuffleQueryStage 29\n               +- ReusedExchange [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2796226400,
        "inputRowCount" : 60152241
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "8" : [ 253751, 253598, 257328, 262680, 256819, 259497, 257691, 254592, 256768, 258066, 255869, 253375, 257158, 252717, 257125, 254777, 258621, 257747, 255553, 253063, 257082, 260076, 252175, 256520, 254902, 258685, 258910, 258465, 260322, 252043, 257285, 254833, 260464, 252998, 254264, 247197, 251736, 254057, 253533, 254715, 254630, 256167, 254605, 259981, 256886, 256557, 259388, 258525, 255598, 261163, 257288, 259376, 251608, 251861, 262655, 259570, 255031, 256668, 260099, 257925, 253939, 252639, 255644, 262520, 255370, 257340, 255760, 257903, 257820, 251821, 258806, 255363, 261989, 255263, 254436, 250629, 253237, 256924, 253535, 256955, 254768, 256380, 253051, 258922, 266689, 251379, 254467, 251901, 259416, 259778, 253176, 257501, 255290, 257574, 253892, 253493, 255074, 254444, 256663, 253653, 251861, 254001, 250949, 253096, 250142, 255977, 258844, 259931, 253696, 260641, 252443, 261329, 252552, 253696, 262105, 262426, 254233, 252389, 256569, 257893, 259307, 256402, 256781, 258522, 254768, 257212, 257865, 265117, 262784, 257687, 248889, 250601, 261981, 253893, 254084, 257872, 260066, 258095, 259419, 257579, 254481, 256924, 249755, 250608, 256016, 260804, 257727, 259203, 254701, 254258, 249542, 249636, 251963, 250862, 251346, 252599, 258583, 254753, 251286, 256565, 253337, 253573, 248829, 256387, 248608, 249567, 254552, 256206, 258207, 254376, 259080, 255089, 255513, 255136, 260948, 256550, 252065, 253716, 254931, 254995, 257865, 259662, 254496, 249628, 252998, 260988, 257037, 252338, 255375, 254630, 256258, 259328, 257127, 253174, 255600, 250561, 256444, 257105, 252506, 251133 ],
        "6" : [ 486967, 496061, 492848, 494365, 499195, 489244, 489610, 500480, 486129, 498399, 508627, 490688, 489578, 498594, 490342, 492266, 491745, 489885, 492130, 485658, 492912, 487675, 484405, 495154, 494083, 486704, 502126, 492769, 497831, 494251, 498326, 482877, 493865, 503861, 488264, 494051, 496225, 491941, 494433, 485687, 488896, 490202, 487893, 484837, 494615, 485137, 493839, 493133, 495047, 495221, 493212, 489296, 490902, 489021, 492994, 504125, 477797, 496685, 490948, 500787, 493244, 486672, 502294, 497007, 492594, 486561, 494490, 489635, 493155, 508070, 489296, 484955, 500986, 480064, 498280, 488564, 497021, 487825, 492758, 492755, 498934, 503049, 495179, 493612, 486133, 495136, 491038, 498756, 487072, 497464, 495578, 495229, 490888, 488871, 488439, 489035, 488121, 484498, 491791, 486390, 487700, 496350, 497535, 495525, 488419, 489256, 486968, 491934, 490524, 495643, 489610, 494740, 494226, 484655, 487925, 492111, 497385, 496232, 489492, 492416, 490180, 495786, 492341, 490801, 487367, 496903, 489817, 489064, 488564, 484530, 486411, 498078, 501733, 501330, 497717, 484173, 490092, 487700, 485337, 491070, 493280, 492141, 491295, 493769, 495147, 486979, 484794, 486967, 489576, 491177, 498424, 491666, 487493, 489799, 488075, 482995, 490927, 493430, 495652, 498602, 493430, 500095, 496425, 500134, 485840, 498389, 489713, 491777, 493087, 489499, 494972, 490431, 481474, 492712, 487950, 491334, 496882, 500873, 484751, 497678, 502513, 489842, 500252, 490888, 493087, 497628, 502890, 488075, 500073, 499149, 498274, 494647, 490674, 500027, 495643, 493286, 483859, 491151, 492987, 481010 ],
        "1" : [ 3287004, 3290398, 3298421, 3262238, 3300059, 3259305, 3270675, 3269843, 3258646, 3276142, 3268660, 3260127, 3278247, 3309490, 3294453, 3252213, 3255330, 3281324, 3299619, 3262955, 3263677, 3287994, 3237962, 3287307, 3280241, 3265355, 3269588, 3275482, 3247341, 3282581, 3270047, 3295010, 3250566, 3291642, 3266215, 3281889, 3265632, 3280412, 3254375, 3263061, 3259248, 3275939, 3296843, 3276535, 3293959, 3263325, 3256105, 3254723, 3252437, 3267425, 3300263, 3289017, 3281935, 3269345, 3288538, 3278956, 3257810, 3281342, 3275463, 3255613, 3279816, 3248269, 3244948, 3287606, 3274896, 3286911, 3263271, 3295360, 3256545, 3281006, 3287463, 3297204, 3281959, 3256215, 3277775, 3254735, 3283201, 3284674, 3242728, 3285699, 3281611, 3265868, 3275068, 3276185, 3263358, 3261760, 3257853, 3246286, 3279025, 3269072, 3266209, 3271405, 3241935, 3265168, 3256922, 3265525, 3271843, 3291431, 3256896, 3287397, 3270451, 3265509, 3284150, 3257526, 3267399, 3262195, 3260144, 3289441, 3267176, 3268496, 3278418, 3266387, 3270974, 3289867, 3268117, 3265327, 3280119, 3248926, 3260613, 3288784, 3294230, 3274061, 3264111, 3283464, 3270744, 3267089, 3278447, 3282639, 3282921, 3277889, 3294871, 3259909, 3249004, 3291571, 3259369, 3283681, 3254614, 3268841, 3274605, 3278096, 3279396, 3294483, 3259716, 3268699, 3260562, 3264440, 3261500, 3259328, 3278085, 3272110, 3276915, 3271512, 3269256, 3269980, 3265720, 3281174, 3283390, 3275356, 3262236, 3275602, 3282676, 3253919, 3287824, 3275588, 3270311, 3277743, 3270902, 3266867, 3285293, 3291375, 3269176, 3270681, 3266471, 3273231, 3270701, 3284862, 3256839, 3276165, 3260409, 3290755, 3291173, 3262454, 3288750, 3273646, 3302864, 3268005, 3272209, 3264058, 3277424, 3270845, 3267186, 3287347, 3272893, 3266553, 3270243, 3264385, 3253431, 3266428, 3269031, 3288654 ],
        "0" : [ 1613266, 1615943, 1604401, 1615344, 1611807, 1630980, 1611235, 1622676, 1601171, 1604869, 1612656, 1608699, 1605333, 1610770, 1616294, 1611769, 1604641, 1607611, 1612259, 1600727, 1608131, 1615141, 1607268, 1603890, 1616826, 1620617, 1612559, 1623085, 1598728, 1614049, 1611600, 1622061, 1618116, 1614292, 1609275, 1599599, 1624160, 1607528, 1605639, 1613538, 1607986, 1634922, 1630691, 1626232, 1603322, 1615508, 1617095, 1629720, 1619574, 1622614, 1621782, 1611049, 1622712, 1608330, 1601286, 1600791, 1604159, 1607786, 1609811, 1618679, 1608156, 1619390, 1618882, 1616654, 1621870, 1618186, 1629097, 1612355, 1620315, 1604209, 1617594, 1623333, 1614677, 1617464, 1617253, 1604516, 1623245, 1608265, 1616411, 1618498, 1613388, 1622291, 1611732, 1612206, 1592787, 1599169, 1599261, 1624301, 1625842, 1621970, 1604095, 1609204, 1619058, 1605661, 1617353, 1628378, 1610400, 1635917, 1619088, 1619732, 1607805, 1610682, 1613190, 1623138, 1617732, 1618971, 1600932, 1614246, 1626962, 1612691, 1619321, 1592741, 1623728, 1604995, 1608231, 1601323, 1606307, 1600285, 1608141, 1620338, 1618097, 1606272, 1617367, 1611268, 1620050, 1622222, 1618729, 1615974, 1605362, 1610880, 1613792, 1615965, 1619817, 1613042, 1611899, 1610882, 1608410, 1613274, 1621384, 1619303, 1612491, 1614598, 1613034, 1614237, 1627408, 1626646, 1620036, 1613005, 1634055, 1604194, 1610177, 1629571, 1637375, 1615926, 1609220, 1611040, 1613303, 1615955, 1616659, 1616077, 1621917, 1609843, 1610737, 1615967, 1627044, 1613264, 1619596, 1619876, 1612434, 1616601, 1610917, 1609617, 1607830, 1608963, 1610703, 1626758, 1619962, 1612323, 1613771, 1625667, 1604086, 1620207, 1619636, 1613091, 1613583, 1604280, 1612385, 1610672, 1620262, 1612516, 1621260, 1623722, 1611184, 1609711, 1619622, 1610711, 1603708, 1605629, 1614571, 1615392 ],
        "2" : [ 824950, 824414, 823249, 825031, 815675, 819720, 827040, 830027, 825094, 826385, 830410, 816379, 824410, 827248, 814954, 822402, 817209, 819490, 821254, 830625, 826800, 821957, 821137, 822527, 826799, 822119, 813165, 817834, 830047, 824372, 829122, 820727, 820901, 826985, 823611, 818342, 821162, 817335, 823959, 831651, 829776, 826296, 820510, 827695, 823549, 820581, 824432, 820516, 812858, 828619, 820421, 818595, 821353, 832102, 823375, 811994, 820509, 821182, 821594, 817620, 818440, 824499, 822031, 825868, 832522, 816980, 813233, 817839, 819135, 817323, 833555, 821951, 818027, 823511, 816865, 822433, 828018, 826990, 816899, 821301, 816684, 815572, 813331, 823169, 829582, 824749, 813356, 820985, 816664, 817752, 829995, 821831, 818418, 820771, 824383, 810678, 821412, 822520, 816957, 826553, 821813, 828356, 828108, 819425, 828868, 822571, 820326, 818732, 813183, 820209, 810891, 832210, 819257, 832069, 828031, 823248, 822752, 820207, 822761, 827819, 827597, 821394, 826157, 825587, 817761, 813187, 819634, 831709, 822057, 820902, 812085, 833821, 821954, 829110, 827876, 824115, 832245, 821333, 827232, 821967, 826763, 810955, 812777, 834192, 816115, 822051, 813913, 812368, 821677, 829655, 831403, 830303, 821924, 814576, 814271, 827753, 826916, 823794, 825446, 819431, 823072, 822464, 827399, 827737, 823270, 823849, 812557, 824242, 821382, 829601, 819127, 819551, 824412, 816837, 815694, 813132, 812298, 815484, 828499, 824012, 816718, 834591, 824022, 825105, 818683, 826879, 826493, 825607, 825632, 824770, 828158, 818840, 826377, 829172, 818500, 830885, 818055, 822345, 831693, 818944 ],
        "7" : [ 963297, 967708, 975591, 964534, 960266, 969415, 976031, 968076, 960045, 971208, 955825, 959133, 965090, 964530, 960532, 953002, 971427, 978899, 968692, 965412, 959577, 957557, 963076, 968986, 974629, 958205, 971033, 971147, 970531, 967796, 961779, 966766, 970664, 955546, 968986, 973868, 956853, 971103, 956578, 970338, 959705, 970987, 960266, 969690, 955826, 959912, 968090, 947620, 964222, 959839, 979058, 957902, 966661, 970048, 963327, 971648, 945207, 966766, 969827, 965193, 972411, 953357, 962782, 955222, 984002, 964705, 967812, 956147, 977811, 974782, 969207, 958205, 972719, 963401, 971473, 960705, 961779, 960238, 961296, 958693, 973544, 960019, 975470, 960586, 974094, 960665, 957177, 962763, 965927, 962043, 966928, 976943, 959372, 966663, 968222, 970823, 950105, 949002, 966704, 973914, 957442, 967090, 969031, 968660, 974825, 961029, 963675, 949544, 974135, 973544, 968664, 968767, 967368, 964680, 966617, 967090, 958369, 961649, 967265, 976724, 960443, 971030, 955785, 971397, 961029, 965412, 973868, 966383, 959532, 969825, 977925, 972165, 967899, 963896, 962866, 967249, 959235, 961296, 966766, 964546, 972961, 974458, 954223, 979883, 975546, 981221, 962782, 969676, 971308, 966442, 971250, 970987, 971910, 966547, 973264, 957177, 968664, 970340, 979486, 968797, 960856, 962707, 969781, 980692, 964659, 952031, 954089, 967737, 976309, 965239, 971135, 972886, 969779, 965296, 975869, 965547, 960459, 966223, 970809, 975569, 969590, 976279, 958884, 961838, 972560, 969900, 980913, 965957, 966356, 961045, 966116, 965571, 966601, 964972, 976838, 970777, 962383, 966987, 964972, 978518 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 13,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 28 ],
      "Objectives" : {
        "DurationInMs" : 15050,
        "TotalTasksDurationInMs" : 88028,
        "IOBytes" : {
          "Total" : 1631082431,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1414499525,
            "SW" : 216582906
          }
        }
      }
    },
    "16" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 828192905,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1763344,
                "rowCount" : 40076
              },
              "compileTime" : {
                "sizeInBytes" : 1763344,
                "rowCount" : 40076
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1003L) "
          },
          "1" : {
            "sign" : -2053908183,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2564864,
                "rowCount" : 40076
              },
              "compileTime" : {
                "sizeInBytes" : 25432184272,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(sales_cnt#1003L)\n+- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -139791359,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1763344,
            "rowCount" : 40076,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1003L, sales_amt#1004] Condition : isnotnull(sales_cnt#1003L) "
          },
          "1" : {
            "sign" : -979263721,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2564864,
            "rowCount" : 40076,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum#1764L, sum#1765L] Keys [5]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] Functions [2]: [sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))] Aggregate Attributes [2]: [sum(sales_cnt#997)#1109L, sum(UnscaledValue(sales_amt#998))#1110L] Results [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997)#1109L AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998))#1110L,18,2) AS sales_amt#1004] "
          },
          "2" : {
            "sign" : -923195213,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum#1764L, sum#1765L] Arguments: 38 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(sales_cnt#1003L)\n+- HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1003L, sales_amt#1004])\n   +- ShuffleQueryStage 38\n      +- Exchange hashpartitioning(d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, 200), ENSURE_REQUIREMENTS, [plan_id=3709]\n         +- *(45) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum#1764L, sum#1765L])\n            +- *(45) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 36\n                     +- Exchange hashpartitioning(d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998, 200), ENSURE_REQUIREMENTS, [plan_id=3149]\n                        +- *(34) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n                           +- Union\n                              :- *(27) Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n                              :  +- *(27) SortMergeJoin [cs_order_number#30L, cs_item_sk#28], [cr_order_number#113L, cr_item_sk#99], LeftOuter\n                              :     :- *(25) Sort [cs_order_number#30L ASC NULLS FIRST, cs_item_sk#28 ASC NULLS FIRST], false, 0\n                              :     :  +- AQEShuffleRead coalesced\n                              :     :     +- ShuffleQueryStage 30\n                              :     :        +- Exchange hashpartitioning(cs_order_number#30L, cs_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=1901]\n                              :     :           +- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n                              :     :              +- *(19) BroadcastHashJoin [cs_item_sk#28], [i_item_sk#48], Inner, BuildRight, false\n                              :     :                 :- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n                              :     :                 :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#47], [d_date_sk#70], Inner, BuildRight, false\n                              :     :                 :     :- *(19) Filter isnotnull(cs_item_sk#28)\n                              :     :                 :     :  +- *(19) ColumnarToRow\n                              :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#28,cs_order_number#30L,cs_quantity#31,cs_ext_sales_price#36,cs_sold_date_sk#47] Batched: true, DataFilters: [isnotnull(cs_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#47), dynamicpruningexpression(cs_sold_date_sk#47 IN dynamicpruning#1756)], PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n                              :     :                 :     :           +- SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n                              :     :                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                              +- == Final Plan ==\n                                                                                 BroadcastQueryStage 1\n                                                                                 +- ReusedExchange [d_date_sk#70, d_year#76], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                                                                              +- == Initial Plan ==\n                                                                                 BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1861]\n                                                                                 +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                              :     :                 :     +- BroadcastQueryStage 0\n                              :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                              :     :                 :           +- *(1) Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n                              :     :                 :              +- *(1) ColumnarToRow\n                              :     :                 :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                              :     :                 +- BroadcastQueryStage 1\n                              :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                              :     :                       +- *(2) Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n                              :     :                          +- *(2) Filter ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))\n                              :     :                             +- *(2) ColumnarToRow\n                              :     :                                +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#48,i_brand_id#55,i_class_id#57,i_category_id#59,i_category#60,i_manufact_id#61] Batched: true, DataFilters: [isnotnull(i_category#60), (i_category#60 = Sports), isnotnull(i_item_sk#48), isnotnull(i_brand_i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...\n                              :     +- *(26) Sort [cr_order_number#113L ASC NULLS FIRST, cr_item_sk#99 ASC NULLS FIRST], false, 0\n                              :        +- AQEShuffleRead coalesced\n                              :           +- ShuffleQueryStage 2\n                              :              +- Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n                              :                 +- *(3) Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n                              :                    +- *(3) Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n                              :                       +- *(3) ColumnarToRow\n                              :                          +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_item_sk#99,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_returned_date_sk#124] Batched: true, DataFilters: [isnotnull(cr_order_number#113L), isnotnull(cr_item_sk#99)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_re..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>\n                              :- *(30) Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n                              :  +- *(30) SortMergeJoin [ss_ticket_number#133L, ss_item_sk#126], [sr_ticket_number#156L, sr_item_sk#149], LeftOuter\n                              :     :- *(28) Sort [ss_ticket_number#133L ASC NULLS FIRST, ss_item_sk#126 ASC NULLS FIRST], false, 0\n                              :     :  +- AQEShuffleRead coalesced\n                              :     :     +- ShuffleQueryStage 31\n                              :     :        +- Exchange hashpartitioning(ss_ticket_number#133L, ss_item_sk#126, 200), ENSURE_REQUIREMENTS, [plan_id=1970]\n                              :     :           +- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n                              :     :              +- *(20) BroadcastHashJoin [ss_item_sk#126], [i_item_sk#1005], Inner, BuildRight, false\n                              :     :                 :- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n                              :     :                 :  +- *(20) BroadcastHashJoin [ss_sold_date_sk#147], [d_date_sk#1027], Inner, BuildRight, false\n                              :     :                 :     :- *(20) Filter isnotnull(ss_item_sk#126)\n                              :     :                 :     :  +- *(20) ColumnarToRow\n                              :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#126,ss_ticket_number#133L,ss_quantity#134,ss_ext_sales_price#139,ss_sold_date_sk#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#147), dynamicpruningexpression(ss_sold_date_sk#147 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n                              :     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n                              :     :                 :     +- BroadcastQueryStage 4\n                              :     :                 :        +- ReusedExchange [d_date_sk#1027, d_year#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                              :     :                 +- BroadcastQueryStage 6\n                              :     :                    +- ReusedExchange [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                              :     +- *(29) Sort [sr_ticket_number#156L ASC NULLS FIRST, sr_item_sk#149 ASC NULLS FIRST], false, 0\n                              :        +- AQEShuffleRead coalesced\n                              :           +- ShuffleQueryStage 7\n                              :              +- Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n                              :                 +- *(6) Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n                              :                    +- *(6) Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n                              :                       +- *(6) ColumnarToRow\n                              :                          +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#149,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_returned_date_sk#167] Batched: true, DataFilters: [isnotnull(sr_ticket_number#156L), isnotnull(sr_item_sk#149)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>\n                              +- *(33) Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n                                 +- *(33) SortMergeJoin [ws_order_number#184L, ws_item_sk#170], [wr_order_number#214L, wr_item_sk#203], LeftOuter\n                                    :- *(31) Sort [ws_order_number#184L ASC NULLS FIRST, ws_item_sk#170 ASC NULLS FIRST], false, 0\n                                    :  +- AQEShuffleRead coalesced\n                                    :     +- ShuffleQueryStage 32\n                                    :        +- Exchange hashpartitioning(ws_order_number#184L, ws_item_sk#170, 200), ENSURE_REQUIREMENTS, [plan_id=2039]\n                                    :           +- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n                                    :              +- *(21) BroadcastHashJoin [ws_item_sk#170], [i_item_sk#1055], Inner, BuildRight, false\n                                    :                 :- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n                                    :                 :  +- *(21) BroadcastHashJoin [ws_sold_date_sk#201], [d_date_sk#1077], Inner, BuildRight, false\n                                    :                 :     :- *(21) Filter isnotnull(ws_item_sk#170)\n                                    :                 :     :  +- *(21) ColumnarToRow\n                                    :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#170,ws_order_number#184L,ws_quantity#185,ws_ext_sales_price#190,ws_sold_date_sk#201] Batched: true, DataFilters: [isnotnull(ws_item_sk#170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#201), dynamicpruningexpression(ws_sold_date_sk#201 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n                                    :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n                                    :                 :     +- BroadcastQueryStage 9\n                                    :                 :        +- ReusedExchange [d_date_sk#1077, d_year#1083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                                    :                 +- BroadcastQueryStage 11\n                                    :                    +- ReusedExchange [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                                    +- *(32) Sort [wr_order_number#214L ASC NULLS FIRST, wr_item_sk#203 ASC NULLS FIRST], false, 0\n                                       +- AQEShuffleRead coalesced\n                                          +- ShuffleQueryStage 12\n                                             +- Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n                                                +- *(9) Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n                                                   +- *(9) Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n                                                      +- *(9) ColumnarToRow\n                                                         +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_item_sk#203,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_returned_date_sk#225] Batched: true, DataFilters: [isnotnull(wr_order_number#214L), isnotnull(wr_item_sk#203)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2564864,
        "inputRowCount" : 40076
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "11" : [ 8192, 6152, 6152, 5596, 4204, 4739, 5212, 5084, 5735, 4624, 5340, 4204, 5596, 5596, 5212, 5084, 5596, 6768, 5084, 7448, 4624, 5596, 4969, 5735, 5596, 5084, 4624, 5084, 5084, 5084, 4624, 5084, 5735, 5596, 5212, 5084, 6013, 7448, 5084, 5596, 5596, 5084, 5340, 5596, 6614, 7278, 5084, 5084, 5468, 5468, 6152, 5596, 6152, 5596, 5084, 5596, 5340, 5084, 5596, 4624, 6614, 4204, 4624, 5596, 6306, 4739, 6768, 4624, 6152, 5596, 5596, 6152, 5084, 4969, 5596, 5212, 5084, 5596, 6768, 5596, 5596, 6152, 5596, 6152, 6152, 5084, 6013, 6152, 4739, 5596, 4624, 6768, 5735, 5084, 5596, 5084, 5596, 5874, 4739, 6768, 5084, 5596, 4204, 5084, 7108, 4108, 5596, 5596, 6152, 6152, 5084, 5596, 6152, 5084, 5596, 4739, 7448, 6152, 5596, 6152, 3820, 6152, 6614, 5596, 5874, 5596, 5596, 6768, 6152, 6152, 5596, 6152, 4739, 5212, 6152, 5596, 5596, 7448, 4624, 5596, 6152, 6152, 6306, 4309, 6152, 5084, 5596, 6152, 5596, 5596, 5084, 5596, 5596, 5468, 5084, 5596, 5084, 5735, 4624, 6768, 5084, 5084, 5212, 5596, 5596, 6306, 5596, 5596, 5735, 5084, 5735, 5468, 5596, 6152, 4624, 5596, 4624, 5084, 4204, 6152, 4854, 5212, 6152, 4969, 6152, 6768, 6152, 5596, 5596, 5084, 5084, 5874, 5212, 6152, 6768, 6152, 4204, 5596, 4519, 5596 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 16,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 44 ],
      "Objectives" : {
        "DurationInMs" : 117,
        "TotalTasksDurationInMs" : 106,
        "IOBytes" : {
          "Total" : 1062013,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1062013,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1993223375,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 230380448,
                "rowCount" : 7199389
              },
              "compileTime" : {
                "sizeInBytes" : 230380448,
                "rowCount" : 7199389
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216] "
          },
          "1" : {
            "sign" : -371559938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1036712016,
                "rowCount" : 7199389
              },
              "compileTime" : {
                "sizeInBytes" : 1036712016,
                "rowCount" : 7199389
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203)) "
          },
          "2" : {
            "sign" : 1990304044,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1036712016,
                "rowCount" : 7199389
              },
              "compileTime" : {
                "sizeInBytes" : 1036712016,
                "rowCount" : 7199389
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#202, wr_item_sk#203, wr_refunded_customer_sk#204, wr_refunded_cdemo_sk#205, wr_refunded_hdemo_sk#206, wr_refunded_addr_sk#207, wr_returning_customer_sk#208, wr_returning_cdemo_sk#209, wr_returning_hdemo_sk#210, wr_returning_addr_sk#211, wr_web_page_sk#212, wr_reason_sk#213, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216, wr_return_tax#217, wr_return_amt_inc_tax#218, wr_fee#219, wr_return_ship_cost#220, wr_refunded_cash#221, wr_reversed_charge#222, wr_account_credit#223, wr_net_loss#224, wr_returned_date_sk#225], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n+- Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n   +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#202,wr_item_sk#203,wr_refunded_customer_sk#204,wr_refunded_cdemo_sk#205,wr_refunded_hdemo_sk#206,wr_refunded_addr_sk#207,wr_returning_customer_sk#208,wr_returning_cdemo_sk#209,wr_returning_hdemo_sk#210,wr_returning_addr_sk#211,wr_web_page_sk#212,wr_reason_sk#213,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_return_tax#217,wr_return_amt_inc_tax#218,wr_fee#219,wr_return_ship_cost#220,wr_refunded_cash#221,wr_reversed_charge#222,wr_account_credit#223,wr_net_loss#224,wr_returned_date_sk#225] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1561393491,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 230380448,
            "rowCount" : 7199389,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216] Input [5]: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216, wr_returned_date_sk#225] "
          },
          "1" : {
            "sign" : -2079391458,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 230380448,
            "rowCount" : 7199389,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216, wr_returned_date_sk#225] Condition : (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203)) "
          },
          "2" : {
            "sign" : 245677872,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 230380448,
            "rowCount" : 7199389,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_returns Output [5]: [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216, wr_returned_date_sk#225] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns] PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)] ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_returns",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n+- Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n   +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_item_sk#203,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_returned_date_sk#225] Batched: true, DataFilters: [isnotnull(wr_order_number#214L), isnotnull(wr_item_sk#203)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 230380448,
        "inputRowCount" : 7199389
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 2253,
        "TotalTasksDurationInMs" : 33744,
        "IOBytes" : {
          "Total" : 279164274,
          "Details" : {
            "IR" : 122495138,
            "IW" : 0,
            "SR" : 0,
            "SW" : 156669136
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1643639460,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9901632708,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 9901632708,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575] "
          },
          "5" : {
            "sign" : -111951003,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#1554) AND isnotnull(ss_sold_date_sk#1575)) AND dynamicpruning#1760 [ss_sold_date_sk#1575]) "
          },
          "6" : {
            "sign" : -207052733,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1553, ss_item_sk#1554, ss_customer_sk#1555, ss_cdemo_sk#1556, ss_hdemo_sk#1557, ss_addr_sk#1558, ss_store_sk#1559, ss_promo_sk#1560, ss_ticket_number#1561L, ss_quantity#1562, ss_wholesale_cost#1563, ss_list_price#1564, ss_sales_price#1565, ss_ext_discount_amt#1566, ss_ext_sales_price#1567, ss_ext_wholesale_cost#1568, ss_ext_list_price#1569, ss_ext_tax#1570, ss_coupon_amt#1571, ss_net_paid#1572, ss_net_paid_inc_tax#1573, ss_net_profit#1574, ss_sold_date_sk#1575], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -978592561,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16086443576,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 16086443576,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1576 = ss_item_sk#1554) "
          },
          "0" : {
            "sign" : -1492154864,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604] "
          },
          "2" : {
            "sign" : -1931762472,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604] "
          },
          "3" : {
            "sign" : -1236028923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11683785740,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 11683785740,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1598 = ss_sold_date_sk#1575) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n+- Join Inner, (i_item_sk#1576 = ss_item_sk#1554)\n   :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n   :  +- Join Inner, (d_date_sk#1598 = ss_sold_date_sk#1575)\n   :     :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575]\n   :     :  +- Filter ((isnotnull(ss_item_sk#1554) AND isnotnull(ss_sold_date_sk#1575)) AND dynamicpruning#1760 [ss_sold_date_sk#1575])\n   :     :     :  +- Project [d_date_sk#1598, d_year#1604]\n   :     :     :     +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1553,ss_item_sk#1554,ss_customer_sk#1555,ss_cdemo_sk#1556,ss_hdemo_sk#1557,ss_addr_sk#1558,ss_store_sk#1559,ss_promo_sk#1560,ss_ticket_number#1561L,ss_quantity#1562,ss_wholesale_cost#1563,ss_list_price#1564,ss_sales_price#1565,ss_ext_discount_amt#1566,ss_ext_sales_price#1567,ss_ext_wholesale_cost#1568,ss_ext_list_price#1569,ss_ext_tax#1570,ss_coupon_amt#1571,ss_net_paid#1572,ss_net_paid_inc_tax#1573,ss_net_profit#1574,ss_sold_date_sk#1575] parquet\n   :     +- Project [d_date_sk#1598, d_year#1604]\n   :        +- Filter ((isnotnull(d_year#1604) AND (d_year#1604 = 2001)) AND isnotnull(d_date_sk#1598))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1598,d_date_id#1599,d_date#1600,d_month_seq#1601,d_week_seq#1602,d_quarter_seq#1603,d_year#1604,d_dow#1605,d_moy#1606,d_dom#1607,d_qoy#1608,d_fy_year#1609,d_fy_quarter_seq#1610,d_fy_week_seq#1611,d_day_name#1612,d_quarter_name#1613,d_holiday#1614,d_weekend#1615,d_following_holiday#1616,d_first_dom#1617,d_last_dom#1618,d_same_day_ly#1619,d_same_day_lq#1620,d_current_day#1621,... 4 more fields] parquet\n   +- Project [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589]\n      +- Filter (((isnotnull(i_category#1588) AND (i_category#1588 = Sports)) AND isnotnull(i_item_sk#1576)) AND (((isnotnull(i_brand_id#1583) AND isnotnull(i_class_id#1585)) AND isnotnull(i_category_id#1587)) AND isnotnull(i_manufact_id#1589)))\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#1576,i_item_id#1577,i_rec_start_date#1578,i_rec_end_date#1579,i_item_desc#1580,i_current_price#1581,i_wholesale_cost#1582,i_brand_id#1583,i_brand#1584,i_class_id#1585,i_class#1586,i_category_id#1587,i_category#1588,i_manufact_id#1589,i_manufact#1590,i_size#1591,i_formulation#1592,i_color#1593,i_units#1594,i_container#1595,i_manager_id#1596,i_product_name#1597] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 490133263,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9901632708,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575] Condition : isnotnull(ss_item_sk#1554) "
          },
          "5" : {
            "sign" : 532013289,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9901632708,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [5]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#1575), dynamicpruningexpression(ss_sold_date_sk#1575 IN dynamicpruning#1759)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)> "
          },
          "6" : {
            "sign" : -440875982,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#1598, d_year#1604] Arguments: 19 "
          },
          "1" : {
            "sign" : -138082138,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 16086443576,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#1554] Right keys [1]: [i_item_sk#1576] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1508515785,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604] Input [10]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604, i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589] "
          },
          "2" : {
            "sign" : -1817526283,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604] Input [7]: [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, ss_sold_date_sk#1575, d_date_sk#1598, d_year#1604] "
          },
          "7" : {
            "sign" : 713831801,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589] Arguments: 21 "
          },
          "3" : {
            "sign" : 1463442594,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 11683785740,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#1575] Right keys [1]: [d_date_sk#1598] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n+- BroadcastHashJoin [ss_item_sk#1554], [i_item_sk#1576], Inner, BuildRight, false\n   :- Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n   :  +- BroadcastHashJoin [ss_sold_date_sk#1575], [d_date_sk#1598], Inner, BuildRight, false\n   :     :- Filter isnotnull(ss_item_sk#1554)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1554,ss_ticket_number#1561L,ss_quantity#1562,ss_ext_sales_price#1567,ss_sold_date_sk#1575] Batched: true, DataFilters: [isnotnull(ss_item_sk#1554)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1575), dynamicpruningexpression(ss_sold_date_sk#1575 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n   :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n   :     +- BroadcastQueryStage 19\n   :        +- ReusedExchange [d_date_sk#1598, d_year#1604], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n   +- BroadcastQueryStage 21\n      +- ReusedExchange [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9905829932,
        "inputRowCount" : 275066084
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 16 ],
      "Objectives" : {
        "DurationInMs" : 5243,
        "TotalTasksDurationInMs" : 15553,
        "IOBytes" : {
          "Total" : 715033552,
          "Details" : {
            "IR" : 530892188,
            "IW" : 0,
            "SR" : 0,
            "SW" : 184141364
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 436801988,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5157828612,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 5157828612,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47] "
          },
          "5" : {
            "sign" : -1981491477,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#1756 [cs_sold_date_sk#47]) "
          },
          "6" : {
            "sign" : -1998356572,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#14, cs_ship_date_sk#15, cs_bill_customer_sk#16, cs_bill_cdemo_sk#17, cs_bill_hdemo_sk#18, cs_bill_addr_sk#19, cs_ship_customer_sk#20, cs_ship_cdemo_sk#21, cs_ship_hdemo_sk#22, cs_ship_addr_sk#23, cs_call_center_sk#24, cs_catalog_page_sk#25, cs_ship_mode_sk#26, cs_warehouse_sk#27, cs_item_sk#28, cs_promo_sk#29, cs_order_number#30L, cs_quantity#31, cs_wholesale_cost#32, cs_list_price#33, cs_sales_price#34, cs_ext_discount_amt#35, cs_ext_sales_price#36, cs_ext_wholesale_cost#37, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 131846602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8056969368,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 8056969368,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#48 = cs_item_sk#28) "
          },
          "0" : {
            "sign" : -1630549877,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76] "
          },
          "2" : {
            "sign" : -1543079981,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4986585432,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 4986585432,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76] "
          },
          "3" : {
            "sign" : 405247553,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6094715528,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 6094715528,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#70 = cs_sold_date_sk#47) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n+- Join Inner, (i_item_sk#48 = cs_item_sk#28)\n   :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n   :  +- Join Inner, (d_date_sk#70 = cs_sold_date_sk#47)\n   :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47]\n   :     :  +- Filter ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#1756 [cs_sold_date_sk#47])\n   :     :     :  +- Project [d_date_sk#70, d_year#76]\n   :     :     :     +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#14,cs_ship_date_sk#15,cs_bill_customer_sk#16,cs_bill_cdemo_sk#17,cs_bill_hdemo_sk#18,cs_bill_addr_sk#19,cs_ship_customer_sk#20,cs_ship_cdemo_sk#21,cs_ship_hdemo_sk#22,cs_ship_addr_sk#23,cs_call_center_sk#24,cs_catalog_page_sk#25,cs_ship_mode_sk#26,cs_warehouse_sk#27,cs_item_sk#28,cs_promo_sk#29,cs_order_number#30L,cs_quantity#31,cs_wholesale_cost#32,cs_list_price#33,cs_sales_price#34,cs_ext_discount_amt#35,cs_ext_sales_price#36,cs_ext_wholesale_cost#37,... 10 more fields] parquet\n   :     +- Project [d_date_sk#70, d_year#76]\n   :        +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n   +- Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n      +- Filter (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61)))\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#48,i_item_id#49,i_rec_start_date#50,i_rec_end_date#51,i_item_desc#52,i_current_price#53,i_wholesale_cost#54,i_brand_id#55,i_brand#56,i_class_id#57,i_class#58,i_category_id#59,i_category#60,i_manufact_id#61,i_manufact#62,i_size#63,i_formulation#64,i_color#65,i_units#66,i_container#67,i_manager_id#68,i_product_name#69] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1585366677,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5157828612,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47] Condition : isnotnull(cs_item_sk#28) "
          },
          "5" : {
            "sign" : -2059126560,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5157828612,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [5]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#47), dynamicpruningexpression(cs_sold_date_sk#47 IN dynamicpruning#1756)] PushedFilters: [IsNotNull(cs_item_sk)] ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)> "
          },
          "6" : {
            "sign" : -708507240,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#70, d_year#76] Arguments: 0 "
          },
          "1" : {
            "sign" : 90526167,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8056969368,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#28] Right keys [1]: [i_item_sk#48] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -985315582,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76] Input [10]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76, i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] "
          },
          "2" : {
            "sign" : 881695789,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4986585432,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76] Input [7]: [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47, d_date_sk#70, d_year#76] "
          },
          "7" : {
            "sign" : -1596342630,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] Arguments: 1 "
          },
          "3" : {
            "sign" : -2063435853,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6094715528,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#47] Right keys [1]: [d_date_sk#70] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n+- BroadcastHashJoin [cs_item_sk#28], [i_item_sk#48], Inner, BuildRight, false\n   :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n   :  +- BroadcastHashJoin [cs_sold_date_sk#47], [d_date_sk#70], Inner, BuildRight, false\n   :     :- Filter isnotnull(cs_item_sk#28)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#28,cs_order_number#30L,cs_quantity#31,cs_ext_sales_price#36,cs_sold_date_sk#47] Batched: true, DataFilters: [isnotnull(cs_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#47), dynamicpruningexpression(cs_sold_date_sk#47 IN dynamicpruning#1756)], PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n   :     :        +- SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n   :     :           +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1861]\n   :     :                 +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     +- BroadcastQueryStage 0\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n   :           +- *(1) Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   :              +- *(1) ColumnarToRow\n   :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n         +- *(2) Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n            +- *(2) Filter ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#48,i_brand_id#55,i_class_id#57,i_category_id#59,i_category#60,i_manufact_id#61] Batched: true, DataFilters: [isnotnull(i_category#60), (i_category#60 = Sports), isnotnull(i_item_sk#48), isnotnull(i_brand_i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5162025836,
        "inputRowCount" : 143293748
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 2282,
        "TotalTasksDurationInMs" : 11744,
        "IOBytes" : {
          "Total" : 387417899,
          "Details" : {
            "IR" : 294581603,
            "IW" : 0,
            "SR" : 0,
            "SW" : 92836296
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1903028525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 564424,
                "rowCount" : 20158
              },
              "compileTime" : {
                "sizeInBytes" : 564424,
                "rowCount" : 20158
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] "
          },
          "1" : {
            "sign" : -1651031296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8587308,
                "rowCount" : 20158
              },
              "compileTime" : {
                "sizeInBytes" : 8587308,
                "rowCount" : 20158
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))) "
          },
          "2" : {
            "sign" : 65686849,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#48, i_item_id#49, i_rec_start_date#50, i_rec_end_date#51, i_item_desc#52, i_current_price#53, i_wholesale_cost#54, i_brand_id#55, i_brand#56, i_class_id#57, i_class#58, i_category_id#59, i_category#60, i_manufact_id#61, i_manufact#62, i_size#63, i_formulation#64, i_color#65, i_units#66, i_container#67, i_manager_id#68, i_product_name#69], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n+- Filter (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61)))\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#48,i_item_id#49,i_rec_start_date#50,i_rec_end_date#51,i_item_desc#52,i_current_price#53,i_wholesale_cost#54,i_brand_id#55,i_brand#56,i_class_id#57,i_class#58,i_category_id#59,i_category#60,i_manufact_id#61,i_manufact#62,i_size#63,i_formulation#64,i_color#65,i_units#66,i_container#67,i_manager_id#68,i_product_name#69] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1345451499,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 564424,
            "rowCount" : 20158,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] Input [6]: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_category#60, i_manufact_id#61] "
          },
          "1" : {
            "sign" : 1624530262,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 564424,
            "rowCount" : 20158,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_category#60, i_manufact_id#61] Condition : ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61)) "
          },
          "2" : {
            "sign" : 190909819,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 564424,
            "rowCount" : 20158,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [6]: [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_category#60, i_manufact_id#61] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id), IsNotNull(i_manufact_id)] ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact_id:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n+- Filter ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))\n   +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#48,i_brand_id#55,i_class_id#57,i_category_id#59,i_category#60,i_manufact_id#61] Batched: true, DataFilters: [isnotnull(i_category#60), (i_category#60 = Sports), isnotnull(i_item_sk#48), isnotnull(i_brand_i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 564424,
        "inputRowCount" : 20158
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 3289,
        "TotalTasksDurationInMs" : 11166,
        "IOBytes" : {
          "Total" : 1704717,
          "Details" : {
            "IR" : 1704717,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "17" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1488322876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 44845689542925568,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 44845689542925568,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000)) "
          },
          "5" : {
            "sign" : 1713162364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1752256,
                "rowCount" : 39824
              },
              "compileTime" : {
                "sizeInBytes" : 1752256,
                "rowCount" : 39824
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(sales_cnt#1116L) "
          },
          "6" : {
            "sign" : 580435615,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2548736,
                "rowCount" : 39824
              },
              "compileTime" : {
                "sizeInBytes" : 25432184272,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))]) "
          },
          "1" : {
            "sign" : -175234635,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 40361120588633011,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 40361120588633011,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -971104696,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7200,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 7200,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1194201182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 40361120588633011,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 40361120588633011,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [sales_cnt_diff#995L ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -296798359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 40361120588633011,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 40361120588633011,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [sales_cnt_diff#995L ASC NULLS FIRST], true\n      +- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n         +- Join Inner, (((((i_brand_id#55 = i_brand_id#1483) AND (i_class_id#57 = i_class_id#1485)) AND (i_category_id#59 = i_category_id#1487)) AND (i_manufact_id#61 = i_manufact_id#1489)) AND ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000))\n            :- Filter isnotnull(sales_cnt#1003L)\n            :  +- LogicalQueryStage Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004], HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n            +- Filter isnotnull(sales_cnt#1116L)\n               +- LogicalQueryStage Aggregate [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997) AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1117], HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -774449297,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1752256,
            "rowCount" : 39824,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#1116L, sales_amt#1117] Condition : isnotnull(sales_cnt#1116L) "
          },
          "5" : {
            "sign" : 1180114482,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2548736,
            "rowCount" : 39824,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum#1764L, sum#1767L] Keys [5]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489] Functions [2]: [sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))] Aggregate Attributes [2]: [sum(sales_cnt#997)#1109L, sum(UnscaledValue(sales_amt#998))#1110L] Results [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum(sales_cnt#997)#1109L AS sales_cnt#1116L, MakeDecimal(sum(UnscaledValue(sales_amt#998))#1110L,18,2) AS sales_amt#1117] "
          },
          "6" : {
            "sign" : 741373370,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum#1764L, sum#1767L] Arguments: 39 "
          },
          "1" : {
            "sign" : -9189300,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 40361120588633011,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [10]: [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996] Input [14]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1003L, sales_amt#1004, d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#1116L, sales_amt#1117] "
          },
          "0" : {
            "sign" : 2121046899,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 7200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [10]: [prev_year#991, year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, prev_yr_cnt#993L, curr_yr_cnt#994L, sales_cnt_diff#995L, sales_amt_diff#996] Arguments: 100, [sales_cnt_diff#995L ASC NULLS FIRST], [prev_year#991, year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, prev_yr_cnt#993L, curr_yr_cnt#994L, sales_cnt_diff#995L, sales_amt_diff#996] "
          },
          "2" : {
            "sign" : 1035303907,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 44845689542925568,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [4]: [i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] Right keys [4]: [i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489] Join type: Inner Join condition: ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000) "
          },
          "3" : {
            "sign" : 1406090530,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 34078720,
            "rowCount" : 10019,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1003L, sales_amt#1004] Arguments: 40 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "HashAggregate",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#995L ASC NULLS FIRST], output=[prev_year#991,year#992,i_brand_id#55,i_class_id#57,i_category_id#59,i_manufact_id#61,prev_yr_cnt#993L,curr_yr_cnt#994L,sales_cnt_diff#995L,sales_amt_diff#996])\n+- Project [d_year#1504 AS prev_year#991, d_year#76 AS year#992, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1116L AS prev_yr_cnt#993L, sales_cnt#1003L AS curr_yr_cnt#994L, (sales_cnt#1003L - sales_cnt#1116L) AS sales_cnt_diff#995L, (sales_amt#1004 - sales_amt#1117) AS sales_amt_diff#996]\n   +- BroadcastHashJoin [i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], Inner, BuildLeft, ((cast(sales_cnt#1003L as decimal(17,2)) / cast(sales_cnt#1116L as decimal(17,2))) < 0.90000000000000000000), false\n      :- BroadcastQueryStage 40\n      :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true], input[4, int, true]),false), [plan_id=3837]\n      :     +- *(47) Filter isnotnull(sales_cnt#1003L)\n      :        +- *(47) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#1003L, sales_amt#1004])\n      :           +- AQEShuffleRead coalesced\n      :              +- ShuffleQueryStage 38\n      :                 +- Exchange hashpartitioning(d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, 200), ENSURE_REQUIREMENTS, [plan_id=3709]\n      :                    +- *(45) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum#1764L, sum#1765L])\n      :                       +- *(45) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n      :                          +- AQEShuffleRead coalesced\n      :                             +- ShuffleQueryStage 36\n      :                                +- Exchange hashpartitioning(d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998, 200), ENSURE_REQUIREMENTS, [plan_id=3149]\n      :                                   +- *(34) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n      :                                      +- Union\n      :                                         :- *(27) Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n      :                                         :  +- *(27) SortMergeJoin [cs_order_number#30L, cs_item_sk#28], [cr_order_number#113L, cr_item_sk#99], LeftOuter\n      :                                         :     :- *(25) Sort [cs_order_number#30L ASC NULLS FIRST, cs_item_sk#28 ASC NULLS FIRST], false, 0\n      :                                         :     :  +- AQEShuffleRead coalesced\n      :                                         :     :     +- ShuffleQueryStage 30\n      :                                         :     :        +- Exchange hashpartitioning(cs_order_number#30L, cs_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=1901]\n      :                                         :     :           +- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n      :                                         :     :              +- *(19) BroadcastHashJoin [cs_item_sk#28], [i_item_sk#48], Inner, BuildRight, false\n      :                                         :     :                 :- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n      :                                         :     :                 :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#47], [d_date_sk#70], Inner, BuildRight, false\n      :                                         :     :                 :     :- *(19) Filter isnotnull(cs_item_sk#28)\n      :                                         :     :                 :     :  +- *(19) ColumnarToRow\n      :                                         :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#28,cs_order_number#30L,cs_quantity#31,cs_ext_sales_price#36,cs_sold_date_sk#47] Batched: true, DataFilters: [isnotnull(cs_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#47), dynamicpruningexpression(cs_sold_date_sk#47 IN dynamicpruning#1756)], PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n      :                                         :     :                 :     :           +- SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n      :                                         :     :                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                                +- == Final Plan ==\n                                                                                                   BroadcastQueryStage 1\n                                                                                                   +- ReusedExchange [d_date_sk#70, d_year#76], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                                                                                                +- == Initial Plan ==\n                                                                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1861]\n                                                                                                   +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n                                                                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :                                         :     :                 :     +- BroadcastQueryStage 0\n      :                                         :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n      :                                         :     :                 :           +- *(1) Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n      :                                         :     :                 :              +- *(1) ColumnarToRow\n      :                                         :     :                 :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :                                         :     :                 +- BroadcastQueryStage 1\n      :                                         :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n      :                                         :     :                       +- *(2) Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n      :                                         :     :                          +- *(2) Filter ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))\n      :                                         :     :                             +- *(2) ColumnarToRow\n      :                                         :     :                                +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#48,i_brand_id#55,i_class_id#57,i_category_id#59,i_category#60,i_manufact_id#61] Batched: true, DataFilters: [isnotnull(i_category#60), (i_category#60 = Sports), isnotnull(i_item_sk#48), isnotnull(i_brand_i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...\n      :                                         :     +- *(26) Sort [cr_order_number#113L ASC NULLS FIRST, cr_item_sk#99 ASC NULLS FIRST], false, 0\n      :                                         :        +- AQEShuffleRead coalesced\n      :                                         :           +- ShuffleQueryStage 2\n      :                                         :              +- Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n      :                                         :                 +- *(3) Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n      :                                         :                    +- *(3) Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n      :                                         :                       +- *(3) ColumnarToRow\n      :                                         :                          +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_item_sk#99,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_returned_date_sk#124] Batched: true, DataFilters: [isnotnull(cr_order_number#113L), isnotnull(cr_item_sk#99)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_re..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>\n      :                                         :- *(30) Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n      :                                         :  +- *(30) SortMergeJoin [ss_ticket_number#133L, ss_item_sk#126], [sr_ticket_number#156L, sr_item_sk#149], LeftOuter\n      :                                         :     :- *(28) Sort [ss_ticket_number#133L ASC NULLS FIRST, ss_item_sk#126 ASC NULLS FIRST], false, 0\n      :                                         :     :  +- AQEShuffleRead coalesced\n      :                                         :     :     +- ShuffleQueryStage 31\n      :                                         :     :        +- Exchange hashpartitioning(ss_ticket_number#133L, ss_item_sk#126, 200), ENSURE_REQUIREMENTS, [plan_id=1970]\n      :                                         :     :           +- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n      :                                         :     :              +- *(20) BroadcastHashJoin [ss_item_sk#126], [i_item_sk#1005], Inner, BuildRight, false\n      :                                         :     :                 :- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n      :                                         :     :                 :  +- *(20) BroadcastHashJoin [ss_sold_date_sk#147], [d_date_sk#1027], Inner, BuildRight, false\n      :                                         :     :                 :     :- *(20) Filter isnotnull(ss_item_sk#126)\n      :                                         :     :                 :     :  +- *(20) ColumnarToRow\n      :                                         :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#126,ss_ticket_number#133L,ss_quantity#134,ss_ext_sales_price#139,ss_sold_date_sk#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#147), dynamicpruningexpression(ss_sold_date_sk#147 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n      :                                         :     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n      :                                         :     :                 :     +- BroadcastQueryStage 4\n      :                                         :     :                 :        +- ReusedExchange [d_date_sk#1027, d_year#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n      :                                         :     :                 +- BroadcastQueryStage 6\n      :                                         :     :                    +- ReusedExchange [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n      :                                         :     +- *(29) Sort [sr_ticket_number#156L ASC NULLS FIRST, sr_item_sk#149 ASC NULLS FIRST], false, 0\n      :                                         :        +- AQEShuffleRead coalesced\n      :                                         :           +- ShuffleQueryStage 7\n      :                                         :              +- Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n      :                                         :                 +- *(6) Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n      :                                         :                    +- *(6) Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n      :                                         :                       +- *(6) ColumnarToRow\n      :                                         :                          +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#149,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_returned_date_sk#167] Batched: true, DataFilters: [isnotnull(sr_ticket_number#156L), isnotnull(sr_item_sk#149)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>\n      :                                         +- *(33) Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n      :                                            +- *(33) SortMergeJoin [ws_order_number#184L, ws_item_sk#170], [wr_order_number#214L, wr_item_sk#203], LeftOuter\n      :                                               :- *(31) Sort [ws_order_number#184L ASC NULLS FIRST, ws_item_sk#170 ASC NULLS FIRST], false, 0\n      :                                               :  +- AQEShuffleRead coalesced\n      :                                               :     +- ShuffleQueryStage 32\n      :                                               :        +- Exchange hashpartitioning(ws_order_number#184L, ws_item_sk#170, 200), ENSURE_REQUIREMENTS, [plan_id=2039]\n      :                                               :           +- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n      :                                               :              +- *(21) BroadcastHashJoin [ws_item_sk#170], [i_item_sk#1055], Inner, BuildRight, false\n      :                                               :                 :- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n      :                                               :                 :  +- *(21) BroadcastHashJoin [ws_sold_date_sk#201], [d_date_sk#1077], Inner, BuildRight, false\n      :                                               :                 :     :- *(21) Filter isnotnull(ws_item_sk#170)\n      :                                               :                 :     :  +- *(21) ColumnarToRow\n      :                                               :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#170,ws_order_number#184L,ws_quantity#185,ws_ext_sales_price#190,ws_sold_date_sk#201] Batched: true, DataFilters: [isnotnull(ws_item_sk#170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#201), dynamicpruningexpression(ws_sold_date_sk#201 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n      :                                               :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n      :                                               :                 :     +- BroadcastQueryStage 9\n      :                                               :                 :        +- ReusedExchange [d_date_sk#1077, d_year#1083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n      :                                               :                 +- BroadcastQueryStage 11\n      :                                               :                    +- ReusedExchange [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n      :                                               +- *(32) Sort [wr_order_number#214L ASC NULLS FIRST, wr_item_sk#203 ASC NULLS FIRST], false, 0\n      :                                                  +- AQEShuffleRead coalesced\n      :                                                     +- ShuffleQueryStage 12\n      :                                                        +- Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n      :                                                           +- *(9) Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n      :                                                              +- *(9) Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n      :                                                                 +- *(9) ColumnarToRow\n      :                                                                    +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_item_sk#203,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_returned_date_sk#225] Batched: true, DataFilters: [isnotnull(wr_order_number#214L), isnotnull(wr_item_sk#203)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>\n      +- Filter isnotnull(sales_cnt#1116L)\n         +- HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[sum(sales_cnt#997), sum(UnscaledValue(sales_amt#998))], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#1116L, sales_amt#1117])\n            +- ShuffleQueryStage 39\n               +- Exchange hashpartitioning(d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, 200), ENSURE_REQUIREMENTS, [plan_id=3787]\n                  +- *(46) HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], functions=[partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sum#1764L, sum#1767L])\n                     +- *(46) HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998])\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 37\n                              +- Exchange hashpartitioning(d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998, 200), ENSURE_REQUIREMENTS, [plan_id=3589]\n                                 +- *(44) HashAggregate(keys=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, sales_cnt#997, sales_amt#998])\n                                    +- Union\n                                       :- *(37) Project [d_year#1504, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, (cs_quantity#1459 - coalesce(cr_return_quantity#1542, 0)) AS sales_cnt#997, (cs_ext_sales_price#1464 - coalesce(cr_return_amount#1543, 0.00)) AS sales_amt#998]\n                                       :  +- *(37) SortMergeJoin [cs_order_number#1458L, cs_item_sk#1456], [cr_order_number#1541L, cr_item_sk#1527], LeftOuter\n                                       :     :- *(35) Sort [cs_order_number#1458L ASC NULLS FIRST, cs_item_sk#1456 ASC NULLS FIRST], false, 0\n                                       :     :  +- AQEShuffleRead coalesced\n                                       :     :     +- ShuffleQueryStage 33\n                                       :     :        +- Exchange hashpartitioning(cs_order_number#1458L, cs_item_sk#1456, 200), ENSURE_REQUIREMENTS, [plan_id=2182]\n                                       :     :           +- *(22) Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489, d_year#1504]\n                                       :     :              +- *(22) BroadcastHashJoin [cs_item_sk#1456], [i_item_sk#1476], Inner, BuildRight, false\n                                       :     :                 :- *(22) Project [cs_item_sk#1456, cs_order_number#1458L, cs_quantity#1459, cs_ext_sales_price#1464, d_year#1504]\n                                       :     :                 :  +- *(22) BroadcastHashJoin [cs_sold_date_sk#1475], [d_date_sk#1498], Inner, BuildRight, false\n                                       :     :                 :     :- *(22) Filter isnotnull(cs_item_sk#1456)\n                                       :     :                 :     :  +- *(22) ColumnarToRow\n                                       :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#1456,cs_order_number#1458L,cs_quantity#1459,cs_ext_sales_price#1464,cs_sold_date_sk#1475] Batched: true, DataFilters: [isnotnull(cs_item_sk#1456)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#1475), dynamicpruningexpression(cs_sold_date_sk#1475 IN dynamicpruning..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n                                       :     :                 :     :           +- SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n                                       :     :                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#1498, d_year#1504], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2142]\n                                                                                          +- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n                                                                                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                       :     :                 :     +- BroadcastQueryStage 13\n                                       :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                                       :     :                 :           +- *(10) Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n                                       :     :                 :              +- *(10) ColumnarToRow\n                                       :     :                 :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                                       :     :                 +- BroadcastQueryStage 15\n                                       :     :                    +- ReusedExchange [i_item_sk#1476, i_brand_id#1483, i_class_id#1485, i_category_id#1487, i_manufact_id#1489], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                                       :     +- *(36) Sort [cr_order_number#1541L ASC NULLS FIRST, cr_item_sk#1527 ASC NULLS FIRST], false, 0\n                                       :        +- AQEShuffleRead coalesced\n                                       :           +- ShuffleQueryStage 17\n                                       :              +- ReusedExchange [cr_item_sk#1527, cr_order_number#1541L, cr_return_quantity#1542, cr_return_amount#1543], Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n                                       :- *(40) Project [d_year#1604, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, (ss_quantity#1562 - coalesce(sr_return_quantity#1635, 0)) AS sales_cnt#999, (ss_ext_sales_price#1567 - coalesce(sr_return_amt#1636, 0.00)) AS sales_amt#1000]\n                                       :  +- *(40) SortMergeJoin [ss_ticket_number#1561L, ss_item_sk#1554], [sr_ticket_number#1634L, sr_item_sk#1627], LeftOuter\n                                       :     :- *(38) Sort [ss_ticket_number#1561L ASC NULLS FIRST, ss_item_sk#1554 ASC NULLS FIRST], false, 0\n                                       :     :  +- AQEShuffleRead coalesced\n                                       :     :     +- ShuffleQueryStage 34\n                                       :     :        +- Exchange hashpartitioning(ss_ticket_number#1561L, ss_item_sk#1554, 200), ENSURE_REQUIREMENTS, [plan_id=2251]\n                                       :     :           +- *(23) Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589, d_year#1604]\n                                       :     :              +- *(23) BroadcastHashJoin [ss_item_sk#1554], [i_item_sk#1576], Inner, BuildRight, false\n                                       :     :                 :- *(23) Project [ss_item_sk#1554, ss_ticket_number#1561L, ss_quantity#1562, ss_ext_sales_price#1567, d_year#1604]\n                                       :     :                 :  +- *(23) BroadcastHashJoin [ss_sold_date_sk#1575], [d_date_sk#1598], Inner, BuildRight, false\n                                       :     :                 :     :- *(23) Filter isnotnull(ss_item_sk#1554)\n                                       :     :                 :     :  +- *(23) ColumnarToRow\n                                       :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#1554,ss_ticket_number#1561L,ss_quantity#1562,ss_ext_sales_price#1567,ss_sold_date_sk#1575] Batched: true, DataFilters: [isnotnull(ss_item_sk#1554)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#1575), dynamicpruningexpression(ss_sold_date_sk#1575 IN dynamicpruning..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n                                       :     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n                                       :     :                 :     +- BroadcastQueryStage 19\n                                       :     :                 :        +- ReusedExchange [d_date_sk#1598, d_year#1604], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                                       :     :                 +- BroadcastQueryStage 21\n                                       :     :                    +- ReusedExchange [i_item_sk#1576, i_brand_id#1583, i_class_id#1585, i_category_id#1587, i_manufact_id#1589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                                       :     +- *(39) Sort [sr_ticket_number#1634L ASC NULLS FIRST, sr_item_sk#1627 ASC NULLS FIRST], false, 0\n                                       :        +- AQEShuffleRead coalesced\n                                       :           +- ShuffleQueryStage 23\n                                       :              +- ReusedExchange [sr_item_sk#1627, sr_ticket_number#1634L, sr_return_quantity#1635, sr_return_amt#1636], Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n                                       +- *(43) Project [d_year#1708, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, (ws_quantity#1663 - coalesce(wr_return_quantity#1743, 0)) AS sales_cnt#1001, (ws_ext_sales_price#1668 - coalesce(wr_return_amt#1744, 0.00)) AS sales_amt#1002]\n                                          +- *(43) SortMergeJoin [ws_order_number#1662L, ws_item_sk#1648], [wr_order_number#1742L, wr_item_sk#1731], LeftOuter\n                                             :- *(41) Sort [ws_order_number#1662L ASC NULLS FIRST, ws_item_sk#1648 ASC NULLS FIRST], false, 0\n                                             :  +- AQEShuffleRead coalesced\n                                             :     +- ShuffleQueryStage 35\n                                             :        +- Exchange hashpartitioning(ws_order_number#1662L, ws_item_sk#1648, 200), ENSURE_REQUIREMENTS, [plan_id=2320]\n                                             :           +- *(24) Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693, d_year#1708]\n                                             :              +- *(24) BroadcastHashJoin [ws_item_sk#1648], [i_item_sk#1680], Inner, BuildRight, false\n                                             :                 :- *(24) Project [ws_item_sk#1648, ws_order_number#1662L, ws_quantity#1663, ws_ext_sales_price#1668, d_year#1708]\n                                             :                 :  +- *(24) BroadcastHashJoin [ws_sold_date_sk#1679], [d_date_sk#1702], Inner, BuildRight, false\n                                             :                 :     :- *(24) Filter isnotnull(ws_item_sk#1648)\n                                             :                 :     :  +- *(24) ColumnarToRow\n                                             :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#1648,ws_order_number#1662L,ws_quantity#1663,ws_ext_sales_price#1668,ws_sold_date_sk#1679] Batched: true, DataFilters: [isnotnull(ws_item_sk#1648)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#1679), dynamicpruningexpression(ws_sold_date_sk#1679 IN dynamicpruning..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n                                             :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1759, 0, [d_date_sk#1498], [id=#2145]\n                                             :                 :     +- BroadcastQueryStage 25\n                                             :                 :        +- ReusedExchange [d_date_sk#1702, d_year#1708], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1181]\n                                             :                 +- BroadcastQueryStage 27\n                                             :                    +- ReusedExchange [i_item_sk#1680, i_brand_id#1687, i_class_id#1689, i_category_id#1691, i_manufact_id#1693], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                                             +- *(42) Sort [wr_order_number#1742L ASC NULLS FIRST, wr_item_sk#1731 ASC NULLS FIRST], false, 0\n                                                +- AQEShuffleRead coalesced\n                                                   +- ShuffleQueryStage 29\n                                                      +- ReusedExchange [wr_item_sk#1731, wr_order_number#1742L, wr_return_quantity#1743, wr_return_amt#1744], Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36627456,
        "inputRowCount" : 49843
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "12" : [ 6768, 6768, 6152, 5874, 6152, 4624, 6013, 5596, 6152, 5084, 5596, 5735, 4624, 5596, 6152, 6460, 5596, 5596, 5596, 5084, 5084, 6768, 4624, 6152, 5084, 6152, 5084, 6013, 4739, 4854, 5596, 5084, 6768, 6152, 5084, 5735, 5596, 5735, 6152, 6013, 4624, 4519, 5735, 6460, 6152, 5468, 6152, 4739, 5596, 5084, 6460, 5212, 5084, 5212, 4204, 6152, 6152, 5212, 3820, 6152, 5084, 7448, 6768, 5596, 6152, 4624, 5084, 6152, 4414, 5596, 6768, 5596, 4739, 4854, 5596, 5596, 6152, 5468, 5084, 6152, 4204, 6768, 5596, 5084, 3559, 4624, 5596, 6614, 6152, 5084, 6306, 4204, 5084, 6152, 4204, 5596, 6614, 5596, 5212, 5596, 6152, 3820, 5084, 5212, 6152, 4969, 7448, 4854, 5596, 4624, 5468, 5596, 6152, 4624, 6768, 6152, 4624, 5596, 5596, 5596, 5468, 5212, 6152, 4624, 5596, 5212, 5340, 5468, 5596, 5596, 5596, 6306, 6152, 4624, 5596, 5596, 5735, 5084, 5596, 5212, 6152, 5874, 5596, 5340, 4624, 6768, 5084, 5596, 5084, 4204, 5340, 4739, 6768, 4624, 4204, 5212, 4624, 5084, 5212, 6152, 5084, 6152, 4624, 5340, 6152, 5084, 6152, 6768, 5084, 5212, 5596, 5596, 5084, 6614, 6152, 5340, 5596, 4519, 5596, 6152, 5596, 6768, 5084, 6152, 5596, 5212, 5596, 6152, 5468, 5084, 5596, 5084, 4204, 6152, 5084, 4519, 5596, 5596, 6152, 5084 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 17,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 53 ],
      "Objectives" : {
        "DurationInMs" : 222,
        "TotalTasksDurationInMs" : 212,
        "IOBytes" : {
          "Total" : 1051960,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1051960,
            "SW" : 0
          }
        }
      }
    },
    "14" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1293780899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25432184272,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 25432184272,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004] "
          }
        },
        "links" : [ ],
        "rawPlan" : "Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum(sales_cnt#997) AS sales_cnt#1003L, MakeDecimal(sum(UnscaledValue(sales_amt#998)),18,2) AS sales_amt#1004]\n+- Aggregate [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998]\n   +- Union false, false\n      :- Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n      :  +- Join LeftOuter, ((cs_order_number#30L = cr_order_number#113L) AND (cs_item_sk#28 = cr_item_sk#99))\n      :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n      :     :  +- Join Inner, (i_item_sk#48 = cs_item_sk#28)\n      :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n      :     :     :  +- Join Inner, (d_date_sk#70 = cs_sold_date_sk#47)\n      :     :     :     :- Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, cs_sold_date_sk#47]\n      :     :     :     :  +- Filter ((isnotnull(cs_item_sk#28) AND isnotnull(cs_sold_date_sk#47)) AND dynamicpruning#1756 [cs_sold_date_sk#47])\n      :     :     :     :     :  +- Project [d_date_sk#70, d_year#76]\n      :     :     :     :     :     +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n      :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n      :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#14,cs_ship_date_sk#15,cs_bill_customer_sk#16,cs_bill_cdemo_sk#17,cs_bill_hdemo_sk#18,cs_bill_addr_sk#19,cs_ship_customer_sk#20,cs_ship_cdemo_sk#21,cs_ship_hdemo_sk#22,cs_ship_addr_sk#23,cs_call_center_sk#24,cs_catalog_page_sk#25,cs_ship_mode_sk#26,cs_warehouse_sk#27,cs_item_sk#28,cs_promo_sk#29,cs_order_number#30L,cs_quantity#31,cs_wholesale_cost#32,cs_list_price#33,cs_sales_price#34,cs_ext_discount_amt#35,cs_ext_sales_price#36,cs_ext_wholesale_cost#37,... 10 more fields] parquet\n      :     :     :     +- Project [d_date_sk#70, d_year#76]\n      :     :     :        +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n      :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n      :     :     +- Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n      :     :        +- Filter (((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND (((isnotnull(i_brand_id#55) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61)))\n      :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#48,i_item_id#49,i_rec_start_date#50,i_rec_end_date#51,i_item_desc#52,i_current_price#53,i_wholesale_cost#54,i_brand_id#55,i_brand#56,i_class_id#57,i_class#58,i_category_id#59,i_category#60,i_manufact_id#61,i_manufact#62,i_size#63,i_formulation#64,i_color#65,i_units#66,i_container#67,i_manager_id#68,i_product_name#69] parquet\n      :     +- Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n      :        +- Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n      :           +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#98,cr_item_sk#99,cr_refunded_customer_sk#100,cr_refunded_cdemo_sk#101,cr_refunded_hdemo_sk#102,cr_refunded_addr_sk#103,cr_returning_customer_sk#104,cr_returning_cdemo_sk#105,cr_returning_hdemo_sk#106,cr_returning_addr_sk#107,cr_call_center_sk#108,cr_catalog_page_sk#109,cr_ship_mode_sk#110,cr_warehouse_sk#111,cr_reason_sk#112,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_return_tax#116,cr_return_amt_inc_tax#117,cr_fee#118,cr_return_ship_cost#119,cr_refunded_cash#120,cr_reversed_charge#121,... 3 more fields] parquet\n      :- Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n      :  +- Join LeftOuter, ((ss_ticket_number#133L = sr_ticket_number#156L) AND (ss_item_sk#126 = sr_item_sk#149))\n      :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n      :     :  +- Join Inner, (i_item_sk#1005 = ss_item_sk#126)\n      :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n      :     :     :  +- Join Inner, (d_date_sk#1027 = ss_sold_date_sk#147)\n      :     :     :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147]\n      :     :     :     :  +- Filter ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#1757 [ss_sold_date_sk#147])\n      :     :     :     :     :  +- Project [d_date_sk#1027, d_year#1033]\n      :     :     :     :     :     +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n      :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n      :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#125,ss_item_sk#126,ss_customer_sk#127,ss_cdemo_sk#128,ss_hdemo_sk#129,ss_addr_sk#130,ss_store_sk#131,ss_promo_sk#132,ss_ticket_number#133L,ss_quantity#134,ss_wholesale_cost#135,ss_list_price#136,ss_sales_price#137,ss_ext_discount_amt#138,ss_ext_sales_price#139,ss_ext_wholesale_cost#140,ss_ext_list_price#141,ss_ext_tax#142,ss_coupon_amt#143,ss_net_paid#144,ss_net_paid_inc_tax#145,ss_net_profit#146,ss_sold_date_sk#147] parquet\n      :     :     :     +- Project [d_date_sk#1027, d_year#1033]\n      :     :     :        +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n      :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n      :     :     +- Project [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018]\n      :     :        +- Filter (((isnotnull(i_category#1017) AND (i_category#1017 = Sports)) AND isnotnull(i_item_sk#1005)) AND (((isnotnull(i_brand_id#1012) AND isnotnull(i_class_id#1014)) AND isnotnull(i_category_id#1016)) AND isnotnull(i_manufact_id#1018)))\n      :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1005,i_item_id#1006,i_rec_start_date#1007,i_rec_end_date#1008,i_item_desc#1009,i_current_price#1010,i_wholesale_cost#1011,i_brand_id#1012,i_brand#1013,i_class_id#1014,i_class#1015,i_category_id#1016,i_category#1017,i_manufact_id#1018,i_manufact#1019,i_size#1020,i_formulation#1021,i_color#1022,i_units#1023,i_container#1024,i_manager_id#1025,i_product_name#1026] parquet\n      :     +- Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n      :        +- Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n      :           +- Relation spark_catalog.tpcds_100.store_returns[sr_return_time_sk#148,sr_item_sk#149,sr_customer_sk#150,sr_cdemo_sk#151,sr_hdemo_sk#152,sr_addr_sk#153,sr_store_sk#154,sr_reason_sk#155,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_return_tax#159,sr_return_amt_inc_tax#160,sr_fee#161,sr_return_ship_cost#162,sr_refunded_cash#163,sr_reversed_charge#164,sr_store_credit#165,sr_net_loss#166,sr_returned_date_sk#167] parquet\n      +- Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n         +- Join LeftOuter, ((ws_order_number#184L = wr_order_number#214L) AND (ws_item_sk#170 = wr_item_sk#203))\n            :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n            :  +- Join Inner, (i_item_sk#1055 = ws_item_sk#170)\n            :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n            :     :  +- Join Inner, (d_date_sk#1077 = ws_sold_date_sk#201)\n            :     :     :- Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, ws_sold_date_sk#201]\n            :     :     :  +- Filter ((isnotnull(ws_item_sk#170) AND isnotnull(ws_sold_date_sk#201)) AND dynamicpruning#1758 [ws_sold_date_sk#201])\n            :     :     :     :  +- Project [d_date_sk#1077, d_year#1083]\n            :     :     :     :     +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#168,ws_ship_date_sk#169,ws_item_sk#170,ws_bill_customer_sk#171,ws_bill_cdemo_sk#172,ws_bill_hdemo_sk#173,ws_bill_addr_sk#174,ws_ship_customer_sk#175,ws_ship_cdemo_sk#176,ws_ship_hdemo_sk#177,ws_ship_addr_sk#178,ws_web_page_sk#179,ws_web_site_sk#180,ws_ship_mode_sk#181,ws_warehouse_sk#182,ws_promo_sk#183,ws_order_number#184L,ws_quantity#185,ws_wholesale_cost#186,ws_list_price#187,ws_sales_price#188,ws_ext_discount_amt#189,ws_ext_sales_price#190,ws_ext_wholesale_cost#191,... 10 more fields] parquet\n            :     :     +- Project [d_date_sk#1077, d_year#1083]\n            :     :        +- Filter ((isnotnull(d_year#1083) AND (d_year#1083 = 2002)) AND isnotnull(d_date_sk#1077))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1077,d_date_id#1078,d_date#1079,d_month_seq#1080,d_week_seq#1081,d_quarter_seq#1082,d_year#1083,d_dow#1084,d_moy#1085,d_dom#1086,d_qoy#1087,d_fy_year#1088,d_fy_quarter_seq#1089,d_fy_week_seq#1090,d_day_name#1091,d_quarter_name#1092,d_holiday#1093,d_weekend#1094,d_following_holiday#1095,d_first_dom#1096,d_last_dom#1097,d_same_day_ly#1098,d_same_day_lq#1099,d_current_day#1100,... 4 more fields] parquet\n            :     +- Project [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068]\n            :        +- Filter (((isnotnull(i_category#1067) AND (i_category#1067 = Sports)) AND isnotnull(i_item_sk#1055)) AND (((isnotnull(i_brand_id#1062) AND isnotnull(i_class_id#1064)) AND isnotnull(i_category_id#1066)) AND isnotnull(i_manufact_id#1068)))\n            :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#1055,i_item_id#1056,i_rec_start_date#1057,i_rec_end_date#1058,i_item_desc#1059,i_current_price#1060,i_wholesale_cost#1061,i_brand_id#1062,i_brand#1063,i_class_id#1064,i_class#1065,i_category_id#1066,i_category#1067,i_manufact_id#1068,i_manufact#1069,i_size#1070,i_formulation#1071,i_color#1072,i_units#1073,i_container#1074,i_manager_id#1075,i_product_name#1076] parquet\n            +- Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n               +- Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n                  +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#202,wr_item_sk#203,wr_refunded_customer_sk#204,wr_refunded_cdemo_sk#205,wr_refunded_hdemo_sk#206,wr_refunded_addr_sk#207,wr_returning_customer_sk#208,wr_returning_cdemo_sk#209,wr_returning_hdemo_sk#210,wr_returning_addr_sk#211,wr_web_page_sk#212,wr_reason_sk#213,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_return_tax#217,wr_return_amt_inc_tax#218,wr_fee#219,wr_return_ship_cost#220,wr_refunded_cash#221,wr_reversed_charge#222,wr_account_credit#223,wr_net_loss#224,wr_returned_date_sk#225] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1256021539,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 25432184272,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] Keys [5]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61] Functions [2]: [partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))] Aggregate Attributes [2]: [sum#1762L, sum#1763L] Results [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum#1764L, sum#1765L] "
          },
          "1" : {
            "sign" : 1849471778,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 624338816,
            "rowCount" : 9755294,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] Keys [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] Functions: [] Aggregate Attributes: [] Results [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] "
          },
          "2" : {
            "sign" : -761444553,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 23120167520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998] Arguments: 36 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61], functions=[partial_sum(sales_cnt#997), partial_sum(UnscaledValue(sales_amt#998))], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sum#1764L, sum#1765L])\n+- HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n   +- ShuffleQueryStage 36\n      +- Exchange hashpartitioning(d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998, 200), ENSURE_REQUIREMENTS, [plan_id=3149]\n         +- *(34) HashAggregate(keys=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998], functions=[], output=[d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, sales_cnt#997, sales_amt#998])\n            +- Union\n               :- *(27) Project [d_year#76, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, (cs_quantity#31 - coalesce(cr_return_quantity#114, 0)) AS sales_cnt#997, (cs_ext_sales_price#36 - coalesce(cr_return_amount#115, 0.00)) AS sales_amt#998]\n               :  +- *(27) SortMergeJoin [cs_order_number#30L, cs_item_sk#28], [cr_order_number#113L, cr_item_sk#99], LeftOuter\n               :     :- *(25) Sort [cs_order_number#30L ASC NULLS FIRST, cs_item_sk#28 ASC NULLS FIRST], false, 0\n               :     :  +- AQEShuffleRead coalesced\n               :     :     +- ShuffleQueryStage 30\n               :     :        +- Exchange hashpartitioning(cs_order_number#30L, cs_item_sk#28, 200), ENSURE_REQUIREMENTS, [plan_id=1901]\n               :     :           +- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61, d_year#76]\n               :     :              +- *(19) BroadcastHashJoin [cs_item_sk#28], [i_item_sk#48], Inner, BuildRight, false\n               :     :                 :- *(19) Project [cs_item_sk#28, cs_order_number#30L, cs_quantity#31, cs_ext_sales_price#36, d_year#76]\n               :     :                 :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#47], [d_date_sk#70], Inner, BuildRight, false\n               :     :                 :     :- *(19) Filter isnotnull(cs_item_sk#28)\n               :     :                 :     :  +- *(19) ColumnarToRow\n               :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#28,cs_order_number#30L,cs_quantity#31,cs_ext_sales_price#36,cs_sold_date_sk#47] Batched: true, DataFilters: [isnotnull(cs_item_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#47), dynamicpruningexpression(cs_sold_date_sk#47 IN dynamicpruning#1756)], PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>\n               :     :                 :     :           +- SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n               :     :                 :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                               +- == Final Plan ==\n                                                                  BroadcastQueryStage 1\n                                                                  +- ReusedExchange [d_date_sk#70, d_year#76], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                                                               +- == Initial Plan ==\n                                                                  BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1861]\n                                                                  +- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               :     :                 :     +- BroadcastQueryStage 0\n               :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n               :     :                 :           +- *(1) Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n               :     :                 :              +- *(1) ColumnarToRow\n               :     :                 :                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               :     :                 +- BroadcastQueryStage 1\n               :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n               :     :                       +- *(2) Project [i_item_sk#48, i_brand_id#55, i_class_id#57, i_category_id#59, i_manufact_id#61]\n               :     :                          +- *(2) Filter ((((((isnotnull(i_category#60) AND (i_category#60 = Sports)) AND isnotnull(i_item_sk#48)) AND isnotnull(i_brand_id#55)) AND isnotnull(i_class_id#57)) AND isnotnull(i_category_id#59)) AND isnotnull(i_manufact_id#61))\n               :     :                             +- *(2) ColumnarToRow\n               :     :                                +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#48,i_brand_id#55,i_class_id#57,i_category_id#59,i_category#60,i_manufact_id#61] Batched: true, DataFilters: [isnotnull(i_category#60), (i_category#60 = Sports), isnotnull(i_item_sk#48), isnotnull(i_brand_i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Sports), IsNotNull(i_item_sk), IsNotNull(i_brand_id), ..., ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...\n               :     +- *(26) Sort [cr_order_number#113L ASC NULLS FIRST, cr_item_sk#99 ASC NULLS FIRST], false, 0\n               :        +- AQEShuffleRead coalesced\n               :           +- ShuffleQueryStage 2\n               :              +- Exchange hashpartitioning(cr_order_number#113L, cr_item_sk#99, 200), ENSURE_REQUIREMENTS, [plan_id=867]\n               :                 +- *(3) Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n               :                    +- *(3) Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n               :                       +- *(3) ColumnarToRow\n               :                          +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_item_sk#99,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_returned_date_sk#124] Batched: true, DataFilters: [isnotnull(cr_order_number#113L), isnotnull(cr_item_sk#99)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_re..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>\n               :- *(30) Project [d_year#1033, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, (ss_quantity#134 - coalesce(sr_return_quantity#157, 0)) AS sales_cnt#999, (ss_ext_sales_price#139 - coalesce(sr_return_amt#158, 0.00)) AS sales_amt#1000]\n               :  +- *(30) SortMergeJoin [ss_ticket_number#133L, ss_item_sk#126], [sr_ticket_number#156L, sr_item_sk#149], LeftOuter\n               :     :- *(28) Sort [ss_ticket_number#133L ASC NULLS FIRST, ss_item_sk#126 ASC NULLS FIRST], false, 0\n               :     :  +- AQEShuffleRead coalesced\n               :     :     +- ShuffleQueryStage 31\n               :     :        +- Exchange hashpartitioning(ss_ticket_number#133L, ss_item_sk#126, 200), ENSURE_REQUIREMENTS, [plan_id=1970]\n               :     :           +- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n               :     :              +- *(20) BroadcastHashJoin [ss_item_sk#126], [i_item_sk#1005], Inner, BuildRight, false\n               :     :                 :- *(20) Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n               :     :                 :  +- *(20) BroadcastHashJoin [ss_sold_date_sk#147], [d_date_sk#1027], Inner, BuildRight, false\n               :     :                 :     :- *(20) Filter isnotnull(ss_item_sk#126)\n               :     :                 :     :  +- *(20) ColumnarToRow\n               :     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#126,ss_ticket_number#133L,ss_quantity#134,ss_ext_sales_price#139,ss_sold_date_sk#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#147), dynamicpruningexpression(ss_sold_date_sk#147 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n               :     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n               :     :                 :     +- BroadcastQueryStage 4\n               :     :                 :        +- ReusedExchange [d_date_sk#1027, d_year#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n               :     :                 +- BroadcastQueryStage 6\n               :     :                    +- ReusedExchange [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n               :     +- *(29) Sort [sr_ticket_number#156L ASC NULLS FIRST, sr_item_sk#149 ASC NULLS FIRST], false, 0\n               :        +- AQEShuffleRead coalesced\n               :           +- ShuffleQueryStage 7\n               :              +- Exchange hashpartitioning(sr_ticket_number#156L, sr_item_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=934]\n               :                 +- *(6) Project [sr_item_sk#149, sr_ticket_number#156L, sr_return_quantity#157, sr_return_amt#158]\n               :                    +- *(6) Filter (isnotnull(sr_ticket_number#156L) AND isnotnull(sr_item_sk#149))\n               :                       +- *(6) ColumnarToRow\n               :                          +- FileScan parquet spark_catalog.tpcds_100.store_returns[sr_item_sk#149,sr_ticket_number#156L,sr_return_quantity#157,sr_return_amt#158,sr_returned_date_sk#167] Batched: true, DataFilters: [isnotnull(sr_ticket_number#156L), isnotnull(sr_item_sk#149)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_retu..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>\n               +- *(33) Project [d_year#1083, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, (ws_quantity#185 - coalesce(wr_return_quantity#215, 0)) AS sales_cnt#1001, (ws_ext_sales_price#190 - coalesce(wr_return_amt#216, 0.00)) AS sales_amt#1002]\n                  +- *(33) SortMergeJoin [ws_order_number#184L, ws_item_sk#170], [wr_order_number#214L, wr_item_sk#203], LeftOuter\n                     :- *(31) Sort [ws_order_number#184L ASC NULLS FIRST, ws_item_sk#170 ASC NULLS FIRST], false, 0\n                     :  +- AQEShuffleRead coalesced\n                     :     +- ShuffleQueryStage 32\n                     :        +- Exchange hashpartitioning(ws_order_number#184L, ws_item_sk#170, 200), ENSURE_REQUIREMENTS, [plan_id=2039]\n                     :           +- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068, d_year#1083]\n                     :              +- *(21) BroadcastHashJoin [ws_item_sk#170], [i_item_sk#1055], Inner, BuildRight, false\n                     :                 :- *(21) Project [ws_item_sk#170, ws_order_number#184L, ws_quantity#185, ws_ext_sales_price#190, d_year#1083]\n                     :                 :  +- *(21) BroadcastHashJoin [ws_sold_date_sk#201], [d_date_sk#1077], Inner, BuildRight, false\n                     :                 :     :- *(21) Filter isnotnull(ws_item_sk#170)\n                     :                 :     :  +- *(21) ColumnarToRow\n                     :                 :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#170,ws_order_number#184L,ws_quantity#185,ws_ext_sales_price#190,ws_sold_date_sk#201] Batched: true, DataFilters: [isnotnull(ws_item_sk#170)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#201), dynamicpruningexpression(ws_sold_date_sk#201 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>\n                     :                 :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n                     :                 :     +- BroadcastQueryStage 9\n                     :                 :        +- ReusedExchange [d_date_sk#1077, d_year#1083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n                     :                 +- BroadcastQueryStage 11\n                     :                    +- ReusedExchange [i_item_sk#1055, i_brand_id#1062, i_class_id#1064, i_category_id#1066, i_manufact_id#1068], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n                     +- *(32) Sort [wr_order_number#214L ASC NULLS FIRST, wr_item_sk#203 ASC NULLS FIRST], false, 0\n                        +- AQEShuffleRead coalesced\n                           +- ShuffleQueryStage 12\n                              +- Exchange hashpartitioning(wr_order_number#214L, wr_item_sk#203, 200), ENSURE_REQUIREMENTS, [plan_id=1001]\n                                 +- *(9) Project [wr_item_sk#203, wr_order_number#214L, wr_return_quantity#215, wr_return_amt#216]\n                                    +- *(9) Filter (isnotnull(wr_order_number#214L) AND isnotnull(wr_item_sk#203))\n                                       +- *(9) ColumnarToRow\n                                          +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_item_sk#203,wr_order_number#214L,wr_return_quantity#215,wr_return_amt#216,wr_returned_date_sk#225] Batched: true, DataFilters: [isnotnull(wr_order_number#214L), isnotnull(wr_item_sk#203)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 624338816,
        "inputRowCount" : 9755294
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "9" : [ 1144308, 1141916, 1146673, 1145592, 1149065, 1144930, 1140400, 1140572, 1143055, 1144553, 1133423, 1146296, 1145592, 1143055, 1136078, 1143055, 1149479, 1140835, 1139696, 1143755, 1135371, 1139696, 1148244, 1139696, 1138298, 1140835, 1145592, 1145592, 1140400, 1137159, 1134939, 1147812, 1141218, 1151430, 1134939, 1138298, 1147812, 1143055, 1143055, 1146069, 1147812, 1144076, 1147694, 1141916, 1142937, 1146673, 1141916, 1139696, 1143055, 1138180, 1138180, 1141916, 1143055, 1141916, 1138180, 1155810, 1143755, 1152569, 1148737, 1134562, 1147812, 1147812, 1148289, 1139162, 1146673, 1147812, 1146659, 1143055, 1152569, 1143055, 1144453, 1143055, 1143055, 1151430, 1139319, 1144930, 1139319, 1138661, 1147812, 1144453, 1143055, 1150349, 1152569, 1140400, 1150349, 1141916, 1150877, 1140128, 1152569, 1147812, 1147812, 1139365, 1138180, 1140400, 1148289, 1139696, 1138180, 1137159, 1143418, 1141916, 1151053, 1145592, 1143055, 1137159, 1140881, 1144453, 1152569, 1140835, 1143055, 1146673, 1140835, 1143055, 1139696, 1147812, 1140835, 1149914, 1140835, 1143055, 1139696, 1144453, 1138180, 1145592, 1153636, 1136782, 1133423, 1141363, 1140835, 1139696, 1141539, 1145157, 1147812, 1133541, 1133423, 1135371, 1151430, 1149065, 1147812, 1141916, 1140400, 1139696, 1149210, 1143055, 1147812, 1140835, 1152569, 1143055, 1147812, 1146673, 1149210, 1137214, 1141916, 1143055, 1147549, 1138298, 1148289, 1140128, 1148833, 1145592, 1151430, 1143055, 1143055, 1142088, 1143055, 1141916, 1151430, 1147812, 1143055, 1136078, 1146673, 1136782, 1147812, 1151430, 1151430, 1146673, 1143487, 1137145, 1143418, 1142088, 1139696, 1143055, 1139696, 1144453, 1143418, 1145592, 1146673, 1147812, 1150349, 1140835, 1143055, 1150349, 1141267, 1146296, 1146673, 1145592, 1144453, 1149210, 1136782, 1143418, 1141916, 1138298 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 7,
        "FinishedTasksTotalTimeInMs" : 16936.0,
        "FinishedTasksDistributionInMs" : [ 1334.0, 2471.0, 2597.0, 2652.0, 2713.0 ]
      },
      "QueryStageOptimizationId" : 14,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 33 ],
      "Objectives" : {
        "DurationInMs" : 9724,
        "TotalTasksDurationInMs" : 27231,
        "IOBytes" : {
          "Total" : 219583987,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 218521974,
            "SW" : 1062013
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -382545733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#70, d_year#76] "
          },
          "1" : {
            "sign" : 2008150228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70)) "
          },
          "2" : {
            "sign" : -232749464,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#70, d_date_id#71, d_date#72, d_month_seq#73, d_week_seq#74, d_quarter_seq#75, d_year#76, d_dow#77, d_moy#78, d_dom#79, d_qoy#80, d_fy_year#81, d_fy_quarter_seq#82, d_fy_week_seq#83, d_day_name#84, d_quarter_name#85, d_holiday#86, d_weekend#87, d_following_holiday#88, d_first_dom#89, d_last_dom#90, d_same_day_ly#91, d_same_day_lq#92, d_current_day#93, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#70, d_year#76]\n+- Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_date_id#71,d_date#72,d_month_seq#73,d_week_seq#74,d_quarter_seq#75,d_year#76,d_dow#77,d_moy#78,d_dom#79,d_qoy#80,d_fy_year#81,d_fy_quarter_seq#82,d_fy_week_seq#83,d_day_name#84,d_quarter_name#85,d_holiday#86,d_weekend#87,d_following_holiday#88,d_first_dom#89,d_last_dom#90,d_same_day_ly#91,d_same_day_lq#92,d_current_day#93,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -959810587,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#70, d_year#76] Condition : ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70)) "
          },
          "1" : {
            "sign" : 760795001,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#70, d_year#76] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(d_year#76) AND (d_year#76 = 2002)) AND isnotnull(d_date_sk#70))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#70,d_year#76] Batched: true, DataFilters: [isnotnull(d_year#76), (d_year#76 = 2002), isnotnull(d_date_sk#70)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9216,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 3255,
        "TotalTasksDurationInMs" : 3249,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 836927213,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 9216,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#1498, d_year#1504] "
          },
          "1" : {
            "sign" : 698658366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498)) "
          },
          "2" : {
            "sign" : -132681226,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#1498, d_date_id#1499, d_date#1500, d_month_seq#1501, d_week_seq#1502, d_quarter_seq#1503, d_year#1504, d_dow#1505, d_moy#1506, d_dom#1507, d_qoy#1508, d_fy_year#1509, d_fy_quarter_seq#1510, d_fy_week_seq#1511, d_day_name#1512, d_quarter_name#1513, d_holiday#1514, d_weekend#1515, d_following_holiday#1516, d_first_dom#1517, d_last_dom#1518, d_same_day_ly#1519, d_same_day_lq#1520, d_current_day#1521, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#1498, d_year#1504]\n+- Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_date_id#1499,d_date#1500,d_month_seq#1501,d_week_seq#1502,d_quarter_seq#1503,d_year#1504,d_dow#1505,d_moy#1506,d_dom#1507,d_qoy#1508,d_fy_year#1509,d_fy_quarter_seq#1510,d_fy_week_seq#1511,d_day_name#1512,d_quarter_name#1513,d_holiday#1514,d_weekend#1515,d_following_holiday#1516,d_first_dom#1517,d_last_dom#1518,d_same_day_ly#1519,d_same_day_lq#1520,d_current_day#1521,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 381686954,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#1498, d_year#1504] Condition : ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498)) "
          },
          "1" : {
            "sign" : 872441442,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9216,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#1498, d_year#1504] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(d_year#1504) AND (d_year#1504 = 2001)) AND isnotnull(d_date_sk#1498))\n+- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#1498,d_year#1504] Batched: true, DataFilters: [isnotnull(d_year#1504), (d_year#1504 = 2001), isnotnull(d_date_sk#1498)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9216,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1882,
        "TotalTasksDurationInMs" : 1878,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1743850508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9901632708,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 9901632708,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147] "
          },
          "5" : {
            "sign" : 658956217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#1757 [ss_sold_date_sk#147]) "
          },
          "6" : {
            "sign" : -1918584823,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#125, ss_item_sk#126, ss_customer_sk#127, ss_cdemo_sk#128, ss_hdemo_sk#129, ss_addr_sk#130, ss_store_sk#131, ss_promo_sk#132, ss_ticket_number#133L, ss_quantity#134, ss_wholesale_cost#135, ss_list_price#136, ss_sales_price#137, ss_ext_discount_amt#138, ss_ext_sales_price#139, ss_ext_wholesale_cost#140, ss_ext_list_price#141, ss_ext_tax#142, ss_coupon_amt#143, ss_net_paid#144, ss_net_paid_inc_tax#145, ss_net_profit#146, ss_sold_date_sk#147], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 131174049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16086443576,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 16086443576,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (i_item_sk#1005 = ss_item_sk#126) "
          },
          "0" : {
            "sign" : -1764268480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033] "
          },
          "2" : {
            "sign" : -2015460979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 9559461060,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033] "
          },
          "3" : {
            "sign" : -1272228384,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11683785740,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 11683785740,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (d_date_sk#1027 = ss_sold_date_sk#147) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n+- Join Inner, (i_item_sk#1005 = ss_item_sk#126)\n   :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n   :  +- Join Inner, (d_date_sk#1027 = ss_sold_date_sk#147)\n   :     :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147]\n   :     :  +- Filter ((isnotnull(ss_item_sk#126) AND isnotnull(ss_sold_date_sk#147)) AND dynamicpruning#1757 [ss_sold_date_sk#147])\n   :     :     :  +- Project [d_date_sk#1027, d_year#1033]\n   :     :     :     +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#125,ss_item_sk#126,ss_customer_sk#127,ss_cdemo_sk#128,ss_hdemo_sk#129,ss_addr_sk#130,ss_store_sk#131,ss_promo_sk#132,ss_ticket_number#133L,ss_quantity#134,ss_wholesale_cost#135,ss_list_price#136,ss_sales_price#137,ss_ext_discount_amt#138,ss_ext_sales_price#139,ss_ext_wholesale_cost#140,ss_ext_list_price#141,ss_ext_tax#142,ss_coupon_amt#143,ss_net_paid#144,ss_net_paid_inc_tax#145,ss_net_profit#146,ss_sold_date_sk#147] parquet\n   :     +- Project [d_date_sk#1027, d_year#1033]\n   :        +- Filter ((isnotnull(d_year#1033) AND (d_year#1033 = 2002)) AND isnotnull(d_date_sk#1027))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#1027,d_date_id#1028,d_date#1029,d_month_seq#1030,d_week_seq#1031,d_quarter_seq#1032,d_year#1033,d_dow#1034,d_moy#1035,d_dom#1036,d_qoy#1037,d_fy_year#1038,d_fy_quarter_seq#1039,d_fy_week_seq#1040,d_day_name#1041,d_quarter_name#1042,d_holiday#1043,d_weekend#1044,d_following_holiday#1045,d_first_dom#1046,d_last_dom#1047,d_same_day_ly#1048,d_same_day_lq#1049,d_current_day#1050,... 4 more fields] parquet\n   +- Project [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018]\n      +- Filter (((isnotnull(i_category#1017) AND (i_category#1017 = Sports)) AND isnotnull(i_item_sk#1005)) AND (((isnotnull(i_brand_id#1012) AND isnotnull(i_class_id#1014)) AND isnotnull(i_category_id#1016)) AND isnotnull(i_manufact_id#1018)))\n         +- Relation spark_catalog.tpcds_100.item[i_item_sk#1005,i_item_id#1006,i_rec_start_date#1007,i_rec_end_date#1008,i_item_desc#1009,i_current_price#1010,i_wholesale_cost#1011,i_brand_id#1012,i_brand#1013,i_class_id#1014,i_class#1015,i_category_id#1016,i_category#1017,i_manufact_id#1018,i_manufact#1019,i_size#1020,i_formulation#1021,i_color#1022,i_units#1023,i_container#1024,i_manager_id#1025,i_product_name#1026] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1658476448,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9901632708,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147] Condition : isnotnull(ss_item_sk#126) "
          },
          "5" : {
            "sign" : 937167892,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9901632708,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [5]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#147), dynamicpruningexpression(ss_sold_date_sk#147 IN dynamicpruning#1756)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)> "
          },
          "6" : {
            "sign" : -1736717321,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#1027, d_year#1033] Arguments: 4 "
          },
          "1" : {
            "sign" : 1037387450,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 16086443576,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#126] Right keys [1]: [i_item_sk#1005] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1438582885,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033] Input [10]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033, i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018] "
          },
          "2" : {
            "sign" : 841663596,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 9559461060,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033] Input [7]: [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, ss_sold_date_sk#147, d_date_sk#1027, d_year#1033] "
          },
          "7" : {
            "sign" : -1230151183,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 3145728,
            "rowCount" : 20366,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [5]: [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018] Arguments: 6 "
          },
          "3" : {
            "sign" : -378528281,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 11683785740,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#147] Right keys [1]: [d_date_sk#1027] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018, d_year#1033]\n+- BroadcastHashJoin [ss_item_sk#126], [i_item_sk#1005], Inner, BuildRight, false\n   :- Project [ss_item_sk#126, ss_ticket_number#133L, ss_quantity#134, ss_ext_sales_price#139, d_year#1033]\n   :  +- BroadcastHashJoin [ss_sold_date_sk#147], [d_date_sk#1027], Inner, BuildRight, false\n   :     :- Filter isnotnull(ss_item_sk#126)\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#126,ss_ticket_number#133L,ss_quantity#134,ss_ext_sales_price#139,ss_sold_date_sk#147] Batched: true, DataFilters: [isnotnull(ss_item_sk#126)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#147), dynamicpruningexpression(ss_sold_date_sk#147 IN dynamicpruning#1..., PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>\n   :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#1756, 0, [d_date_sk#70], [id=#1864]\n   :     +- BroadcastQueryStage 4\n   :        +- ReusedExchange [d_date_sk#1027, d_year#1033], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=825]\n   +- BroadcastQueryStage 6\n      +- ReusedExchange [i_item_sk#1005, i_brand_id#1012, i_class_id#1014, i_category_id#1016, i_manufact_id#1018], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=844]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9905829932,
        "inputRowCount" : 275066084
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 3264,
        "TotalTasksDurationInMs" : 16168,
        "IOBytes" : {
          "Total" : 717607021,
          "Details" : {
            "IR" : 533483639,
            "IW" : 0,
            "SR" : 0,
            "SW" : 184123382
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1903066963,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 460730304,
                "rowCount" : 14397822
              },
              "compileTime" : {
                "sizeInBytes" : 460730304,
                "rowCount" : 14397822
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115] "
          },
          "1" : {
            "sign" : -124936655,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              },
              "compileTime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99)) "
          },
          "2" : {
            "sign" : -1373528142,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              },
              "compileTime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#98, cr_item_sk#99, cr_refunded_customer_sk#100, cr_refunded_cdemo_sk#101, cr_refunded_hdemo_sk#102, cr_refunded_addr_sk#103, cr_returning_customer_sk#104, cr_returning_cdemo_sk#105, cr_returning_hdemo_sk#106, cr_returning_addr_sk#107, cr_call_center_sk#108, cr_catalog_page_sk#109, cr_ship_mode_sk#110, cr_warehouse_sk#111, cr_reason_sk#112, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115, cr_return_tax#116, cr_return_amt_inc_tax#117, cr_fee#118, cr_return_ship_cost#119, cr_refunded_cash#120, cr_reversed_charge#121, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n+- Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n   +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#98,cr_item_sk#99,cr_refunded_customer_sk#100,cr_refunded_cdemo_sk#101,cr_refunded_hdemo_sk#102,cr_refunded_addr_sk#103,cr_returning_customer_sk#104,cr_returning_cdemo_sk#105,cr_returning_hdemo_sk#106,cr_returning_addr_sk#107,cr_call_center_sk#108,cr_catalog_page_sk#109,cr_ship_mode_sk#110,cr_warehouse_sk#111,cr_reason_sk#112,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_return_tax#116,cr_return_amt_inc_tax#117,cr_fee#118,cr_return_ship_cost#119,cr_refunded_cash#120,cr_reversed_charge#121,... 3 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 136547770,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 460730304,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115] Input [5]: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115, cr_returned_date_sk#124] "
          },
          "1" : {
            "sign" : -1601940836,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 460730304,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115, cr_returned_date_sk#124] Condition : (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99)) "
          },
          "2" : {
            "sign" : -124076741,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 460730304,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_returns Output [5]: [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115, cr_returned_date_sk#124] Batched: true Location: CatalogFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_returns] PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)] ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_returns",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_item_sk#99, cr_order_number#113L, cr_return_quantity#114, cr_return_amount#115]\n+- Filter (isnotnull(cr_order_number#113L) AND isnotnull(cr_item_sk#99))\n   +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_item_sk#99,cr_order_number#113L,cr_return_quantity#114,cr_return_amount#115,cr_returned_date_sk#124] Batched: true, DataFilters: [isnotnull(cr_order_number#113L), isnotnull(cr_item_sk#99)], Format: Parquet, Location: CatalogFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_re..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 460730304,
        "inputRowCount" : 14397822
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 6761,
        "TotalTasksDurationInMs" : 98162,
        "IOBytes" : {
          "Total" : 527408049,
          "Details" : {
            "IR" : 219947244,
            "IW" : 0,
            "SR" : 0,
            "SW" : 307460805
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227310984,
  "SQLEndTimeInMs" : 1702227363688,
  "Objectives" : {
    "DurationInMs" : 52704,
    "IOBytes" : {
      "Total" : 8139669602,
      "Details" : {
        "IR" : 2697168285,
        "IW" : 0,
        "SR" : 3265153648,
        "SW" : 2177347669
      }
    }
  }
}
