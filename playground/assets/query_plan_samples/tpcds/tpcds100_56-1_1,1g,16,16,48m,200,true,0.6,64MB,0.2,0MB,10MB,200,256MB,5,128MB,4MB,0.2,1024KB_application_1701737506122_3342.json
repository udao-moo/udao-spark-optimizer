{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : -197427346,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#202, i_item_id#203] "
        },
        "34" : {
          "sign" : -1041943043,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4432520384,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#161) "
        },
        "67" : {
          "sign" : -1447749152,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#266 = i_item_id#333) "
        },
        "12" : {
          "sign" : 942747041,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354676784,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
        },
        "66" : {
          "sign" : -1038388340,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#252, ca_address_id#253, ca_street_number#254, ca_street_name#255, ca_street_type#256, ca_suite_number#257, ca_city#258, ca_county#259, ca_state#260, ca_zip#261, ca_country#262, ca_gmt_offset#263, ca_location_type#264], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "51" : {
          "sign" : -860459329,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#266], [i_item_id#266, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#5] "
        },
        "8" : {
          "sign" : 49121650,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5504661760,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
        },
        "73" : {
          "sign" : 23213801,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#332, i_item_id#333, i_rec_start_date#334, i_rec_end_date#335, i_item_desc#336, i_current_price#337, i_wholesale_cost#338, i_brand_id#339, i_brand#340, i_class_id#341, i_class#342, i_category_id#343, i_category#344, i_manufact_id#345, i_manufact#346, i_size#347, i_formulation#348, i_color#349, i_units#350, i_container#351, i_manager_id#352, i_product_name#353], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "19" : {
          "sign" : 207812862,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12214146,
          "rowCount" : 49651,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58)) "
        },
        "23" : {
          "sign" : -1729853405,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
        },
        "62" : {
          "sign" : 271571185,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12300,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 2000) AND (d_moy#232 = 1))) AND isnotnull(d_date_sk#224)) "
        },
        "4" : {
          "sign" : -1746376203,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 13733544,
          "rowCount" : 312126,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "40" : {
          "sign" : -1082958336,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#161, d_date_id#162, d_date#163, d_month_seq#164, d_week_seq#165, d_quarter_seq#166, d_year#167, d_dow#168, d_moy#169, d_dom#170, d_qoy#171, d_fy_year#172, d_fy_quarter_seq#173, d_fy_week_seq#174, d_day_name#175, d_quarter_name#176, d_holiday#177, d_weekend#178, d_following_holiday#179, d_first_dom#180, d_last_dom#181, d_same_day_ly#182, d_same_day_lq#183, d_current_day#184, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "15" : {
          "sign" : -1121271959,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 600,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
        },
        "11" : {
          "sign" : -1320069186,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
        },
        "9" : {
          "sign" : -710774240,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7706526464,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
        },
        "44" : {
          "sign" : -831453268,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#203 = i_item_id#311) "
        },
        "33" : {
          "sign" : 419003324,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3324390288,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
        },
        "22" : {
          "sign" : -1934725616,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
        },
        "56" : {
          "sign" : 987626715,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1667894520,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
        },
        "55" : {
          "sign" : -1914751359,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2015528872,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#252) "
        },
        "26" : {
          "sign" : 497221986,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2962830,
          "rowCount" : 6955,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: i_color#305 IN (orchid,chiffon,lace) "
        },
        "50" : {
          "sign" : -1643866209,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#310, i_item_id#311, i_rec_start_date#312, i_rec_end_date#313, i_item_desc#314, i_current_price#315, i_wholesale_cost#316, i_brand_id#317, i_brand#318, i_class_id#319, i_class#320, i_category_id#321, i_category#322, i_manufact_id#323, i_manufact#324, i_size#325, i_formulation#326, i_color#327, i_units#328, i_container#329, i_manager_id#330, i_product_name#331], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "37" : {
          "sign" : 899995805,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "68" : {
          "sign" : 685675757,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#265, i_item_id#266] "
        },
        "61" : {
          "sign" : -2037281179,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 600,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#224] "
        },
        "13" : {
          "sign" : -54424083,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925388256,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#371 [ss_sold_date_sk#29]) "
        },
        "46" : {
          "sign" : 1034201051,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#202) "
        },
        "24" : {
          "sign" : 655949841,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "35" : {
          "sign" : -1660367401,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3991556324,
          "rowCount" : 142555583,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
        },
        "16" : {
          "sign" : -370894786,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12300,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
        },
        "5" : {
          "sign" : 1736776969,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#1] "
        },
        "72" : {
          "sign" : 782343362,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2962830,
          "rowCount" : 6955,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: i_color#349 IN (orchid,chiffon,lace) "
        },
        "10" : {
          "sign" : 274528661,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
        },
        "59" : {
          "sign" : 601152902,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968824624,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#373 [ws_sold_date_sk#160]) "
        },
        "48" : {
          "sign" : -413590874,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 250380,
          "rowCount" : 6955,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#311] "
        },
        "21" : {
          "sign" : -1427600468,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#289) "
        },
        "54" : {
          "sign" : 1600864978,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1439663480,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
        },
        "43" : {
          "sign" : -436579858,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#189, ca_address_id#190, ca_street_number#191, ca_street_name#192, ca_street_type#193, ca_suite_number#194, ca_city#195, ca_county#196, ca_state#197, ca_zip#198, ca_country#199, ca_gmt_offset#200, ca_location_type#201], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "65" : {
          "sign" : 1173118473,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12214146,
          "rowCount" : 49651,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#263) AND (ca_gmt_offset#263 = -8.00)) AND isnotnull(ca_address_sk#252)) "
        },
        "71" : {
          "sign" : -948043280,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 250380,
          "rowCount" : 6955,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#333] "
        },
        "57" : {
          "sign" : -1602851463,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2223859360,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#224) "
        },
        "32" : {
          "sign" : 1287600209,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4014046764,
          "rowCount" : 143358813,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#189) "
        },
        "49" : {
          "sign" : 750013752,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2962830,
          "rowCount" : 6955,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: i_color#327 IN (orchid,chiffon,lace) "
        },
        "6" : {
          "sign" : -477510653,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12639348524,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
        },
        "36" : {
          "sign" : -18754957,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651561264,
          "rowCount" : 142555583,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#372 [cs_sold_date_sk#126]) "
        },
        "1" : {
          "sign" : 271579153,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 16785442,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : -1561469383,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12300,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 2000) AND (d_moy#169 = 1))) AND isnotnull(d_date_sk#161)) "
        },
        "17" : {
          "sign" : -607567904,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : -715815824,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 250380,
          "rowCount" : 6955,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_id#289] "
        },
        "60" : {
          "sign" : 542040227,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1918777458,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "47" : {
          "sign" : 798586169,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#202, i_item_id#203, i_rec_start_date#204, i_rec_end_date#205, i_item_desc#206, i_current_price#207, i_wholesale_cost#208, i_brand_id#209, i_brand#210, i_class_id#211, i_class#212, i_category_id#213, i_category#214, i_manufact_id#215, i_manufact#216, i_size#217, i_formulation#218, i_color#219, i_units#220, i_container#221, i_manager_id#222, i_product_name#223], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "31" : {
          "sign" : 1804347911,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2867176260,
          "rowCount" : 143358813,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
        },
        "69" : {
          "sign" : -2010901740,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#265) "
        },
        "58" : {
          "sign" : -595474881,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2015034084,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
        },
        "64" : {
          "sign" : -224604042,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 595812,
          "rowCount" : 49651,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#252] "
        },
        "53" : {
          "sign" : -624274913,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3739679060,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#265) "
        },
        "42" : {
          "sign" : -457191532,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 12214146,
          "rowCount" : 49651,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#200) AND (ca_gmt_offset#200 = -8.00)) AND isnotnull(ca_address_sk#189)) "
        },
        "0" : {
          "sign" : -397323326,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 4400,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 783351469,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#58, ca_address_id#59, ca_street_number#60, ca_street_name#61, ca_street_type#62, ca_suite_number#63, ca_city#64, ca_county#65, ca_state#66, ca_zip#67, ca_country#68, ca_gmt_offset#69, ca_location_type#70], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 763558921,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#288, i_item_id#289, i_rec_start_date#290, i_rec_end_date#291, i_item_desc#292, i_current_price#293, i_wholesale_cost#294, i_brand_id#295, i_brand#296, i_class_id#297, i_class#298, i_category_id#299, i_category#300, i_manufact_id#301, i_manufact#302, i_size#303, i_formulation#304, i_color#305, i_units#306, i_container#307, i_manager_id#308, i_product_name#309], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "70" : {
          "sign" : 1487742197,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#265, i_item_id#266, i_rec_start_date#267, i_rec_end_date#268, i_item_desc#269, i_current_price#270, i_wholesale_cost#271, i_brand_id#272, i_brand#273, i_class_id#274, i_class#275, i_category_id#276, i_category#277, i_manufact_id#278, i_manufact#279, i_size#280, i_formulation#281, i_color#282, i_units#283, i_container#284, i_manager_id#285, i_product_name#286], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : 674953112,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 16785442,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [total_sales#0 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : -516293131,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 600,
          "rowCount" : 50,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#161] "
        },
        "18" : {
          "sign" : 696774565,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 595812,
          "rowCount" : 49651,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#58] "
        },
        "30" : {
          "sign" : -1261384575,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7481471556,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#202) "
        },
        "7" : {
          "sign" : 1125241542,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14937411892,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
        },
        "29" : {
          "sign" : -1911136668,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6330475932,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#203] "
        },
        "41" : {
          "sign" : 2053905394,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 595812,
          "rowCount" : 49651,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#189] "
        },
        "63" : {
          "sign" : -513036944,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#224, d_date_id#225, d_date#226, d_month_seq#227, d_week_seq#228, d_quarter_seq#229, d_year#230, d_dow#231, d_moy#232, d_dom#233, d_qoy#234, d_fy_year#235, d_fy_quarter_seq#236, d_fy_week_seq#237, d_day_name#238, d_quarter_name#239, d_holiday#240, d_weekend#241, d_following_holiday#242, d_first_dom#243, d_last_dom#244, d_same_day_ly#245, d_same_day_lq#246, d_current_day#247, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : -757577481,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16785442,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#1) AS total_sales#0] "
        },
        "52" : {
          "sign" : 285474594,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3164343820,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#266] "
        },
        "28" : {
          "sign" : -697451076,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#203], [i_item_id#203, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#3] "
        }
      },
      "links" : [ {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "LogicalRelation",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 36,
        "fromName" : "Filter",
        "toId" : 35,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Join",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "LogicalRelation",
        "toId" : 42,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Filter",
        "toId" : 41,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "LogicalRelation",
        "toId" : 46,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Filter",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "LogicalRelation",
        "toId" : 49,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Filter",
        "toId" : 48,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Join",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Join",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 59,
        "fromName" : "Filter",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Join",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Join",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "LogicalRelation",
        "toId" : 69,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Filter",
        "toId" : 68,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "LogicalRelation",
        "toId" : 72,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Filter",
        "toId" : 71,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Join",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Join",
        "toId" : 52,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Project",
        "toId" : 51,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Union",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#0 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#1) AS total_sales#0]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#1]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#371 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- Project [d_date_sk#30]\n            :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#58]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#289)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- Project [i_item_id#289]\n            :              +- Filter i_color#305 IN (orchid,chiffon,lace)\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#288,i_item_id#289,i_rec_start_date#290,i_rec_end_date#291,i_item_desc#292,i_current_price#293,i_wholesale_cost#294,i_brand_id#295,i_brand#296,i_class_id#297,i_class#298,i_category_id#299,i_category#300,i_manufact_id#301,i_manufact#302,i_size#303,i_formulation#304,i_color#305,i_units#306,i_container#307,i_manager_id#308,i_product_name#309] parquet\n            :- Aggregate [i_item_id#203], [i_item_id#203, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#3]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#203]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#202)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#189)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#161)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#372 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#161]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 2000) AND (d_moy#169 = 1))) AND isnotnull(d_date_sk#161))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#161,d_date_id#162,d_date#163,d_month_seq#164,d_week_seq#165,d_quarter_seq#166,d_year#167,d_dow#168,d_moy#169,d_dom#170,d_qoy#171,d_fy_year#172,d_fy_quarter_seq#173,d_fy_week_seq#174,d_day_name#175,d_quarter_name#176,d_holiday#177,d_weekend#178,d_following_holiday#179,d_first_dom#180,d_last_dom#181,d_same_day_ly#182,d_same_day_lq#183,d_current_day#184,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- Project [d_date_sk#161]\n            :        :     :        +- Filter (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 2000) AND (d_moy#169 = 1))) AND isnotnull(d_date_sk#161))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#161,d_date_id#162,d_date#163,d_month_seq#164,d_week_seq#165,d_quarter_seq#166,d_year#167,d_dow#168,d_moy#169,d_dom#170,d_qoy#171,d_fy_year#172,d_fy_quarter_seq#173,d_fy_week_seq#174,d_day_name#175,d_quarter_name#176,d_holiday#177,d_weekend#178,d_following_holiday#179,d_first_dom#180,d_last_dom#181,d_same_day_ly#182,d_same_day_lq#183,d_current_day#184,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#189]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#200) AND (ca_gmt_offset#200 = -8.00)) AND isnotnull(ca_address_sk#189))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#189,ca_address_id#190,ca_street_number#191,ca_street_name#192,ca_street_type#193,ca_suite_number#194,ca_city#195,ca_county#196,ca_state#197,ca_zip#198,ca_country#199,ca_gmt_offset#200,ca_location_type#201] parquet\n            :        +- Join LeftSemi, (i_item_id#203 = i_item_id#311)\n            :           :- Project [i_item_sk#202, i_item_id#203]\n            :           :  +- Filter isnotnull(i_item_sk#202)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#202,i_item_id#203,i_rec_start_date#204,i_rec_end_date#205,i_item_desc#206,i_current_price#207,i_wholesale_cost#208,i_brand_id#209,i_brand#210,i_class_id#211,i_class#212,i_category_id#213,i_category#214,i_manufact_id#215,i_manufact#216,i_size#217,i_formulation#218,i_color#219,i_units#220,i_container#221,i_manager_id#222,i_product_name#223] parquet\n            :           +- Project [i_item_id#311]\n            :              +- Filter i_color#327 IN (orchid,chiffon,lace)\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#310,i_item_id#311,i_rec_start_date#312,i_rec_end_date#313,i_item_desc#314,i_current_price#315,i_wholesale_cost#316,i_brand_id#317,i_brand#318,i_class_id#319,i_class#320,i_category_id#321,i_category#322,i_manufact_id#323,i_manufact#324,i_size#325,i_formulation#326,i_color#327,i_units#328,i_container#329,i_manager_id#330,i_product_name#331] parquet\n            +- Aggregate [i_item_id#266], [i_item_id#266, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#5]\n               +- Project [ws_ext_sales_price#149, i_item_id#266]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#265)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#252)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#224)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#373 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#224]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 2000) AND (d_moy#232 = 1))) AND isnotnull(d_date_sk#224))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#224,d_date_id#225,d_date#226,d_month_seq#227,d_week_seq#228,d_quarter_seq#229,d_year#230,d_dow#231,d_moy#232,d_dom#233,d_qoy#234,d_fy_year#235,d_fy_quarter_seq#236,d_fy_week_seq#237,d_day_name#238,d_quarter_name#239,d_holiday#240,d_weekend#241,d_following_holiday#242,d_first_dom#243,d_last_dom#244,d_same_day_ly#245,d_same_day_lq#246,d_current_day#247,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- Project [d_date_sk#224]\n                     :     :        +- Filter (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 2000) AND (d_moy#232 = 1))) AND isnotnull(d_date_sk#224))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#224,d_date_id#225,d_date#226,d_month_seq#227,d_week_seq#228,d_quarter_seq#229,d_year#230,d_dow#231,d_moy#232,d_dom#233,d_qoy#234,d_fy_year#235,d_fy_quarter_seq#236,d_fy_week_seq#237,d_day_name#238,d_quarter_name#239,d_holiday#240,d_weekend#241,d_following_holiday#242,d_first_dom#243,d_last_dom#244,d_same_day_ly#245,d_same_day_lq#246,d_current_day#247,... 4 more fields] parquet\n                     :     +- Project [ca_address_sk#252]\n                     :        +- Filter ((isnotnull(ca_gmt_offset#263) AND (ca_gmt_offset#263 = -8.00)) AND isnotnull(ca_address_sk#252))\n                     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#252,ca_address_id#253,ca_street_number#254,ca_street_name#255,ca_street_type#256,ca_suite_number#257,ca_city#258,ca_county#259,ca_state#260,ca_zip#261,ca_country#262,ca_gmt_offset#263,ca_location_type#264] parquet\n                     +- Join LeftSemi, (i_item_id#266 = i_item_id#333)\n                        :- Project [i_item_sk#265, i_item_id#266]\n                        :  +- Filter isnotnull(i_item_sk#265)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#265,i_item_id#266,i_rec_start_date#267,i_rec_end_date#268,i_item_desc#269,i_current_price#270,i_wholesale_cost#271,i_brand_id#272,i_brand#273,i_class_id#274,i_class#275,i_category_id#276,i_category#277,i_manufact_id#278,i_manufact#279,i_size#280,i_formulation#281,i_color#282,i_units#283,i_container#284,i_manager_id#285,i_product_name#286] parquet\n                        +- Project [i_item_id#333]\n                           +- Filter i_color#349 IN (orchid,chiffon,lace)\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#332,i_item_id#333,i_rec_start_date#334,i_rec_end_date#335,i_item_desc#336,i_current_price#337,i_wholesale_cost#338,i_brand_id#339,i_brand#340,i_class_id#341,i_class#342,i_category_id#343,i_category#344,i_manufact_id#345,i_manufact#346,i_size#347,i_formulation#348,i_color#349,i_units#350,i_container#351,i_manager_id#352,i_product_name#353] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 87893609146,
      "inputRowCount" : 494745141
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 9245336,
            "rowCount" : 210325,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 89640,
            "rowCount" : 2241,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -2104910227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 11299855,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1128753344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1969820778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 11299855,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 11299855,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9245336,
        "inputRowCount" : 210325
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 33152.0,
        "FinishedTasksDistributionInMs" : [ 169.0, 8230.0, 8249.0, 8252.0, 8252.0 ]
      },
      "StartTimeInMs" : 1702227106190,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10842,
        "IOBytes" : {
          "Total" : 36997226,
          "Details" : {
            "IR" : 35908296,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 476989
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 843316406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 1069516426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -1582386980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7565362007158800,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -1690836159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1859382206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#423 = i_item_id#530) "
          },
          "15" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : 1857005435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 2116137492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10591506810022320,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 545625791,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33685504,
            "rowCount" : 3559,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#530], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : -924919759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 617160165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : 1858694359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "50" : {
            "sign" : -1642394952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -1607600508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_item_id#486] "
          },
          "13" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 315378787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "24" : {
            "sign" : -2091057990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33685504,
            "rowCount" : 3559,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#508], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : 1851417590,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -903203415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1177878656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : 2074610001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2072757613956300,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : -1053917684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2901860659538820,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -398874613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 1250276346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : -921498147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 8917249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : 864741898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#486 = i_item_id#552) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -1410771914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -830655300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : 1148279866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33685504,
            "rowCount" : 3559,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#552], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : 1570230388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -74192642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "27" : {
            "sign" : -1080670340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : 1487953246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -280689055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : 87393798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 986055742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5748260219974020,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : -2147471954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_item_id#423] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -561944041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : 257037430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4105900157124300,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_item_id#508], BroadcastQueryStage 2\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_item_id#530], BroadcastQueryStage 8\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_item_id#552], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86957772880,
        "inputRowCount" : 491064129
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227093953,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 23079,
        "IOBytes" : {
          "Total" : 52117117,
          "Details" : {
            "IR" : 50893235,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1589777963,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -291888794,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 352960,
            "rowCount" : 5515,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1945077055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 352960,
            "rowCount" : 5515,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -690832480,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 352960,
            "rowCount" : 5515,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374], HashAggregate(keys=[i_item_id#72], functions=[sum(total_sales#375)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374], HashAggregate(keys=[i_item_id#72], functions=[sum(total_sales#375)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 352960,
        "inputRowCount" : 5515
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227116608,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 424,
        "IOBytes" : {
          "Total" : 156077,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 156077,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 4724688,
            "rowCount" : 107713,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 89640,
            "rowCount" : 2241,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -2104910227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 5774618,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1128753344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1969820778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 5774618,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 57200,
            "rowCount" : 1430,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5774618,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4724688,
        "inputRowCount" : 107713
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 12,
        "FinishedTasksNum" : 5,
        "FinishedTasksTotalTimeInMs" : 33152.0,
        "FinishedTasksDistributionInMs" : [ 169.0, 8230.0, 8249.0, 8252.0, 8252.0 ]
      },
      "StartTimeInMs" : 1702227106612,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10420,
        "IOBytes" : {
          "Total" : 29235086,
          "Details" : {
            "IR" : 28238991,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 384154
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -1582386980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7565362007158800,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 1276504120,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1809807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 2074610001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2072757613956300,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : 1857005435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 2116137492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10591506810022320,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -2055917719,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "26" : {
            "sign" : -280689055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 1694430291,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 257037430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4105900157124300,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -311859126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1177878656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : -924919759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : 226372733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 1069516426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : 1250276346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : 1636690930,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 873673748,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : -1874685503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1146196051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 986055742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5748260219974020,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 617160165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : 1851417590,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -1642394952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : -1190743388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -944567265,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -830655300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : -1286818674,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1111563542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1571629747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : -1053917684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2901860659538820,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : -1919222789,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -911857393,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86620484368,
        "inputRowCount" : 491053452
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227094062,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 22970,
        "IOBytes" : {
          "Total" : 52117117,
          "Details" : {
            "IR" : 50893235,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 333880,
            "rowCount" : 8347,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 187040,
            "rowCount" : 4676,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 89640,
            "rowCount" : 2241,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -2104910227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 408075,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1128753344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1969820778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 408075,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 57200,
            "rowCount" : 1430,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 408075,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 333880,
        "inputRowCount" : 8347
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227116045,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 987,
        "IOBytes" : {
          "Total" : 768018,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 156077
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -1582386980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7565362007158800,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 1276504120,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 73085843976843964860,
            "rowCount" : 1661041908564635565,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1809807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 200165155246322973720,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 2074610001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2072757613956300,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : 1857005435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 2116137492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10591506810022320,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : -2055917719,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 59797508708326880340,
            "rowCount" : 1661041908564635565,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "26" : {
            "sign" : -280689055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 1694430291,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 30187227338136761940,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : 257037430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4105900157124300,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -311859126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 110180419199859331440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1177878656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : -924919759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : 226372733,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 59797508708326880340,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 1069516426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : 1250276346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : 1636690930,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 110180419199859331440,
            "rowCount" : 3060567199996092540,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 873673748,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 8091,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : -1874685503,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 244646300856616967880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1146196051,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 36895500079944931260,
            "rowCount" : 838534092726021165,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 986055742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5748260219974020,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 617160165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : 1851417590,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -1642394952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : -1190743388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -944567265,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 8091,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -830655300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : -1286818674,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 244646300856616967880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1111563542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30187227338136761940,
            "rowCount" : 838534092726021165,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : -1571629747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 134664956799828071760,
            "rowCount" : 3060567199996092540,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : -1053917684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2901860659538820,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : -1919222789,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 244646300856616967880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -911857393,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 8091,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#72 = i_item_id#508), BroadcastQueryStage 15\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_item_id#423 = i_item_id#530), BroadcastQueryStage 17\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_item_id#486 = i_item_id#552), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86599936528,
        "inputRowCount" : 490465725
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227096923,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 20109,
        "IOBytes" : {
          "Total" : 50498309,
          "Details" : {
            "IR" : 49274427,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 843316406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 1069516426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2223859360,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -1582386980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 246713757523500,
            "rowCount" : 12335687876175,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -1690836159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1859382206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#423 = i_item_id#530) "
          },
          "15" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : 1857005435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 2116137492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 345399260532900,
            "rowCount" : 12335687876175,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 545625791,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#530], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : -924919759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 617160165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : 1858694359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "50" : {
            "sign" : -1642394952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -1607600508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_item_id#486] "
          },
          "13" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 315378787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "24" : {
            "sign" : -2091057990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#508], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : 1851417590,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -903203415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1177878656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : 2074610001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 64568366605500,
            "rowCount" : 3228418330275,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : -1053917684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 90395713247700,
            "rowCount" : 3228418330275,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -398874613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 1250276346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : -921498147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 8917249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : 864741898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#486 = i_item_id#552) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -1410771914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -830655300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4432520384,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : 1148279866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#552], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : 1570230388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -74192642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "27" : {
            "sign" : -1080670340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : 1487953246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -280689055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3324390288,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : 87393798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 986055742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 180173642633880,
            "rowCount" : 6434772951210,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : -2147471954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_item_id#423] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -561944041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : 257037430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 128695459024200,
            "rowCount" : 6434772951210,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_item_id#508], BroadcastQueryStage 2\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_item_id#530], BroadcastQueryStage 8\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_item_id#552], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86854322836,
        "inputRowCount" : 491074374
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 3402.0,
        "FinishedTasksDistributionInMs" : [ 1084.0, 1084.0, 1141.0, 1177.0, 1177.0 ]
      },
      "StartTimeInMs" : 1702227093240,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 23792,
        "IOBytes" : {
          "Total" : 53196018,
          "Details" : {
            "IR" : 51972136,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 843316406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 1069516426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -1582386980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7565362007158800,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -1690836159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1859382206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#423 = i_item_id#530) "
          },
          "15" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : 1857005435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 2116137492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10591506810022320,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 545625791,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#530], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : -924919759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 617160165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : 1858694359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "50" : {
            "sign" : -1642394952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -1607600508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_item_id#486] "
          },
          "13" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 315378787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "24" : {
            "sign" : -2091057990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#508], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : 1851417590,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -903203415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1177878656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : 2074610001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2072757613956300,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : -1053917684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2901860659538820,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -398874613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 1250276346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : -921498147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 8917249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : 864741898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#486 = i_item_id#552) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -1410771914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -830655300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : 1148279866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#552], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : 1570230388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -74192642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "27" : {
            "sign" : -1080670340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : 1487953246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -280689055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : 87393798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 986055742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5748260219974020,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : -2147471954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_item_id#423] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -561944041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : 257037430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4105900157124300,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_item_id#508], BroadcastQueryStage 2\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_item_id#530], BroadcastQueryStage 8\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_item_id#552], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86857467508,
        "inputRowCount" : 491074317
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 3402.0,
        "FinishedTasksDistributionInMs" : [ 1084.0, 1084.0, 1141.0, 1177.0, 1177.0 ]
      },
      "StartTimeInMs" : 1702227093393,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 23639,
        "IOBytes" : {
          "Total" : 53102068,
          "Details" : {
            "IR" : 51878186,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1671614867,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : 142525367,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : 382348755,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -2104910227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1128753344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1969820778,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -25814476,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -1469468953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13733544,
        "inputRowCount" : 312126
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227097462,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 19570,
        "IOBytes" : {
          "Total" : 50498309,
          "Details" : {
            "IR" : 49274427,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 843316406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 1069516426,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -1582386980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7565362007158800,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -1690836159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : -1859382206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#423 = i_item_id#530) "
          },
          "15" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : 1857005435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 2116137492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10591506810022320,
            "rowCount" : 378268100357940,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 545625791,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#530], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : -924919759,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 617160165,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : 1858694359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "50" : {
            "sign" : -1642394952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -1607600508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_item_id#486] "
          },
          "13" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 315378787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "24" : {
            "sign" : -2091057990,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#508], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : 1851417590,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -903203415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1177878656,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : 2074610001,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2072757613956300,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : -1053917684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2901860659538820,
            "rowCount" : 103637880697815,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -398874613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "36" : {
            "sign" : 1250276346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 12300,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : -921498147,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 8917249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : 864741898,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#486 = i_item_id#552) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -1410771914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -830655300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : 1148279866,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_id#552], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : 1570230388,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -74192642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "27" : {
            "sign" : -1080670340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : 1487953246,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : -280689055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : 87393798,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 986055742,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5748260219974020,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : -2147471954,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_item_id#423] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -561944041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : 257037430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4105900157124300,
            "rowCount" : 205295007856215,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_item_id#508], BroadcastQueryStage 2\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_item_id#530], BroadcastQueryStage 8\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_item_id#552], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86857467508,
        "inputRowCount" : 491074317
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 3402.0,
        "FinishedTasksDistributionInMs" : [ 1084.0, 1084.0, 1141.0, 1177.0, 1177.0 ]
      },
      "StartTimeInMs" : 1702227093480,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 23552,
        "IOBytes" : {
          "Total" : 53102068,
          "Details" : {
            "IR" : 51878186,
            "IW" : 0,
            "SR" : 611941,
            "SW" : 611941
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1033053728,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 4400,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -271671657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1535234358,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- Project [d_date_sk#30]\n            :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#58]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n            :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n            :           :- Project [i_item_sk#71, i_item_id#72]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- Project [i_item_id#508]\n            :              +- Filter i_color#524 IN (orchid,chiffon,lace)\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n            :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- Project [d_date_sk#381]\n            :        :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#409]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -8.00)) AND isnotnull(ca_address_sk#409))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n            :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n            :           :- Project [i_item_sk#422, i_item_id#423]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- Project [i_item_id#530]\n            :              +- Filter i_color#546 IN (orchid,chiffon,lace)\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n            +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- Project [d_date_sk#444]\n                     :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     +- Project [ca_address_sk#472]\n                     :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -8.00)) AND isnotnull(ca_address_sk#472))\n                     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n                     +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n                        :- Project [i_item_sk#485, i_item_id#486]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- Project [i_item_id#552]\n                           +- Filter i_color#568 IN (orchid,chiffon,lace)\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1284188660,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 4400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [2]: [i_item_id#72, total_sales#374] Arguments: 100, [total_sales#374 ASC NULLS FIRST], [i_item_id#72, total_sales#374] "
          },
          "1" : {
            "sign" : 922046020,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 352960,
            "rowCount" : 5515,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [i_item_id#72, sum#590, isEmpty#591] Keys [1]: [i_item_id#72] Functions [1]: [sum(total_sales#375)] Aggregate Attributes [1]: [sum(total_sales#375)#582] Results [2]: [i_item_id#72, sum(total_sales#375)#582 AS total_sales#374] "
          },
          "2" : {
            "sign" : 1189839462,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [i_item_id#72, sum#590, isEmpty#591] Arguments: 23 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[total_sales#374 ASC NULLS FIRST], output=[i_item_id#72,total_sales#374])\n+- HashAggregate(keys=[i_item_id#72], functions=[sum(total_sales#375)], output=[i_item_id#72, total_sales#374])\n   +- ShuffleQueryStage 23\n      +- Exchange hashpartitioning(i_item_id#72, 200), ENSURE_REQUIREMENTS, [plan_id=2650]\n         +- *(19) HashAggregate(keys=[i_item_id#72], functions=[partial_sum(total_sales#375)], output=[i_item_id#72, sum#590, isEmpty#591])\n            +- Union\n               :- *(16) HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, total_sales#375])\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 20\n               :        +- Exchange hashpartitioning(i_item_id#72, 200), ENSURE_REQUIREMENTS, [plan_id=2306]\n               :           +- *(13) HashAggregate(keys=[i_item_id#72], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, sum#593L])\n               :              +- *(13) Project [ss_ext_sales_price#21, i_item_id#72]\n               :                 +- *(13) BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n               :                    :- *(13) Project [ss_item_sk#8, ss_ext_sales_price#21]\n               :                    :  +- *(13) BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n               :                    :     :- *(13) Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n               :                    :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n               :                    :     :     :- *(13) Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n               :                    :     :     :  +- *(13) ColumnarToRow\n               :                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n               :                    :     :     :           +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n               :                    :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     BroadcastQueryStage 1\n                                                                     +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                                                  +- == Initial Plan ==\n                                                                     BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2250]\n                                                                     +- Project [d_date_sk#30]\n                                                                        +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n                                                                           +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :                    :     :     +- BroadcastQueryStage 0\n               :                    :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n               :                    :     :           +- *(1) Project [d_date_sk#30]\n               :                    :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n               :                    :     :                 +- *(1) ColumnarToRow\n               :                    :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :                    :     +- BroadcastQueryStage 1\n               :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n               :                    :           +- *(2) Project [ca_address_sk#58]\n               :                    :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n               :                    :                 +- *(2) ColumnarToRow\n               :                    :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -8.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-8.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n               :                    +- BroadcastQueryStage 15\n               :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n               :                          +- *(10) BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n               :                             :- *(10) Filter isnotnull(i_item_sk#71)\n               :                             :  +- *(10) ColumnarToRow\n               :                             :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n               :                             +- BroadcastQueryStage 2\n               :                                +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n               :                                   +- *(3) Project [i_item_id#508]\n               :                                      +- *(3) Filter i_color#524 IN (orchid,chiffon,lace)\n               :                                         +- *(3) ColumnarToRow\n               :                                            +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_color#524] Batched: true, DataFilters: [i_color#524 IN (orchid,chiffon,lace)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_color, [chiffon,lace,orchid])], ReadSchema: struct<i_item_id:string,i_color:string>\n               :- *(17) HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, total_sales#377])\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 21\n               :        +- Exchange hashpartitioning(i_item_id#423, 200), ENSURE_REQUIREMENTS, [plan_id=2399]\n               :           +- *(14) HashAggregate(keys=[i_item_id#423], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, sum#595L])\n               :              +- *(14) Project [cs_ext_sales_price#115, i_item_id#423]\n               :                 +- *(14) BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n               :                    :- *(14) Project [cs_item_sk#107, cs_ext_sales_price#115]\n               :                    :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n               :                    :     :- *(14) Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n               :                    :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n               :                    :     :     :- *(14) Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n               :                    :     :     :  +- *(14) ColumnarToRow\n               :                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n               :                    :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n               :                    :     :     +- BroadcastQueryStage 4\n               :                    :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n               :                    :     +- BroadcastQueryStage 6\n               :                    :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n               :                    +- BroadcastQueryStage 17\n               :                       +- ReusedExchange [i_item_sk#422, i_item_id#423], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n               +- *(18) HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, total_sales#379])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 22\n                        +- Exchange hashpartitioning(i_item_id#486, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n                           +- *(15) HashAggregate(keys=[i_item_id#486], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, sum#597L])\n                              +- *(15) Project [ws_ext_sales_price#149, i_item_id#486]\n                                 +- *(15) BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n                                    :- *(15) Project [ws_item_sk#129, ws_ext_sales_price#149]\n                                    :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n                                    :     :- *(15) Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                                    :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n                                    :     :     :- *(15) Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n                                    :     :     :  +- *(15) ColumnarToRow\n                                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                                    :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n                                    :     :     +- BroadcastQueryStage 10\n                                    :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                    :     +- BroadcastQueryStage 12\n                                    :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n                                    +- BroadcastQueryStage 19\n                                       +- ReusedExchange [i_item_sk#485, i_item_id#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 352960,
        "inputRowCount" : 5515
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "3" : [ 875, 716, 775, 997, 769, 513, 649, 764, 801, 1391, 722, 660, 728, 621, 747, 762, 1113, 1075, 769, 909, 924, 624, 773, 736, 766, 499, 1055, 972, 884, 1064, 636, 817, 819, 654, 800, 875, 923, 946, 847, 577, 1119, 495, 672, 799, 851, 721, 861, 885, 524, 808, 674, 683, 600, 766, 621, 787, 668, 1071, 826, 718, 923, 822, 861, 924, 920, 1031, 1017, 667, 792, 889, 851, 603, 866, 813, 611, 769, 953, 1128, 786, 980, 555, 790, 826, 1015, 557, 903, 728, 847, 654, 629, 957, 621, 895, 549, 949, 845, 774, 1065, 925, 465, 790, 524, 905, 469, 774, 845, 937, 984, 968, 805, 563, 838, 577, 813, 549, 699, 644, 780, 1049, 602, 841, 792, 985, 1117, 769, 1124, 1017, 879, 774, 847, 764, 718, 990, 1140, 888, 697, 534, 916, 739, 960, 836, 873, 1098, 755, 538, 803, 994, 560, 1173, 1124, 782, 797, 642, 683, 435, 977, 782, 739, 824, 1089, 1024, 870, 775, 718, 1154, 1042, 986, 967, 557, 730, 924, 866, 957, 1040, 923, 943, 752, 607, 1000, 1290, 585, 403, 953, 644, 741, 682, 1066, 769, 879, 596, 712, 900, 877, 1002, 817, 693, 872, 946, 858, 1146 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 284,
        "TotalTasksDurationInMs" : 275,
        "IOBytes" : {
          "Total" : 156077,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 156077,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1537816622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "4" : {
            "sign" : -242399013,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7706526464,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 7706526464,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "9" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1454640506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "6" : {
            "sign" : 1364983481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "1" : {
            "sign" : 583088383,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12639348524,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 12639348524,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_item_id#72] "
          },
          "0" : {
            "sign" : 208538609,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "2" : {
            "sign" : 526139662,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 14937411892,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "7" : {
            "sign" : -1343375354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354676784,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 7354676784,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "3" : {
            "sign" : -959961363,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5504661760,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 5504661760,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n+- Project [ss_ext_sales_price#21, i_item_id#72]\n   +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n      :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n      :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n      :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n      :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n      :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n      :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n      :     :     :     :  +- Project [d_date_sk#30]\n      :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n      :     :     +- Project [d_date_sk#30]\n      :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#58]\n      :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n      +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n         :- Project [i_item_sk#71, i_item_id#72]\n         :  +- Filter isnotnull(i_item_sk#71)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n         +- Project [i_item_id#508]\n            +- Filter i_color#524 IN (orchid,chiffon,lace)\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 927892963,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)] PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : 1253586673,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_addr_sk#12] Right keys [1]: [ca_address_sk#58] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -1573223790,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1310720,
            "rowCount" : 8091,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#71, i_item_id#72] Arguments: 15 "
          },
          "9" : {
            "sign" : 795785968,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#30] Arguments: 0 "
          },
          "5" : {
            "sign" : 1031091159,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] Input [5]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29, d_date_sk#30] "
          },
          "10" : {
            "sign" : 1955795922,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#58] Arguments: 1 "
          },
          "6" : {
            "sign" : 1491393660,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#29] Right keys [1]: [d_date_sk#30] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 2062197030,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_ext_sales_price#21, i_item_id#72] Input [4]: [ss_item_sk#8, ss_ext_sales_price#21, i_item_sk#71, i_item_id#72] "
          },
          "0" : {
            "sign" : -2001236202,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ss_ext_sales_price#21, i_item_id#72] Keys [1]: [i_item_id#72] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#21))] Aggregate Attributes [1]: [sum#592L] Results [2]: [i_item_id#72, sum#593L] "
          },
          "2" : {
            "sign" : -1315079883,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#8] Right keys [1]: [i_item_sk#71] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 869270072,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] Condition : (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8)) "
          },
          "3" : {
            "sign" : 180115185,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_item_sk#8, ss_ext_sales_price#21] Input [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ca_address_sk#58] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#72], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, sum#593L])\n+- Project [ss_ext_sales_price#21, i_item_id#72]\n   +- BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n      :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n      :  +- BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n      :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n      :     :  +- BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :     :     :        +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n      :     :     :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2250]\n      :     :     :                 +- Project [d_date_sk#30]\n      :     :     :                    +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n      :     :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :     +- BroadcastQueryStage 0\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     :           +- *(1) Project [d_date_sk#30]\n      :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n      :     :                 +- *(1) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     +- BroadcastQueryStage 1\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      :           +- *(2) Project [ca_address_sk#58]\n      :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n      :                 +- *(2) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -8.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-8.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n      +- BroadcastQueryStage 15\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n            +- *(10) BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n               :- *(10) Filter isnotnull(i_item_sk#71)\n               :  +- *(10) ColumnarToRow\n               :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n               +- BroadcastQueryStage 2\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n                     +- *(3) Project [i_item_id#508]\n                        +- *(3) Filter i_color#524 IN (orchid,chiffon,lace)\n                           +- *(3) ColumnarToRow\n                              +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_color#524] Batched: true, DataFilters: [i_color#524 IN (orchid,chiffon,lace)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_color, [chiffon,lace,orchid])], ReadSchema: struct<i_item_id:string,i_color:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7361230632,
        "inputRowCount" : 262721605
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 18750,
        "TotalTasksDurationInMs" : 216603,
        "IOBytes" : {
          "Total" : 28467068,
          "Details" : {
            "IR" : 28238991,
            "IW" : 0,
            "SR" : 0,
            "SW" : 228077
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1661837529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651561264,
                "rowCount" : 142555583
              },
              "compileTime" : {
                "sizeInBytes" : 29651561264,
                "rowCount" : 142555583
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "4" : {
            "sign" : -1020720606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4014046764,
                "rowCount" : 143358813
              },
              "compileTime" : {
                "sizeInBytes" : 4014046764,
                "rowCount" : 143358813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "9" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1464115199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "6" : {
            "sign" : 1309767128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "1" : {
            "sign" : -954557557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6330475932,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 6330475932,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_item_id#423] "
          },
          "0" : {
            "sign" : 2064679897,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "2" : {
            "sign" : -1820768514,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 7481471556,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "7" : {
            "sign" : 1325468571,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3991556324,
                "rowCount" : 142555583
              },
              "compileTime" : {
                "sizeInBytes" : 3991556324,
                "rowCount" : 142555583
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "3" : {
            "sign" : 1101744226,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2867176260,
                "rowCount" : 143358813
              },
              "compileTime" : {
                "sizeInBytes" : 2867176260,
                "rowCount" : 143358813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n+- Project [cs_ext_sales_price#115, i_item_id#423]\n   +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n      :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n      :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n      :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n      :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n      :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n      :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n      :     :     :     :  +- Project [d_date_sk#381]\n      :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n      :     :     +- Project [d_date_sk#381]\n      :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#409]\n      :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -8.00)) AND isnotnull(ca_address_sk#409))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n      +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n         :- Project [i_item_sk#422, i_item_id#423]\n         :  +- Filter isnotnull(i_item_sk#422)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n         +- Project [i_item_id#530]\n            +- Filter i_color#546 IN (orchid,chiffon,lace)\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -439423973,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#585)] PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)] ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : -1914866512,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_bill_addr_sk#98] Right keys [1]: [ca_address_sk#409] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -766842449,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1310720,
            "rowCount" : 8091,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#422, i_item_id#423] Arguments: 17 "
          },
          "9" : {
            "sign" : -1584134031,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#381] Arguments: 4 "
          },
          "5" : {
            "sign" : -2017713667,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3324390288,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] Input [5]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126, d_date_sk#381] "
          },
          "10" : {
            "sign" : -1647213909,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#409] Arguments: 6 "
          },
          "6" : {
            "sign" : -1025056302,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4432520384,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#126] Right keys [1]: [d_date_sk#381] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 1801997512,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_ext_sales_price#115, i_item_id#423] Input [4]: [cs_item_sk#107, cs_ext_sales_price#115, i_item_sk#422, i_item_id#423] "
          },
          "0" : {
            "sign" : 275517822,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [cs_ext_sales_price#115, i_item_id#423] Keys [1]: [i_item_id#423] Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#115))] Aggregate Attributes [1]: [sum#594L] Results [2]: [i_item_id#423, sum#595L] "
          },
          "2" : {
            "sign" : 1711960503,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#107] Right keys [1]: [i_item_sk#422] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1694865304,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] Condition : (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107)) "
          },
          "3" : {
            "sign" : 251663858,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_item_sk#107, cs_ext_sales_price#115] Input [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, ca_address_sk#409] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#423], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, sum#595L])\n+- Project [cs_ext_sales_price#115, i_item_id#423]\n   +- BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n      :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n      :  +- BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n      :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n      :     :  +- BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n      :     :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n      :     :     +- BroadcastQueryStage 4\n      :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     +- BroadcastQueryStage 6\n      :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      +- BroadcastQueryStage 17\n         +- ReusedExchange [i_item_sk#422, i_item_id#423], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3998110172,
        "inputRowCount" : 142610160
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 8808,
        "TotalTasksDurationInMs" : 2288,
        "IOBytes" : {
          "Total" : 13501083,
          "Details" : {
            "IR" : 13366131,
            "IW" : 0,
            "SR" : 0,
            "SW" : 134952
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1133852949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "4" : {
            "sign" : 269243814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015528872,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 2015528872,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "9" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1218544192,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "6" : {
            "sign" : 1369461492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "1" : {
            "sign" : 1882465949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3164343820,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3164343820,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_item_id#486] "
          },
          "0" : {
            "sign" : 434296416,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              },
              "compileTime" : {
                "sizeInBytes" : 4577848,
                "rowCount" : 104042
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "2" : {
            "sign" : -642803488,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 3739679060,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "7" : {
            "sign" : -629335644,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015034084,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 2015034084,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "3" : {
            "sign" : -1337344841,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1439663480,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 1439663480,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n+- Project [ws_ext_sales_price#149, i_item_id#486]\n   +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n      :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n      :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n      :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n      :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n      :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n      :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n      :     :     :     :  +- Project [d_date_sk#444]\n      :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n      :     :     +- Project [d_date_sk#444]\n      :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#472]\n      :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -8.00)) AND isnotnull(ca_address_sk#472))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n      +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n         :- Project [i_item_sk#485, i_item_id#486]\n         :  +- Filter isnotnull(i_item_sk#485)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n         +- Project [i_item_id#552]\n            +- Filter i_color#568 IN (orchid,chiffon,lace)\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1388822036,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#585)] PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : -595278670,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_bill_addr_sk#133] Right keys [1]: [ca_address_sk#472] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -1664823283,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1310720,
            "rowCount" : 8091,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#485, i_item_id#486] Arguments: 19 "
          },
          "9" : {
            "sign" : -1974113210,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#444] Arguments: 10 "
          },
          "5" : {
            "sign" : 1596083348,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] Input [5]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160, d_date_sk#444] "
          },
          "10" : {
            "sign" : -635629642,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 4194304,
            "rowCount" : 46455,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#472] Arguments: 12 "
          },
          "6" : {
            "sign" : -65384138,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2223859360,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#160] Right keys [1]: [d_date_sk#444] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1911871204,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_ext_sales_price#149, i_item_id#486] Input [4]: [ws_item_sk#129, ws_ext_sales_price#149, i_item_sk#485, i_item_id#486] "
          },
          "0" : {
            "sign" : -816070587,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ws_ext_sales_price#149, i_item_id#486] Keys [1]: [i_item_id#486] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#149))] Aggregate Attributes [1]: [sum#596L] Results [2]: [i_item_id#486, sum#597L] "
          },
          "2" : {
            "sign" : 975441761,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#129] Right keys [1]: [i_item_sk#485] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1595364415,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] Condition : (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129)) "
          },
          "3" : {
            "sign" : 1041935759,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_item_sk#129, ws_ext_sales_price#149] Input [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ca_address_sk#472] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#486], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, sum#597L])\n+- Project [ws_ext_sales_price#149, i_item_id#486]\n   +- BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n      :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n      :  +- BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n      :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n      :     :  +- BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :     :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n      :     :     +- BroadcastQueryStage 10\n      :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     +- BroadcastQueryStage 12\n      :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      +- BroadcastQueryStage 19\n         +- ReusedExchange [i_item_sk#485, i_item_id#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2021587932,
        "inputRowCount" : 72020080
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 9152,
        "TotalTasksDurationInMs" : 1677,
        "IOBytes" : {
          "Total" : 7762140,
          "Details" : {
            "IR" : 7669305,
            "IW" : 0,
            "SR" : 0,
            "SW" : 92835
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 696774565,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 595812,
                "rowCount" : 49651
              },
              "compileTime" : {
                "sizeInBytes" : 595812,
                "rowCount" : 49651
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#58] "
          },
          "1" : {
            "sign" : 207812862,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12214146,
                "rowCount" : 49651
              },
              "compileTime" : {
                "sizeInBytes" : 12214146,
                "rowCount" : 49651
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58)) "
          },
          "2" : {
            "sign" : 783351469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#58, ca_address_id#59, ca_street_number#60, ca_street_name#61, ca_street_type#62, ca_suite_number#63, ca_city#64, ca_county#65, ca_state#66, ca_zip#67, ca_country#68, ca_gmt_offset#69, ca_location_type#70], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#58]\n+- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1506954532,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 595812,
            "rowCount" : 49651,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#58] Input [2]: [ca_address_sk#58, ca_gmt_offset#69] "
          },
          "1" : {
            "sign" : -213370581,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 595812,
            "rowCount" : 49651,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#58, ca_gmt_offset#69] Condition : ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58)) "
          },
          "2" : {
            "sign" : -1401978596,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 595812,
            "rowCount" : 49651,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#58, ca_gmt_offset#69] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-8.00), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#58]\n+- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -8.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-8.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 595812,
        "inputRowCount" : 49651
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1530,
        "TotalTasksDurationInMs" : 6494,
        "IOBytes" : {
          "Total" : 4468245,
          "Details" : {
            "IR" : 4468245,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1121271959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 600,
                "rowCount" : 50
              },
              "compileTime" : {
                "sizeInBytes" : 600,
                "rowCount" : 50
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "1" : {
            "sign" : -370894786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12300,
                "rowCount" : 50
              },
              "compileTime" : {
                "sizeInBytes" : 12300,
                "rowCount" : 50
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30)) "
          },
          "2" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#30]\n+- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1567545953,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#30] Input [3]: [d_date_sk#30, d_year#36, d_moy#38] "
          },
          "1" : {
            "sign" : 1990261390,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#30, d_year#36, d_moy#38] Condition : ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30)) "
          },
          "2" : {
            "sign" : -923125628,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 600,
            "rowCount" : 50,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#30, d_year#36, d_moy#38] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#30]\n+- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 600,
        "inputRowCount" : 50
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1789,
        "TotalTasksDurationInMs" : 1776,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1950252727,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 250380,
                "rowCount" : 6955
              },
              "compileTime" : {
                "sizeInBytes" : 250380,
                "rowCount" : 6955
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_id#508] "
          },
          "1" : {
            "sign" : -1153982641,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2962830,
                "rowCount" : 6955
              },
              "compileTime" : {
                "sizeInBytes" : 2962830,
                "rowCount" : 6955
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: i_color#524 IN (orchid,chiffon,lace) "
          },
          "2" : {
            "sign" : 707494135,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#507, i_item_id#508, i_rec_start_date#509, i_rec_end_date#510, i_item_desc#511, i_current_price#512, i_wholesale_cost#513, i_brand_id#514, i_brand#515, i_class_id#516, i_class#517, i_category_id#518, i_category#519, i_manufact_id#520, i_manufact#521, i_size#522, i_formulation#523, i_color#524, i_units#525, i_container#526, i_manager_id#527, i_product_name#528], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_id#508]\n+- Filter i_color#524 IN (orchid,chiffon,lace)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1764278583,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [i_item_id#508] Input [2]: [i_item_id#508, i_color#524] "
          },
          "1" : {
            "sign" : 1635368433,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_id#508, i_color#524] Condition : i_color#524 IN (orchid,chiffon,lace) "
          },
          "2" : {
            "sign" : 131524937,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 250380,
            "rowCount" : 6955,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_id#508, i_color#524] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [In(i_color, [chiffon,lace,orchid])] ReadSchema: struct<i_item_id:string,i_color:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_id#508]\n+- Filter i_color#524 IN (orchid,chiffon,lace)\n   +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_color#524] Batched: true, DataFilters: [i_color#524 IN (orchid,chiffon,lace)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_color, [chiffon,lace,orchid])], ReadSchema: struct<i_item_id:string,i_color:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 250380,
        "inputRowCount" : 6955
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 2307,
        "TotalTasksDurationInMs" : 7913,
        "IOBytes" : {
          "Total" : 984951,
          "Details" : {
            "IR" : 984951,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1016844701,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 16785442,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374] "
          },
          "1" : {
            "sign" : 765332723,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13733544,
                "rowCount" : 312126
              },
              "compileTime" : {
                "sizeInBytes" : 13733544,
                "rowCount" : 312126
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#72], [i_item_id#72, sum(total_sales#375) AS total_sales#374]\n+- Union false, false\n   :- Aggregate [i_item_id#72], [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n   :  +- Project [ss_ext_sales_price#21, i_item_id#72]\n   :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n   :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n   :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n   :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n   :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n   :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n   :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n   :        :     :     :     :  +- Project [d_date_sk#30]\n   :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n   :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n   :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n   :        :     :     +- Project [d_date_sk#30]\n   :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 2000) AND (d_moy#38 = 1))) AND isnotnull(d_date_sk#30))\n   :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n   :        :     +- Project [ca_address_sk#58]\n   :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n   :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n   :        +- Join LeftSemi, (i_item_id#72 = i_item_id#508)\n   :           :- Project [i_item_sk#71, i_item_id#72]\n   :           :  +- Filter isnotnull(i_item_sk#71)\n   :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n   :           +- Project [i_item_id#508]\n   :              +- Filter i_color#524 IN (orchid,chiffon,lace)\n   :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n   :- Aggregate [i_item_id#423], [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n   :  +- Project [cs_ext_sales_price#115, i_item_id#423]\n   :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n   :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n   :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n   :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n   :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n   :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n   :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n   :        :     :     :     :  +- Project [d_date_sk#381]\n   :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n   :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n   :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n   :        :     :     +- Project [d_date_sk#381]\n   :        :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 2000) AND (d_moy#389 = 1))) AND isnotnull(d_date_sk#381))\n   :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n   :        :     +- Project [ca_address_sk#409]\n   :        :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -8.00)) AND isnotnull(ca_address_sk#409))\n   :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n   :        +- Join LeftSemi, (i_item_id#423 = i_item_id#530)\n   :           :- Project [i_item_sk#422, i_item_id#423]\n   :           :  +- Filter isnotnull(i_item_sk#422)\n   :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n   :           +- Project [i_item_id#530]\n   :              +- Filter i_color#546 IN (orchid,chiffon,lace)\n   :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n   +- Aggregate [i_item_id#486], [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n      +- Project [ws_ext_sales_price#149, i_item_id#486]\n         +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n            :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n            :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n            :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n            :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n            :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n            :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n            :     :     :     :  +- Project [d_date_sk#444]\n            :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n            :     :     +- Project [d_date_sk#444]\n            :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 2000) AND (d_moy#452 = 1))) AND isnotnull(d_date_sk#444))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n            :     +- Project [ca_address_sk#472]\n            :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -8.00)) AND isnotnull(ca_address_sk#472))\n            :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n            +- Join LeftSemi, (i_item_id#486 = i_item_id#552)\n               :- Project [i_item_sk#485, i_item_id#486]\n               :  +- Filter isnotnull(i_item_sk#485)\n               :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n               +- Project [i_item_id#552]\n                  +- Filter i_color#568 IN (orchid,chiffon,lace)\n                     +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1224623569,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 89640,
            "rowCount" : 2241,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#423, sum#595L] Keys [1]: [i_item_id#423] Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#115))] Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#115))#580L] Results [2]: [i_item_id#423, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115))#580L,17,2) AS total_sales#377] "
          },
          "5" : {
            "sign" : -1749073339,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#423, sum#595L] Arguments: 21 "
          },
          "6" : {
            "sign" : 957784736,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 57200,
            "rowCount" : 1430,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#486, sum#597L] Keys [1]: [i_item_id#486] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#149))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#149))#581L] Results [2]: [i_item_id#486, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149))#581L,17,2) AS total_sales#379] "
          },
          "1" : {
            "sign" : 826882937,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 13733544,
            "rowCount" : 312126,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "0" : {
            "sign" : -1660659638,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16785442,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#72, total_sales#375] Keys [1]: [i_item_id#72] Functions [1]: [partial_sum(total_sales#375)] Aggregate Attributes [2]: [sum#588, isEmpty#589] Results [3]: [i_item_id#72, sum#590, isEmpty#591] "
          },
          "2" : {
            "sign" : -1022336705,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 187040,
            "rowCount" : 4676,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#72, sum#593L] Keys [1]: [i_item_id#72] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#21))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#21))#579L] Results [2]: [i_item_id#72, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21))#579L,17,2) AS total_sales#375] "
          },
          "7" : {
            "sign" : -685023715,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#486, sum#597L] Arguments: 22 "
          },
          "3" : {
            "sign" : -831410661,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#72, sum#593L] Arguments: 20 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#72], functions=[partial_sum(total_sales#375)], output=[i_item_id#72, sum#590, isEmpty#591])\n+- Union\n   :- HashAggregate(keys=[i_item_id#72], functions=[sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, total_sales#375])\n   :  +- ShuffleQueryStage 20\n   :     +- Exchange hashpartitioning(i_item_id#72, 200), ENSURE_REQUIREMENTS, [plan_id=2306]\n   :        +- *(13) HashAggregate(keys=[i_item_id#72], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_item_id#72, sum#593L])\n   :           +- *(13) Project [ss_ext_sales_price#21, i_item_id#72]\n   :              +- *(13) BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n   :                 :- *(13) Project [ss_item_sk#8, ss_ext_sales_price#21]\n   :                 :  +- *(13) BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n   :                 :     :- *(13) Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n   :                 :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n   :                 :     :     :- *(13) Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n   :                 :     :     :  +- *(13) ColumnarToRow\n   :                 :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :                 :     :     :           +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n   :                 :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2250]\n                                                      +- Project [d_date_sk#30]\n                                                         +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     :     +- BroadcastQueryStage 0\n   :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n   :                 :     :           +- *(1) Project [d_date_sk#30]\n   :                 :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 2000)) AND (d_moy#38 = 1)) AND isnotnull(d_date_sk#30))\n   :                 :     :                 +- *(1) ColumnarToRow\n   :                 :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 2000), (d_moy#38 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     +- BroadcastQueryStage 1\n   :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n   :                 :           +- *(2) Project [ca_address_sk#58]\n   :                 :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -8.00)) AND isnotnull(ca_address_sk#58))\n   :                 :                 +- *(2) ColumnarToRow\n   :                 :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -8.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-8.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n   :                 +- BroadcastQueryStage 15\n   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n   :                       +- *(10) BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n   :                          :- *(10) Filter isnotnull(i_item_sk#71)\n   :                          :  +- *(10) ColumnarToRow\n   :                          :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n   :                          +- BroadcastQueryStage 2\n   :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n   :                                +- *(3) Project [i_item_id#508]\n   :                                   +- *(3) Filter i_color#524 IN (orchid,chiffon,lace)\n   :                                      +- *(3) ColumnarToRow\n   :                                         +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_color#524] Batched: true, DataFilters: [i_color#524 IN (orchid,chiffon,lace)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_color, [chiffon,lace,orchid])], ReadSchema: struct<i_item_id:string,i_color:string>\n   :- HashAggregate(keys=[i_item_id#423], functions=[sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, total_sales#377])\n   :  +- ShuffleQueryStage 21\n   :     +- Exchange hashpartitioning(i_item_id#423, 200), ENSURE_REQUIREMENTS, [plan_id=2399]\n   :        +- *(14) HashAggregate(keys=[i_item_id#423], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_item_id#423, sum#595L])\n   :           +- *(14) Project [cs_ext_sales_price#115, i_item_id#423]\n   :              +- *(14) BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n   :                 :- *(14) Project [cs_item_sk#107, cs_ext_sales_price#115]\n   :                 :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n   :                 :     :- *(14) Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n   :                 :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n   :                 :     :     :- *(14) Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n   :                 :     :     :  +- *(14) ColumnarToRow\n   :                 :     :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n   :                 :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n   :                 :     :     +- BroadcastQueryStage 4\n   :                 :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n   :                 :     +- BroadcastQueryStage 6\n   :                 :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n   :                 +- BroadcastQueryStage 17\n   :                    +- ReusedExchange [i_item_sk#422, i_item_id#423], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n   +- HashAggregate(keys=[i_item_id#486], functions=[sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, total_sales#379])\n      +- ShuffleQueryStage 22\n         +- Exchange hashpartitioning(i_item_id#486, 200), ENSURE_REQUIREMENTS, [plan_id=2492]\n            +- *(15) HashAggregate(keys=[i_item_id#486], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_item_id#486, sum#597L])\n               +- *(15) Project [ws_ext_sales_price#149, i_item_id#486]\n                  +- *(15) BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n                     :- *(15) Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n                     :     :- *(15) Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n                     :     :     :- *(15) Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n                     :     :     :  +- *(15) ColumnarToRow\n                     :     :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                     :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#2253]\n                     :     :     +- BroadcastQueryStage 10\n                     :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                     :     +- BroadcastQueryStage 12\n                     :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n                     +- BroadcastQueryStage 19\n                        +- ReusedExchange [i_item_sk#485, i_item_id#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1762]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 333880,
        "inputRowCount" : 8347
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "2" : [ 640, 452, 560, 851, 337, 160, 320, 480, 640, 726, 320, 400, 400, 374, 320, 540, 1031, 503, 417, 577, 657, 80, 320, 480, 480, 320, 640, 671, 641, 534, 417, 523, 443, 497, 320, 354, 479, 555, 737, 186, 772, 426, 480, 480, 514, 657, 560, 434, 560, 772, 320, 266, 452, 480, 240, 546, 400, 586, 480, 594, 657, 426, 480, 586, 763, 369, 763, 354, 577, 337, 417, 320, 577, 646, 320, 543, 726, 660, 400, 506, 257, 409, 437, 657, 160, 437, 400, 434, 320, 480, 657, 160, 586, 240, 460, 514, 277, 480, 480, 0, 417, 240, 274, 320, 426, 346, 737, 277, 480, 480, 240, 514, 337, 543, 257, 320, 320, 640, 1243, 240, 337, 726, 726, 795, 417, 825, 694, 480, 337, 523, 506, 337, 709, 400, 417, 240, 426, 586, 523, 646, 746, 400, 791, 674, 320, 434, 677, 240, 646, 677, 577, 417, 517, 240, 0, 720, 443, 417, 314, 780, 700, 577, 346, 400, 709, 740, 454, 517, 160, 400, 657, 577, 763, 986, 860, 506, 320, 240, 577, 497, 400, 80, 717, 160, 337, 400, 577, 480, 426, 354, 417, 577, 480, 497, 480, 463, 700, 497, 320, 694 ],
        "1" : [ 940, 603, 683, 703, 755, 746, 434, 577, 480, 1162, 640, 640, 523, 497, 320, 497, 931, 745, 791, 943, 578, 540, 880, 320, 949, 177, 1106, 754, 585, 1262, 480, 678, 497, 400, 992, 771, 674, 689, 586, 560, 826, 97, 657, 841, 709, 417, 880, 591, 160, 683, 746, 682, 240, 789, 689, 897, 434, 971, 720, 566, 941, 737, 1002, 657, 657, 731, 629, 400, 586, 577, 754, 357, 703, 594, 363, 783, 762, 892, 817, 894, 277, 977, 825, 871, 560, 889, 426, 817, 597, 452, 960, 852, 975, 560, 940, 860, 897, 1111, 969, 577, 640, 346, 800, 497, 666, 560, 875, 977, 1132, 363, 337, 700, 320, 674, 160, 480, 833, 703, 826, 417, 629, 640, 783, 940, 933, 674, 992, 755, 551, 554, 443, 620, 800, 1199, 863, 737, 266, 997, 737, 929, 972, 1031, 1014, 906, 611, 577, 623, 417, 754, 968, 560, 1119, 586, 434, 443, 800, 480, 683, 443, 1046, 904, 772, 640, 657, 1005, 1083, 1029, 720, 400, 480, 497, 852, 823, 1154, 780, 1160, 720, 575, 1137, 1293, 337, 160, 985, 869, 835, 400, 669, 698, 880, 283, 426, 709, 763, 1145, 711, 363, 529, 903, 1051, 1082 ],
        "0" : [ 1182, 1076, 1358, 1623, 963, 523, 1106, 1269, 1511, 1673, 1081, 909, 1368, 763, 1403, 1020, 1711, 1473, 1009, 1181, 1479, 863, 1379, 1527, 1347, 906, 1440, 1448, 1008, 1397, 929, 1266, 1222, 975, 981, 1120, 1386, 1178, 1246, 652, 1822, 586, 857, 489, 1160, 1360, 1168, 1502, 1046, 890, 900, 846, 914, 1063, 586, 1200, 940, 1530, 1352, 1153, 1448, 1349, 1252, 1411, 1145, 1644, 1364, 1163, 1052, 1517, 1297, 903, 1175, 1105, 894, 1022, 1390, 1353, 1474, 1219, 914, 1163, 1194, 1166, 1091, 1627, 1189, 1181, 1009, 922, 1500, 709, 1418, 846, 1657, 1220, 940, 1395, 1518, 995, 1009, 1034, 1442, 754, 1150, 1321, 1207, 1331, 1535, 1578, 746, 1506, 934, 1346, 1048, 1377, 849, 992, 1306, 897, 1435, 1215, 1084, 1234, 977, 1723, 1540, 1076, 1160, 1416, 971, 1338, 1423, 1728, 1405, 955, 560, 1383, 1107, 1337, 906, 1339, 1549, 711, 746, 1114, 1591, 900, 1956, 1729, 1088, 1017, 480, 1083, 620, 1281, 1424, 846, 1138, 1399, 1766, 1251, 1306, 1260, 1435, 1446, 1496, 1308, 863, 1249, 1377, 1225, 943, 1384, 1292, 1349, 891, 954, 1364, 1664, 772, 443, 1393, 1058, 1246, 1369, 1347, 900, 1185, 709, 999, 1381, 1466, 1559, 1219, 981, 1078, 1380, 1170, 1495 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 346,
        "TotalTasksDurationInMs" : 922,
        "IOBytes" : {
          "Total" : 611941,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 455864,
            "SW" : 156077
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1914828781,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_item_id#72 = i_item_id#508) "
          },
          "1" : {
            "sign" : -1934725616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_item_id#72] "
          },
          "2" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "3" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalRelation",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join LeftSemi, (i_item_id#72 = i_item_id#508)\n:- Project [i_item_sk#71, i_item_id#72]\n:  +- Filter isnotnull(i_item_sk#71)\n:     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n+- Project [i_item_id#508]\n   +- Filter i_color#524 IN (orchid,chiffon,lace)\n      +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 397181526,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [i_item_id#72] Right keys [1]: [i_item_id#508] Join type: LeftSemi Join condition: None "
          },
          "1" : {
            "sign" : 999207897,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#71, i_item_id#72] Condition : isnotnull(i_item_sk#71) "
          },
          "2" : {
            "sign" : -1727008469,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#71, i_item_id#72] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          },
          "3" : {
            "sign" : -1563048913,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33685504,
            "rowCount" : 3559,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [i_item_id#508] Arguments: 2 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "BroadcastHashJoin [i_item_id#72], [i_item_id#508], LeftSemi, BuildRight, false\n:- Filter isnotnull(i_item_sk#71)\n:  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n+- BroadcastQueryStage 2\n   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=594]\n      +- *(3) Project [i_item_id#508]\n         +- *(3) Filter i_color#524 IN (orchid,chiffon,lace)\n            +- *(3) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.item[i_item_id#508,i_color#524] Batched: true, DataFilters: [i_color#524 IN (orchid,chiffon,lace)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [In(i_color, [chiffon,lace,orchid])], ReadSchema: struct<i_item_id:string,i_color:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41845504,
        "inputRowCount" : 207559
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 2737,
        "TotalTasksDurationInMs" : 7819,
        "IOBytes" : {
          "Total" : 1618808,
          "Details" : {
            "IR" : 1618808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227090897,
  "SQLEndTimeInMs" : 1702227117032,
  "Objectives" : {
    "DurationInMs" : 26135,
    "IOBytes" : {
      "Total" : 57664263,
      "Details" : {
        "IR" : 56440381,
        "IW" : 0,
        "SR" : 611941,
        "SW" : 611941
      }
    }
  }
}
