{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 813675579,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14870272760,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#37) "
        },
        "8" : {
          "sign" : 1915538432,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 21831601996,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#6 = i_item_sk#94) "
        },
        "19" : {
          "sign" : 13749093,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 329280,
          "rowCount" : 27440,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#28] "
        },
        "23" : {
          "sign" : 305875584,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#94) "
        },
        "4" : {
          "sign" : 952992765,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
          "sizeInBytes" : 149451043875,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Expand Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#128, s_state#129, spark_grouping_id#127L] "
        },
        "15" : {
          "sign" : 1608590622,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : -1918171226,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12745948080,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
        },
        "9" : {
          "sign" : 183828670,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12100083908,
          "rowCount" : 275001907,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
        },
        "22" : {
          "sign" : -609071415,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#94, i_item_id#95] "
        },
        "26" : {
          "sign" : -1053372780,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 128372,
          "rowCount" : 268,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65)) "
        },
        "13" : {
          "sign" : 1374443328,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13044374564,
          "rowCount" : 250853357,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] "
        },
        "24" : {
          "sign" : -1299140691,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#94, i_item_id#95, i_rec_start_date#96, i_rec_end_date#97, i_item_desc#98, i_current_price#99, i_wholesale_cost#100, i_brand_id#101, i_brand#102, i_class_id#103, i_class#104, i_category_id#105, i_category#106, i_manufact_id#107, i_manufact#108, i_size#109, i_formulation#110, i_color#111, i_units#112, i_container#113, i_manager_id#114, i_product_name#115], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 1736170942,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6912,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#37] "
        },
        "5" : {
          "sign" : -828955174,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 45072537042,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] "
        },
        "10" : {
          "sign" : 312265200,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14300099164,
          "rowCount" : 275001907,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#8 = cd_demo_sk#28) "
        },
        "21" : {
          "sign" : -553293149,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#28, cd_gender#29, cd_marital_status#30, cd_education_status#31, cd_purchase_estimate#32, cd_credit_rating#33, cd_dep_count#34, cd_dep_employed_count#35, cd_dep_college_count#36], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : 1109602507,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 49695361354,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#65) "
        },
        "1" : {
          "sign" : 165522717,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 144113506593,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : 886835284,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
        },
        "25" : {
          "sign" : -1916819802,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6968,
          "rowCount" : 268,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#65, s_state#89] "
        },
        "14" : {
          "sign" : -871296676,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 38129710264,
          "rowCount" : 250853357,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#138 [ss_sold_date_sk#27]) "
        },
        "0" : {
          "sign" : 1203423442,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 8100,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1677007595,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2606800,
          "rowCount" : 27440,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (((cd_gender#29 = M) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College))) AND isnotnull(cd_demo_sk#28)) "
        },
        "27" : {
          "sign" : -851791820,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#65, s_store_id#66, s_rec_start_date#67, s_rec_end_date#68, s_closed_date_sk#69, s_store_name#70, s_number_employees#71, s_floor_space#72, s_hours#73, s_manager#74, s_market_id#75, s_geography_class#76, s_market_desc#77, s_market_manager#78, s_division_id#79, s_division_name#80, s_company_id#81, s_company_name#82, s_street_number#83, s_street_name#84, s_street_type#85, s_suite_number#86, s_city#87, s_county#88, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : -844016088,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 144113506593,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [i_item_id#128 ASC NULLS FIRST, s_state#129 ASC NULLS FIRST], true "
        },
        "18" : {
          "sign" : 140067933,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#37, d_date_id#38, d_date#39, d_month_seq#40, d_week_seq#41, d_quarter_seq#42, d_year#43, d_dow#44, d_moy#45, d_dom#46, d_qoy#47, d_fy_year#48, d_fy_quarter_seq#49, d_fy_week_seq#50, d_day_name#51, d_quarter_name#52, d_holiday#53, d_weekend#54, d_following_holiday#55, d_first_dom#56, d_last_dom#57, d_same_day_ly#58, d_same_day_lq#59, d_current_day#60, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "7" : {
          "sign" : -456456714,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 19533538628,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] "
        },
        "3" : {
          "sign" : 1874184549,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 144113506593,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#128, s_state#129, spark_grouping_id#127L], [i_item_id#128, s_state#129, cast((shiftright(spark_grouping_id#127L, 0) & 1) as tinyint) AS g_state#0, avg(ss_quantity#14) AS agg1#1, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#2, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#3, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#4] "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "LogicalRelation",
        "toId" : 17,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Filter",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "LogicalRelation",
        "toId" : 20,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Filter",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Expand",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Expand",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#128 ASC NULLS FIRST, s_state#129 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#128, s_state#129, spark_grouping_id#127L], [i_item_id#128, s_state#129, cast((shiftright(spark_grouping_id#127L, 0) & 1) as tinyint) AS g_state#0, avg(ss_quantity#14) AS agg1#1, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#2, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#3, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#4]\n         +- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#128, s_state#129, spark_grouping_id#127L]\n            +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n               +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n                  :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                  :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n                  :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n                  :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n                  :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n                  :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#138 [ss_sold_date_sk#27])\n                  :     :     :     :     :  +- Project [d_date_sk#37]\n                  :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n                  :     :     :     +- Project [d_date_sk#37]\n                  :     :     :        +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     +- Project [cd_demo_sk#28]\n                  :     :        +- Filter ((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (((cd_gender#29 = M) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College))) AND isnotnull(cd_demo_sk#28))\n                  :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31,cd_purchase_estimate#32,cd_credit_rating#33,cd_dep_count#34,cd_dep_employed_count#35,cd_dep_college_count#36] parquet\n                  :     +- Project [i_item_sk#94, i_item_id#95]\n                  :        +- Filter isnotnull(i_item_sk#94)\n                  :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n                  +- Project [s_store_sk#65, s_state#89]\n                     +- Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n                        +- Relation spark_catalog.tpcds_100.store[s_store_sk#65,s_store_id#66,s_rec_start_date#67,s_rec_end_date#68,s_closed_date_sk#69,s_store_name#70,s_number_employees#71,s_floor_space#72,s_hours#73,s_manager#74,s_market_id#75,s_geography_class#76,s_market_desc#77,s_market_manager#78,s_division_id#79,s_division_name#80,s_company_id#81,s_company_name#82,s_street_number#83,s_street_name#84,s_street_type#85,s_suite_number#86,s_city#87,s_county#88,... 5 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 42094436268,
      "inputRowCount" : 277243604
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1188547599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127442617080,
            "rowCount" : 91561475305,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#37) "
          },
          "8" : {
            "sign" : 588361478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 34852663152225542400000,
            "rowCount" : 512539164003316800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#6 = i_item_sk#94) "
          },
          "19" : {
            "sign" : -494289784,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#37], BroadcastQueryStage 0 "
          },
          "4" : {
            "sign" : 1230825366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 35906443673416361740800000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] "
          },
          "15" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1340211510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394950814640,
            "rowCount" : 91561475305,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "9" : {
            "sign" : -413569684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 110547662824244800,
            "rowCount" : 2512446882369200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "22" : {
            "sign" : -1901300303,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 278,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3 "
          },
          "13" : {
            "sign" : -1335276118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044374564,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] "
          },
          "16" : {
            "sign" : 1736170942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#37] "
          },
          "5" : {
            "sign" : -2040540337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10828927457062077350400000,
            "rowCount" : 142485887592922070400000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] "
          },
          "10" : {
            "sign" : -622757348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130647237883198400,
            "rowCount" : 2512446882369200,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#8 = cd_demo_sk#28) "
          },
          "21" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "6" : {
            "sign" : -1490749858,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11968814557805453913600000,
            "rowCount" : 142485887592922070400000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#65) "
          },
          "1" : {
            "sign" : -985579129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 34624070685080063107200000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 886835284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
          },
          "14" : {
            "sign" : -724773178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129710264,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27]) "
          },
          "0" : {
            "sign" : -1103786032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8100,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2078122637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2097152,
            "rowCount" : 27440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#28], BroadcastQueryStage 1 "
          },
          "2" : {
            "sign" : 598324602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 34624070685080063107200000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 140067933,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#37, d_date_id#38, d_date#39, d_month_seq#40, d_week_seq#41, d_quarter_seq#42, d_year#43, d_dow#44, d_moy#45, d_dom#46, d_qoy#47, d_fy_year#48, d_fy_quarter_seq#49, d_fy_week_seq#50, d_day_name#51, d_quarter_name#52, d_holiday#53, d_weekend#54, d_following_holiday#55, d_first_dom#56, d_last_dom#57, d_same_day_ly#58, d_same_day_lq#59, d_current_day#60, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 599338380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30752349840199008000000,
            "rowCount" : 512539164003316800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] "
          },
          "3" : {
            "sign" : 956610111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 34624070685080063107200000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143]\n         +- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n            +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n               +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n                  :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                  :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n                  :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n                  :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n                  :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n                  :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27])\n                  :     :     :     :     :  +- Project [d_date_sk#37]\n                  :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n                  :     :     :     +- LogicalQueryStage Project [d_date_sk#37], BroadcastQueryStage 0\n                  :     :     +- LogicalQueryStage Project [cd_demo_sk#28], BroadcastQueryStage 1\n                  :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  +- LogicalQueryStage Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41829503312,
        "inputRowCount" : 275277436
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226763171,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 19474,
        "IOBytes" : {
          "Total" : 818673268,
          "Details" : {
            "IR" : 752685988,
            "IW" : 0,
            "SR" : 32993640,
            "SW" : 32993640
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 752845899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8100,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 166929858,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 121303088,
            "rowCount" : 1044396,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -952845855,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 121303088,
            "rowCount" : 1044396,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 1229796538,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 121303088,
            "rowCount" : 1044396,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143], HashAggregate(keys=[i_item_id#151, s_state#152, spark_grouping_id#150L], functions=[avg(ss_quantity#14), avg(UnscaledValue(ss_list_price#16)), avg(UnscaledValue(ss_coupon_amt#23)), avg(UnscaledValue(ss_sales_price#17))]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143], HashAggregate(keys=[i_item_id#151, s_state#152, spark_grouping_id#150L], functions=[avg(ss_quantity#14), avg(UnscaledValue(ss_list_price#16)), avg(UnscaledValue(ss_coupon_amt#23)), avg(UnscaledValue(ss_sales_price#17))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 121303088,
        "inputRowCount" : 1044396
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226780661,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1984,
        "IOBytes" : {
          "Total" : 32993640,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 32993640,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1188547599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14870272760,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#37) "
          },
          "8" : {
            "sign" : 588361478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#6 = i_item_sk#94) "
          },
          "19" : {
            "sign" : -494289784,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#37], BroadcastQueryStage 0 "
          },
          "4" : {
            "sign" : 1230825366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 22242471536055,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] "
          },
          "15" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1340211510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "9" : {
            "sign" : -413569684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12100083908,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "22" : {
            "sign" : -1901300303,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 278,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3 "
          },
          "13" : {
            "sign" : -1335276118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044374564,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] "
          },
          "16" : {
            "sign" : 1736170942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#37] "
          },
          "5" : {
            "sign" : -2040540337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6708046971192,
            "rowCount" : 79857702038,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] "
          },
          "10" : {
            "sign" : -622757348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14300099164,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#8 = cd_demo_sk#28) "
          },
          "21" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "6" : {
            "sign" : -1490749858,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7346908587496,
            "rowCount" : 79857702038,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#65) "
          },
          "1" : {
            "sign" : -985579129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 886835284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
          },
          "14" : {
            "sign" : -724773178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129710264,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27]) "
          },
          "0" : {
            "sign" : -1103786032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8100,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2078122637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#28], BroadcastQueryStage 1 "
          },
          "2" : {
            "sign" : 598324602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 140067933,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#37, d_date_id#38, d_date#39, d_month_seq#40, d_week_seq#41, d_quarter_seq#42, d_year#43, d_dow#44, d_moy#45, d_dom#46, d_qoy#47, d_fy_year#48, d_fy_quarter_seq#49, d_fy_week_seq#50, d_day_name#51, d_quarter_name#52, d_holiday#53, d_weekend#54, d_following_holiday#55, d_first_dom#56, d_last_dom#57, d_same_day_ly#58, d_same_day_lq#59, d_current_day#60, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 599338380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] "
          },
          "3" : {
            "sign" : 956610111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143]\n         +- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n            +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n               +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n                  :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                  :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n                  :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n                  :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n                  :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n                  :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27])\n                  :     :     :     :     :  +- Project [d_date_sk#37]\n                  :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n                  :     :     :     +- LogicalQueryStage Project [d_date_sk#37], BroadcastQueryStage 0\n                  :     :     +- LogicalQueryStage Project [cd_demo_sk#28], BroadcastQueryStage 1\n                  :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  +- LogicalQueryStage Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41816441640,
        "inputRowCount" : 275277647
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2172.0,
        "FinishedTasksDistributionInMs" : [ 1086.0, 1086.0, 1086.0, 1086.0, 1086.0 ]
      },
      "StartTimeInMs" : 1702226761223,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 21422,
        "IOBytes" : {
          "Total" : 828172919,
          "Details" : {
            "IR" : 762185639,
            "IW" : 0,
            "SR" : 32993640,
            "SW" : 32993640
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1188547599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127442617080,
            "rowCount" : 91561475305,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#37) "
          },
          "8" : {
            "sign" : 588361478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#6 = i_item_sk#94) "
          },
          "19" : {
            "sign" : -494289784,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#37], BroadcastQueryStage 0 "
          },
          "4" : {
            "sign" : 1230825366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 22242471536055,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] "
          },
          "15" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1340211510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394950814640,
            "rowCount" : 91561475305,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "9" : {
            "sign" : -413569684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12100083908,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "22" : {
            "sign" : -1901300303,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 278,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3 "
          },
          "13" : {
            "sign" : -1335276118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044374564,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] "
          },
          "16" : {
            "sign" : 1736170942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#37] "
          },
          "5" : {
            "sign" : -2040540337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6708046971192,
            "rowCount" : 79857702038,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] "
          },
          "10" : {
            "sign" : -622757348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14300099164,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#8 = cd_demo_sk#28) "
          },
          "21" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "6" : {
            "sign" : -1490749858,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7346908587496,
            "rowCount" : 79857702038,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#65) "
          },
          "1" : {
            "sign" : -985579129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 886835284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
          },
          "14" : {
            "sign" : -724773178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129710264,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27]) "
          },
          "0" : {
            "sign" : -1103786032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8100,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2078122637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#28], BroadcastQueryStage 1 "
          },
          "2" : {
            "sign" : 598324602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 140067933,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#37, d_date_id#38, d_date#39, d_month_seq#40, d_week_seq#41, d_quarter_seq#42, d_year#43, d_dow#44, d_moy#45, d_dom#46, d_qoy#47, d_fy_year#48, d_fy_quarter_seq#49, d_fy_week_seq#50, d_day_name#51, d_quarter_name#52, d_holiday#53, d_weekend#54, d_following_holiday#55, d_first_dom#56, d_last_dom#57, d_same_day_ly#58, d_same_day_lq#59, d_current_day#60, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 599338380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] "
          },
          "3" : {
            "sign" : 956610111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143]\n         +- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n            +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n               +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n                  :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                  :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n                  :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n                  :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n                  :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n                  :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27])\n                  :     :     :     :     :  +- Project [d_date_sk#37]\n                  :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n                  :     :     :     +- LogicalQueryStage Project [d_date_sk#37], BroadcastQueryStage 0\n                  :     :     +- LogicalQueryStage Project [cd_demo_sk#28], BroadcastQueryStage 1\n                  :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  +- LogicalQueryStage Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41817486224,
        "inputRowCount" : 275277436
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2172.0,
        "FinishedTasksDistributionInMs" : [ 1086.0, 1086.0, 1086.0, 1086.0, 1086.0 ]
      },
      "StartTimeInMs" : 1702226761288,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 21357,
        "IOBytes" : {
          "Total" : 828079357,
          "Details" : {
            "IR" : 762092077,
            "IW" : 0,
            "SR" : 32993640,
            "SW" : 32993640
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1188547599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5127442617080,
            "rowCount" : 91561475305,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#37) "
          },
          "8" : {
            "sign" : 588361478,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#6 = i_item_sk#94) "
          },
          "19" : {
            "sign" : -494289784,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#37], BroadcastQueryStage 0 "
          },
          "4" : {
            "sign" : 1230825366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 22242471536055,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] "
          },
          "15" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1340211510,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4394950814640,
            "rowCount" : 91561475305,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "9" : {
            "sign" : -413569684,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 110547662824244800,
            "rowCount" : 2512446882369200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "22" : {
            "sign" : -1901300303,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 278,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3 "
          },
          "13" : {
            "sign" : -1335276118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13044374564,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] "
          },
          "16" : {
            "sign" : 1736170942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#37] "
          },
          "5" : {
            "sign" : -2040540337,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6708046971192,
            "rowCount" : 79857702038,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] "
          },
          "10" : {
            "sign" : -622757348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130647237883198400,
            "rowCount" : 2512446882369200,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#8 = cd_demo_sk#28) "
          },
          "21" : {
            "sign" : -748686195,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2 "
          },
          "6" : {
            "sign" : -1490749858,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7346908587496,
            "rowCount" : 79857702038,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#65) "
          },
          "1" : {
            "sign" : -985579129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 886835284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
          },
          "14" : {
            "sign" : -724773178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 38129710264,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27]) "
          },
          "0" : {
            "sign" : -1103786032,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 8100,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2078122637,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2097152,
            "rowCount" : 27440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#28], BroadcastQueryStage 1 "
          },
          "2" : {
            "sign" : 598324602,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 140067933,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#37, d_date_id#38, d_date#39, d_month_seq#40, d_week_seq#41, d_quarter_seq#42, d_year#43, d_dow#44, d_moy#45, d_dom#46, d_qoy#47, d_fy_year#48, d_fy_quarter_seq#49, d_fy_week_seq#50, d_day_name#51, d_quarter_name#52, d_holiday#53, d_weekend#54, d_following_holiday#55, d_first_dom#56, d_last_dom#57, d_same_day_ly#58, d_same_day_lq#59, d_current_day#60, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 599338380,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] "
          },
          "3" : {
            "sign" : 956610111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 21448097552624,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143]\n         +- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n            +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n               +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n                  :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                  :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n                  :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n                  :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n                  :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n                  :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27])\n                  :     :     :     :     :  +- Project [d_date_sk#37]\n                  :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n                  :     :     :     +- LogicalQueryStage Project [d_date_sk#37], BroadcastQueryStage 0\n                  :     :     +- LogicalQueryStage Project [cd_demo_sk#28], BroadcastQueryStage 1\n                  :     +- LogicalQueryStage Project [i_item_sk#94, i_item_id#95], BroadcastQueryStage 2\n                  +- LogicalQueryStage Project [s_store_sk#65, s_state#89], BroadcastQueryStage 3\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41819254096,
        "inputRowCount" : 275277436
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226763110,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 19535,
        "IOBytes" : {
          "Total" : 818673268,
          "Details" : {
            "IR" : 752685988,
            "IW" : 0,
            "SR" : 32993640,
            "SW" : 32993640
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "4" : {
      "QSLogical" : {
        "operators" : {
          "12" : {
            "sign" : 1608590622,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#5, ss_item_sk#6, ss_customer_sk#7, ss_cdemo_sk#8, ss_hdemo_sk#9, ss_addr_sk#10, ss_store_sk#11, ss_promo_sk#12, ss_ticket_number#13L, ss_quantity#14, ss_wholesale_cost#15, ss_list_price#16, ss_sales_price#17, ss_ext_discount_amt#18, ss_ext_sales_price#19, ss_ext_wholesale_cost#20, ss_ext_list_price#21, ss_ext_tax#22, ss_coupon_amt#23, ss_net_paid#24, ss_net_paid_inc_tax#25, ss_net_profit#26, ss_sold_date_sk#27], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "8" : {
            "sign" : -529481860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 12745948080,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "4" : {
            "sign" : 200972364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 19533538628,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 19533538628,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] "
          },
          "11" : {
            "sign" : -724773178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38129710264,
                "rowCount" : 250853357
              },
              "compileTime" : {
                "sizeInBytes" : 38129710264,
                "rowCount" : 250853357
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27]) "
          },
          "9" : {
            "sign" : -843709787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 14870272760,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#27 = d_date_sk#37) "
          },
          "5" : {
            "sign" : -649087382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 21831601996,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 21831601996,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#6 = i_item_sk#94) "
          },
          "10" : {
            "sign" : -1335276118,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13044374564,
                "rowCount" : 250853357
              },
              "compileTime" : {
                "sizeInBytes" : 13044374564,
                "rowCount" : 250853357
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] "
          },
          "6" : {
            "sign" : 2135132308,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12100083908,
                "rowCount" : 275001907
              },
              "compileTime" : {
                "sizeInBytes" : 12100083908,
                "rowCount" : 275001907
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] "
          },
          "1" : {
            "sign" : 1660201705,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 149451043875,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 149451043875,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] "
          },
          "0" : {
            "sign" : -1501763008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 144113506593,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 144113506593,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143] "
          },
          "2" : {
            "sign" : -2104341968,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 45072537042,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 45072537042,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] "
          },
          "7" : {
            "sign" : -763917242,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14300099164,
                "rowCount" : 275001907
              },
              "compileTime" : {
                "sizeInBytes" : 14300099164,
                "rowCount" : 275001907
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_cdemo_sk#8 = cd_demo_sk#28) "
          },
          "3" : {
            "sign" : -1118529247,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 49695361354,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 49695361354,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_store_sk#11 = s_store_sk#65) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalRelation",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143]\n+- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n   +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n      +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n         :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n         :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n         :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n         :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n         :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n         :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n         :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n         :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27])\n         :     :     :     :     :  +- Project [d_date_sk#37]\n         :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n         :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n         :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n         :     :     :     +- Project [d_date_sk#37]\n         :     :     :        +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n         :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n         :     :     +- Project [cd_demo_sk#28]\n         :     :        +- Filter ((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (((cd_gender#29 = M) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College))) AND isnotnull(cd_demo_sk#28))\n         :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31,cd_purchase_estimate#32,cd_credit_rating#33,cd_dep_count#34,cd_dep_employed_count#35,cd_dep_college_count#36] parquet\n         :     +- Project [i_item_sk#94, i_item_id#95]\n         :        +- Filter isnotnull(i_item_sk#94)\n         :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n         +- Project [s_store_sk#65, s_state#89]\n            +- Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n               +- Relation spark_catalog.tpcds_100.store[s_store_sk#65,s_store_id#66,s_rec_start_date#67,s_rec_end_date#68,s_closed_date_sk#69,s_store_name#70,s_number_employees#71,s_floor_space#72,s_hours#73,s_manager#74,s_market_id#75,s_geography_class#76,s_market_desc#77,s_market_manager#78,s_division_id#79,s_division_name#80,s_company_id#81,s_company_name#82,s_street_number#83,s_street_name#84,s_street_type#85,s_suite_number#86,s_city#87,s_county#88,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : 598249982,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#37] Arguments: 0 "
          },
          "8" : {
            "sign" : 904106221,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12745948080,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] Input [9]: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27, d_date_sk#37] "
          },
          "4" : {
            "sign" : 408376188,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 19533538628,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95] Input [8]: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_sk#94, i_item_id#95] "
          },
          "15" : {
            "sign" : -185626882,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051792,
            "rowCount" : 278,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [s_store_sk#65, s_state#89] Arguments: 3 "
          },
          "11" : {
            "sign" : -1360561127,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 13044374564,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [8]: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#27), dynamicpruningexpression(ss_sold_date_sk#27 IN dynamicpruning#161)] PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),ss_sales_price:decimal(7,2),ss_coupon_amt:decimal(7,2)> "
          },
          "9" : {
            "sign" : 1329847374,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14870272760,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#27] Right keys [1]: [d_date_sk#37] Join type: Inner Join condition: None "
          },
          "13" : {
            "sign" : -1031363653,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 2097152,
            "rowCount" : 27440,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [cd_demo_sk#28] Arguments: 1 "
          },
          "5" : {
            "sign" : -1448416600,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 21831601996,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#6] Right keys [1]: [i_item_sk#94] Join type: Inner Join condition: None "
          },
          "10" : {
            "sign" : -2118838989,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 13044374564,
            "rowCount" : 250853357,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [8]: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27] Condition : ((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) "
          },
          "6" : {
            "sign" : -1757795823,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12100083908,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23] Input [8]: [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, cd_demo_sk#28] "
          },
          "1" : {
            "sign" : -554576131,
            "className" : "org.apache.spark.sql.execution.ExpandExec",
            "sizeInBytes" : 149451043875,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Input [6]: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] Arguments: [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] "
          },
          "14" : {
            "sign" : -1680882082,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#94, i_item_id#95] Arguments: 2 "
          },
          "0" : {
            "sign" : 229924356,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 144113506593,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [7]: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L] Keys [3]: [i_item_id#151, s_state#152, spark_grouping_id#150L] Functions [4]: [partial_avg(ss_quantity#14), partial_avg(UnscaledValue(ss_list_price#16)), partial_avg(UnscaledValue(ss_coupon_amt#23)), partial_avg(UnscaledValue(ss_sales_price#17))] Aggregate Attributes [8]: [sum#162, count#163L, sum#164, count#165L, sum#166, count#167L, sum#168, count#169L] Results [11]: [i_item_id#151, s_state#152, spark_grouping_id#150L, sum#170, count#171L, sum#172, count#173L, sum#174, count#175L, sum#176, count#177L] "
          },
          "2" : {
            "sign" : -1988961408,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 45072537042,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89] Input [8]: [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_store_sk#65, s_state#89] "
          },
          "7" : {
            "sign" : -1752819627,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14300099164,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_cdemo_sk#8] Right keys [1]: [cd_demo_sk#28] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1030966789,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 49695361354,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#11] Right keys [1]: [s_store_sk#65] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "BroadcastQueryStage",
          "toId" : 9,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastHashJoin",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "BroadcastQueryStage",
          "toId" : 7,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastHashJoin",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "BroadcastQueryStage",
          "toId" : 5,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastHashJoin",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#151, s_state#152, spark_grouping_id#150L], functions=[partial_avg(ss_quantity#14), partial_avg(UnscaledValue(ss_list_price#16)), partial_avg(UnscaledValue(ss_coupon_amt#23)), partial_avg(UnscaledValue(ss_sales_price#17))], output=[i_item_id#151, s_state#152, spark_grouping_id#150L, sum#170, count#171L, sum#172, count#173L, sum#174, count#175L, sum#176, count#177L])\n+- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n   +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n      +- BroadcastHashJoin [ss_store_sk#11], [s_store_sk#65], Inner, BuildRight, false\n         :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n         :  +- BroadcastHashJoin [ss_item_sk#6], [i_item_sk#94], Inner, BuildRight, false\n         :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n         :     :  +- BroadcastHashJoin [ss_cdemo_sk#8], [cd_demo_sk#28], Inner, BuildRight, false\n         :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n         :     :     :  +- BroadcastHashJoin [ss_sold_date_sk#27], [d_date_sk#37], Inner, BuildRight, false\n         :     :     :     :- Filter ((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6))\n         :     :     :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#6,ss_cdemo_sk#8,ss_store_sk#11,ss_quantity#14,ss_list_price#16,ss_sales_price#17,ss_coupon_amt#23,ss_sold_date_sk#27] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#8), isnotnull(ss_store_sk#11), isnotnull(ss_item_sk#6)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#27), dynamicpruningexpression(ss_sold_date_sk#27 IN dynamicpruning#161)], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...\n         :     :     :     :        +- SubqueryBroadcast dynamicpruning#161, 0, [d_date_sk#37], [id=#604]\n         :     :     :     :           +- AdaptiveSparkPlan isFinalPlan=false\n         :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=601]\n         :     :     :     :                 +- Project [d_date_sk#37]\n         :     :     :     :                    +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n         :     :     :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_year#43] Batched: true, DataFilters: [isnotnull(d_year#43), (d_year#43 = 2002), isnotnull(d_date_sk#37)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :     :     :     +- BroadcastQueryStage 0\n         :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=203]\n         :     :     :           +- *(1) Project [d_date_sk#37]\n         :     :     :              +- *(1) Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n         :     :     :                 +- *(1) ColumnarToRow\n         :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_year#43] Batched: true, DataFilters: [isnotnull(d_year#43), (d_year#43 = 2002), isnotnull(d_date_sk#37)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :     :     +- BroadcastQueryStage 1\n         :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=224]\n         :     :           +- *(2) Project [cd_demo_sk#28]\n         :     :              +- *(2) Filter ((((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (cd_gender#29 = M)) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College)) AND isnotnull(cd_demo_sk#28))\n         :     :                 +- *(2) ColumnarToRow\n         :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31] Batched: true, DataFilters: [isnotnull(cd_gender#29), isnotnull(cd_marital_status#30), isnotnull(cd_education_status#31), (cd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>\n         :     +- BroadcastQueryStage 2\n         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=243]\n         :           +- *(3) Filter isnotnull(i_item_sk#94)\n         :              +- *(3) ColumnarToRow\n         :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n         +- BroadcastQueryStage 3\n            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=260]\n               +- *(4) Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n                  +- *(4) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#65,s_state#89] Batched: true, DataFilters: [s_state#89 IN (MO,LA,GA,MI,SC,OH), isnotnull(s_store_sk#65)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [In(s_state, [GA,LA,MI,MO,OH,SC]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13066984220,
        "inputRowCount" : 251085440
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 17113,
        "TotalTasksDurationInMs" : 236999,
        "IOBytes" : {
          "Total" : 785679628,
          "Details" : {
            "IR" : 752685988,
            "IW" : 0,
            "SR" : 0,
            "SW" : 32993640
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1476278417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8100,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 8100,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1163890952,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 144113506593,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 144113506593,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 301265541,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 144113506593,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 144113506593,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#151, s_state#152, spark_grouping_id#150L], [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14) AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16)) / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23)) / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17)) / 100.0) as decimal(11,6)) AS agg4#143]\n         +- Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n            +- Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n               +- Join Inner, (ss_store_sk#11 = s_store_sk#65)\n                  :- Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                  :  +- Join Inner, (ss_item_sk#6 = i_item_sk#94)\n                  :     :- Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :  +- Join Inner, (ss_cdemo_sk#8 = cd_demo_sk#28)\n                  :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                  :     :     :  +- Join Inner, (ss_sold_date_sk#27 = d_date_sk#37)\n                  :     :     :     :- Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, ss_sold_date_sk#27]\n                  :     :     :     :  +- Filter ((((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_sold_date_sk#27)) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6)) AND dynamicpruning#161 [ss_sold_date_sk#27])\n                  :     :     :     :     :  +- Project [d_date_sk#37]\n                  :     :     :     :     :     +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#5,ss_item_sk#6,ss_customer_sk#7,ss_cdemo_sk#8,ss_hdemo_sk#9,ss_addr_sk#10,ss_store_sk#11,ss_promo_sk#12,ss_ticket_number#13L,ss_quantity#14,ss_wholesale_cost#15,ss_list_price#16,ss_sales_price#17,ss_ext_discount_amt#18,ss_ext_sales_price#19,ss_ext_wholesale_cost#20,ss_ext_list_price#21,ss_ext_tax#22,ss_coupon_amt#23,ss_net_paid#24,ss_net_paid_inc_tax#25,ss_net_profit#26,ss_sold_date_sk#27] parquet\n                  :     :     :     +- Project [d_date_sk#37]\n                  :     :     :        +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                  :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n                  :     :     +- Project [cd_demo_sk#28]\n                  :     :        +- Filter ((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (((cd_gender#29 = M) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College))) AND isnotnull(cd_demo_sk#28))\n                  :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31,cd_purchase_estimate#32,cd_credit_rating#33,cd_dep_count#34,cd_dep_employed_count#35,cd_dep_college_count#36] parquet\n                  :     +- Project [i_item_sk#94, i_item_id#95]\n                  :        +- Filter isnotnull(i_item_sk#94)\n                  :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n                  +- Project [s_store_sk#65, s_state#89]\n                     +- Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n                        +- Relation spark_catalog.tpcds_100.store[s_store_sk#65,s_store_id#66,s_rec_start_date#67,s_rec_end_date#68,s_closed_date_sk#69,s_store_name#70,s_number_employees#71,s_floor_space#72,s_hours#73,s_manager#74,s_market_id#75,s_geography_class#76,s_market_desc#77,s_market_manager#78,s_division_id#79,s_division_name#80,s_company_id#81,s_company_name#82,s_street_number#83,s_street_name#84,s_street_type#85,s_suite_number#86,s_city#87,s_county#88,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -154833250,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 8100,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [7]: [i_item_id#151, s_state#152, g_state#139, agg1#140, agg2#141, agg3#142, agg4#143] Arguments: 100, [i_item_id#151 ASC NULLS FIRST, s_state#152 ASC NULLS FIRST], [i_item_id#151, s_state#152, g_state#139, agg1#140, agg2#141, agg3#142, agg4#143] "
          },
          "1" : {
            "sign" : -1843782179,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 121303088,
            "rowCount" : 1044396,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [11]: [i_item_id#151, s_state#152, spark_grouping_id#150L, sum#170, count#171L, sum#172, count#173L, sum#174, count#175L, sum#176, count#177L] Keys [3]: [i_item_id#151, s_state#152, spark_grouping_id#150L] Functions [4]: [avg(ss_quantity#14), avg(UnscaledValue(ss_list_price#16)), avg(UnscaledValue(ss_coupon_amt#23)), avg(UnscaledValue(ss_sales_price#17))] Aggregate Attributes [4]: [avg(ss_quantity#14)#144, avg(UnscaledValue(ss_list_price#16))#145, avg(UnscaledValue(ss_coupon_amt#23))#146, avg(UnscaledValue(ss_sales_price#17))#147] Results [7]: [i_item_id#151, s_state#152, cast((shiftright(spark_grouping_id#150L, 0) & 1) as tinyint) AS g_state#139, avg(ss_quantity#14)#144 AS agg1#140, cast((avg(UnscaledValue(ss_list_price#16))#145 / 100.0) as decimal(11,6)) AS agg2#141, cast((avg(UnscaledValue(ss_coupon_amt#23))#146 / 100.0) as decimal(11,6)) AS agg3#142, cast((avg(UnscaledValue(ss_sales_price#17))#147 / 100.0) as decimal(11,6)) AS agg4#143] "
          },
          "2" : {
            "sign" : -760911995,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 144113506593,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [11]: [i_item_id#151, s_state#152, spark_grouping_id#150L, sum#170, count#171L, sum#172, count#173L, sum#174, count#175L, sum#176, count#177L] Arguments: 4 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[i_item_id#151 ASC NULLS FIRST,s_state#152 ASC NULLS FIRST], output=[i_item_id#151,s_state#152,g_state#139,agg1#140,agg2#141,agg3#142,agg4#143])\n+- HashAggregate(keys=[i_item_id#151, s_state#152, spark_grouping_id#150L], functions=[avg(ss_quantity#14), avg(UnscaledValue(ss_list_price#16)), avg(UnscaledValue(ss_coupon_amt#23)), avg(UnscaledValue(ss_sales_price#17))], output=[i_item_id#151, s_state#152, g_state#139, agg1#140, agg2#141, agg3#142, agg4#143])\n   +- ShuffleQueryStage 4\n      +- Exchange hashpartitioning(i_item_id#151, s_state#152, spark_grouping_id#150L, 200), ENSURE_REQUIREMENTS, [plan_id=673]\n         +- *(5) HashAggregate(keys=[i_item_id#151, s_state#152, spark_grouping_id#150L], functions=[partial_avg(ss_quantity#14), partial_avg(UnscaledValue(ss_list_price#16)), partial_avg(UnscaledValue(ss_coupon_amt#23)), partial_avg(UnscaledValue(ss_sales_price#17))], output=[i_item_id#151, s_state#152, spark_grouping_id#150L, sum#170, count#171L, sum#172, count#173L, sum#174, count#175L, sum#176, count#177L])\n            +- *(5) Expand [[ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89, 0], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, null, 1], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, null, null, 3]], [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#151, s_state#152, spark_grouping_id#150L]\n               +- *(5) Project [ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95, s_state#89]\n                  +- *(5) BroadcastHashJoin [ss_store_sk#11], [s_store_sk#65], Inner, BuildRight, false\n                     :- *(5) Project [ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23, i_item_id#95]\n                     :  +- *(5) BroadcastHashJoin [ss_item_sk#6], [i_item_sk#94], Inner, BuildRight, false\n                     :     :- *(5) Project [ss_item_sk#6, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#8], [cd_demo_sk#28], Inner, BuildRight, false\n                     :     :     :- *(5) Project [ss_item_sk#6, ss_cdemo_sk#8, ss_store_sk#11, ss_quantity#14, ss_list_price#16, ss_sales_price#17, ss_coupon_amt#23]\n                     :     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#27], [d_date_sk#37], Inner, BuildRight, false\n                     :     :     :     :- *(5) Filter ((isnotnull(ss_cdemo_sk#8) AND isnotnull(ss_store_sk#11)) AND isnotnull(ss_item_sk#6))\n                     :     :     :     :  +- *(5) ColumnarToRow\n                     :     :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#6,ss_cdemo_sk#8,ss_store_sk#11,ss_quantity#14,ss_list_price#16,ss_sales_price#17,ss_coupon_amt#23,ss_sold_date_sk#27] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#8), isnotnull(ss_store_sk#11), isnotnull(ss_item_sk#6)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#27), dynamicpruningexpression(ss_sold_date_sk#27 IN dynamicpruning#161)], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...\n                     :     :     :     :           +- SubqueryBroadcast dynamicpruning#161, 0, [d_date_sk#37], [id=#604]\n                     :     :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#37], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=203]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=601]\n                                                            +- Project [d_date_sk#37]\n                                                               +- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_year#43] Batched: true, DataFilters: [isnotnull(d_year#43), (d_year#43 = 2002), isnotnull(d_date_sk#37)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     :     :     :     +- BroadcastQueryStage 0\n                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=203]\n                     :     :     :           +- *(1) Project [d_date_sk#37]\n                     :     :     :              +- *(1) Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n                     :     :     :                 +- *(1) ColumnarToRow\n                     :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_year#43] Batched: true, DataFilters: [isnotnull(d_year#43), (d_year#43 = 2002), isnotnull(d_date_sk#37)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     :     :     +- BroadcastQueryStage 1\n                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=224]\n                     :     :           +- *(2) Project [cd_demo_sk#28]\n                     :     :              +- *(2) Filter ((((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (cd_gender#29 = M)) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College)) AND isnotnull(cd_demo_sk#28))\n                     :     :                 +- *(2) ColumnarToRow\n                     :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31] Batched: true, DataFilters: [isnotnull(cd_gender#29), isnotnull(cd_marital_status#30), isnotnull(cd_education_status#31), (cd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>\n                     :     +- BroadcastQueryStage 2\n                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=243]\n                     :           +- *(3) Filter isnotnull(i_item_sk#94)\n                     :              +- *(3) ColumnarToRow\n                     :                 +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n                     +- BroadcastQueryStage 3\n                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=260]\n                           +- *(4) Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n                              +- *(4) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#65,s_state#89] Batched: true, DataFilters: [s_state#89 IN (MO,LA,GA,MI,SC,OH), isnotnull(s_store_sk#65)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [In(s_state, [GA,LA,MI,MO,OH,SC]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 121303088,
        "inputRowCount" : 1044396
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 169657, 179836, 168241, 162699, 174022, 177267, 171886, 163209, 167169, 174460, 174224, 175320, 177201, 176864, 182681, 167072, 170978, 173008, 175219, 180802, 171840, 174772, 175659, 172432, 168197, 172527, 170329, 173458, 170977, 174545, 180912, 165012, 174513, 169401, 178889, 174980, 175585, 167154, 167740, 170219, 172332, 171171, 167432, 172563, 170680, 174944, 179385, 169189, 166783, 178068, 171676, 169309, 171539, 181416, 165563, 170726, 173029, 176236, 175936, 170398, 175447, 179640, 173572, 168958, 171985, 172054, 177866, 179048, 171569, 177179, 168968, 178673, 176864, 166882, 176021, 169658, 171239, 173841, 183983, 170102, 170017, 164834, 177462, 178737, 171139, 179273, 174119, 167708, 174485, 178757, 163158, 163757, 180461, 171159, 178514, 171731, 169524, 170532, 166521, 167418, 170091, 175536, 175861, 171960, 171825, 174712, 180841, 175685, 159290, 169302, 183862, 169396, 169657, 173511, 173492, 175930, 169778, 172730, 182207, 170137, 176004, 166623, 176847, 172511, 171556, 174617, 180836, 167002, 174242, 170025, 172044, 174359, 171688, 168080, 170207, 176074, 173784, 168494, 172444, 175950, 173857, 171169, 177135, 175335, 161014, 175804, 171152, 174351, 176875, 172785, 175820, 165609, 178546, 167337, 176562, 177558, 171892, 173307, 180520, 176176, 173751, 176807, 170958, 172233, 174540, 167425, 169915, 179623, 171019, 173394, 176432, 176299, 167307, 176748, 174647, 174177, 176689, 173993, 173712, 169479, 168801, 180334, 175162, 174966, 176063, 169359, 168191, 170811, 171823, 177736, 167851, 167254, 172781, 178124, 174906, 171963, 175004, 173427, 170694, 179819 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 1791,
        "TotalTasksDurationInMs" : 1780,
        "IOBytes" : {
          "Total" : 32993640,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 32993640,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 13749093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 329280,
                "rowCount" : 27440
              },
              "compileTime" : {
                "sizeInBytes" : 329280,
                "rowCount" : 27440
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#28] "
          },
          "1" : {
            "sign" : 1677007595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2606800,
                "rowCount" : 27440
              },
              "compileTime" : {
                "sizeInBytes" : 2606800,
                "rowCount" : 27440
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (((cd_gender#29 = M) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College))) AND isnotnull(cd_demo_sk#28)) "
          },
          "2" : {
            "sign" : -553293149,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#28, cd_gender#29, cd_marital_status#30, cd_education_status#31, cd_purchase_estimate#32, cd_credit_rating#33, cd_dep_count#34, cd_dep_employed_count#35, cd_dep_college_count#36], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#28]\n+- Filter ((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (((cd_gender#29 = M) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College))) AND isnotnull(cd_demo_sk#28))\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31,cd_purchase_estimate#32,cd_credit_rating#33,cd_dep_count#34,cd_dep_employed_count#35,cd_dep_college_count#36] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1492814288,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [cd_demo_sk#28] Input [4]: [cd_demo_sk#28, cd_gender#29, cd_marital_status#30, cd_education_status#31] "
          },
          "1" : {
            "sign" : 1159541206,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cd_demo_sk#28, cd_gender#29, cd_marital_status#30, cd_education_status#31] Condition : ((((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (cd_gender#29 = M)) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College)) AND isnotnull(cd_demo_sk#28)) "
          },
          "2" : {
            "sign" : -656868664,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 329280,
            "rowCount" : 27440,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [4]: [cd_demo_sk#28, cd_gender#29, cd_marital_status#30, cd_education_status#31] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_marital_status,W), EqualTo(cd_education_status,College), IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#28]\n+- Filter ((((((isnotnull(cd_gender#29) AND isnotnull(cd_marital_status#30)) AND isnotnull(cd_education_status#31)) AND (cd_gender#29 = M)) AND (cd_marital_status#30 = W)) AND (cd_education_status#31 = College)) AND isnotnull(cd_demo_sk#28))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#28,cd_gender#29,cd_marital_status#30,cd_education_status#31] Batched: true, DataFilters: [isnotnull(cd_gender#29), isnotnull(cd_marital_status#30), isnotnull(cd_education_status#31), (cd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 329280,
        "inputRowCount" : 27440
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 3166,
        "TotalTasksDurationInMs" : 4862,
        "IOBytes" : {
          "Total" : 7787281,
          "Details" : {
            "IR" : 7787281,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1736170942,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#37] "
          },
          "1" : {
            "sign" : 886835284,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
          },
          "2" : {
            "sign" : 140067933,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#37, d_date_id#38, d_date#39, d_month_seq#40, d_week_seq#41, d_quarter_seq#42, d_year#43, d_dow#44, d_moy#45, d_dom#46, d_qoy#47, d_fy_year#48, d_fy_quarter_seq#49, d_fy_week_seq#50, d_day_name#51, d_quarter_name#52, d_holiday#53, d_weekend#54, d_following_holiday#55, d_first_dom#56, d_last_dom#57, d_same_day_ly#58, d_same_day_lq#59, d_current_day#60, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#37]\n+- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_date_id#38,d_date#39,d_month_seq#40,d_week_seq#41,d_quarter_seq#42,d_year#43,d_dow#44,d_moy#45,d_dom#46,d_qoy#47,d_fy_year#48,d_fy_quarter_seq#49,d_fy_week_seq#50,d_day_name#51,d_quarter_name#52,d_holiday#53,d_weekend#54,d_following_holiday#55,d_first_dom#56,d_last_dom#57,d_same_day_ly#58,d_same_day_lq#59,d_current_day#60,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -237567078,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#37] Input [2]: [d_date_sk#37, d_year#43] "
          },
          "1" : {
            "sign" : -1673520336,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#37, d_year#43] Condition : ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37)) "
          },
          "2" : {
            "sign" : 1001768633,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#37, d_year#43] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#37]\n+- Filter ((isnotnull(d_year#43) AND (d_year#43 = 2002)) AND isnotnull(d_date_sk#37))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#37,d_year#43] Batched: true, DataFilters: [isnotnull(d_year#43), (d_year#43 = 2002), isnotnull(d_date_sk#37)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6912,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1334,
        "TotalTasksDurationInMs" : 1330,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -609071415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#94, i_item_id#95] "
          },
          "1" : {
            "sign" : 305875584,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#94) "
          },
          "2" : {
            "sign" : -1299140691,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#94, i_item_id#95, i_rec_start_date#96, i_rec_end_date#97, i_item_desc#98, i_current_price#99, i_wholesale_cost#100, i_brand_id#101, i_brand#102, i_class_id#103, i_class#104, i_category_id#105, i_category#106, i_manufact_id#107, i_manufact#108, i_size#109, i_formulation#110, i_color#111, i_units#112, i_container#113, i_manager_id#114, i_product_name#115], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#94, i_item_id#95]\n+- Filter isnotnull(i_item_sk#94)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95,i_rec_start_date#96,i_rec_end_date#97,i_item_desc#98,i_current_price#99,i_wholesale_cost#100,i_brand_id#101,i_brand#102,i_class_id#103,i_class#104,i_category_id#105,i_category#106,i_manufact_id#107,i_manufact#108,i_size#109,i_formulation#110,i_color#111,i_units#112,i_container#113,i_manager_id#114,i_product_name#115] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1540030041,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#94, i_item_id#95] Condition : isnotnull(i_item_sk#94) "
          },
          "1" : {
            "sign" : 1478982156,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#94, i_item_id#95] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#94)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#94,i_item_id#95] Batched: true, DataFilters: [isnotnull(i_item_sk#94)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8160000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 3138,
        "TotalTasksDurationInMs" : 9690,
        "IOBytes" : {
          "Total" : 1618808,
          "Details" : {
            "IR" : 1618808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1916819802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6968,
                "rowCount" : 268
              },
              "compileTime" : {
                "sizeInBytes" : 6968,
                "rowCount" : 268
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#65, s_state#89] "
          },
          "1" : {
            "sign" : -1053372780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 128372,
                "rowCount" : 268
              },
              "compileTime" : {
                "sizeInBytes" : 128372,
                "rowCount" : 268
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65)) "
          },
          "2" : {
            "sign" : -851791820,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#65, s_store_id#66, s_rec_start_date#67, s_rec_end_date#68, s_closed_date_sk#69, s_store_name#70, s_number_employees#71, s_floor_space#72, s_hours#73, s_manager#74, s_market_id#75, s_geography_class#76, s_market_desc#77, s_market_manager#78, s_division_id#79, s_division_name#80, s_company_id#81, s_company_name#82, s_street_number#83, s_street_name#84, s_street_type#85, s_suite_number#86, s_city#87, s_county#88, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#65, s_state#89]\n+- Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#65,s_store_id#66,s_rec_start_date#67,s_rec_end_date#68,s_closed_date_sk#69,s_store_name#70,s_number_employees#71,s_floor_space#72,s_hours#73,s_manager#74,s_market_id#75,s_geography_class#76,s_market_desc#77,s_market_manager#78,s_division_id#79,s_division_name#80,s_company_id#81,s_company_name#82,s_street_number#83,s_street_name#84,s_street_type#85,s_suite_number#86,s_city#87,s_county#88,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1613988063,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6968,
            "rowCount" : 268,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [s_store_sk#65, s_state#89] Condition : (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65)) "
          },
          "1" : {
            "sign" : 764529279,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6968,
            "rowCount" : 268,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [2]: [s_store_sk#65, s_state#89] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [In(s_state, [GA,LA,MI,MO,OH,SC]), IsNotNull(s_store_sk)] ReadSchema: struct<s_store_sk:int,s_state:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (s_state#89 IN (MO,LA,GA,MI,SC,OH) AND isnotnull(s_store_sk#65))\n+- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#65,s_state#89] Batched: true, DataFilters: [s_state#89 IN (MO,LA,GA,MI,SC,OH), isnotnull(s_store_sk#65)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [In(s_state, [GA,LA,MI,MO,OH,SC]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6968,
        "inputRowCount" : 268
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1254,
        "TotalTasksDurationInMs" : 1249,
        "IOBytes" : {
          "Total" : 14453,
          "Details" : {
            "IR" : 14453,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226758999,
  "SQLEndTimeInMs" : 1702226782645,
  "Objectives" : {
    "DurationInMs" : 23646,
    "IOBytes" : {
      "Total" : 828187372,
      "Details" : {
        "IR" : 762200092,
        "IW" : 0,
        "SR" : 32993640,
        "SW" : 32993640
      }
    }
  }
}
