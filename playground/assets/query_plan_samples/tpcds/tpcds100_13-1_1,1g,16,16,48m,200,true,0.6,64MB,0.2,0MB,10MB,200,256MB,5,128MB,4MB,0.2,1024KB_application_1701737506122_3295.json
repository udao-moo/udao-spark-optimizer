{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "12" : {
          "sign" : 423397101,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4899251536,
          "rowCount" : 32231918,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#125 [ss_sold_date_sk#22]) "
        },
        "8" : {
          "sign" : -1461120320,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 16297837500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
        },
        "19" : {
          "sign" : -1733275573,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#66, ca_address_id#67, ca_street_number#68, ca_street_name#69, ca_street_type#70, ca_suite_number#71, ca_city#72, ca_county#73, ca_state#74, ca_zip#75, ca_country#76, ca_gmt_offset#77, ca_location_type#78], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "23" : {
          "sign" : -431588049,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7519107,
          "rowCount" : 159981,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55] "
        },
        "4" : {
          "sign" : 1409165334,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10621623400,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
        },
        "15" : {
          "sign" : -1457517842,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
        },
        "11" : {
          "sign" : 2112153234,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2062842752,
          "rowCount" : 32231918,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
        },
        "9" : {
          "sign" : 1995163139,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 14312120576,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
        },
        "22" : {
          "sign" : 1034741660,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#61, hd_income_band_sk#62, hd_buy_potential#63, hd_dep_count#64, hd_vehicle_count#65], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "26" : {
          "sign" : 1713613592,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4824,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [s_store_sk#23] "
        },
        "13" : {
          "sign" : -1632039753,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "24" : {
          "sign" : -929502327,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 15198195,
          "rowCount" : 159981,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)))) "
        },
        "16" : {
          "sign" : -1436288320,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "5" : {
          "sign" : 940612280,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9900068652,
          "rowCount" : 275001907,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
        },
        "10" : {
          "sign" : 517013540,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 22569113216,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
        },
        "21" : {
          "sign" : -1169273208,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 61556,
          "rowCount" : 1399,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1))) "
        },
        "6" : {
          "sign" : -213257402,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 25025173537,
          "rowCount" : 275001907,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
        },
        "1" : {
          "sign" : 2132042055,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 16179885092,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
        },
        "17" : {
          "sign" : -902506722,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3973138,
          "rowCount" : 152813,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#66, ca_state#74] "
        },
        "25" : {
          "sign" : 295203670,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#52, cd_gender#53, cd_marital_status#54, cd_education_status#55, cd_purchase_estimate#56, cd_credit_rating#57, cd_dep_count#58, cd_dep_employed_count#59, cd_dep_college_count#60], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1855321436,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6912,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
        },
        "0" : {
          "sign" : 1176734466,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 40,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#117, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#118, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#119, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#120] "
        },
        "20" : {
          "sign" : -296024397,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 22384,
          "rowCount" : 1399,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#61, hd_dep_count#64] "
        },
        "27" : {
          "sign" : -27252255,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#23) "
        },
        "2" : {
          "sign" : -385476193,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 20802709404,
          "rowCount" : 577853039,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
        },
        "18" : {
          "sign" : 1271187636,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 37591998,
          "rowCount" : 152813,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI))) "
        },
        "7" : {
          "sign" : 200873708,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 14124792500,
          "rowCount" : 271630625,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
        },
        "3" : {
          "sign" : -1822367232,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
        },
        "28" : {
          "sign" : -1203740420,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 192558,
          "rowCount" : 402,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#23, s_store_id#24, s_rec_start_date#25, s_rec_end_date#26, s_closed_date_sk#27, s_store_name#28, s_number_employees#29, s_floor_space#30, s_hours#31, s_manager#32, s_market_id#33, s_geography_class#34, s_market_desc#35, s_market_manager#36, s_division_id#37, s_division_name#38, s_company_id#39, s_company_name#40, s_street_number#41, s_street_name#42, s_street_type#43, s_suite_number#44, s_city#45, s_county#46, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        }
      },
      "links" : [ {
        "fromId" : 13,
        "fromName" : "LogicalRelation",
        "toId" : 12,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "LogicalRelation",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Filter",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 12,
        "fromName" : "Filter",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "LogicalRelation",
        "toId" : 21,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Filter",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "LogicalRelation",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Filter",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "LogicalRelation",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Filter",
        "toId" : 26,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Join",
        "toId" : 1,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "Project",
        "toId" : 0,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#117, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#118, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#119, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#120]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#125 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- Project [ca_address_sk#66, ca_state#74]\n      :     :     :     :        +- Filter (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI)))\n      :     :     :     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#66,ca_address_id#67,ca_street_number#68,ca_street_name#69,ca_street_type#70,ca_suite_number#71,ca_city#72,ca_county#73,ca_state#74,ca_zip#75,ca_country#76,ca_gmt_offset#77,ca_location_type#78] parquet\n      :     :     :     +- Project [hd_demo_sk#61, hd_dep_count#64]\n      :     :     :        +- Filter (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1)))\n      :     :     :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#61,hd_income_band_sk#62,hd_buy_potential#63,hd_dep_count#64,hd_vehicle_count#65] parquet\n      :     :     +- Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55]\n      :     :        +- Filter (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree))))\n      :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#52,cd_gender#53,cd_marital_status#54,cd_education_status#55,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet\n      :     +- Project [d_date_sk#79]\n      :        +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      +- Project [s_store_sk#23]\n         +- Filter isnotnull(s_store_sk#23)\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#23,s_store_id#24,s_rec_start_date#25,s_rec_end_date#26,s_closed_date_sk#27,s_store_name#28,s_number_employees#29,s_floor_space#30,s_hours#31,s_manager#32,s_market_id#33,s_geography_class#34,s_market_desc#35,s_market_manager#36,s_division_id#37,s_division_name#38,s_company_id#39,s_company_name#40,s_street_number#41,s_street_name#42,s_street_type#43,s_suite_number#44,s_city#45,s_county#46,... 5 more fields] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 42253849068,
      "inputRowCount" : 278046804
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2045969525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4899251536,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22]) "
          },
          "8" : {
            "sign" : 432923761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23780138803200,
            "rowCount" : 396335646720,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
          },
          "19" : {
            "sign" : 380381136,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25165824,
            "rowCount" : 164640,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : -1754155227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 952689432789319680000,
            "rowCount" : 23817235819732992000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
          },
          "15" : {
            "sign" : -1457517842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "11" : {
            "sign" : -964338128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
          },
          "9" : {
            "sign" : -1779944665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14312120576,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "13" : {
            "sign" : -1632039753,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -1436288320,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1563375318,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2349097231535308800,
            "rowCount" : 65252700875980800,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "10" : {
            "sign" : 546633868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 22569113216,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
          },
          "21" : {
            "sign" : 919904417,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#23], BroadcastQueryStage 4 "
          },
          "6" : {
            "sign" : -64398222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6264259284094156800,
            "rowCount" : 65252700875980800,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : -2005996991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 268086806386914557952000,
            "rowCount" : 9574528799532662784000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          },
          "17" : {
            "sign" : 776356746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0 "
          },
          "14" : {
            "sign" : 1855321436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
          },
          "0" : {
            "sign" : -591556517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "20" : {
            "sign" : -880761305,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#79], BroadcastQueryStage 3 "
          },
          "2" : {
            "sign" : 1778954935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 344683036783175860224000,
            "rowCount" : 9574528799532662784000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
          },
          "18" : {
            "sign" : -1642926916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1099456,
            "rowCount" : 1440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1 "
          },
          "7" : {
            "sign" : 1362827387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20609453629440,
            "rowCount" : 396335646720,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
          },
          "3" : {
            "sign" : -691163971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 762151546231455744000,
            "rowCount" : 23817235819732992000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- LogicalQueryStage Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0\n      :     :     :     +- LogicalQueryStage Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1\n      :     :     +- LogicalQueryStage Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2\n      :     +- LogicalQueryStage Project [d_date_sk#79], BroadcastQueryStage 3\n      +- LogicalQueryStage Project [s_store_sk#23], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41839235362,
        "inputRowCount" : 275365013
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 3039.0,
        "FinishedTasksDistributionInMs" : [ 1186.0, 1186.0, 1853.0, 1853.0, 1853.0 ]
      },
      "StartTimeInMs" : 1702226571983,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10865,
        "IOBytes" : {
          "Total" : 974884369,
          "Details" : {
            "IR" : 974879245,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 2562
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2045969525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4899251536,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22]) "
          },
          "8" : {
            "sign" : 432923761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 745353459960134400,
            "rowCount" : 12422557666002240,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
          },
          "19" : {
            "sign" : 380381136,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25165824,
            "rowCount" : 164640,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : -1754155227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 29860648454306888386560000,
            "rowCount" : 746516211357672209664000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
          },
          "15" : {
            "sign" : -1457517842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "11" : {
            "sign" : -964338128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
          },
          "9" : {
            "sign" : -1779944665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 448592360161192,
            "rowCount" : 8626776156946,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "13" : {
            "sign" : -1632039753,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -1436288320,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1563375318,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 73628996188701916569600,
            "rowCount" : 2045249894130608793600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "10" : {
            "sign" : 546633868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 759156301811248,
            "rowCount" : 8626776156946,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
          },
          "21" : {
            "sign" : 919904417,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#23], BroadcastQueryStage 4 "
          },
          "6" : {
            "sign" : -64398222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 196343989836538444185600,
            "rowCount" : 2045249894130608793600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : -2005996991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8402786475041958391977984000,
            "rowCount" : 300099516965784228284928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          },
          "17" : {
            "sign" : 776356746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777184,
            "rowCount" : 267647,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0 "
          },
          "14" : {
            "sign" : 1855321436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
          },
          "0" : {
            "sign" : -591556517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "20" : {
            "sign" : -880761305,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#79], BroadcastQueryStage 3 "
          },
          "2" : {
            "sign" : 1778954935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10803582610768232218257408000,
            "rowCount" : 300099516965784228284928000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
          },
          "18" : {
            "sign" : -1642926916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1099456,
            "rowCount" : 1440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1 "
          },
          "7" : {
            "sign" : 1362827387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 645972998632116480,
            "rowCount" : 12422557666002240,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
          },
          "3" : {
            "sign" : -691163971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23888518763445510709248000,
            "rowCount" : 746516211357672209664000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- LogicalQueryStage Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0\n      :     :     :     +- LogicalQueryStage Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1\n      :     :     +- LogicalQueryStage Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2\n      :     +- LogicalQueryStage Project [d_date_sk#79], BroadcastQueryStage 3\n      +- LogicalQueryStage Project [s_store_sk#23], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41860039408,
        "inputRowCount" : 275479847
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226573374,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9474,
        "IOBytes" : {
          "Total" : 969979766,
          "Details" : {
            "IR" : 969974642,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 2562
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -2140013509,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2048,
            "rowCount" : 32,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133], HashAggregate(keys=[], functions=[avg(ss_quantity#9), avg(UnscaledValue(ss_ext_sales_price#14)), avg(UnscaledValue(ss_ext_wholesale_cost#15)), sum(UnscaledValue(ss_ext_wholesale_cost#15))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133], HashAggregate(keys=[], functions=[avg(ss_quantity#9), avg(UnscaledValue(ss_ext_sales_price#14)), avg(UnscaledValue(ss_ext_wholesale_cost#15)), sum(UnscaledValue(ss_ext_wholesale_cost#15))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2048,
        "inputRowCount" : 32
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226582514,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 334,
        "IOBytes" : {
          "Total" : 2562,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2045969525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4899251536,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22]) "
          },
          "8" : {
            "sign" : 432923761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16297837500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
          },
          "19" : {
            "sign" : 380381136,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7519107,
            "rowCount" : 159981,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : -1754155227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4015027842200,
            "rowCount" : 100375696055,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
          },
          "15" : {
            "sign" : -1457517842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "11" : {
            "sign" : -964338128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
          },
          "9" : {
            "sign" : -1779944665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14312120576,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "13" : {
            "sign" : -1632039753,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -1436288320,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1563375318,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9900068652,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "10" : {
            "sign" : 546633868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 22569113216,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
          },
          "21" : {
            "sign" : 919904417,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4824,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#23], BroadcastQueryStage 4 "
          },
          "6" : {
            "sign" : -64398222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25025173537,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : -2005996991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16179885092,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          },
          "17" : {
            "sign" : 776356746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0 "
          },
          "14" : {
            "sign" : 1855321436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
          },
          "0" : {
            "sign" : -591556517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "20" : {
            "sign" : -880761305,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#79], BroadcastQueryStage 3 "
          },
          "2" : {
            "sign" : 1778954935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20802709404,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
          },
          "18" : {
            "sign" : -1642926916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 22384,
            "rowCount" : 1399,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1 "
          },
          "7" : {
            "sign" : 1362827387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14124792500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
          },
          "3" : {
            "sign" : -691163971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3212022273760,
            "rowCount" : 100375696055,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- LogicalQueryStage Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0\n      :     :     :     +- LogicalQueryStage Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1\n      :     :     +- LogicalQueryStage Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2\n      :     +- LogicalQueryStage Project [d_date_sk#79], BroadcastQueryStage 3\n      +- LogicalQueryStage Project [s_store_sk#23], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41819464605,
        "inputRowCount" : 275360313
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 7,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2461.0,
        "FinishedTasksDistributionInMs" : [ 1186.0, 1186.0, 1275.0, 1275.0, 1275.0 ]
      },
      "StartTimeInMs" : 1702226571584,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11264,
        "IOBytes" : {
          "Total" : 982699636,
          "Details" : {
            "IR" : 982694512,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 2562
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2045969525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4899251536,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22]) "
          },
          "8" : {
            "sign" : 432923761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16297837500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
          },
          "19" : {
            "sign" : 380381136,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7519107,
            "rowCount" : 159981,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : -1754155227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4015027842200,
            "rowCount" : 100375696055,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
          },
          "15" : {
            "sign" : -1457517842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "11" : {
            "sign" : -964338128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
          },
          "9" : {
            "sign" : -1779944665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14312120576,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "13" : {
            "sign" : -1632039753,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -1436288320,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1563375318,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9900068652,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "10" : {
            "sign" : 546633868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 22569113216,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
          },
          "21" : {
            "sign" : 919904417,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#23], BroadcastQueryStage 4 "
          },
          "6" : {
            "sign" : -64398222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25025173537,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : -2005996991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1129828834795080,
            "rowCount" : 40351029814110,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          },
          "17" : {
            "sign" : 776356746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0 "
          },
          "14" : {
            "sign" : 1855321436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
          },
          "0" : {
            "sign" : -591556517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "20" : {
            "sign" : -880761305,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#79], BroadcastQueryStage 3 "
          },
          "2" : {
            "sign" : 1778954935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1452637073307960,
            "rowCount" : 40351029814110,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
          },
          "18" : {
            "sign" : -1642926916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 22384,
            "rowCount" : 1399,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1 "
          },
          "7" : {
            "sign" : 1362827387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14124792500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
          },
          "3" : {
            "sign" : -691163971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3212022273760,
            "rowCount" : 100375696055,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- LogicalQueryStage Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0\n      :     :     :     +- LogicalQueryStage Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1\n      :     :     +- LogicalQueryStage Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2\n      :     +- LogicalQueryStage Project [d_date_sk#79], BroadcastQueryStage 3\n      +- LogicalQueryStage Project [s_store_sk#23], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41820511573,
        "inputRowCount" : 275360313
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2461.0,
        "FinishedTasksDistributionInMs" : [ 1186.0, 1186.0, 1275.0, 1275.0, 1275.0 ]
      },
      "StartTimeInMs" : 1702226571728,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11120,
        "IOBytes" : {
          "Total" : 982685595,
          "Details" : {
            "IR" : 982680471,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 2562
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2045969525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4899251536,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22]) "
          },
          "8" : {
            "sign" : 432923761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 23780138803200,
            "rowCount" : 396335646720,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
          },
          "19" : {
            "sign" : 380381136,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7519107,
            "rowCount" : 159981,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2 "
          },
          "4" : {
            "sign" : -1754155227,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4015027842200,
            "rowCount" : 100375696055,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
          },
          "15" : {
            "sign" : -1457517842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "11" : {
            "sign" : -964338128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
          },
          "9" : {
            "sign" : -1779944665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14312120576,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "13" : {
            "sign" : -1632039753,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "16" : {
            "sign" : -1436288320,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1563375318,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9900068652,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "10" : {
            "sign" : 546633868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 22569113216,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
          },
          "21" : {
            "sign" : 919904417,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [s_store_sk#23], BroadcastQueryStage 4 "
          },
          "6" : {
            "sign" : -64398222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 25025173537,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : -2005996991,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1129828834795080,
            "rowCount" : 40351029814110,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          },
          "17" : {
            "sign" : 776356746,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0 "
          },
          "14" : {
            "sign" : 1855321436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
          },
          "0" : {
            "sign" : -591556517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "20" : {
            "sign" : -880761305,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#79], BroadcastQueryStage 3 "
          },
          "2" : {
            "sign" : 1778954935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1452637073307960,
            "rowCount" : 40351029814110,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
          },
          "18" : {
            "sign" : -1642926916,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1099456,
            "rowCount" : 1440,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1 "
          },
          "7" : {
            "sign" : 1362827387,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20609453629440,
            "rowCount" : 396335646720,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
          },
          "3" : {
            "sign" : -691163971,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3212022273760,
            "rowCount" : 100375696055,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- LogicalQueryStage Project [ca_address_sk#66, ca_state#74], BroadcastQueryStage 0\n      :     :     :     +- LogicalQueryStage Project [hd_demo_sk#61, hd_dep_count#64], BroadcastQueryStage 1\n      :     :     +- LogicalQueryStage Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55], BroadcastQueryStage 2\n      :     +- LogicalQueryStage Project [d_date_sk#79], BroadcastQueryStage 3\n      +- LogicalQueryStage Project [s_store_sk#23], BroadcastQueryStage 4\n"
      },
      "IM" : {
        "inputSizeInBytes" : 41821588645,
        "inputRowCount" : 275360354
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 2461.0,
        "FinishedTasksDistributionInMs" : [ 1186.0, 1186.0, 1275.0, 1275.0, 1275.0 ]
      },
      "StartTimeInMs" : 1702226571786,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11062,
        "IOBytes" : {
          "Total" : 982653992,
          "Details" : {
            "IR" : 982648868,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 2562
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1713613592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4824,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 4824,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [s_store_sk#23] "
          },
          "1" : {
            "sign" : -27252255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(s_store_sk#23) "
          },
          "2" : {
            "sign" : -1203740420,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              },
              "compileTime" : {
                "sizeInBytes" : 192558,
                "rowCount" : 402
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [s_store_sk#23, s_store_id#24, s_rec_start_date#25, s_rec_end_date#26, s_closed_date_sk#27, s_store_name#28, s_number_employees#29, s_floor_space#30, s_hours#31, s_manager#32, s_market_id#33, s_geography_class#34, s_market_desc#35, s_market_manager#36, s_division_id#37, s_division_name#38, s_company_id#39, s_company_name#40, s_street_number#41, s_street_name#42, s_street_type#43, s_suite_number#44, s_city#45, s_county#46, ... 5 more fields], `spark_catalog`.`tpcds_100`.`store`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [s_store_sk#23]\n+- Filter isnotnull(s_store_sk#23)\n   +- Relation spark_catalog.tpcds_100.store[s_store_sk#23,s_store_id#24,s_rec_start_date#25,s_rec_end_date#26,s_closed_date_sk#27,s_store_name#28,s_number_employees#29,s_floor_space#30,s_hours#31,s_manager#32,s_market_id#33,s_geography_class#34,s_market_desc#35,s_market_manager#36,s_division_id#37,s_division_name#38,s_company_id#39,s_company_name#40,s_street_number#41,s_street_name#42,s_street_type#43,s_suite_number#44,s_city#45,s_county#46,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -999266895,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4824,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [1]: [s_store_sk#23] Condition : isnotnull(s_store_sk#23) "
          },
          "1" : {
            "sign" : -976441546,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4824,
            "rowCount" : 402,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store Output [1]: [s_store_sk#23] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store] PushedFilters: [IsNotNull(s_store_sk)] ReadSchema: struct<s_store_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(s_store_sk#23)\n+- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#23] Batched: true, DataFilters: [isnotnull(s_store_sk#23)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4824,
        "inputRowCount" : 402
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1540,
        "TotalTasksDurationInMs" : 1532,
        "IOBytes" : {
          "Total" : 14041,
          "Details" : {
            "IR" : 14041,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "12" : {
            "sign" : -2045969525,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4899251536,
                "rowCount" : 32231918
              },
              "compileTime" : {
                "sizeInBytes" : 4899251536,
                "rowCount" : 32231918
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22]) "
          },
          "8" : {
            "sign" : -2095803422,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16297837500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 16297837500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_hdemo_sk#4 = hd_demo_sk#61) "
          },
          "4" : {
            "sign" : 2133964980,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 10621623400,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#22 = d_date_sk#79) "
          },
          "11" : {
            "sign" : -964338128,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2062842752,
                "rowCount" : 32231918
              },
              "compileTime" : {
                "sizeInBytes" : 2062842752,
                "rowCount" : 32231918
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] "
          },
          "9" : {
            "sign" : 157964321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14312120576,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 14312120576,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "13" : {
            "sign" : -1632039753,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#0, ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8L, ss_quantity#9, ss_wholesale_cost#10, ss_list_price#11, ss_sales_price#12, ss_ext_discount_amt#13, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_ext_list_price#16, ss_ext_tax#17, ss_coupon_amt#18, ss_net_paid#19, ss_net_paid_inc_tax#20, ss_net_profit#21, ss_sold_date_sk#22], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1643768790,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9900068652,
                "rowCount" : 275001907
              },
              "compileTime" : {
                "sizeInBytes" : 9900068652,
                "rowCount" : 275001907
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] "
          },
          "10" : {
            "sign" : 1378457414,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 22569113216,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 22569113216,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00)))) "
          },
          "6" : {
            "sign" : -1275359256,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25025173537,
                "rowCount" : 275001907
              },
              "compileTime" : {
                "sizeInBytes" : 25025173537,
                "rowCount" : 275001907
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : -1047974043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16179885092,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 16179885092,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          },
          "0" : {
            "sign" : 1985940701,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 40,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 40,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "2" : {
            "sign" : 256040385,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20802709404,
                "rowCount" : 577853039
              },
              "compileTime" : {
                "sizeInBytes" : 20802709404,
                "rowCount" : 577853039
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (s_store_sk#23 = ss_store_sk#6) "
          },
          "7" : {
            "sign" : 481783950,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14124792500,
                "rowCount" : 271630625
              },
              "compileTime" : {
                "sizeInBytes" : 14124792500,
                "rowCount" : 271630625
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] "
          },
          "3" : {
            "sign" : -1977516386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalRelation",
          "toId" : 12,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Filter",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133]\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- Join Inner, (s_store_sk#23 = ss_store_sk#6)\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- Join Inner, (ss_sold_date_sk#22 = d_date_sk#79)\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- Join Inner, ((((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (cd_demo_sk#52 = ss_cdemo_sk#3)) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1))))\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- Join Inner, (ss_hdemo_sk#4 = hd_demo_sk#61)\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- Join Inner, ((ss_addr_sk#5 = ca_address_sk#66) AND ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))))\n      :     :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22]\n      :     :     :     :     :  +- Filter (((((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_sold_date_sk#22)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) AND dynamicpruning#138 [ss_sold_date_sk#22])\n      :     :     :     :     :     :  +- Project [d_date_sk#79]\n      :     :     :     :     :     :     +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      :     :     :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#0,ss_item_sk#1,ss_customer_sk#2,ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_promo_sk#7,ss_ticket_number#8L,ss_quantity#9,ss_wholesale_cost#10,ss_list_price#11,ss_sales_price#12,ss_ext_discount_amt#13,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_ext_list_price#16,ss_ext_tax#17,ss_coupon_amt#18,ss_net_paid#19,ss_net_paid_inc_tax#20,ss_net_profit#21,ss_sold_date_sk#22] parquet\n      :     :     :     :     +- Project [ca_address_sk#66, ca_state#74]\n      :     :     :     :        +- Filter (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI)))\n      :     :     :     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#66,ca_address_id#67,ca_street_number#68,ca_street_name#69,ca_street_type#70,ca_suite_number#71,ca_city#72,ca_county#73,ca_state#74,ca_zip#75,ca_country#76,ca_gmt_offset#77,ca_location_type#78] parquet\n      :     :     :     +- Project [hd_demo_sk#61, hd_dep_count#64]\n      :     :     :        +- Filter (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1)))\n      :     :     :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#61,hd_income_band_sk#62,hd_buy_potential#63,hd_dep_count#64,hd_vehicle_count#65] parquet\n      :     :     +- Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55]\n      :     :        +- Filter (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree))))\n      :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#52,cd_gender#53,cd_marital_status#54,cd_education_status#55,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet\n      :     +- Project [d_date_sk#79]\n      :        +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n      +- Project [s_store_sk#23]\n         +- Filter isnotnull(s_store_sk#23)\n            +- Relation spark_catalog.tpcds_100.store[s_store_sk#23,s_store_id#24,s_rec_start_date#25,s_rec_end_date#26,s_closed_date_sk#27,s_store_name#28,s_number_employees#29,s_floor_space#30,s_hours#31,s_manager#32,s_market_id#33,s_geography_class#34,s_market_desc#35,s_market_manager#36,s_division_id#37,s_division_name#38,s_company_id#39,s_company_name#40,s_street_number#41,s_street_name#42,s_street_type#43,s_suite_number#44,s_city#45,s_county#46,... 5 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -1684168694,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [10]: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#22), dynamicpruningexpression(ss_sold_date_sk#22 IN dynamicpruning#138)] PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_hdemo_sk), Or(Or(And(GreaterThanOrEqual(ss_net_profit,100.00),LessThanOrEqual(ss_net_profit,200.00)),And(GreaterThanOrEqual(ss_net_profit,150.00),LessThanOrEqual(ss_net_profit,300.00))),And(GreaterThanOrEqual(ss_net_profit,50.00),LessThanOrEqual(ss_net_profit,250.00))), Or(Or(And(GreaterThanOrEqual(ss_sales_price,100.00),LessThanOrEqual(ss_sales_price,150.00)),And(GreaterThanOrEqual(ss_sales_price,50.00),LessThanOrEqual(ss_sales_price,100.00))),And(GreaterThanOrEqual(ss_sales_price,150.00),LessThanOrEqual(ss_sales_price,200.00)))] ReadSchema: struct<ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_net_profit:decimal(7,2)> "
          },
          "8" : {
            "sign" : 1730096571,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 16297837500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_hdemo_sk#4] Right keys [1]: [hd_demo_sk#61] Join type: Inner Join condition: None "
          },
          "4" : {
            "sign" : -1293714400,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 10621623400,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#22] Right keys [1]: [d_date_sk#79] Join type: Inner Join condition: None "
          },
          "15" : {
            "sign" : -24078255,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 25165824,
            "rowCount" : 164640,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55] Arguments: 2 "
          },
          "11" : {
            "sign" : 1475877694,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2062842752,
            "rowCount" : 32231918,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [10]: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22] Condition : (((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00)))) "
          },
          "9" : {
            "sign" : -2115812859,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14312120576,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] Input [12]: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_net_profit#21, ss_sold_date_sk#22, ca_address_sk#66, ca_state#74] "
          },
          "13" : {
            "sign" : 269516736,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777184,
            "rowCount" : 267647,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ca_address_sk#66, ca_state#74] Arguments: 0 "
          },
          "16" : {
            "sign" : 1613999587,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#79] Arguments: 3 "
          },
          "5" : {
            "sign" : -1337853069,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 9900068652,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22] Input [11]: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64, cd_demo_sk#52, cd_marital_status#54, cd_education_status#55] "
          },
          "10" : {
            "sign" : -354254534,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 22569113216,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_addr_sk#5] Right keys [1]: [ca_address_sk#66] Join type: Inner Join condition: ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))) "
          },
          "6" : {
            "sign" : 791678227,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 25025173537,
            "rowCount" : 275001907,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_cdemo_sk#3] Right keys [1]: [cd_demo_sk#52] Join type: Inner Join condition: (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))) "
          },
          "1" : {
            "sign" : 1101746174,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 16179885092,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] Input [5]: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, s_store_sk#23] "
          },
          "17" : {
            "sign" : 804899327,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051792,
            "rowCount" : 402,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [s_store_sk#23] Arguments: 4 "
          },
          "14" : {
            "sign" : -569975350,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1099456,
            "rowCount" : 1440,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [hd_demo_sk#61, hd_dep_count#64] Arguments: 1 "
          },
          "0" : {
            "sign" : 1112873971,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] Keys: [] Functions [4]: [partial_avg(ss_quantity#9), partial_avg(UnscaledValue(ss_ext_sales_price#14)), partial_avg(UnscaledValue(ss_ext_wholesale_cost#15)), partial_sum(UnscaledValue(ss_ext_wholesale_cost#15))] Aggregate Attributes [7]: [sum#139, count#140L, sum#141, count#142L, sum#143, count#144L, sum#145L] Results [7]: [sum#146, count#147L, sum#148, count#149L, sum#150, count#151L, sum#152L] "
          },
          "2" : {
            "sign" : 1009425328,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 20802709404,
            "rowCount" : 577853039,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_store_sk#6] Right keys [1]: [s_store_sk#23] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : 25905021,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14124792500,
            "rowCount" : 271630625,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64] Input [10]: [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_demo_sk#61, hd_dep_count#64] "
          },
          "3" : {
            "sign" : 1498898208,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15] Input [6]: [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, d_date_sk#79] "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 10,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "BroadcastQueryStage",
          "toId" : 10,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastHashJoin",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "BroadcastQueryStage",
          "toId" : 8,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastHashJoin",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_avg(ss_quantity#9), partial_avg(UnscaledValue(ss_ext_sales_price#14)), partial_avg(UnscaledValue(ss_ext_wholesale_cost#15)), partial_sum(UnscaledValue(ss_ext_wholesale_cost#15))], output=[sum#146, count#147L, sum#148, count#149L, sum#150, count#151L, sum#152L])\n+- Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n   +- BroadcastHashJoin [ss_store_sk#6], [s_store_sk#23], Inner, BuildRight, false\n      :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n      :  +- BroadcastHashJoin [ss_sold_date_sk#22], [d_date_sk#79], Inner, BuildRight, false\n      :     :- Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :  +- BroadcastHashJoin [ss_cdemo_sk#3], [cd_demo_sk#52], Inner, BuildRight, (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))), false\n      :     :     :- Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n      :     :     :  +- BroadcastHashJoin [ss_hdemo_sk#4], [hd_demo_sk#61], Inner, BuildRight, false\n      :     :     :     :- Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n      :     :     :     :  +- BroadcastHashJoin [ss_addr_sk#5], [ca_address_sk#66], Inner, BuildRight, ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))), false\n      :     :     :     :     :- Filter (((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00))))\n      :     :     :     :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_quantity#9,ss_sales_price#12,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_net_profit#21,ss_sold_date_sk#22] Batched: true, DataFilters: [isnotnull(ss_store_sk#6), isnotnull(ss_addr_sk#5), isnotnull(ss_cdemo_sk#3), isnotnull(ss_hdemo_..., Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#22), dynamicpruningexpression(ss_sold_date_sk#22 IN dynamicpruning#138)], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_hdemo_sk), O..., ReadSchema: struct<ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_pr...\n      :     :     :     :     :        +- SubqueryBroadcast dynamicpruning#138, 0, [d_date_sk#79], [id=#722]\n      :     :     :     :     :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=719]\n      :     :     :     :     :                 +- Project [d_date_sk#79]\n      :     :     :     :     :                    +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :     :     :     :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_year#85] Batched: true, DataFilters: [isnotnull(d_year#85), (d_year#85 = 2001), isnotnull(d_date_sk#79)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :     :     :     :     +- BroadcastQueryStage 0\n      :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=219]\n      :     :     :     :           +- *(1) Project [ca_address_sk#66, ca_state#74]\n      :     :     :     :              +- *(1) Filter (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI)))\n      :     :     :     :                 +- *(1) ColumnarToRow\n      :     :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#66,ca_state#74,ca_country#76] Batched: true, DataFilters: [isnotnull(ca_country#76), (ca_country#76 = United States), isnotnull(ca_address_sk#66), ((ca_sta..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>\n      :     :     :     +- BroadcastQueryStage 1\n      :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=238]\n      :     :     :           +- *(2) Filter (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1)))\n      :     :     :              +- *(2) ColumnarToRow\n      :     :     :                 +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#61,hd_dep_count#64] Batched: true, DataFilters: [isnotnull(hd_demo_sk#61), ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1))], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_demo_sk), Or(EqualTo(hd_dep_count,3),EqualTo(hd_dep_count,1))], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>\n      :     :     +- BroadcastQueryStage 2\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=255]\n      :     :           +- *(3) Filter (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree))))\n      :     :              +- *(3) ColumnarToRow\n      :     :                 +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#52,cd_marital_status#54,cd_education_status#55] Batched: true, DataFilters: [isnotnull(cd_demo_sk#52), ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degre..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), Or(Or(And(EqualTo(cd_marital_status,D),EqualTo(cd_education_status,2 yr D..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n      :     +- BroadcastQueryStage 3\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=274]\n      :           +- *(4) Project [d_date_sk#79]\n      :              +- *(4) Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n      :                 +- *(4) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_year#85] Batched: true, DataFilters: [isnotnull(d_year#85), (d_year#85 = 2001), isnotnull(d_date_sk#79)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      +- BroadcastQueryStage 4\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=293]\n            +- *(5) Filter isnotnull(s_store_sk#23)\n               +- *(5) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#23] Batched: true, DataFilters: [isnotnull(s_store_sk#23)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2115988504,
        "inputRowCount" : 32666412
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 8767,
        "TotalTasksDurationInMs" : 129592,
        "IOBytes" : {
          "Total" : 969977204,
          "Details" : {
            "IR" : 969974642,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2562
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2140013509,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2048,
                "rowCount" : 32
              },
              "compileTime" : {
                "sizeInBytes" : 40,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133], HashAggregate(keys=[], functions=[avg(ss_quantity#9), avg(UnscaledValue(ss_ext_sales_price#14)), avg(UnscaledValue(ss_ext_wholesale_cost#15)), sum(UnscaledValue(ss_ext_wholesale_cost#15))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [avg(ss_quantity#9) AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14)) / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15)) / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15)),17,2) AS sum(ss_ext_wholesale_cost)#133], HashAggregate(keys=[], functions=[avg(ss_quantity#9), avg(UnscaledValue(ss_ext_sales_price#14)), avg(UnscaledValue(ss_ext_wholesale_cost#15)), sum(UnscaledValue(ss_ext_wholesale_cost#15))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1585541867,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2048,
            "rowCount" : 32,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [7]: [sum#146, count#147L, sum#148, count#149L, sum#150, count#151L, sum#152L] Keys: [] Functions [4]: [avg(ss_quantity#9), avg(UnscaledValue(ss_ext_sales_price#14)), avg(UnscaledValue(ss_ext_wholesale_cost#15)), sum(UnscaledValue(ss_ext_wholesale_cost#15))] Aggregate Attributes [4]: [avg(ss_quantity#9)#126, avg(UnscaledValue(ss_ext_sales_price#14))#127, avg(UnscaledValue(ss_ext_wholesale_cost#15))#128, sum(UnscaledValue(ss_ext_wholesale_cost#15))#129L] Results [4]: [avg(ss_quantity#9)#126 AS avg(ss_quantity)#130, cast((avg(UnscaledValue(ss_ext_sales_price#14))#127 / 100.0) as decimal(11,6)) AS avg(ss_ext_sales_price)#131, cast((avg(UnscaledValue(ss_ext_wholesale_cost#15))#128 / 100.0) as decimal(11,6)) AS avg(ss_ext_wholesale_cost)#132, MakeDecimal(sum(UnscaledValue(ss_ext_wholesale_cost#15))#129L,17,2) AS sum(ss_ext_wholesale_cost)#133] "
          },
          "1" : {
            "sign" : 1149010735,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 40,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [7]: [sum#146, count#147L, sum#148, count#149L, sum#150, count#151L, sum#152L] Arguments: 5 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[avg(ss_quantity#9), avg(UnscaledValue(ss_ext_sales_price#14)), avg(UnscaledValue(ss_ext_wholesale_cost#15)), sum(UnscaledValue(ss_ext_wholesale_cost#15))], output=[avg(ss_quantity)#130, avg(ss_ext_sales_price)#131, avg(ss_ext_wholesale_cost)#132, sum(ss_ext_wholesale_cost)#133])\n+- ShuffleQueryStage 5\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=797]\n      +- *(6) HashAggregate(keys=[], functions=[partial_avg(ss_quantity#9), partial_avg(UnscaledValue(ss_ext_sales_price#14)), partial_avg(UnscaledValue(ss_ext_wholesale_cost#15)), partial_sum(UnscaledValue(ss_ext_wholesale_cost#15))], output=[sum#146, count#147L, sum#148, count#149L, sum#150, count#151L, sum#152L])\n         +- *(6) Project [ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n            +- *(6) BroadcastHashJoin [ss_store_sk#6], [s_store_sk#23], Inner, BuildRight, false\n               :- *(6) Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15]\n               :  +- *(6) BroadcastHashJoin [ss_sold_date_sk#22], [d_date_sk#79], Inner, BuildRight, false\n               :     :- *(6) Project [ss_store_sk#6, ss_quantity#9, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n               :     :  +- *(6) BroadcastHashJoin [ss_cdemo_sk#3], [cd_demo_sk#52], Inner, BuildRight, (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) OR ((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00))) OR ((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00))) AND (((((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) AND (ss_sales_price#12 >= 100.00)) AND (ss_sales_price#12 <= 150.00)) AND (hd_dep_count#64 = 3)) OR (((((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary)) AND (ss_sales_price#12 >= 50.00)) AND (ss_sales_price#12 <= 100.00)) AND (hd_dep_count#64 = 1))) OR (((((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)) AND (ss_sales_price#12 >= 150.00)) AND (ss_sales_price#12 <= 200.00)) AND (hd_dep_count#64 = 1)))), false\n               :     :     :- *(6) Project [ss_cdemo_sk#3, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22, hd_dep_count#64]\n               :     :     :  +- *(6) BroadcastHashJoin [ss_hdemo_sk#4], [hd_demo_sk#61], Inner, BuildRight, false\n               :     :     :     :- *(6) Project [ss_cdemo_sk#3, ss_hdemo_sk#4, ss_store_sk#6, ss_quantity#9, ss_sales_price#12, ss_ext_sales_price#14, ss_ext_wholesale_cost#15, ss_sold_date_sk#22]\n               :     :     :     :  +- *(6) BroadcastHashJoin [ss_addr_sk#5], [ca_address_sk#66], Inner, BuildRight, ((((ca_state#74 IN (CO,IL,MN) AND (ss_net_profit#21 >= 100.00)) AND (ss_net_profit#21 <= 200.00)) OR ((ca_state#74 IN (OH,MT,NM) AND (ss_net_profit#21 >= 150.00)) AND (ss_net_profit#21 <= 300.00))) OR ((ca_state#74 IN (TX,MO,MI) AND (ss_net_profit#21 >= 50.00)) AND (ss_net_profit#21 <= 250.00))), false\n               :     :     :     :     :- *(6) Filter (((((isnotnull(ss_store_sk#6) AND isnotnull(ss_addr_sk#5)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_hdemo_sk#4)) AND ((((ss_net_profit#21 >= 100.00) AND (ss_net_profit#21 <= 200.00)) OR ((ss_net_profit#21 >= 150.00) AND (ss_net_profit#21 <= 300.00))) OR ((ss_net_profit#21 >= 50.00) AND (ss_net_profit#21 <= 250.00)))) AND ((((ss_sales_price#12 >= 100.00) AND (ss_sales_price#12 <= 150.00)) OR ((ss_sales_price#12 >= 50.00) AND (ss_sales_price#12 <= 100.00))) OR ((ss_sales_price#12 >= 150.00) AND (ss_sales_price#12 <= 200.00))))\n               :     :     :     :     :  +- *(6) ColumnarToRow\n               :     :     :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_cdemo_sk#3,ss_hdemo_sk#4,ss_addr_sk#5,ss_store_sk#6,ss_quantity#9,ss_sales_price#12,ss_ext_sales_price#14,ss_ext_wholesale_cost#15,ss_net_profit#21,ss_sold_date_sk#22] Batched: true, DataFilters: [isnotnull(ss_store_sk#6), isnotnull(ss_addr_sk#5), isnotnull(ss_cdemo_sk#3), isnotnull(ss_hdemo_..., Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#22), dynamicpruningexpression(ss_sold_date_sk#22 IN dynamicpruning#138)], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_hdemo_sk), O..., ReadSchema: struct<ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_pr...\n               :     :     :     :     :           +- SubqueryBroadcast dynamicpruning#138, 0, [d_date_sk#79], [id=#722]\n               :     :     :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#79], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=274]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=719]\n                                                            +- Project [d_date_sk#79]\n                                                               +- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_year#85] Batched: true, DataFilters: [isnotnull(d_year#85), (d_year#85 = 2001), isnotnull(d_date_sk#79)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               :     :     :     :     +- BroadcastQueryStage 0\n               :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=219]\n               :     :     :     :           +- *(1) Project [ca_address_sk#66, ca_state#74]\n               :     :     :     :              +- *(1) Filter (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI)))\n               :     :     :     :                 +- *(1) ColumnarToRow\n               :     :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#66,ca_state#74,ca_country#76] Batched: true, DataFilters: [isnotnull(ca_country#76), (ca_country#76 = United States), isnotnull(ca_address_sk#66), ((ca_sta..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>\n               :     :     :     +- BroadcastQueryStage 1\n               :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=238]\n               :     :     :           +- *(2) Filter (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1)))\n               :     :     :              +- *(2) ColumnarToRow\n               :     :     :                 +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#61,hd_dep_count#64] Batched: true, DataFilters: [isnotnull(hd_demo_sk#61), ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1))], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_demo_sk), Or(EqualTo(hd_dep_count,3),EqualTo(hd_dep_count,1))], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>\n               :     :     +- BroadcastQueryStage 2\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=255]\n               :     :           +- *(3) Filter (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree))))\n               :     :              +- *(3) ColumnarToRow\n               :     :                 +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#52,cd_marital_status#54,cd_education_status#55] Batched: true, DataFilters: [isnotnull(cd_demo_sk#52), ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degre..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), Or(Or(And(EqualTo(cd_marital_status,D),EqualTo(cd_education_status,2 yr D..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n               :     +- BroadcastQueryStage 3\n               :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=274]\n               :           +- *(4) Project [d_date_sk#79]\n               :              +- *(4) Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n               :                 +- *(4) ColumnarToRow\n               :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_year#85] Batched: true, DataFilters: [isnotnull(d_year#85), (d_year#85 = 2001), isnotnull(d_date_sk#79)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n               +- BroadcastQueryStage 4\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=293]\n                     +- *(5) Filter isnotnull(s_store_sk#23)\n                        +- *(5) ColumnarToRow\n                           +- FileScan parquet spark_catalog.tpcds_100.store[s_store_sk#23] Batched: true, DataFilters: [isnotnull(s_store_sk#23)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2048,
        "inputRowCount" : 32
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 2640 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 233,
        "TotalTasksDurationInMs" : 227,
        "IOBytes" : {
          "Total" : 2562,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2562,
            "SW" : 0
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -296024397,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 22384,
                "rowCount" : 1399
              },
              "compileTime" : {
                "sizeInBytes" : 22384,
                "rowCount" : 1399
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [hd_demo_sk#61, hd_dep_count#64] "
          },
          "1" : {
            "sign" : -1169273208,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61556,
                "rowCount" : 1399
              },
              "compileTime" : {
                "sizeInBytes" : 61556,
                "rowCount" : 1399
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1))) "
          },
          "2" : {
            "sign" : 1034741660,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              },
              "compileTime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#61, hd_income_band_sk#62, hd_buy_potential#63, hd_dep_count#64, hd_vehicle_count#65], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [hd_demo_sk#61, hd_dep_count#64]\n+- Filter (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1)))\n   +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#61,hd_income_band_sk#62,hd_buy_potential#63,hd_dep_count#64,hd_vehicle_count#65] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1717742232,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 22384,
            "rowCount" : 1399,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [hd_demo_sk#61, hd_dep_count#64] Condition : (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1))) "
          },
          "1" : {
            "sign" : -1561762300,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 22384,
            "rowCount" : 1399,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.household_demographics Output [2]: [hd_demo_sk#61, hd_dep_count#64] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household_demographics] PushedFilters: [IsNotNull(hd_demo_sk), Or(EqualTo(hd_dep_count,3),EqualTo(hd_dep_count,1))] ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.household_demographics",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(hd_demo_sk#61) AND ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1)))\n+- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#61,hd_dep_count#64] Batched: true, DataFilters: [isnotnull(hd_demo_sk#61), ((hd_dep_count#64 = 3) OR (hd_dep_count#64 = 1))], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_demo_sk), Or(EqualTo(hd_dep_count,3),EqualTo(hd_dep_count,1))], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 22384,
        "inputRowCount" : 1399
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1639,
        "TotalTasksDurationInMs" : 1633,
        "IOBytes" : {
          "Total" : 31603,
          "Details" : {
            "IR" : 31603,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -902506722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3973138,
                "rowCount" : 152813
              },
              "compileTime" : {
                "sizeInBytes" : 3973138,
                "rowCount" : 152813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#66, ca_state#74] "
          },
          "1" : {
            "sign" : 1271187636,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 37591998,
                "rowCount" : 152813
              },
              "compileTime" : {
                "sizeInBytes" : 37591998,
                "rowCount" : 152813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI))) "
          },
          "2" : {
            "sign" : -1733275573,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#66, ca_address_id#67, ca_street_number#68, ca_street_name#69, ca_street_type#70, ca_suite_number#71, ca_city#72, ca_county#73, ca_state#74, ca_zip#75, ca_country#76, ca_gmt_offset#77, ca_location_type#78], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#66, ca_state#74]\n+- Filter (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI)))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#66,ca_address_id#67,ca_street_number#68,ca_street_name#69,ca_street_type#70,ca_suite_number#71,ca_city#72,ca_county#73,ca_state#74,ca_zip#75,ca_country#76,ca_gmt_offset#77,ca_location_type#78] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -284125659,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ca_address_sk#66, ca_state#74] Input [3]: [ca_address_sk#66, ca_state#74, ca_country#76] "
          },
          "1" : {
            "sign" : -1833551665,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ca_address_sk#66, ca_state#74, ca_country#76] Condition : (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI))) "
          },
          "2" : {
            "sign" : 430129112,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3973138,
            "rowCount" : 152813,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [3]: [ca_address_sk#66, ca_state#74, ca_country#76] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_state, [CO,IL,MN]),In(ca_state, [MT,NM,OH])),In(ca_state, [MI,MO,TX]))] ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#66, ca_state#74]\n+- Filter (((isnotnull(ca_country#76) AND (ca_country#76 = United States)) AND isnotnull(ca_address_sk#66)) AND ((ca_state#74 IN (CO,IL,MN) OR ca_state#74 IN (OH,MT,NM)) OR ca_state#74 IN (TX,MO,MI)))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#66,ca_state#74,ca_country#76] Batched: true, DataFilters: [isnotnull(ca_country#76), (ca_country#76 = United States), isnotnull(ca_address_sk#66), ((ca_sta..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3973138,
        "inputRowCount" : 152813
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 3116,
        "TotalTasksDurationInMs" : 11019,
        "IOBytes" : {
          "Total" : 4904603,
          "Details" : {
            "IR" : 4904603,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -431588049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7519107,
                "rowCount" : 159981
              },
              "compileTime" : {
                "sizeInBytes" : 7519107,
                "rowCount" : 159981
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55] "
          },
          "1" : {
            "sign" : -929502327,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15198195,
                "rowCount" : 159981
              },
              "compileTime" : {
                "sizeInBytes" : 15198195,
                "rowCount" : 159981
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)))) "
          },
          "2" : {
            "sign" : 295203670,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#52, cd_gender#53, cd_marital_status#54, cd_education_status#55, cd_purchase_estimate#56, cd_credit_rating#57, cd_dep_count#58, cd_dep_employed_count#59, cd_dep_college_count#60], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55]\n+- Filter (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree))))\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#52,cd_gender#53,cd_marital_status#54,cd_education_status#55,cd_purchase_estimate#56,cd_credit_rating#57,cd_dep_count#58,cd_dep_employed_count#59,cd_dep_college_count#60] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1586380637,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7519107,
            "rowCount" : 159981,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55] Condition : (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree)))) "
          },
          "1" : {
            "sign" : 2003944118,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7519107,
            "rowCount" : 159981,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [3]: [cd_demo_sk#52, cd_marital_status#54, cd_education_status#55] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_demo_sk), Or(Or(And(EqualTo(cd_marital_status,D),EqualTo(cd_education_status,2 yr Degree)),And(EqualTo(cd_marital_status,S),EqualTo(cd_education_status,Secondary))),And(EqualTo(cd_marital_status,W),EqualTo(cd_education_status,Advanced Degree)))] ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(cd_demo_sk#52) AND ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degree)) OR ((cd_marital_status#54 = S) AND (cd_education_status#55 = Secondary))) OR ((cd_marital_status#54 = W) AND (cd_education_status#55 = Advanced Degree))))\n+- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#52,cd_marital_status#54,cd_education_status#55] Batched: true, DataFilters: [isnotnull(cd_demo_sk#52), ((((cd_marital_status#54 = D) AND (cd_education_status#55 = 2 yr Degre..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), Or(Or(And(EqualTo(cd_marital_status,D),EqualTo(cd_education_status,2 yr D..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7519107,
        "inputRowCount" : 159981
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1754,
        "TotalTasksDurationInMs" : 3020,
        "IOBytes" : {
          "Total" : 7769623,
          "Details" : {
            "IR" : 7769623,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1855321436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#79] "
          },
          "1" : {
            "sign" : -1457517842,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "2" : {
            "sign" : -1436288320,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#79, d_date_id#80, d_date#81, d_month_seq#82, d_week_seq#83, d_quarter_seq#84, d_year#85, d_dow#86, d_moy#87, d_dom#88, d_qoy#89, d_fy_year#90, d_fy_quarter_seq#91, d_fy_week_seq#92, d_day_name#93, d_quarter_name#94, d_holiday#95, d_weekend#96, d_following_holiday#97, d_first_dom#98, d_last_dom#99, d_same_day_ly#100, d_same_day_lq#101, d_current_day#102, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#79]\n+- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_date_id#80,d_date#81,d_month_seq#82,d_week_seq#83,d_quarter_seq#84,d_year#85,d_dow#86,d_moy#87,d_dom#88,d_qoy#89,d_fy_year#90,d_fy_quarter_seq#91,d_fy_week_seq#92,d_day_name#93,d_quarter_name#94,d_holiday#95,d_weekend#96,d_following_holiday#97,d_first_dom#98,d_last_dom#99,d_same_day_ly#100,d_same_day_lq#101,d_current_day#102,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 300007291,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#79] Input [2]: [d_date_sk#79, d_year#85] "
          },
          "1" : {
            "sign" : 1204560937,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#79, d_year#85] Condition : ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79)) "
          },
          "2" : {
            "sign" : -2028931433,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#79, d_year#85] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#79]\n+- Filter ((isnotnull(d_year#85) AND (d_year#85 = 2001)) AND isnotnull(d_date_sk#79))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#79,d_year#85] Batched: true, DataFilters: [isnotnull(d_year#85), (d_year#85 = 2001), isnotnull(d_date_sk#79)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6912,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 1411,
        "TotalTasksDurationInMs" : 1395,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226569056,
  "SQLEndTimeInMs" : 1702226582848,
  "Objectives" : {
    "DurationInMs" : 13792,
    "IOBytes" : {
      "Total" : 982793198,
      "Details" : {
        "IR" : 982788074,
        "IW" : 0,
        "SR" : 2562,
        "SW" : 2562
      }
    }
  }
}
