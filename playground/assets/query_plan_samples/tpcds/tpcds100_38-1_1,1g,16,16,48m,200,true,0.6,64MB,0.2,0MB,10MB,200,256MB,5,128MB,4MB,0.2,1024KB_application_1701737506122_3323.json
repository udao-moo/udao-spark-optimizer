{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 375847260,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#212, c_customer_id#213, c_current_cdemo_sk#214, c_current_hdemo_sk#215, c_current_addr_sk#216, c_first_shipto_date_sk#217, c_first_sales_date_sk#218, c_salutation#219, c_first_name#220, c_last_name#221, c_preferred_cust_flag#222, c_birth_day#223, c_birth_month#224, c_birth_year#225, c_birth_country#226, c_login#227, c_email_address#228, c_last_review_date#229], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "34" : {
          "sign" : 1704281485,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4123492632,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#212) "
        },
        "12" : {
          "sign" : 131115354,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5376,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#24, d_date#26] "
        },
        "8" : {
          "sign" : -144726673,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#23 = d_date_sk#24) "
        },
        "19" : {
          "sign" : -1749303950,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7006162002,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_last_name#175, c_first_name#174, d_date#140] "
        },
        "23" : {
          "sign" : -952875262,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2280902528,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#72, cs_sold_date_sk#103] "
        },
        "4" : {
          "sign" : 769783734,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 13477153599,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
        },
        "40" : {
          "sign" : 1047630996,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5376,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#184, d_date#186] "
        },
        "15" : {
          "sign" : -695652895,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#52, c_first_name#60, c_last_name#61] "
        },
        "11" : {
          "sign" : -1590079228,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9L, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "9" : {
          "sign" : -2045316324,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4202704848,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#3, ss_sold_date_sk#23] "
        },
        "44" : {
          "sign" : 1872291916,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#212) "
        },
        "33" : {
          "sign" : -1328624330,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3544756824,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_last_name#221, c_first_name#220, d_date#186] "
        },
        "22" : {
          "sign" : -1335285346,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3324390288,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#103 = d_date_sk#138) "
        },
        "26" : {
          "sign" : 1157571202,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5376,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#138, d_date#140] "
        },
        "37" : {
          "sign" : 1520679212,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1151449616,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#107, ws_sold_date_sk#137] "
        },
        "13" : {
          "sign" : 1433423260,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24)) "
        },
        "24" : {
          "sign" : -121139777,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651732864,
          "rowCount" : 142556408,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#242 [cs_sold_date_sk#103]) "
        },
        "35" : {
          "sign" : -1670088887,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1111929680,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#107, d_date#186] "
        },
        "16" : {
          "sign" : 1224207860,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#52) "
        },
        "5" : {
          "sign" : -543991607,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 13477153599,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
        },
        "10" : {
          "sign" : -79302256,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925696056,
          "rowCount" : 262669053,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#241 [ss_sold_date_sk#23]) "
        },
        "21" : {
          "sign" : -1009858390,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2216260192,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#72, d_date#140] "
        },
        "43" : {
          "sign" : 408378167,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#212, c_first_name#220, c_last_name#221] "
        },
        "32" : {
          "sign" : -476878705,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 3544756824,
          "rowCount" : 72341976,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_last_name#221, c_first_name#220, d_date#186], [c_last_name#221, c_first_name#220, d_date#186] "
        },
        "6" : {
          "sign" : -1393020385,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 15677505207,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
        },
        "36" : {
          "sign" : -1645132010,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1667894520,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#137 = d_date_sk#184) "
        },
        "1" : {
          "sign" : 410675093,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2200351608,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Project "
        },
        "39" : {
          "sign" : 827769952,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#104, ws_ship_date_sk#105, ws_item_sk#106, ws_bill_customer_sk#107, ws_bill_cdemo_sk#108, ws_bill_hdemo_sk#109, ws_bill_addr_sk#110, ws_ship_customer_sk#111, ws_ship_cdemo_sk#112, ws_ship_hdemo_sk#113, ws_ship_addr_sk#114, ws_web_page_sk#115, ws_web_site_sk#116, ws_ship_mode_sk#117, ws_warehouse_sk#118, ws_promo_sk#119, ws_order_number#120L, ws_quantity#121, ws_wholesale_cost#122, ws_list_price#123, ws_sales_price#124, ws_ext_discount_amt#125, ws_ext_sales_price#126, ws_ext_wholesale_cost#127, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "17" : {
          "sign" : -739163814,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#52, c_customer_id#53, c_current_cdemo_sk#54, c_current_hdemo_sk#55, c_current_addr_sk#56, c_first_shipto_date_sk#57, c_first_sales_date_sk#58, c_salutation#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_day#63, c_birth_month#64, c_birth_year#65, c_birth_country#66, c_login#67, c_email_address#68, c_last_review_date#69], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : 173057800,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#70, cs_ship_date_sk#71, cs_bill_customer_sk#72, cs_bill_cdemo_sk#73, cs_bill_hdemo_sk#74, cs_bill_addr_sk#75, cs_ship_customer_sk#76, cs_ship_cdemo_sk#77, cs_ship_hdemo_sk#78, cs_ship_addr_sk#79, cs_call_center_sk#80, cs_catalog_page_sk#81, cs_ship_mode_sk#82, cs_warehouse_sk#83, cs_item_sk#84, cs_promo_sk#85, cs_order_number#86L, cs_quantity#87, cs_wholesale_cost#88, cs_list_price#89, cs_sales_price#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : -1634850698,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#24, d_date_id#25, d_date#26, d_month_seq#27, d_week_seq#28, d_quarter_seq#29, d_year#30, d_dow#31, d_moy#32, d_dom#33, d_qoy#34, d_fy_year#35, d_fy_quarter_seq#36, d_fy_week_seq#37, d_day_name#38, d_quarter_name#39, d_holiday#40, d_weekend#41, d_following_holiday#42, d_first_dom#43, d_last_dom#44, d_same_day_ly#45, d_same_day_lq#46, d_current_day#47, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "31" : {
          "sign" : -819870766,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#166, c_customer_id#167, c_current_cdemo_sk#168, c_current_hdemo_sk#169, c_current_addr_sk#170, c_first_shipto_date_sk#171, c_first_sales_date_sk#172, c_salutation#173, c_first_name#174, c_last_name#175, c_preferred_cust_flag#176, c_birth_day#177, c_birth_month#178, c_birth_year#179, c_birth_country#180, c_login#181, c_email_address#182, c_last_review_date#183], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "42" : {
          "sign" : 978615746,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#184, d_date_id#185, d_date#186, d_month_seq#187, d_week_seq#188, d_quarter_seq#189, d_year#190, d_dow#191, d_moy#192, d_dom#193, d_qoy#194, d_fy_year#195, d_fy_quarter_seq#196, d_fy_week_seq#197, d_day_name#198, d_quarter_name#199, d_holiday#200, d_weekend#201, d_following_holiday#202, d_first_dom#203, d_last_dom#204, d_same_day_ly#205, d_same_day_lq#206, d_current_day#207, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : -1542721256,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 16,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#230L] "
        },
        "20" : {
          "sign" : 1536338763,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8150025186,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#72 = c_customer_sk#166) "
        },
        "27" : {
          "sign" : 875289477,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#141) AND ((d_month_seq#141 >= 1212) AND (d_month_seq#141 <= 1223))) AND isnotnull(d_date_sk#138)) "
        },
        "2" : {
          "sign" : 815014658,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 13477153599,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#221) AND (c_first_name#60 <=> c_first_name#220)) AND (d_date#26 <=> d_date#186)) "
        },
        "38" : {
          "sign" : 1781835293,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968845008,
          "rowCount" : 71965601,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#243 [ws_sold_date_sk#137]) "
        },
        "18" : {
          "sign" : -326925629,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 7006162002,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [c_last_name#175, c_first_name#174, d_date#140], [c_last_name#175, c_first_name#174, d_date#140] "
        },
        "30" : {
          "sign" : -2078066140,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#166) "
        },
        "7" : {
          "sign" : -1540206548,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4248649360,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#3, d_date#26] "
        },
        "29" : {
          "sign" : -1483603159,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 98000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#166, c_first_name#174, c_last_name#175] "
        },
        "41" : {
          "sign" : -479970488,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 82656,
          "rowCount" : 336,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#187) AND ((d_month_seq#187 >= 1212) AND (d_month_seq#187 <= 1223))) AND isnotnull(d_date_sk#184)) "
        },
        "3" : {
          "sign" : 79034350,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 13477153599,
          "rowCount" : 275043951,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#175) AND (c_first_name#60 <=> c_first_name#174)) AND (d_date#26 <=> d_date#140)) "
        },
        "28" : {
          "sign" : -1784313772,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#138, d_date_id#139, d_date#140, d_month_seq#141, d_week_seq#142, d_quarter_seq#143, d_year#144, d_dow#145, d_moy#146, d_dom#147, d_qoy#148, d_fy_year#149, d_fy_quarter_seq#150, d_fy_week_seq#151, d_day_name#152, d_quarter_name#153, d_holiday#154, d_weekend#155, d_following_holiday#156, d_first_dom#157, d_last_dom#158, d_same_day_ly#159, d_same_day_lq#160, d_current_day#161, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        }
      },
      "links" : [ {
        "fromId" : 11,
        "fromName" : "LogicalRelation",
        "toId" : 10,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 10,
        "fromName" : "Filter",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Aggregate",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "LogicalRelation",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "LogicalRelation",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Filter",
        "toId" : 26,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 24,
        "fromName" : "Filter",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Join",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "LogicalRelation",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 20,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Join",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 18,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Aggregate",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Join",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "LogicalRelation",
        "toId" : 38,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "LogicalRelation",
        "toId" : 41,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Filter",
        "toId" : 40,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Project",
        "toId" : 38,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 38,
        "fromName" : "Filter",
        "toId" : 37,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Project",
        "toId" : 36,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Project",
        "toId" : 36,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Join",
        "toId" : 35,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "LogicalRelation",
        "toId" : 44,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Filter",
        "toId" : 43,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Join",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Join",
        "toId" : 1,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "Project",
        "toId" : 0,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "Aggregate [count(1) AS count(1)#230L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#221) AND (c_first_name#60 <=> c_first_name#220)) AND (d_date#26 <=> d_date#186))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#175) AND (c_first_name#60 <=> c_first_name#174)) AND (d_date#26 <=> d_date#140))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- Project [ss_customer_sk#3, d_date#26]\n      :  :        :  +- Join Inner, (ss_sold_date_sk#23 = d_date_sk#24)\n      :  :        :     :- Project [ss_customer_sk#3, ss_sold_date_sk#23]\n      :  :        :     :  +- Filter ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#241 [ss_sold_date_sk#23])\n      :  :        :     :     :  +- Project [d_date_sk#24, d_date#26]\n      :  :        :     :     :     +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9L,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22,ss_sold_date_sk#23] parquet\n      :  :        :     +- Project [d_date_sk#24, d_date#26]\n      :  :        :        +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      :  :        +- Project [c_customer_sk#52, c_first_name#60, c_last_name#61]\n      :  :           +- Filter isnotnull(c_customer_sk#52)\n      :  :              +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#52,c_customer_id#53,c_current_cdemo_sk#54,c_current_hdemo_sk#55,c_current_addr_sk#56,c_first_shipto_date_sk#57,c_first_sales_date_sk#58,c_salutation#59,c_first_name#60,c_last_name#61,c_preferred_cust_flag#62,c_birth_day#63,c_birth_month#64,c_birth_year#65,c_birth_country#66,c_login#67,c_email_address#68,c_last_review_date#69] parquet\n      :  +- Aggregate [c_last_name#175, c_first_name#174, d_date#140], [c_last_name#175, c_first_name#174, d_date#140]\n      :     +- Project [c_last_name#175, c_first_name#174, d_date#140]\n      :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#166)\n      :           :- Project [cs_bill_customer_sk#72, d_date#140]\n      :           :  +- Join Inner, (cs_sold_date_sk#103 = d_date_sk#138)\n      :           :     :- Project [cs_bill_customer_sk#72, cs_sold_date_sk#103]\n      :           :     :  +- Filter ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#242 [cs_sold_date_sk#103])\n      :           :     :     :  +- Project [d_date_sk#138, d_date#140]\n      :           :     :     :     +- Filter ((isnotnull(d_month_seq#141) AND ((d_month_seq#141 >= 1212) AND (d_month_seq#141 <= 1223))) AND isnotnull(d_date_sk#138))\n      :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#138,d_date_id#139,d_date#140,d_month_seq#141,d_week_seq#142,d_quarter_seq#143,d_year#144,d_dow#145,d_moy#146,d_dom#147,d_qoy#148,d_fy_year#149,d_fy_quarter_seq#150,d_fy_week_seq#151,d_day_name#152,d_quarter_name#153,d_holiday#154,d_weekend#155,d_following_holiday#156,d_first_dom#157,d_last_dom#158,d_same_day_ly#159,d_same_day_lq#160,d_current_day#161,... 4 more fields] parquet\n      :           :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#70,cs_ship_date_sk#71,cs_bill_customer_sk#72,cs_bill_cdemo_sk#73,cs_bill_hdemo_sk#74,cs_bill_addr_sk#75,cs_ship_customer_sk#76,cs_ship_cdemo_sk#77,cs_ship_hdemo_sk#78,cs_ship_addr_sk#79,cs_call_center_sk#80,cs_catalog_page_sk#81,cs_ship_mode_sk#82,cs_warehouse_sk#83,cs_item_sk#84,cs_promo_sk#85,cs_order_number#86L,cs_quantity#87,cs_wholesale_cost#88,cs_list_price#89,cs_sales_price#90,cs_ext_discount_amt#91,cs_ext_sales_price#92,cs_ext_wholesale_cost#93,... 10 more fields] parquet\n      :           :     +- Project [d_date_sk#138, d_date#140]\n      :           :        +- Filter ((isnotnull(d_month_seq#141) AND ((d_month_seq#141 >= 1212) AND (d_month_seq#141 <= 1223))) AND isnotnull(d_date_sk#138))\n      :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#138,d_date_id#139,d_date#140,d_month_seq#141,d_week_seq#142,d_quarter_seq#143,d_year#144,d_dow#145,d_moy#146,d_dom#147,d_qoy#148,d_fy_year#149,d_fy_quarter_seq#150,d_fy_week_seq#151,d_day_name#152,d_quarter_name#153,d_holiday#154,d_weekend#155,d_following_holiday#156,d_first_dom#157,d_last_dom#158,d_same_day_ly#159,d_same_day_lq#160,d_current_day#161,... 4 more fields] parquet\n      :           +- Project [c_customer_sk#166, c_first_name#174, c_last_name#175]\n      :              +- Filter isnotnull(c_customer_sk#166)\n      :                 +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#166,c_customer_id#167,c_current_cdemo_sk#168,c_current_hdemo_sk#169,c_current_addr_sk#170,c_first_shipto_date_sk#171,c_first_sales_date_sk#172,c_salutation#173,c_first_name#174,c_last_name#175,c_preferred_cust_flag#176,c_birth_day#177,c_birth_month#178,c_birth_year#179,c_birth_country#180,c_login#181,c_email_address#182,c_last_review_date#183] parquet\n      +- Aggregate [c_last_name#221, c_first_name#220, d_date#186], [c_last_name#221, c_first_name#220, d_date#186]\n         +- Project [c_last_name#221, c_first_name#220, d_date#186]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#212)\n               :- Project [ws_bill_customer_sk#107, d_date#186]\n               :  +- Join Inner, (ws_sold_date_sk#137 = d_date_sk#184)\n               :     :- Project [ws_bill_customer_sk#107, ws_sold_date_sk#137]\n               :     :  +- Filter ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#243 [ws_sold_date_sk#137])\n               :     :     :  +- Project [d_date_sk#184, d_date#186]\n               :     :     :     +- Filter ((isnotnull(d_month_seq#187) AND ((d_month_seq#187 >= 1212) AND (d_month_seq#187 <= 1223))) AND isnotnull(d_date_sk#184))\n               :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#184,d_date_id#185,d_date#186,d_month_seq#187,d_week_seq#188,d_quarter_seq#189,d_year#190,d_dow#191,d_moy#192,d_dom#193,d_qoy#194,d_fy_year#195,d_fy_quarter_seq#196,d_fy_week_seq#197,d_day_name#198,d_quarter_name#199,d_holiday#200,d_weekend#201,d_following_holiday#202,d_first_dom#203,d_last_dom#204,d_same_day_ly#205,d_same_day_lq#206,d_current_day#207,... 4 more fields] parquet\n               :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#104,ws_ship_date_sk#105,ws_item_sk#106,ws_bill_customer_sk#107,ws_bill_cdemo_sk#108,ws_bill_hdemo_sk#109,ws_bill_addr_sk#110,ws_ship_customer_sk#111,ws_ship_cdemo_sk#112,ws_ship_hdemo_sk#113,ws_ship_addr_sk#114,ws_web_page_sk#115,ws_web_site_sk#116,ws_ship_mode_sk#117,ws_warehouse_sk#118,ws_promo_sk#119,ws_order_number#120L,ws_quantity#121,ws_wholesale_cost#122,ws_list_price#123,ws_sales_price#124,ws_ext_discount_amt#125,ws_ext_sales_price#126,ws_ext_wholesale_cost#127,... 10 more fields] parquet\n               :     +- Project [d_date_sk#184, d_date#186]\n               :        +- Filter ((isnotnull(d_month_seq#187) AND ((d_month_seq#187 >= 1212) AND (d_month_seq#187 <= 1223))) AND isnotnull(d_date_sk#184))\n               :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#184,d_date_id#185,d_date#186,d_month_seq#187,d_week_seq#188,d_quarter_seq#189,d_year#190,d_dow#191,d_moy#192,d_dom#193,d_qoy#194,d_fy_year#195,d_fy_quarter_seq#196,d_fy_week_seq#197,d_day_name#198,d_quarter_name#199,d_holiday#200,d_weekend#201,d_following_holiday#202,d_first_dom#203,d_last_dom#204,d_same_day_ly#205,d_same_day_lq#206,d_current_day#207,... 4 more fields] parquet\n               +- Project [c_customer_sk#212, c_first_name#220, c_last_name#221]\n                  +- Filter isnotnull(c_customer_sk#212)\n                     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#212,c_customer_id#213,c_current_cdemo_sk#214,c_current_hdemo_sk#215,c_current_addr_sk#216,c_first_shipto_date_sk#217,c_first_sales_date_sk#218,c_salutation#219,c_first_name#220,c_last_name#221,c_preferred_cust_flag#222,c_birth_day#223,c_birth_month#224,c_birth_year#225,c_birth_country#226,c_login#227,c_email_address#228,c_last_review_date#229] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 88134185146,
      "inputRowCount" : 496521141
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -416455362,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 217419672,
            "rowCount" : 4472498,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], ShuffleQueryStage 18 "
          },
          "5" : {
            "sign" : -321350383,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 146885072,
            "rowCount" : 3022291,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], ShuffleQueryStage 17 "
          },
          "6" : {
            "sign" : 1222986002,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56157920,
            "rowCount" : 1156281,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16 "
          },
          "1" : {
            "sign" : -820445747,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 35779984,
            "rowCount" : 4472498,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 1488637704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : 125150522,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 232569896,
            "rowCount" : 4472498,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : -123962886,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 232569896,
            "rowCount" : 4472498,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], ShuffleQueryStage 18\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], ShuffleQueryStage 17\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 420462664,
        "inputRowCount" : 8651070
      },
      "PD" : {
        "8" : [ 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 421715, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 383377, 389709, 389709 ],
        "7" : [ 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308 ],
        "9" : [ 560519, 560519, 584565, 560519, 584565, 560519, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 560519, 616571, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 560519, 560519, 592525, 584565, 560519, 584565, 560519, 560519, 560519, 584565, 560519, 584565, 584565, 560519, 592525, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 560519, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 560519, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 560519, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 616571, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 560519, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 560519, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 584565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226964417,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6310,
        "IOBytes" : {
          "Total" : 215912105,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 215911869,
            "SW" : 236
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 684550876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[]) "
          },
          "5" : {
            "sign" : -669882721,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[]) "
          },
          "6" : {
            "sign" : 1222986002,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56157920,
            "rowCount" : 1156281,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16 "
          },
          "1" : {
            "sign" : -1880429879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2200351608,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -1472573938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : -1755498340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : -1967427272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[])\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 20539473521,
        "inputRowCount" : 419183130
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 5325.0,
        "FinishedTasksDistributionInMs" : [ 5325.0, 5325.0, 5325.0, 5325.0, 5325.0 ]
      },
      "StartTimeInMs" : 1702226945578,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 25149,
        "IOBytes" : {
          "Total" : 982298034,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 605996525,
            "SW" : 376301509
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 902817624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 682580544,
            "rowCount" : 28440856,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#72, d_date#247], ShuffleQueryStage 11 "
          },
          "8" : {
            "sign" : 150857860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1 "
          },
          "4" : {
            "sign" : -1401436041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "15" : {
            "sign" : 733875554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7227542920000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "11" : {
            "sign" : -990693892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3412902720000000,
            "rowCount" : 56881712000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#72 = c_customer_sk#273) "
          },
          "9" : {
            "sign" : -927554314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2957849024000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "13" : {
            "sign" : -1471523503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -228281648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8339472600000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#319) "
          },
          "5" : {
            "sign" : -885405606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "10" : {
            "sign" : 1393458837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2957849024000000,
            "rowCount" : 56881712000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "6" : {
            "sign" : 1139293536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31864870200000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          },
          "1" : {
            "sign" : -1172655314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "17" : {
            "sign" : 1547959155,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1111929680,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12 "
          },
          "14" : {
            "sign" : -1243767973,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7227542920000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "0" : {
            "sign" : -1233375493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : 127751433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "18" : {
            "sign" : 2018512634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : 416346742,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10 "
          },
          "3" : {
            "sign" : -561255716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- LogicalQueryStage Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10\n      :  :        +- LogicalQueryStage Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1\n      :  +- Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247]\n      :     +- Project [c_last_name#282, c_first_name#281, d_date#247]\n      :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#273)\n      :           :- LogicalQueryStage Project [cs_bill_customer_sk#72, d_date#247], ShuffleQueryStage 11\n      :           +- LogicalQueryStage Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5\n      +- Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n         +- Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n               :- LogicalQueryStage Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12\n               +- LogicalQueryStage Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6332743128,
        "inputRowCount" : 369477046
      },
      "PD" : {
        "2" : [ 206660, 202612, 201562, 202796, 200201, 203936, 200843, 201711, 203722, 201640, 208352, 201245, 203314, 200681, 199317, 201847, 198891, 206192, 203559, 202471, 200973, 208412, 204299, 205492, 199222, 202224, 202081, 201847, 203392, 203120, 203138, 203612, 200666, 200221, 200643, 201368, 199760, 200583, 201200, 202030, 201711, 202612, 201205, 202748, 203073, 199513, 202924, 202892, 203586, 198781, 201770, 204792, 200978, 204170, 201756, 202607, 201815, 202418, 199954, 200142, 198360, 206759, 199045, 201134, 201887, 201671, 201640, 197691, 203196, 202340, 206116, 199863, 200349, 208510, 205240, 203994, 204533, 200863, 203579, 203060, 199584, 204888, 205978, 202471, 203858, 199493, 200875, 200668, 204638, 202703, 201606, 204636, 202172, 202471, 204170, 208878, 198811, 201245, 201756, 198177, 199642, 202808, 201776, 205590, 202224, 204201, 206426, 203957, 201245, 200356, 198139, 201334, 204181, 198768, 202101, 202879, 198683, 199740, 203093, 201174, 201983, 199863, 209772, 203392, 208996, 209500, 201938, 200850, 201887, 201439, 205804, 204948, 202164, 203586, 201570, 199856, 201243, 203523, 203994, 201900, 198891, 199078, 202101, 204246, 204065, 204538, 205940, 204397, 205779, 205397, 204890, 201776, 206310, 204364, 203755, 203352, 202536, 206309, 204694, 199954, 198806, 199362, 204422, 205669, 204948, 205142, 201127, 208061, 203358, 199364, 201633, 207010, 199604, 202360, 204631, 200953, 205550, 198644, 203481, 200449, 202730, 204754, 203358, 198113, 205019, 205947, 212516, 203463, 196628, 203403, 206056, 201304, 201517, 202665, 205726, 205110, 205387, 202030, 204715, 201218 ],
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 35,
        "FinishedTasksTotalTimeInMs" : 91389.0,
        "FinishedTasksDistributionInMs" : [ 343.0, 488.0, 710.0, 6161.0, 9950.0 ]
      },
      "StartTimeInMs" : 1702226932460,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 38267,
        "IOBytes" : {
          "Total" : 1268955805,
          "Details" : {
            "IR" : 58282842,
            "IW" : 0,
            "SR" : 702689233,
            "SW" : 507983730
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 684550876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 221258920,
            "rowCount" : 4553775,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[]) "
          },
          "5" : {
            "sign" : -321350383,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 146885072,
            "rowCount" : 3022291,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], ShuffleQueryStage 17 "
          },
          "6" : {
            "sign" : 1222986002,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56157920,
            "rowCount" : 1156281,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16 "
          },
          "1" : {
            "sign" : -1406932497,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 36430200,
            "rowCount" : 4553775,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -409983382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : -925577956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 236796300,
            "rowCount" : 4553775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : -279277608,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 236796300,
            "rowCount" : 4553775,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], ShuffleQueryStage 17\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 424301912,
        "inputRowCount" : 8732347
      },
      "PD" : {
        "8" : [ 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 421715, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 383377, 389709, 389709 ],

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226961950,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8777,
        "IOBytes" : {
          "Total" : 440778168,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 329075033,
            "SW" : 111703135
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 684550876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[]) "
          },
          "5" : {
            "sign" : -669882721,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 148534304,
            "rowCount" : 3057350,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[]) "
          },
          "6" : {
            "sign" : 1222986002,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56157920,
            "rowCount" : 1156281,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16 "
          },
          "1" : {
            "sign" : -1880429879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2200351608,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -1472573938,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : -1755498340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : -1967427272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[])\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13681845823,
        "inputRowCount" : 279257582
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226948415,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 22312,
        "IOBytes" : {
          "Total" : 815578513,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 515306640,
            "SW" : 300271873
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1357362042,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 64,
            "rowCount" : 4,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS count(1)#337L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS count(1)#337L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 64,
        "inputRowCount" : 4
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226970538,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 189,
        "IOBytes" : {
          "Total" : 236,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 236,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -228281648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1717866600000000,
            "rowCount" : 28631110000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#319) "
          },
          "8" : {
            "sign" : 150857860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1 "
          },
          "4" : {
            "sign" : -1401436041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "11" : {
            "sign" : 733875554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1488817720000000,
            "rowCount" : 28631110000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "9" : {
            "sign" : -669882721,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[]) "
          },
          "13" : {
            "sign" : 1547959155,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 343573320,
            "rowCount" : 14315555,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12 "
          },
          "5" : {
            "sign" : -885405606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "10" : {
            "sign" : -1243767973,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1488817720000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "6" : {
            "sign" : 1139293536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31864870200000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          },
          "1" : {
            "sign" : 1622952807,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "14" : {
            "sign" : 2018512634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9 "
          },
          "0" : {
            "sign" : -575001882,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : 1231494324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "7" : {
            "sign" : 416346742,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10 "
          },
          "3" : {
            "sign" : 1732862113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- LogicalQueryStage Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10\n      :  :        +- LogicalQueryStage Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[])\n      +- Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n         +- Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n               :- LogicalQueryStage Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12\n               +- LogicalQueryStage Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11791440378,
        "inputRowCount" : 426839038
      },
      "PD" : {
        "3" : [ 85066, 83251, 82520, 82281, 82059, 83186, 81647, 83439, 82208, 83266, 83823, 82530, 83703, 84098, 81005, 83586, 83444, 84806, 84957, 82975, 82148, 82404, 84157, 84104, 82263, 83696, 83471, 84718, 83469, 82891, 81107, 83287, 82595, 83151, 83413, 83318, 81112, 80534, 82912, 82006, 80770, 83870, 80325, 82354, 84227, 82914, 82828, 83155, 82797, 81344, 83189, 86243, 82193, 84495, 82597, 82505, 82148, 79594, 79652, 82441, 82878, 81990, 82360, 83320, 82840, 84038, 83727, 81148, 82351, 82590, 82105, 84373, 82915, 82659, 82985, 83902, 85184, 85148, 84718, 82918, 83562, 84662, 85930, 80571, 82383, 82693, 82199, 83263, 83746, 84662, 83292, 82988, 85539, 84104, 80004, 83205, 83246, 81639, 85492, 82760, 81507, 84588, 84134, 83308, 83122, 82334, 83449, 82452, 79198, 82237, 82218, 81990, 83825, 79678, 81437, 82174, 80745, 80782, 80039, 82499, 81519, 82161, 85130, 82744, 86011, 85064, 83049, 83308, 82758, 82614, 83801, 84417, 83727, 83800, 84788, 81438, 82374, 82505, 84113, 83215, 81216, 82966, 82663, 84701, 80923, 81532, 86776, 80067, 84157, 83432, 85303, 83466, 86420, 82592, 84457, 84100, 82842, 83629, 84621, 81337, 82777, 81406, 83145, 82302, 81792, 84048, 82378, 84585, 84365, 82884, 82566, 84121, 84086, 85360, 83272, 82232, 81679, 80840, 83921, 83217, 85223, 83698, 83782, 80764, 85403, 81828, 83562, 80045, 82803, 84904, 84385, 81380, 84746, 80575, 83890, 84238, 83573, 82618, 84756, 79894 ],
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 9,
        "FinishedTasksNum" : 25,
        "FinishedTasksTotalTimeInMs" : 86961.0,
        "FinishedTasksDistributionInMs" : [ 452.0, 700.0, 1011.0, 7182.0, 9950.0 ]
      },
      "StartTimeInMs" : 1702226932817,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 37910,
        "IOBytes" : {
          "Total" : 1239359536,
          "Details" : {
            "IR" : 44520019,
            "IW" : 0,
            "SR" : 702689233,
            "SW" : 492150284
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 684550876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[]) "
          },
          "5" : {
            "sign" : -321350383,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 146885072,
            "rowCount" : 3022291,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], ShuffleQueryStage 17 "
          },
          "6" : {
            "sign" : 1222986002,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56157920,
            "rowCount" : 1156281,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16 "
          },
          "1" : {
            "sign" : -1406932497,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2200351608,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -409983382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : -925577956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : -279277608,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], ShuffleQueryStage 17\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], ShuffleQueryStage 16\n"
      },
      "IM" : {
        "inputSizeInBytes" : 13680196591,
        "inputRowCount" : 279222523
      },
      "PD" : {
        "8" : [ 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 421715, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 383377, 389709, 389709 ],
        "7" : [ 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226951821,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 18906,
        "IOBytes" : {
          "Total" : 664143303,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 439277004,
            "SW" : 224866299
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 150857860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1 "
          },
          "4" : {
            "sign" : -1401436041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 5554955848000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "9" : {
            "sign" : -669882721,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[]) "
          },
          "5" : {
            "sign" : -885405606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5554955848000000,
            "rowCount" : 106826074000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "10" : {
            "sign" : -170659794,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3544756824,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[]) "
          },
          "6" : {
            "sign" : 1139293536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6409564440000000,
            "rowCount" : 106826074000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          },
          "1" : {
            "sign" : 1069992634,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 854608592000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : 1215715661,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : -954536293,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5554955848000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "7" : {
            "sign" : 416346742,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1281912888,
            "rowCount" : 53413037,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10 "
          },
          "3" : {
            "sign" : 1732862113,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5554955848000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- LogicalQueryStage Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10\n      :  :        +- LogicalQueryStage Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[])\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 11929359562,
        "inputRowCount" : 270737911
      },
      "PD" : {
        "1" : [ 311442, 305420, 304889, 304656, 304112, 303350, 303148, 301155, 305538, 304760, 308779, 307549, 311220, 308066, 302212, 303913, 307377, 310664, 305392, 301784, 303750, 309758, 305830, 308456, 310269, 303591, 303763, 310338, 304271, 303760, 299481, 302135, 310595, 299877, 306188, 303831, 302680, 299483, 301232, 304668, 301537, 302656, 296866, 307907, 307480, 303760, 311696, 304713, 305865, 307945, 309293, 307519, 302982, 307223, 301131, 304024, 299962, 302142, 302985, 300556, 302204, 310864, 301801, 307584, 299190, 309143, 306862, 301938, 302018, 310699, 303597, 297962, 302369, 306123, 308129, 308352, 308016, 309258, 310957, 303201, 304178, 311210, 306987, 300196, 303985, 304642, 300492, 304473, 306039, 310498, 303739, 305272, 311765, 303400, 303855, 308412, 300007, 302913, 303499, 300867, 298415, 309037, 304182, 297873, 300287, 309140, 310739, 313548, 302468, 303935, 300902, 306198, 306872, 307317, 306248, 304052, 300553, 301045, 307712, 304701, 300714, 298848, 316243, 307421, 306712, 311835, 303597, 300714, 305573, 301006, 307912, 309398, 307123, 304271, 300586, 301066, 306901, 309502, 305031, 309838, 303729, 305364, 307620, 308592, 305307, 309814, 314760, 306608, 306576, 310175, 307129, 302529, 312673, 310223, 308480, 309560, 302143, 307804, 308268, 302136, 298321, 303364, 308887, 302984, 303701, 306248, 304086, 309047, 307872, 301521, 306049, 305564, 308669, 309303, 307351, 302810, 306644, 299177, 307792, 306132, 303404, 305542, 304854, 303982, 313519, 308525, 312666, 311735, 302459, 306109, 306329, 303796, 304564, 294278, 308386, 307445, 303405, 305381, 308443, 306764 ],
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 6170.0,
        "FinishedTasksDistributionInMs" : [ 845.0, 845.0, 5325.0, 5325.0, 5325.0 ]
      },
      "StartTimeInMs" : 1702226939751,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 30976,
        "IOBytes" : {
          "Total" : 1136645355,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 702689233,
            "SW" : 433956122
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : 1036966382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 630418664760,
            "rowCount" : 26267444365,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#137 = d_date_sk#291) "
          },
          "12" : {
            "sign" : 131115354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5376,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#24, d_date#26] "
          },
          "8" : {
            "sign" : 583823534,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2300980904280,
            "rowCount" : 95874204345,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#23 = d_date_sk#24) "
          },
          "19" : {
            "sign" : 1146616673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8150025186,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#72 = c_customer_sk#273) "
          },
          "23" : {
            "sign" : -682488228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651732864,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#344 [cs_sold_date_sk#103]) "
          },
          "4" : {
            "sign" : -1316205146,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 13477153599,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "40" : {
            "sign" : -1802985305,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#291, d_date_id#292, d_date#293, d_month_seq#294, d_week_seq#295, d_quarter_seq#296, d_year#297, d_dow#298, d_moy#299, d_dom#300, d_qoy#301, d_fy_year#302, d_fy_quarter_seq#303, d_fy_week_seq#304, d_day_name#305, d_quarter_name#306, d_holiday#307, d_weekend#308, d_following_holiday#309, d_first_dom#310, d_last_dom#311, d_same_day_ly#312, d_same_day_lq#313, d_current_day#314, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "15" : {
            "sign" : 87008084,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#24, d_date#26], BroadcastQueryStage 0 "
          },
          "11" : {
            "sign" : -1590079228,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9L, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "9" : {
            "sign" : -514721249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4202704848,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#3, ss_sold_date_sk#23] "
          },
          "33" : {
            "sign" : 1091136876,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 420279109840,
            "rowCount" : 26267444365,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#107, d_date#293] "
          },
          "22" : {
            "sign" : 645883881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2280902528,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#72, cs_sold_date_sk#103] "
          },
          "26" : {
            "sign" : -860720470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245)) "
          },
          "37" : {
            "sign" : 827769952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#104, ws_ship_date_sk#105, ws_item_sk#106, ws_bill_customer_sk#107, ws_bill_cdemo_sk#108, ws_bill_hdemo_sk#109, ws_bill_addr_sk#110, ws_ship_customer_sk#111, ws_ship_cdemo_sk#112, ws_ship_hdemo_sk#113, ws_ship_addr_sk#114, ws_web_page_sk#115, ws_web_site_sk#116, ws_ship_mode_sk#117, ws_warehouse_sk#118, ws_promo_sk#119, ws_order_number#120L, ws_quantity#121, ws_wholesale_cost#122, ws_list_price#123, ws_sales_price#124, ws_ext_discount_amt#125, ws_ext_sales_price#126, ws_ext_wholesale_cost#127, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : 1433423260,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24)) "
          },
          "24" : {
            "sign" : 173057800,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#70, cs_ship_date_sk#71, cs_bill_customer_sk#72, cs_bill_cdemo_sk#73, cs_bill_hdemo_sk#74, cs_bill_addr_sk#75, cs_ship_customer_sk#76, cs_ship_cdemo_sk#77, cs_ship_hdemo_sk#78, cs_ship_addr_sk#79, cs_call_center_sk#80, cs_catalog_page_sk#81, cs_ship_mode_sk#82, cs_warehouse_sk#83, cs_item_sk#84, cs_promo_sk#85, cs_order_number#86L, cs_quantity#87, cs_wholesale_cost#88, cs_list_price#89, cs_sales_price#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "35" : {
            "sign" : 2026740592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151449616,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#107, ws_sold_date_sk#137] "
          },
          "16" : {
            "sign" : 150857860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1 "
          },
          "5" : {
            "sign" : 1545331473,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "10" : {
            "sign" : -1414978285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925696056,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#343 [ss_sold_date_sk#23]) "
          },
          "21" : {
            "sign" : -325388643,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1248794134080,
            "rowCount" : 52033088920,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#103 = d_date_sk#245) "
          },
          "32" : {
            "sign" : -1473314737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#319) "
          },
          "6" : {
            "sign" : 1671544399,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15677505207,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          },
          "36" : {
            "sign" : -1412882177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968845008,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#345 [ws_sold_date_sk#137]) "
          },
          "1" : {
            "sign" : -534107167,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2073408246,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "39" : {
            "sign" : 507057197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 82656,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291)) "
          },
          "17" : {
            "sign" : -1177125657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7006162002,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "25" : {
            "sign" : -1820018814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5376,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#245, d_date#247] "
          },
          "14" : {
            "sign" : -1634850698,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#24, d_date_id#25, d_date#26, d_month_seq#27, d_week_seq#28, d_quarter_seq#29, d_year#30, d_dow#31, d_moy#32, d_dom#33, d_qoy#34, d_fy_year#35, d_fy_quarter_seq#36, d_fy_week_seq#37, d_day_name#38, d_quarter_name#39, d_holiday#40, d_weekend#41, d_following_holiday#42, d_first_dom#43, d_last_dom#44, d_same_day_ly#45, d_same_day_lq#46, d_current_day#47, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "31" : {
            "sign" : 1153726427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3544756824,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "42" : {
            "sign" : 2018512634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9 "
          },
          "0" : {
            "sign" : 82380846,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "20" : {
            "sign" : 1682745021,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 832529422720,
            "rowCount" : 52033088920,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#72, d_date#247] "
          },
          "27" : {
            "sign" : 1508516132,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#245, d_date_id#246, d_date#247, d_month_seq#248, d_week_seq#249, d_quarter_seq#250, d_year#251, d_dow#252, d_moy#253, d_dom#254, d_qoy#255, d_fy_year#256, d_fy_quarter_seq#257, d_fy_week_seq#258, d_day_name#259, d_quarter_name#260, d_holiday#261, d_weekend#262, d_following_holiday#263, d_first_dom#264, d_last_dom#265, d_same_day_ly#266, d_same_day_lq#267, d_current_day#268, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -596894560,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "38" : {
            "sign" : 888357555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5376,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#291, d_date#293] "
          },
          "18" : {
            "sign" : 1144551070,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "30" : {
            "sign" : 175123098,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3544756824,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "7" : {
            "sign" : 499651871,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1533987269520,
            "rowCount" : 95874204345,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#3, d_date#26] "
          },
          "29" : {
            "sign" : -1471523503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5 "
          },
          "41" : {
            "sign" : 887733477,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#291, d_date#293], BroadcastQueryStage 7 "
          },
          "3" : {
            "sign" : -1338482834,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          },
          "28" : {
            "sign" : -1241558185,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#245, d_date#247], BroadcastQueryStage 3 "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalRelation",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalRelation",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 23,
          "fromName" : "Filter",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 21,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Join",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 19,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Join",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalRelation",
          "toId" : 39,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Filter",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- Project [ss_customer_sk#3, d_date#26]\n      :  :        :  +- Join Inner, (ss_sold_date_sk#23 = d_date_sk#24)\n      :  :        :     :- Project [ss_customer_sk#3, ss_sold_date_sk#23]\n      :  :        :     :  +- Filter ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#343 [ss_sold_date_sk#23])\n      :  :        :     :     :  +- Project [d_date_sk#24, d_date#26]\n      :  :        :     :     :     +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9L,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22,ss_sold_date_sk#23] parquet\n      :  :        :     +- LogicalQueryStage Project [d_date_sk#24, d_date#26], BroadcastQueryStage 0\n      :  :        +- LogicalQueryStage Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1\n      :  +- Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247]\n      :     +- Project [c_last_name#282, c_first_name#281, d_date#247]\n      :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#273)\n      :           :- Project [cs_bill_customer_sk#72, d_date#247]\n      :           :  +- Join Inner, (cs_sold_date_sk#103 = d_date_sk#245)\n      :           :     :- Project [cs_bill_customer_sk#72, cs_sold_date_sk#103]\n      :           :     :  +- Filter ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#344 [cs_sold_date_sk#103])\n      :           :     :     :  +- Project [d_date_sk#245, d_date#247]\n      :           :     :     :     +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n      :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n      :           :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#70,cs_ship_date_sk#71,cs_bill_customer_sk#72,cs_bill_cdemo_sk#73,cs_bill_hdemo_sk#74,cs_bill_addr_sk#75,cs_ship_customer_sk#76,cs_ship_cdemo_sk#77,cs_ship_hdemo_sk#78,cs_ship_addr_sk#79,cs_call_center_sk#80,cs_catalog_page_sk#81,cs_ship_mode_sk#82,cs_warehouse_sk#83,cs_item_sk#84,cs_promo_sk#85,cs_order_number#86L,cs_quantity#87,cs_wholesale_cost#88,cs_list_price#89,cs_sales_price#90,cs_ext_discount_amt#91,cs_ext_sales_price#92,cs_ext_wholesale_cost#93,... 10 more fields] parquet\n      :           :     +- LogicalQueryStage Project [d_date_sk#245, d_date#247], BroadcastQueryStage 3\n      :           +- LogicalQueryStage Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5\n      +- Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n         +- Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n               :- Project [ws_bill_customer_sk#107, d_date#293]\n               :  +- Join Inner, (ws_sold_date_sk#137 = d_date_sk#291)\n               :     :- Project [ws_bill_customer_sk#107, ws_sold_date_sk#137]\n               :     :  +- Filter ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#345 [ws_sold_date_sk#137])\n               :     :     :  +- Project [d_date_sk#291, d_date#293]\n               :     :     :     +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n               :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n               :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#104,ws_ship_date_sk#105,ws_item_sk#106,ws_bill_customer_sk#107,ws_bill_cdemo_sk#108,ws_bill_hdemo_sk#109,ws_bill_addr_sk#110,ws_ship_customer_sk#111,ws_ship_cdemo_sk#112,ws_ship_hdemo_sk#113,ws_ship_addr_sk#114,ws_web_page_sk#115,ws_web_site_sk#116,ws_ship_mode_sk#117,ws_warehouse_sk#118,ws_promo_sk#119,ws_order_number#120L,ws_quantity#121,ws_wholesale_cost#122,ws_list_price#123,ws_sales_price#124,ws_ext_discount_amt#125,ws_ext_sales_price#126,ws_ext_wholesale_cost#127,... 10 more fields] parquet\n               :     +- LogicalQueryStage Project [d_date_sk#291, d_date#293], BroadcastQueryStage 7\n               +- LogicalQueryStage Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86877429472,
        "inputRowCount" : 496303089
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 16565.0,
        "FinishedTasksDistributionInMs" : [ 1163.0, 1240.0, 1250.0, 1310.0, 1398.0 ]
      },
      "StartTimeInMs" : 1702226920961,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 49766,
        "IOBytes" : {
          "Total" : 1415590570,
          "Details" : {
            "IR" : 114227722,
            "IW" : 0,
            "SR" : 702689233,
            "SW" : 598673615
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 902817624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2216260192,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#72, d_date#247], ShuffleQueryStage 11 "
          },
          "8" : {
            "sign" : 150857860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1 "
          },
          "4" : {
            "sign" : -1401436041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "15" : {
            "sign" : 733875554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7227542920000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "11" : {
            "sign" : -990693892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16621951440000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#72 = c_customer_sk#273) "
          },
          "9" : {
            "sign" : -927554314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 14405691248000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "13" : {
            "sign" : -1471523503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -228281648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8339472600000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#319) "
          },
          "5" : {
            "sign" : -885405606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "10" : {
            "sign" : 1393458837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14405691248000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "6" : {
            "sign" : 1139293536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31864870200000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          },
          "1" : {
            "sign" : -1172655314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "17" : {
            "sign" : 1547959155,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1111929680,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12 "
          },
          "14" : {
            "sign" : -1243767973,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7227542920000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "0" : {
            "sign" : -1233375493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : 127751433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "18" : {
            "sign" : 2018512634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : 416346742,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10 "
          },
          "3" : {
            "sign" : -561255716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- LogicalQueryStage Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10\n      :  :        +- LogicalQueryStage Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1\n      :  +- Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247]\n      :     +- Project [c_last_name#282, c_first_name#281, d_date#247]\n      :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#273)\n      :           :- LogicalQueryStage Project [cs_bill_customer_sk#72, d_date#247], ShuffleQueryStage 11\n      :           +- LogicalQueryStage Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5\n      +- Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n         +- Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n               :- LogicalQueryStage Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12\n               +- LogicalQueryStage Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7866422776,
        "inputRowCount" : 479552452
      },
      "PD" : {
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 4062.0,
        "FinishedTasksDistributionInMs" : [ 1011.0, 1011.0, 1027.0, 2024.0, 2024.0 ]
      },
      "StartTimeInMs" : 1702226923629,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 47098,
        "IOBytes" : {
          "Total" : 1348803032,
          "Details" : {
            "IR" : 99447993,
            "IW" : 0,
            "SR" : 702689233,
            "SW" : 546665806
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 684550876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[]) "
          },
          "5" : {
            "sign" : -669882721,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[]) "
          },
          "6" : {
            "sign" : -170659794,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 56222200,
            "rowCount" : 1157740,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[]) "
          },
          "1" : {
            "sign" : 2042870231,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2200351608,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "0" : {
            "sign" : -304919374,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : 2124057828,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : -1967427272,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])\n      :  +- LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[])\n      +- LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 20539537801,
        "inputRowCount" : 419184589
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 5325.0,
        "FinishedTasksDistributionInMs" : [ 5325.0, 5325.0, 5325.0, 5325.0, 5325.0 ]
      },
      "StartTimeInMs" : 1702226942046,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 28681,
        "IOBytes" : {
          "Total" : 1039952647,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 634847978,
            "SW" : 405104669
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 902817624,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2216260192,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#72, d_date#247], ShuffleQueryStage 11 "
          },
          "8" : {
            "sign" : 150857860,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1 "
          },
          "4" : {
            "sign" : -1401436041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "15" : {
            "sign" : 733875554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7227542920000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "11" : {
            "sign" : -990693892,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16621951440000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#72 = c_customer_sk#273) "
          },
          "9" : {
            "sign" : -927554314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 14405691248000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "13" : {
            "sign" : -1471523503,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5 "
          },
          "16" : {
            "sign" : -228281648,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8339472600000000,
            "rowCount" : 138991210000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#319) "
          },
          "5" : {
            "sign" : -885405606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "10" : {
            "sign" : 1393458837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14405691248000000,
            "rowCount" : 277032524000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "6" : {
            "sign" : 1139293536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 31864870200000000,
            "rowCount" : 531081170000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          },
          "1" : {
            "sign" : -1172655314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4248649360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "17" : {
            "sign" : 1547959155,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1111929680,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12 "
          },
          "14" : {
            "sign" : -1243767973,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7227542920000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "0" : {
            "sign" : -1233375493,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "2" : {
            "sign" : 127751433,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "18" : {
            "sign" : 2018512634,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : 416346742,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10 "
          },
          "3" : {
            "sign" : -561255716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27616220840000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Aggregate",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- LogicalQueryStage Project [ss_customer_sk#3, d_date#26], ShuffleQueryStage 10\n      :  :        +- LogicalQueryStage Project [c_customer_sk#52, c_first_name#60, c_last_name#61], ShuffleQueryStage 1\n      :  +- Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247]\n      :     +- Project [c_last_name#282, c_first_name#281, d_date#247]\n      :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#273)\n      :           :- LogicalQueryStage Project [cs_bill_customer_sk#72, d_date#247], ShuffleQueryStage 11\n      :           +- LogicalQueryStage Project [c_customer_sk#273, c_first_name#281, c_last_name#282], ShuffleQueryStage 5\n      +- Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n         +- Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n               :- LogicalQueryStage Project [ws_bill_customer_sk#107, d_date#293], ShuffleQueryStage 12\n               +- LogicalQueryStage Project [c_customer_sk#319, c_first_name#327, c_last_name#328], ShuffleQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7866422776,
        "inputRowCount" : 479552452
      },
      "PD" : {
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 3,
        "FinishedTasksTotalTimeInMs" : 4062.0,
        "FinishedTasksDistributionInMs" : [ 1011.0, 1011.0, 1027.0, 2024.0, 2024.0 ]
      },
      "StartTimeInMs" : 1702226923654,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 47073,
        "IOBytes" : {
          "Total" : 1348803032,
          "Details" : {
            "IR" : 99447993,
            "IW" : 0,
            "SR" : 702689233,
            "SW" : 546665806
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1357362042,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 64,
                "rowCount" : 4
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [count(1) AS count(1)#337L], HashAggregate(keys=[], functions=[count(1)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [count(1) AS count(1)#337L], HashAggregate(keys=[], functions=[count(1)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -332074988,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 64,
            "rowCount" : 4,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [1]: [count#347L] Keys: [] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#244L] Results [1]: [count(1)#244L AS count(1)#337L] "
          },
          "1" : {
            "sign" : 987087715,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [count#347L] Arguments: 19 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[count(1)], output=[count(1)#337L])\n+- ShuffleQueryStage 19\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2075]\n      +- *(26) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#347L])\n         +- *(26) Project\n            +- *(26) SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#328, ), isnull(c_last_name#328), coalesce(c_first_name#327, ), isnull(c_first_name#327), coalesce(d_date#293, 1970-01-01), isnull(d_date#293)], LeftSemi\n               :- *(24) SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#282, ), isnull(c_last_name#282), coalesce(c_first_name#281, ), isnull(c_first_name#281), coalesce(d_date#247, 1970-01-01), isnull(d_date#247)], LeftSemi\n               :  :- *(22) Sort [coalesce(c_last_name#61, ) ASC NULLS FIRST, isnull(c_last_name#61) ASC NULLS FIRST, coalesce(c_first_name#60, ) ASC NULLS FIRST, isnull(c_first_name#60) ASC NULLS FIRST, coalesce(d_date#26, 1970-01-01) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0\n               :  :  +- AQEShuffleRead coalesced\n               :  :     +- ShuffleQueryStage 18\n               :  :        +- Exchange hashpartitioning(coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26), 200), ENSURE_REQUIREMENTS, [plan_id=1987]\n               :  :           +- *(21) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n               :  :              +- AQEShuffleRead coalesced\n               :  :                 +- ShuffleQueryStage 15\n               :  :                    +- Exchange hashpartitioning(c_last_name#61, c_first_name#60, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=1705]\n               :  :                       +- *(18) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n               :  :                          +- *(18) Project [c_last_name#61, c_first_name#60, d_date#26]\n               :  :                             +- *(18) SortMergeJoin [ss_customer_sk#3], [c_customer_sk#52], Inner\n               :  :                                :- *(16) Sort [ss_customer_sk#3 ASC NULLS FIRST], false, 0\n               :  :                                :  +- AQEShuffleRead coalesced\n               :  :                                :     +- ShuffleQueryStage 10\n               :  :                                :        +- Exchange hashpartitioning(ss_customer_sk#3, 200), ENSURE_REQUIREMENTS, [plan_id=895]\n               :  :                                :           +- *(7) Project [ss_customer_sk#3, d_date#26]\n               :  :                                :              +- *(7) BroadcastHashJoin [ss_sold_date_sk#23], [d_date_sk#24], Inner, BuildRight, false\n               :  :                                :                 :- *(7) Filter isnotnull(ss_customer_sk#3)\n               :  :                                :                 :  +- *(7) ColumnarToRow\n               :  :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#3,ss_sold_date_sk#23] Batched: true, DataFilters: [isnotnull(ss_customer_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#343)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int>\n               :  :                                :                 :           +- SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n               :  :                                :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#24, d_date#26], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=866]\n                                                                                          +- Project [d_date_sk#24, d_date#26]\n                                                                                             +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n               :  :                                :                 +- BroadcastQueryStage 0\n               :  :                                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n               :  :                                :                       +- *(1) Project [d_date_sk#24, d_date#26]\n               :  :                                :                          +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n               :  :                                :                             +- *(1) ColumnarToRow\n               :  :                                :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n               :  :                                +- *(17) Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0\n               :  :                                   +- AQEShuffleRead coalesced\n               :  :                                      +- ShuffleQueryStage 1\n               :  :                                         +- Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n               :  :                                            +- *(2) Filter isnotnull(c_customer_sk#52)\n               :  :                                               +- *(2) ColumnarToRow\n               :  :                                                  +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#52,c_first_name#60,c_last_name#61] Batched: true, DataFilters: [isnotnull(c_customer_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n               :  +- *(23) Sort [coalesce(c_last_name#282, ) ASC NULLS FIRST, isnull(c_last_name#282) ASC NULLS FIRST, coalesce(c_first_name#281, ) ASC NULLS FIRST, isnull(c_first_name#281) ASC NULLS FIRST, coalesce(d_date#247, 1970-01-01) ASC NULLS FIRST, isnull(d_date#247) ASC NULLS FIRST], false, 0\n               :     +- AQEShuffleRead coalesced\n               :        +- ShuffleQueryStage 17\n               :           +- Exchange hashpartitioning(coalesce(c_last_name#282, ), isnull(c_last_name#282), coalesce(c_first_name#281, ), isnull(c_first_name#281), coalesce(d_date#247, 1970-01-01), isnull(d_date#247), 200), ENSURE_REQUIREMENTS, [plan_id=1889]\n               :              +- *(20) HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n               :                 +- AQEShuffleRead coalesced\n               :                    +- ShuffleQueryStage 13\n               :                       +- Exchange hashpartitioning(c_last_name#282, c_first_name#281, d_date#247, 200), ENSURE_REQUIREMENTS, [plan_id=1438]\n               :                          +- *(12) HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n               :                             +- *(12) Project [c_last_name#282, c_first_name#281, d_date#247]\n               :                                +- *(12) SortMergeJoin [cs_bill_customer_sk#72], [c_customer_sk#273], Inner\n               :                                   :- *(10) Sort [cs_bill_customer_sk#72 ASC NULLS FIRST], false, 0\n               :                                   :  +- AQEShuffleRead coalesced\n               :                                   :     +- ShuffleQueryStage 11\n               :                                   :        +- Exchange hashpartitioning(cs_bill_customer_sk#72, 200), ENSURE_REQUIREMENTS, [plan_id=951]\n               :                                   :           +- *(8) Project [cs_bill_customer_sk#72, d_date#247]\n               :                                   :              +- *(8) BroadcastHashJoin [cs_sold_date_sk#103], [d_date_sk#245], Inner, BuildRight, false\n               :                                   :                 :- *(8) Filter isnotnull(cs_bill_customer_sk#72)\n               :                                   :                 :  +- *(8) ColumnarToRow\n               :                                   :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#72,cs_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#72)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#103), dynamicpruningexpression(cs_sold_date_sk#103 IN dynamicpruning#3..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int>\n               :                                   :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n               :                                   :                 +- BroadcastQueryStage 3\n               :                                   :                    +- ReusedExchange [d_date_sk#245, d_date#247], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n               :                                   +- *(11) Sort [c_customer_sk#273 ASC NULLS FIRST], false, 0\n               :                                      +- AQEShuffleRead coalesced\n               :                                         +- ShuffleQueryStage 5\n               :                                            +- ReusedExchange [c_customer_sk#273, c_first_name#281, c_last_name#282], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n               +- *(25) Sort [coalesce(c_last_name#328, ) ASC NULLS FIRST, isnull(c_last_name#328) ASC NULLS FIRST, coalesce(c_first_name#327, ) ASC NULLS FIRST, isnull(c_first_name#327) ASC NULLS FIRST, coalesce(d_date#293, 1970-01-01) ASC NULLS FIRST, isnull(d_date#293) ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 16\n                        +- Exchange hashpartitioning(coalesce(c_last_name#328, ), isnull(c_last_name#328), coalesce(c_first_name#327, ), isnull(c_first_name#327), coalesce(d_date#293, 1970-01-01), isnull(d_date#293), 200), ENSURE_REQUIREMENTS, [plan_id=1792]\n                           +- *(19) HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n                              +- AQEShuffleRead coalesced\n                                 +- ShuffleQueryStage 14\n                                    +- Exchange hashpartitioning(c_last_name#328, c_first_name#327, d_date#293, 200), ENSURE_REQUIREMENTS, [plan_id=1584]\n                                       +- *(15) HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n                                          +- *(15) Project [c_last_name#328, c_first_name#327, d_date#293]\n                                             +- *(15) SortMergeJoin [ws_bill_customer_sk#107], [c_customer_sk#319], Inner\n                                                :- *(13) Sort [ws_bill_customer_sk#107 ASC NULLS FIRST], false, 0\n                                                :  +- AQEShuffleRead coalesced\n                                                :     +- ShuffleQueryStage 12\n                                                :        +- Exchange hashpartitioning(ws_bill_customer_sk#107, 200), ENSURE_REQUIREMENTS, [plan_id=1008]\n                                                :           +- *(9) Project [ws_bill_customer_sk#107, d_date#293]\n                                                :              +- *(9) BroadcastHashJoin [ws_sold_date_sk#137], [d_date_sk#291], Inner, BuildRight, false\n                                                :                 :- *(9) Filter isnotnull(ws_bill_customer_sk#107)\n                                                :                 :  +- *(9) ColumnarToRow\n                                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#107,ws_sold_date_sk#137] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#3..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int>\n                                                :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n                                                :                 +- BroadcastQueryStage 7\n                                                :                    +- ReusedExchange [d_date_sk#291, d_date#293], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n                                                +- *(14) Sort [c_customer_sk#319 ASC NULLS FIRST], false, 0\n                                                   +- AQEShuffleRead coalesced\n                                                      +- ShuffleQueryStage 9\n                                                         +- ReusedExchange [c_customer_sk#319, c_first_name#327, c_last_name#328], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 64,
        "inputRowCount" : 4
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "10" : [ 240 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 47 ],
      "Objectives" : {
        "DurationInMs" : 110,
        "TotalTasksDurationInMs" : 104,
        "IOBytes" : {
          "Total" : 236,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 236,
            "SW" : 0
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -170659794,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 56222200,
                "rowCount" : 1157740
              },
              "compileTime" : {
                "sizeInBytes" : 3544756824,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293], HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1823571858,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 56222200,
            "rowCount" : 1157740,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_last_name#328, c_first_name#327, d_date#293] Keys [3]: [c_last_name#328, c_first_name#327, d_date#293] Functions: [] Aggregate Attributes: [] Results [3]: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "1" : {
            "sign" : -936529167,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3544756824,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_last_name#328, c_first_name#327, d_date#293] Arguments: 14 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n+- ShuffleQueryStage 14\n   +- Exchange hashpartitioning(c_last_name#328, c_first_name#327, d_date#293, 200), ENSURE_REQUIREMENTS, [plan_id=1584]\n      +- *(15) HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n         +- *(15) Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- *(15) SortMergeJoin [ws_bill_customer_sk#107], [c_customer_sk#319], Inner\n               :- *(13) Sort [ws_bill_customer_sk#107 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 12\n               :        +- Exchange hashpartitioning(ws_bill_customer_sk#107, 200), ENSURE_REQUIREMENTS, [plan_id=1008]\n               :           +- *(9) Project [ws_bill_customer_sk#107, d_date#293]\n               :              +- *(9) BroadcastHashJoin [ws_sold_date_sk#137], [d_date_sk#291], Inner, BuildRight, false\n               :                 :- *(9) Filter isnotnull(ws_bill_customer_sk#107)\n               :                 :  +- *(9) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#107,ws_sold_date_sk#137] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#3..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int>\n               :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n               :                 +- BroadcastQueryStage 7\n               :                    +- ReusedExchange [d_date_sk#291, d_date#293], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n               +- *(14) Sort [c_customer_sk#319 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 9\n                        +- ReusedExchange [c_customer_sk#319, c_first_name#327, c_last_name#328], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 56222200,
        "inputRowCount" : 1157740
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 155736, 155736, 142163, 155736, 155736, 156379, 155736, 155152, 155736, 156379, 155152, 155736, 155152, 155736, 156379, 155736, 157086, 155736, 155736, 142806, 155736, 156379, 155736, 155736, 155736, 156379, 155736, 155736, 156379, 156379, 155736, 155736, 142806, 142163, 155736, 156379, 155736, 155736, 156379, 156379, 155152, 155736, 155152, 155152, 155736, 155736, 155736, 155736, 142806, 155736, 155736, 155736, 156379, 156379, 156379, 156379, 156379, 155152, 155736, 156379, 156379, 155736, 156379, 156379, 155152, 155152, 157086, 155736, 157086, 141579, 156379, 156379, 155736, 156379, 155736, 156379, 155152, 155736, 155736, 155152, 155736, 156379, 156379, 155736, 155736, 156379, 155736, 142163, 155736, 156379, 157086, 155736, 156379, 155736, 155736, 155152, 156379, 155736, 156379, 142163, 155152, 155152, 155736, 142163, 156379, 155736, 142163, 155736, 155736, 142163, 156379, 155736, 155152, 155736, 155736, 155736, 155152, 156379, 156379, 155152, 156379, 156379, 156379, 156379, 155152, 156379, 156379, 155152, 155736, 156379, 155736, 155152, 155736, 155736, 142163, 155736, 155736, 156379, 142163, 155736, 155736, 142163, 142163, 156379, 155736, 155152, 156379, 143513, 141579, 155736, 155736, 156379, 156379, 156379, 155736, 156379, 155736, 155736, 142163, 156379, 155736, 141579, 142163, 155736, 156379, 156379, 156379, 155736, 142806, 156379, 155736, 155736, 155736, 141579, 155736, 142163, 156379, 155736, 155152, 155736, 155736, 155152, 155152, 155736, 142806, 155736, 155736, 155736, 155736, 156379, 155736, 155736, 156379, 155736, 155736, 155152, 142163, 156379, 155736, 156379 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 5325.0,
        "FinishedTasksDistributionInMs" : [ 5325.0, 5325.0, 5325.0, 5325.0, 5325.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 3478,
        "TotalTasksDurationInMs" : 3466,
        "IOBytes" : {
          "Total" : 57654613,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 28851453,
            "SW" : 28803160
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 827769952,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#104, ws_ship_date_sk#105, ws_item_sk#106, ws_bill_customer_sk#107, ws_bill_cdemo_sk#108, ws_bill_hdemo_sk#109, ws_bill_addr_sk#110, ws_ship_customer_sk#111, ws_ship_cdemo_sk#112, ws_ship_hdemo_sk#113, ws_ship_addr_sk#114, ws_web_page_sk#115, ws_web_site_sk#116, ws_ship_mode_sk#117, ws_warehouse_sk#118, ws_promo_sk#119, ws_order_number#120L, ws_quantity#121, ws_wholesale_cost#122, ws_list_price#123, ws_sales_price#124, ws_ext_discount_amt#125, ws_ext_sales_price#126, ws_ext_wholesale_cost#127, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 674521814,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#137 = d_date_sk#291) "
          },
          "0" : {
            "sign" : 2141170188,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1111929680,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1111929680,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#107, d_date#293] "
          },
          "2" : {
            "sign" : 2026740592,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1151449616,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 1151449616,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#107, ws_sold_date_sk#137] "
          },
          "3" : {
            "sign" : -1412882177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              },
              "compileTime" : {
                "sizeInBytes" : 14968845008,
                "rowCount" : 71965601
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#345 [ws_sold_date_sk#137]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#107, d_date#293]\n+- Join Inner, (ws_sold_date_sk#137 = d_date_sk#291)\n   :- Project [ws_bill_customer_sk#107, ws_sold_date_sk#137]\n   :  +- Filter ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#345 [ws_sold_date_sk#137])\n   :     :  +- Project [d_date_sk#291, d_date#293]\n   :     :     +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#104,ws_ship_date_sk#105,ws_item_sk#106,ws_bill_customer_sk#107,ws_bill_cdemo_sk#108,ws_bill_hdemo_sk#109,ws_bill_addr_sk#110,ws_ship_customer_sk#111,ws_ship_cdemo_sk#112,ws_ship_hdemo_sk#113,ws_ship_addr_sk#114,ws_web_page_sk#115,ws_web_site_sk#116,ws_ship_mode_sk#117,ws_warehouse_sk#118,ws_promo_sk#119,ws_order_number#120L,ws_quantity#121,ws_wholesale_cost#122,ws_list_price#123,ws_sales_price#124,ws_ext_discount_amt#125,ws_ext_sales_price#126,ws_ext_wholesale_cost#127,... 10 more fields] parquet\n   +- Project [d_date_sk#291, d_date#293]\n      +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 865504725,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#291, d_date#293] Arguments: 7 "
          },
          "1" : {
            "sign" : 1205181321,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#137] Right keys [1]: [d_date_sk#291] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -156086113,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1111929680,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_bill_customer_sk#107, d_date#293] Input [4]: [ws_bill_customer_sk#107, ws_sold_date_sk#137, d_date_sk#291, d_date#293] "
          },
          "2" : {
            "sign" : -2101662301,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1151449616,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ws_bill_customer_sk#107, ws_sold_date_sk#137] Condition : isnotnull(ws_bill_customer_sk#107) "
          },
          "3" : {
            "sign" : -2056277185,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1151449616,
            "rowCount" : 71965601,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [2]: [ws_bill_customer_sk#107, ws_sold_date_sk#137] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#343)] PushedFilters: [IsNotNull(ws_bill_customer_sk)] ReadSchema: struct<ws_bill_customer_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#107, d_date#293]\n+- BroadcastHashJoin [ws_sold_date_sk#137], [d_date_sk#291], Inner, BuildRight, false\n   :- Filter isnotnull(ws_bill_customer_sk#107)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#107,ws_sold_date_sk#137] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#3..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n   +- BroadcastQueryStage 7\n      +- ReusedExchange [d_date_sk#291, d_date#293], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1152501112,
        "inputRowCount" : 71965966
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 16565.0,
        "FinishedTasksDistributionInMs" : [ 1163.0, 1240.0, 1250.0, 1310.0, 1398.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 11511,
        "TotalTasksDurationInMs" : 7582,
        "IOBytes" : {
          "Total" : 29596269,
          "Details" : {
            "IR" : 13762823,
            "IW" : 0,
            "SR" : 0,
            "SW" : 15833446
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 59568595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 16,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [count(1) AS count(1)#337L] "
          },
          "1" : {
            "sign" : 689194084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2200351608,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 2200351608,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project "
          },
          "2" : {
            "sign" : 81714949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293)) "
          },
          "3" : {
            "sign" : 1677923642,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247)) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [count(1) AS count(1)#337L]\n+- Project\n   +- Join LeftSemi, (((c_last_name#61 <=> c_last_name#328) AND (c_first_name#60 <=> c_first_name#327)) AND (d_date#26 <=> d_date#293))\n      :- Join LeftSemi, (((c_last_name#61 <=> c_last_name#282) AND (c_first_name#60 <=> c_first_name#281)) AND (d_date#26 <=> d_date#247))\n      :  :- Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n      :  :  +- Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :     +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :  :        :- Project [ss_customer_sk#3, d_date#26]\n      :  :        :  +- Join Inner, (ss_sold_date_sk#23 = d_date_sk#24)\n      :  :        :     :- Project [ss_customer_sk#3, ss_sold_date_sk#23]\n      :  :        :     :  +- Filter ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#343 [ss_sold_date_sk#23])\n      :  :        :     :     :  +- Project [d_date_sk#24, d_date#26]\n      :  :        :     :     :     +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :  :        :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      :  :        :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9L,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22,ss_sold_date_sk#23] parquet\n      :  :        :     +- Project [d_date_sk#24, d_date#26]\n      :  :        :        +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :  :        :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      :  :        +- Project [c_customer_sk#52, c_first_name#60, c_last_name#61]\n      :  :           +- Filter isnotnull(c_customer_sk#52)\n      :  :              +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#52,c_customer_id#53,c_current_cdemo_sk#54,c_current_hdemo_sk#55,c_current_addr_sk#56,c_first_shipto_date_sk#57,c_first_sales_date_sk#58,c_salutation#59,c_first_name#60,c_last_name#61,c_preferred_cust_flag#62,c_birth_day#63,c_birth_month#64,c_birth_year#65,c_birth_country#66,c_login#67,c_email_address#68,c_last_review_date#69] parquet\n      :  +- Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247]\n      :     +- Project [c_last_name#282, c_first_name#281, d_date#247]\n      :        +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#273)\n      :           :- Project [cs_bill_customer_sk#72, d_date#247]\n      :           :  +- Join Inner, (cs_sold_date_sk#103 = d_date_sk#245)\n      :           :     :- Project [cs_bill_customer_sk#72, cs_sold_date_sk#103]\n      :           :     :  +- Filter ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#344 [cs_sold_date_sk#103])\n      :           :     :     :  +- Project [d_date_sk#245, d_date#247]\n      :           :     :     :     +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n      :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n      :           :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#70,cs_ship_date_sk#71,cs_bill_customer_sk#72,cs_bill_cdemo_sk#73,cs_bill_hdemo_sk#74,cs_bill_addr_sk#75,cs_ship_customer_sk#76,cs_ship_cdemo_sk#77,cs_ship_hdemo_sk#78,cs_ship_addr_sk#79,cs_call_center_sk#80,cs_catalog_page_sk#81,cs_ship_mode_sk#82,cs_warehouse_sk#83,cs_item_sk#84,cs_promo_sk#85,cs_order_number#86L,cs_quantity#87,cs_wholesale_cost#88,cs_list_price#89,cs_sales_price#90,cs_ext_discount_amt#91,cs_ext_sales_price#92,cs_ext_wholesale_cost#93,... 10 more fields] parquet\n      :           :     +- Project [d_date_sk#245, d_date#247]\n      :           :        +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n      :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n      :           +- Project [c_customer_sk#273, c_first_name#281, c_last_name#282]\n      :              +- Filter isnotnull(c_customer_sk#273)\n      :                 +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#273,c_customer_id#274,c_current_cdemo_sk#275,c_current_hdemo_sk#276,c_current_addr_sk#277,c_first_shipto_date_sk#278,c_first_sales_date_sk#279,c_salutation#280,c_first_name#281,c_last_name#282,c_preferred_cust_flag#283,c_birth_day#284,c_birth_month#285,c_birth_year#286,c_birth_country#287,c_login#288,c_email_address#289,c_last_review_date#290] parquet\n      +- Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n         +- Project [c_last_name#328, c_first_name#327, d_date#293]\n            +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n               :- Project [ws_bill_customer_sk#107, d_date#293]\n               :  +- Join Inner, (ws_sold_date_sk#137 = d_date_sk#291)\n               :     :- Project [ws_bill_customer_sk#107, ws_sold_date_sk#137]\n               :     :  +- Filter ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#345 [ws_sold_date_sk#137])\n               :     :     :  +- Project [d_date_sk#291, d_date#293]\n               :     :     :     +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n               :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n               :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#104,ws_ship_date_sk#105,ws_item_sk#106,ws_bill_customer_sk#107,ws_bill_cdemo_sk#108,ws_bill_hdemo_sk#109,ws_bill_addr_sk#110,ws_ship_customer_sk#111,ws_ship_cdemo_sk#112,ws_ship_hdemo_sk#113,ws_ship_addr_sk#114,ws_web_page_sk#115,ws_web_site_sk#116,ws_ship_mode_sk#117,ws_warehouse_sk#118,ws_promo_sk#119,ws_order_number#120L,ws_quantity#121,ws_wholesale_cost#122,ws_list_price#123,ws_sales_price#124,ws_ext_discount_amt#125,ws_ext_sales_price#126,ws_ext_wholesale_cost#127,... 10 more fields] parquet\n               :     +- Project [d_date_sk#291, d_date#293]\n               :        +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n               :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n               +- Project [c_customer_sk#319, c_first_name#327, c_last_name#328]\n                  +- Filter isnotnull(c_customer_sk#319)\n                     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#319,c_customer_id#320,c_current_cdemo_sk#321,c_current_hdemo_sk#322,c_current_addr_sk#323,c_first_shipto_date_sk#324,c_first_sales_date_sk#325,c_salutation#326,c_first_name#327,c_last_name#328,c_preferred_cust_flag#329,c_birth_day#330,c_birth_month#331,c_birth_year#332,c_birth_country#333,c_login#334,c_email_address#335,c_last_review_date#336] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 2069455753,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_last_name#328, c_first_name#327, d_date#293] Arguments: [coalesce(c_last_name#328, ) ASC NULLS FIRST, isnull(c_last_name#328) ASC NULLS FIRST, coalesce(c_first_name#327, ) ASC NULLS FIRST, isnull(c_first_name#327) ASC NULLS FIRST, coalesce(d_date#293, 1970-01-01) ASC NULLS FIRST, isnull(d_date#293) ASC NULLS FIRST], false, 0 "
          },
          "4" : {
            "sign" : -480537370,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_last_name#61, c_first_name#60, d_date#26] Arguments: [coalesce(c_last_name#61, ) ASC NULLS FIRST, isnull(c_last_name#61) ASC NULLS FIRST, coalesce(c_first_name#60, ) ASC NULLS FIRST, isnull(c_first_name#60) ASC NULLS FIRST, coalesce(d_date#26, 1970-01-01) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : -1051923877,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 56157920,
            "rowCount" : 1156281,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_last_name#328, c_first_name#327, d_date#293] Arguments: 16 "
          },
          "5" : {
            "sign" : -1937857346,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 217419672,
            "rowCount" : 4472498,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_last_name#61, c_first_name#60, d_date#26] Arguments: 18 "
          },
          "6" : {
            "sign" : -1192295136,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_last_name#282, c_first_name#281, d_date#247] Arguments: [coalesce(c_last_name#282, ) ASC NULLS FIRST, isnull(c_last_name#282) ASC NULLS FIRST, coalesce(c_first_name#281, ) ASC NULLS FIRST, isnull(c_first_name#281) ASC NULLS FIRST, coalesce(d_date#247, 1970-01-01) ASC NULLS FIRST, isnull(d_date#247) ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -903927002,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2200351608,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output: [] Input [3]: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "0" : {
            "sign" : -494208922,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input: [] Keys: [] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#346L] Results [1]: [count#347L] "
          },
          "2" : {
            "sign" : 79832463,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [6]: [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)] Right keys [6]: [coalesce(c_last_name#328, ), isnull(c_last_name#328), coalesce(c_first_name#327, ), isnull(c_first_name#327), coalesce(d_date#293, 1970-01-01), isnull(d_date#293)] Join type: LeftSemi Join condition: None "
          },
          "7" : {
            "sign" : -714002084,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 146885072,
            "rowCount" : 3022291,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_last_name#282, c_first_name#281, d_date#247] Arguments: 17 "
          },
          "3" : {
            "sign" : 1442115642,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [6]: [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)] Right keys [6]: [coalesce(c_last_name#282, ), isnull(c_last_name#282), coalesce(c_first_name#281, ), isnull(c_first_name#281), coalesce(d_date#247, 1970-01-01), isnull(d_date#247)] Join type: LeftSemi Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 3,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "SortMergeJoin",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "ShuffleQueryStage",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[], functions=[partial_count(1)], output=[count#347L])\n+- Project\n   +- SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#328, ), isnull(c_last_name#328), coalesce(c_first_name#327, ), isnull(c_first_name#327), coalesce(d_date#293, 1970-01-01), isnull(d_date#293)], LeftSemi\n      :- SortMergeJoin [coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#282, ), isnull(c_last_name#282), coalesce(c_first_name#281, ), isnull(c_first_name#281), coalesce(d_date#247, 1970-01-01), isnull(d_date#247)], LeftSemi\n      :  :- Sort [coalesce(c_last_name#61, ) ASC NULLS FIRST, isnull(c_last_name#61) ASC NULLS FIRST, coalesce(c_first_name#60, ) ASC NULLS FIRST, isnull(c_first_name#60) ASC NULLS FIRST, coalesce(d_date#26, 1970-01-01) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0\n      :  :  +- ShuffleQueryStage 18\n      :  :     +- Exchange hashpartitioning(coalesce(c_last_name#61, ), isnull(c_last_name#61), coalesce(c_first_name#60, ), isnull(c_first_name#60), coalesce(d_date#26, 1970-01-01), isnull(d_date#26), 200), ENSURE_REQUIREMENTS, [plan_id=1987]\n      :  :        +- *(21) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n      :  :           +- AQEShuffleRead coalesced\n      :  :              +- ShuffleQueryStage 15\n      :  :                 +- Exchange hashpartitioning(c_last_name#61, c_first_name#60, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=1705]\n      :  :                    +- *(18) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n      :  :                       +- *(18) Project [c_last_name#61, c_first_name#60, d_date#26]\n      :  :                          +- *(18) SortMergeJoin [ss_customer_sk#3], [c_customer_sk#52], Inner\n      :  :                             :- *(16) Sort [ss_customer_sk#3 ASC NULLS FIRST], false, 0\n      :  :                             :  +- AQEShuffleRead coalesced\n      :  :                             :     +- ShuffleQueryStage 10\n      :  :                             :        +- Exchange hashpartitioning(ss_customer_sk#3, 200), ENSURE_REQUIREMENTS, [plan_id=895]\n      :  :                             :           +- *(7) Project [ss_customer_sk#3, d_date#26]\n      :  :                             :              +- *(7) BroadcastHashJoin [ss_sold_date_sk#23], [d_date_sk#24], Inner, BuildRight, false\n      :  :                             :                 :- *(7) Filter isnotnull(ss_customer_sk#3)\n      :  :                             :                 :  +- *(7) ColumnarToRow\n      :  :                             :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#3,ss_sold_date_sk#23] Batched: true, DataFilters: [isnotnull(ss_customer_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#343)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int>\n      :  :                             :                 :           +- SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n      :  :                             :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                           +- == Final Plan ==\n                                                                              BroadcastQueryStage 1\n                                                                              +- ReusedExchange [d_date_sk#24, d_date#26], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n                                                                           +- == Initial Plan ==\n                                                                              BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=866]\n                                                                              +- Project [d_date_sk#24, d_date#26]\n                                                                                 +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n      :  :                             :                 +- BroadcastQueryStage 0\n      :  :                             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n      :  :                             :                       +- *(1) Project [d_date_sk#24, d_date#26]\n      :  :                             :                          +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n      :  :                             :                             +- *(1) ColumnarToRow\n      :  :                             :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n      :  :                             +- *(17) Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0\n      :  :                                +- AQEShuffleRead coalesced\n      :  :                                   +- ShuffleQueryStage 1\n      :  :                                      +- Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n      :  :                                         +- *(2) Filter isnotnull(c_customer_sk#52)\n      :  :                                            +- *(2) ColumnarToRow\n      :  :                                               +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#52,c_first_name#60,c_last_name#61] Batched: true, DataFilters: [isnotnull(c_customer_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n      :  +- Sort [coalesce(c_last_name#282, ) ASC NULLS FIRST, isnull(c_last_name#282) ASC NULLS FIRST, coalesce(c_first_name#281, ) ASC NULLS FIRST, isnull(c_first_name#281) ASC NULLS FIRST, coalesce(d_date#247, 1970-01-01) ASC NULLS FIRST, isnull(d_date#247) ASC NULLS FIRST], false, 0\n      :     +- ShuffleQueryStage 17\n      :        +- Exchange hashpartitioning(coalesce(c_last_name#282, ), isnull(c_last_name#282), coalesce(c_first_name#281, ), isnull(c_first_name#281), coalesce(d_date#247, 1970-01-01), isnull(d_date#247), 200), ENSURE_REQUIREMENTS, [plan_id=1889]\n      :           +- *(20) HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n      :              +- AQEShuffleRead coalesced\n      :                 +- ShuffleQueryStage 13\n      :                    +- Exchange hashpartitioning(c_last_name#282, c_first_name#281, d_date#247, 200), ENSURE_REQUIREMENTS, [plan_id=1438]\n      :                       +- *(12) HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n      :                          +- *(12) Project [c_last_name#282, c_first_name#281, d_date#247]\n      :                             +- *(12) SortMergeJoin [cs_bill_customer_sk#72], [c_customer_sk#273], Inner\n      :                                :- *(10) Sort [cs_bill_customer_sk#72 ASC NULLS FIRST], false, 0\n      :                                :  +- AQEShuffleRead coalesced\n      :                                :     +- ShuffleQueryStage 11\n      :                                :        +- Exchange hashpartitioning(cs_bill_customer_sk#72, 200), ENSURE_REQUIREMENTS, [plan_id=951]\n      :                                :           +- *(8) Project [cs_bill_customer_sk#72, d_date#247]\n      :                                :              +- *(8) BroadcastHashJoin [cs_sold_date_sk#103], [d_date_sk#245], Inner, BuildRight, false\n      :                                :                 :- *(8) Filter isnotnull(cs_bill_customer_sk#72)\n      :                                :                 :  +- *(8) ColumnarToRow\n      :                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#72,cs_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#72)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#103), dynamicpruningexpression(cs_sold_date_sk#103 IN dynamicpruning#3..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int>\n      :                                :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n      :                                :                 +- BroadcastQueryStage 3\n      :                                :                    +- ReusedExchange [d_date_sk#245, d_date#247], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n      :                                +- *(11) Sort [c_customer_sk#273 ASC NULLS FIRST], false, 0\n      :                                   +- AQEShuffleRead coalesced\n      :                                      +- ShuffleQueryStage 5\n      :                                         +- ReusedExchange [c_customer_sk#273, c_first_name#281, c_last_name#282], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n      +- Sort [coalesce(c_last_name#328, ) ASC NULLS FIRST, isnull(c_last_name#328) ASC NULLS FIRST, coalesce(c_first_name#327, ) ASC NULLS FIRST, isnull(c_first_name#327) ASC NULLS FIRST, coalesce(d_date#293, 1970-01-01) ASC NULLS FIRST, isnull(d_date#293) ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 16\n            +- Exchange hashpartitioning(coalesce(c_last_name#328, ), isnull(c_last_name#328), coalesce(c_first_name#327, ), isnull(c_first_name#327), coalesce(d_date#293, 1970-01-01), isnull(d_date#293), 200), ENSURE_REQUIREMENTS, [plan_id=1792]\n               +- *(19) HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 14\n                        +- Exchange hashpartitioning(c_last_name#328, c_first_name#327, d_date#293, 200), ENSURE_REQUIREMENTS, [plan_id=1584]\n                           +- *(15) HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n                              +- *(15) Project [c_last_name#328, c_first_name#327, d_date#293]\n                                 +- *(15) SortMergeJoin [ws_bill_customer_sk#107], [c_customer_sk#319], Inner\n                                    :- *(13) Sort [ws_bill_customer_sk#107 ASC NULLS FIRST], false, 0\n                                    :  +- AQEShuffleRead coalesced\n                                    :     +- ShuffleQueryStage 12\n                                    :        +- Exchange hashpartitioning(ws_bill_customer_sk#107, 200), ENSURE_REQUIREMENTS, [plan_id=1008]\n                                    :           +- *(9) Project [ws_bill_customer_sk#107, d_date#293]\n                                    :              +- *(9) BroadcastHashJoin [ws_sold_date_sk#137], [d_date_sk#291], Inner, BuildRight, false\n                                    :                 :- *(9) Filter isnotnull(ws_bill_customer_sk#107)\n                                    :                 :  +- *(9) ColumnarToRow\n                                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#107,ws_sold_date_sk#137] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#3..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int>\n                                    :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n                                    :                 +- BroadcastQueryStage 7\n                                    :                    +- ReusedExchange [d_date_sk#291, d_date#293], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n                                    +- *(14) Sort [c_customer_sk#319 ASC NULLS FIRST], false, 0\n                                       +- AQEShuffleRead coalesced\n                                          +- ShuffleQueryStage 9\n                                             +- ReusedExchange [c_customer_sk#319, c_first_name#327, c_last_name#328], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 420462664,
        "inputRowCount" : 8651070
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "8" : [ 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 421715, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 389709, 383377, 383377, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 389709, 383377, 383377, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 389709, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 383377, 383377, 389709, 389709, 389709, 389709, 383377, 389709, 389709, 389709, 383377, 389709, 383377, 389709, 389709, 383377, 389709, 383377, 389709, 389709 ],
        "7" : [ 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 164239, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308, 149308 ],
        "9" : [ 560519, 560519, 584565, 560519, 584565, 560519, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 560519, 616571, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 560519, 560519, 592525, 584565, 560519, 584565, 560519, 560519, 560519, 584565, 560519, 584565, 584565, 560519, 592525, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 560519, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 560519, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 560519, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 616571, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 560519, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 584565, 616571, 560519, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 560519, 584565, 584565, 584565, 584565, 584565, 616571, 584565, 584565, 584565, 584565, 584565 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 35 ],
      "Objectives" : {
        "DurationInMs" : 5942,
        "TotalTasksDurationInMs" : 18809,
        "IOBytes" : {
          "Total" : 215911869,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 215911633,
            "SW" : 236
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -669882721,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 148534304,
                "rowCount" : 3057350
              },
              "compileTime" : {
                "sizeInBytes" : 7006162002,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247], HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1169564377,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 148534304,
            "rowCount" : 3057350,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_last_name#282, c_first_name#281, d_date#247] Keys [3]: [c_last_name#282, c_first_name#281, d_date#247] Functions: [] Aggregate Attributes: [] Results [3]: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "1" : {
            "sign" : 2012501352,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_last_name#282, c_first_name#281, d_date#247] Arguments: 13 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n+- ShuffleQueryStage 13\n   +- Exchange hashpartitioning(c_last_name#282, c_first_name#281, d_date#247, 200), ENSURE_REQUIREMENTS, [plan_id=1438]\n      +- *(12) HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n         +- *(12) Project [c_last_name#282, c_first_name#281, d_date#247]\n            +- *(12) SortMergeJoin [cs_bill_customer_sk#72], [c_customer_sk#273], Inner\n               :- *(10) Sort [cs_bill_customer_sk#72 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 11\n               :        +- Exchange hashpartitioning(cs_bill_customer_sk#72, 200), ENSURE_REQUIREMENTS, [plan_id=951]\n               :           +- *(8) Project [cs_bill_customer_sk#72, d_date#247]\n               :              +- *(8) BroadcastHashJoin [cs_sold_date_sk#103], [d_date_sk#245], Inner, BuildRight, false\n               :                 :- *(8) Filter isnotnull(cs_bill_customer_sk#72)\n               :                 :  +- *(8) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#72,cs_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#72)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#103), dynamicpruningexpression(cs_sold_date_sk#103 IN dynamicpruning#3..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int>\n               :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n               :                 +- BroadcastQueryStage 3\n               :                    +- ReusedExchange [d_date_sk#245, d_date#247], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n               +- *(11) Sort [c_customer_sk#273 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 5\n                        +- ReusedExchange [c_customer_sk#273, c_first_name#281, c_last_name#282], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 148534304,
        "inputRowCount" : 3057350
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 414355, 403137, 403137, 414355, 403137, 414355, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137, 403137 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 3357,
        "TotalTasksDurationInMs" : 4324,
        "IOBytes" : {
          "Total" : 151435210,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 76029636,
            "SW" : 75405574
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1543161568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7006162002,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 7006162002,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "1" : {
            "sign" : 1067439625,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7006162002,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 7006162002,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "2" : {
            "sign" : 783240678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8150025186,
                "rowCount" : 142982898
              },
              "compileTime" : {
                "sizeInBytes" : 8150025186,
                "rowCount" : 142982898
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#72 = c_customer_sk#273) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_last_name#282, c_first_name#281, d_date#247], [c_last_name#282, c_first_name#281, d_date#247]\n+- Project [c_last_name#282, c_first_name#281, d_date#247]\n   +- Join Inner, (cs_bill_customer_sk#72 = c_customer_sk#273)\n      :- Project [cs_bill_customer_sk#72, d_date#247]\n      :  +- Join Inner, (cs_sold_date_sk#103 = d_date_sk#245)\n      :     :- Project [cs_bill_customer_sk#72, cs_sold_date_sk#103]\n      :     :  +- Filter ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#344 [cs_sold_date_sk#103])\n      :     :     :  +- Project [d_date_sk#245, d_date#247]\n      :     :     :     +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#70,cs_ship_date_sk#71,cs_bill_customer_sk#72,cs_bill_cdemo_sk#73,cs_bill_hdemo_sk#74,cs_bill_addr_sk#75,cs_ship_customer_sk#76,cs_ship_cdemo_sk#77,cs_ship_hdemo_sk#78,cs_ship_addr_sk#79,cs_call_center_sk#80,cs_catalog_page_sk#81,cs_ship_mode_sk#82,cs_warehouse_sk#83,cs_item_sk#84,cs_promo_sk#85,cs_order_number#86L,cs_quantity#87,cs_wholesale_cost#88,cs_list_price#89,cs_sales_price#90,cs_ext_discount_amt#91,cs_ext_sales_price#92,cs_ext_wholesale_cost#93,... 10 more fields] parquet\n      :     +- Project [d_date_sk#245, d_date#247]\n      :        +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n      +- Project [c_customer_sk#273, c_first_name#281, c_last_name#282]\n         +- Filter isnotnull(c_customer_sk#273)\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#273,c_customer_id#274,c_current_cdemo_sk#275,c_current_hdemo_sk#276,c_current_addr_sk#277,c_first_shipto_date_sk#278,c_first_sales_date_sk#279,c_salutation#280,c_first_name#281,c_last_name#282,c_preferred_cust_flag#283,c_birth_day#284,c_birth_month#285,c_birth_year#286,c_birth_country#287,c_login#288,c_email_address#289,c_last_review_date#290] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 24185960,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 682580544,
            "rowCount" : 28440856,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [cs_bill_customer_sk#72, d_date#247] Arguments: 11 "
          },
          "5" : {
            "sign" : -1934053808,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#273, c_first_name#281, c_last_name#282] Arguments: [c_customer_sk#273 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1771956030,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#273, c_first_name#281, c_last_name#282] Arguments: 5 "
          },
          "1" : {
            "sign" : -180587214,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [c_last_name#282, c_first_name#281, d_date#247] Input [5]: [cs_bill_customer_sk#72, d_date#247, c_customer_sk#273, c_first_name#281, c_last_name#282] "
          },
          "0" : {
            "sign" : -815015027,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 7006162002,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_last_name#282, c_first_name#281, d_date#247] Keys [3]: [c_last_name#282, c_first_name#281, d_date#247] Functions: [] Aggregate Attributes: [] Results [3]: [c_last_name#282, c_first_name#281, d_date#247] "
          },
          "2" : {
            "sign" : -465784799,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 8150025186,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cs_bill_customer_sk#72] Right keys [1]: [c_customer_sk#273] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -453720330,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [cs_bill_customer_sk#72, d_date#247] Arguments: [cs_bill_customer_sk#72 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#282, c_first_name#281, d_date#247], functions=[], output=[c_last_name#282, c_first_name#281, d_date#247])\n+- Project [c_last_name#282, c_first_name#281, d_date#247]\n   +- SortMergeJoin [cs_bill_customer_sk#72], [c_customer_sk#273], Inner\n      :- Sort [cs_bill_customer_sk#72 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 11\n      :     +- Exchange hashpartitioning(cs_bill_customer_sk#72, 200), ENSURE_REQUIREMENTS, [plan_id=951]\n      :        +- *(8) Project [cs_bill_customer_sk#72, d_date#247]\n      :           +- *(8) BroadcastHashJoin [cs_sold_date_sk#103], [d_date_sk#245], Inner, BuildRight, false\n      :              :- *(8) Filter isnotnull(cs_bill_customer_sk#72)\n      :              :  +- *(8) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#72,cs_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#72)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#103), dynamicpruningexpression(cs_sold_date_sk#103 IN dynamicpruning#3..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n      :              +- BroadcastQueryStage 3\n      :                 +- ReusedExchange [d_date_sk#245, d_date#247], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n      +- Sort [c_customer_sk#273 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 5\n            +- ReusedExchange [c_customer_sk#273, c_first_name#281, c_last_name#282], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 779108392,
        "inputRowCount" : 30440856
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 206660, 202612, 201562, 202796, 200201, 203936, 200843, 201711, 203722, 201640, 208352, 201245, 203314, 200681, 199317, 201847, 198891, 206192, 203559, 202471, 200973, 208412, 204299, 205492, 199222, 202224, 202081, 201847, 203392, 203120, 203138, 203612, 200666, 200221, 200643, 201368, 199760, 200583, 201200, 202030, 201711, 202612, 201205, 202748, 203073, 199513, 202924, 202892, 203586, 198781, 201770, 204792, 200978, 204170, 201756, 202607, 201815, 202418, 199954, 200142, 198360, 206759, 199045, 201134, 201887, 201671, 201640, 197691, 203196, 202340, 206116, 199863, 200349, 208510, 205240, 203994, 204533, 200863, 203579, 203060, 199584, 204888, 205978, 202471, 203858, 199493, 200875, 200668, 204638, 202703, 201606, 204636, 202172, 202471, 204170, 208878, 198811, 201245, 201756, 198177, 199642, 202808, 201776, 205590, 202224, 204201, 206426, 203957, 201245, 200356, 198139, 201334, 204181, 198768, 202101, 202879, 198683, 199740, 203093, 201174, 201983, 199863, 209772, 203392, 208996, 209500, 201938, 200850, 201887, 201439, 205804, 204948, 202164, 203586, 201570, 199856, 201243, 203523, 203994, 201900, 198891, 199078, 202101, 204246, 204065, 204538, 205940, 204397, 205779, 205397, 204890, 201776, 206310, 204364, 203755, 203352, 202536, 206309, 204694, 199954, 198806, 199362, 204422, 205669, 204948, 205142, 201127, 208061, 203358, 199364, 201633, 207010, 199604, 202360, 204631, 200953, 205550, 198644, 203481, 200449, 202730, 204754, 203358, 198113, 205019, 205947, 212516, 203463, 196628, 203403, 206056, 201304, 201517, 202665, 205726, 205110, 205387, 202030, 204715, 201218 ],
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 35,
        "FinishedTasksTotalTimeInMs" : 91389.0,
        "FinishedTasksDistributionInMs" : [ 343.0, 488.0, 710.0, 6161.0, 9950.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 15694,
        "TotalTasksDurationInMs" : 21008,
        "IOBytes" : {
          "Total" : 166719521,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 90689885,
            "SW" : 76029636
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 684550876,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 221258920,
                "rowCount" : 4553775
              },
              "compileTime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26], HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1807293596,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 221258920,
            "rowCount" : 4553775,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_last_name#61, c_first_name#60, d_date#26] Keys [3]: [c_last_name#61, c_first_name#60, d_date#26] Functions: [] Aggregate Attributes: [] Results [3]: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "1" : {
            "sign" : 503401035,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_last_name#61, c_first_name#60, d_date#26] Arguments: 15 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n+- ShuffleQueryStage 15\n   +- Exchange hashpartitioning(c_last_name#61, c_first_name#60, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=1705]\n      +- *(18) HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n         +- *(18) Project [c_last_name#61, c_first_name#60, d_date#26]\n            +- *(18) SortMergeJoin [ss_customer_sk#3], [c_customer_sk#52], Inner\n               :- *(16) Sort [ss_customer_sk#3 ASC NULLS FIRST], false, 0\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 10\n               :        +- Exchange hashpartitioning(ss_customer_sk#3, 200), ENSURE_REQUIREMENTS, [plan_id=895]\n               :           +- *(7) Project [ss_customer_sk#3, d_date#26]\n               :              +- *(7) BroadcastHashJoin [ss_sold_date_sk#23], [d_date_sk#24], Inner, BuildRight, false\n               :                 :- *(7) Filter isnotnull(ss_customer_sk#3)\n               :                 :  +- *(7) ColumnarToRow\n               :                 :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#3,ss_sold_date_sk#23] Batched: true, DataFilters: [isnotnull(ss_customer_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#343)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int>\n               :                 :           +- SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n               :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#24, d_date#26], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=866]\n                                                      +- Project [d_date_sk#24, d_date#26]\n                                                         +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n               :                 +- BroadcastQueryStage 0\n               :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n               :                       +- *(1) Project [d_date_sk#24, d_date#26]\n               :                          +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n               :                             +- *(1) ColumnarToRow\n               :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n               +- *(17) Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 1\n                        +- Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n                           +- *(2) Filter isnotnull(c_customer_sk#52)\n                              +- *(2) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#52,c_first_name#60,c_last_name#61] Batched: true, DataFilters: [isnotnull(c_customer_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 221258920,
        "inputRowCount" : 4553775
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "6" : [ 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 616571, 592525, 592525, 592525, 592525, 616571, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 616571, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 616571, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 616571, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 616571, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525, 592525 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 2408,
        "TotalTasksDurationInMs" : 4239,
        "IOBytes" : {
          "Total" : 224866063,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 113163164,
            "SW" : 111702899
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1893607987,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3544756824,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 3544756824,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "1" : {
            "sign" : -2041012348,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3544756824,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 3544756824,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "2" : {
            "sign" : -1544457800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4123492632,
                "rowCount" : 72341976
              },
              "compileTime" : {
                "sizeInBytes" : 4123492632,
                "rowCount" : 72341976
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_customer_sk#107 = c_customer_sk#319) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_last_name#328, c_first_name#327, d_date#293], [c_last_name#328, c_first_name#327, d_date#293]\n+- Project [c_last_name#328, c_first_name#327, d_date#293]\n   +- Join Inner, (ws_bill_customer_sk#107 = c_customer_sk#319)\n      :- Project [ws_bill_customer_sk#107, d_date#293]\n      :  +- Join Inner, (ws_sold_date_sk#137 = d_date_sk#291)\n      :     :- Project [ws_bill_customer_sk#107, ws_sold_date_sk#137]\n      :     :  +- Filter ((isnotnull(ws_sold_date_sk#137) AND isnotnull(ws_bill_customer_sk#107)) AND dynamicpruning#345 [ws_sold_date_sk#137])\n      :     :     :  +- Project [d_date_sk#291, d_date#293]\n      :     :     :     +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#104,ws_ship_date_sk#105,ws_item_sk#106,ws_bill_customer_sk#107,ws_bill_cdemo_sk#108,ws_bill_hdemo_sk#109,ws_bill_addr_sk#110,ws_ship_customer_sk#111,ws_ship_cdemo_sk#112,ws_ship_hdemo_sk#113,ws_ship_addr_sk#114,ws_web_page_sk#115,ws_web_site_sk#116,ws_ship_mode_sk#117,ws_warehouse_sk#118,ws_promo_sk#119,ws_order_number#120L,ws_quantity#121,ws_wholesale_cost#122,ws_list_price#123,ws_sales_price#124,ws_ext_discount_amt#125,ws_ext_sales_price#126,ws_ext_wholesale_cost#127,... 10 more fields] parquet\n      :     +- Project [d_date_sk#291, d_date#293]\n      :        +- Filter ((isnotnull(d_month_seq#294) AND ((d_month_seq#294 >= 1212) AND (d_month_seq#294 <= 1223))) AND isnotnull(d_date_sk#291))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#291,d_date_id#292,d_date#293,d_month_seq#294,d_week_seq#295,d_quarter_seq#296,d_year#297,d_dow#298,d_moy#299,d_dom#300,d_qoy#301,d_fy_year#302,d_fy_quarter_seq#303,d_fy_week_seq#304,d_day_name#305,d_quarter_name#306,d_holiday#307,d_weekend#308,d_following_holiday#309,d_first_dom#310,d_last_dom#311,d_same_day_ly#312,d_same_day_lq#313,d_current_day#314,... 4 more fields] parquet\n      +- Project [c_customer_sk#319, c_first_name#327, c_last_name#328]\n         +- Filter isnotnull(c_customer_sk#319)\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#319,c_customer_id#320,c_current_cdemo_sk#321,c_current_hdemo_sk#322,c_current_addr_sk#323,c_first_shipto_date_sk#324,c_first_sales_date_sk#325,c_salutation#326,c_first_name#327,c_last_name#328,c_preferred_cust_flag#329,c_birth_day#330,c_birth_month#331,c_birth_year#332,c_birth_country#333,c_login#334,c_email_address#335,c_last_review_date#336] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1482017960,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 343573320,
            "rowCount" : 14315555,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ws_bill_customer_sk#107, d_date#293] Arguments: 12 "
          },
          "5" : {
            "sign" : 1823093586,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#319, c_first_name#327, c_last_name#328] Arguments: [c_customer_sk#319 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 437329209,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#319, c_first_name#327, c_last_name#328] Arguments: 9 "
          },
          "1" : {
            "sign" : 174236738,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3544756824,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [c_last_name#328, c_first_name#327, d_date#293] Input [5]: [ws_bill_customer_sk#107, d_date#293, c_customer_sk#319, c_first_name#327, c_last_name#328] "
          },
          "0" : {
            "sign" : 1091845665,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 3544756824,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_last_name#328, c_first_name#327, d_date#293] Keys [3]: [c_last_name#328, c_first_name#327, d_date#293] Functions: [] Aggregate Attributes: [] Results [3]: [c_last_name#328, c_first_name#327, d_date#293] "
          },
          "2" : {
            "sign" : 236012450,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 4123492632,
            "rowCount" : 72341976,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ws_bill_customer_sk#107] Right keys [1]: [c_customer_sk#319] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1972391531,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ws_bill_customer_sk#107, d_date#293] Arguments: [ws_bill_customer_sk#107 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#328, c_first_name#327, d_date#293], functions=[], output=[c_last_name#328, c_first_name#327, d_date#293])\n+- Project [c_last_name#328, c_first_name#327, d_date#293]\n   +- SortMergeJoin [ws_bill_customer_sk#107], [c_customer_sk#319], Inner\n      :- Sort [ws_bill_customer_sk#107 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 12\n      :     +- Exchange hashpartitioning(ws_bill_customer_sk#107, 200), ENSURE_REQUIREMENTS, [plan_id=1008]\n      :        +- *(9) Project [ws_bill_customer_sk#107, d_date#293]\n      :           +- *(9) BroadcastHashJoin [ws_sold_date_sk#137], [d_date_sk#291], Inner, BuildRight, false\n      :              :- *(9) Filter isnotnull(ws_bill_customer_sk#107)\n      :              :  +- *(9) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#107,ws_sold_date_sk#137] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#3..., PushedFilters: [IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_bill_customer_sk:int>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n      :              +- BroadcastQueryStage 7\n      :                 +- ReusedExchange [d_date_sk#291, d_date#293], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n      +- Sort [c_customer_sk#319 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 9\n            +- ReusedExchange [c_customer_sk#319, c_first_name#327, c_last_name#328], Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 440101168,
        "inputRowCount" : 16315555
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 85066, 83251, 82520, 82281, 82059, 83186, 81647, 83439, 82208, 83266, 83823, 82530, 83703, 84098, 81005, 83586, 83444, 84806, 84957, 82975, 82148, 82404, 84157, 84104, 82263, 83696, 83471, 84718, 83469, 82891, 81107, 83287, 82595, 83151, 83413, 83318, 81112, 80534, 82912, 82006, 80770, 83870, 80325, 82354, 84227, 82914, 82828, 83155, 82797, 81344, 83189, 86243, 82193, 84495, 82597, 82505, 82148, 79594, 79652, 82441, 82878, 81990, 82360, 83320, 82840, 84038, 83727, 81148, 82351, 82590, 82105, 84373, 82915, 82659, 82985, 83902, 85184, 85148, 84718, 82918, 83562, 84662, 85930, 80571, 82383, 82693, 82199, 83263, 83746, 84662, 83292, 82988, 85539, 84104, 80004, 83205, 83246, 81639, 85492, 82760, 81507, 84588, 84134, 83308, 83122, 82334, 83449, 82452, 79198, 82237, 82218, 81990, 83825, 79678, 81437, 82174, 80745, 80782, 80039, 82499, 81519, 82161, 85130, 82744, 86011, 85064, 83049, 83308, 82758, 82614, 83801, 84417, 83727, 83800, 84788, 81438, 82374, 82505, 84113, 83215, 81216, 82966, 82663, 84701, 80923, 81532, 86776, 80067, 84157, 83432, 85303, 83466, 86420, 82592, 84457, 84100, 82842, 83629, 84621, 81337, 82777, 81406, 83145, 82302, 81792, 84048, 82378, 84585, 84365, 82884, 82566, 84121, 84086, 85360, 83272, 82232, 81679, 80840, 83921, 83217, 85223, 83698, 83782, 80764, 85403, 81828, 83562, 80045, 82803, 84904, 84385, 81380, 84746, 80575, 83890, 84238, 83573, 82618, 84756, 79894 ],
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 9,
        "FinishedTasksNum" : 25,
        "FinishedTasksTotalTimeInMs" : 86961.0,
        "FinishedTasksDistributionInMs" : [ 452.0, 700.0, 1011.0, 7182.0, 9950.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 9122,
        "TotalTasksDurationInMs" : 9957,
        "IOBytes" : {
          "Total" : 96692708,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 67841255,
            "SW" : 28851453
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -695652895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 98000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#52, c_first_name#60, c_last_name#61] "
          },
          "1" : {
            "sign" : 1224207860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(c_customer_sk#52) "
          },
          "2" : {
            "sign" : -739163814,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#52, c_customer_id#53, c_current_cdemo_sk#54, c_current_hdemo_sk#55, c_current_addr_sk#56, c_first_shipto_date_sk#57, c_first_sales_date_sk#58, c_salutation#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_day#63, c_birth_month#64, c_birth_year#65, c_birth_country#66, c_login#67, c_email_address#68, c_last_review_date#69], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#52, c_first_name#60, c_last_name#61]\n+- Filter isnotnull(c_customer_sk#52)\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#52,c_customer_id#53,c_current_cdemo_sk#54,c_current_hdemo_sk#55,c_current_addr_sk#56,c_first_shipto_date_sk#57,c_first_sales_date_sk#58,c_salutation#59,c_first_name#60,c_last_name#61,c_preferred_cust_flag#62,c_birth_day#63,c_birth_month#64,c_birth_year#65,c_birth_country#66,c_login#67,c_email_address#68,c_last_review_date#69] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -2070202837,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [c_customer_sk#52, c_first_name#60, c_last_name#61] Condition : isnotnull(c_customer_sk#52) "
          },
          "1" : {
            "sign" : 1373384721,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 98000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [3]: [c_customer_sk#52, c_first_name#60, c_last_name#61] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk)] ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(c_customer_sk#52)\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#52,c_first_name#60,c_last_name#61] Batched: true, DataFilters: [isnotnull(c_customer_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 98000000,
        "inputRowCount" : 2000000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 4314,
        "TotalTasksDurationInMs" : 27242,
        "IOBytes" : {
          "Total" : 66787538,
          "Details" : {
            "IR" : 14779729,
            "IW" : 0,
            "SR" : 0,
            "SW" : 52007809
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 131115354,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5376,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 5376,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#24, d_date#26] "
          },
          "1" : {
            "sign" : 1433423260,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              },
              "compileTime" : {
                "sizeInBytes" : 82656,
                "rowCount" : 336
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24)) "
          },
          "2" : {
            "sign" : -1634850698,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#24, d_date_id#25, d_date#26, d_month_seq#27, d_week_seq#28, d_quarter_seq#29, d_year#30, d_dow#31, d_moy#32, d_dom#33, d_qoy#34, d_fy_year#35, d_fy_quarter_seq#36, d_fy_week_seq#37, d_day_name#38, d_quarter_name#39, d_holiday#40, d_weekend#41, d_following_holiday#42, d_first_dom#43, d_last_dom#44, d_same_day_ly#45, d_same_day_lq#46, d_current_day#47, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#24, d_date#26]\n+- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 204967466,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5376,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [d_date_sk#24, d_date#26] Input [3]: [d_date_sk#24, d_date#26, d_month_seq#27] "
          },
          "1" : {
            "sign" : 1332627788,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5376,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#24, d_date#26, d_month_seq#27] Condition : (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24)) "
          },
          "2" : {
            "sign" : 1538783734,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5376,
            "rowCount" : 336,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#24, d_date#26, d_month_seq#27] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#24, d_date#26]\n+- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5376,
        "inputRowCount" : 336
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1529,
        "TotalTasksDurationInMs" : 377,
        "IOBytes" : {
          "Total" : 193066,
          "Details" : {
            "IR" : 193066,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1590079228,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#1, ss_item_sk#2, ss_customer_sk#3, ss_cdemo_sk#4, ss_hdemo_sk#5, ss_addr_sk#6, ss_store_sk#7, ss_promo_sk#8, ss_ticket_number#9L, ss_quantity#10, ss_wholesale_cost#11, ss_list_price#12, ss_sales_price#13, ss_ext_discount_amt#14, ss_ext_sales_price#15, ss_ext_wholesale_cost#16, ss_ext_list_price#17, ss_ext_tax#18, ss_coupon_amt#19, ss_net_paid#20, ss_net_paid_inc_tax#21, ss_net_profit#22, ss_sold_date_sk#23], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 638551628,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#23 = d_date_sk#24) "
          },
          "0" : {
            "sign" : -308245649,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4248649360,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 4248649360,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#3, d_date#26] "
          },
          "2" : {
            "sign" : -514721249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4202704848,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 4202704848,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#3, ss_sold_date_sk#23] "
          },
          "3" : {
            "sign" : -1414978285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              },
              "compileTime" : {
                "sizeInBytes" : 39925696056,
                "rowCount" : 262669053
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#343 [ss_sold_date_sk#23]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#3, d_date#26]\n+- Join Inner, (ss_sold_date_sk#23 = d_date_sk#24)\n   :- Project [ss_customer_sk#3, ss_sold_date_sk#23]\n   :  +- Filter ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#343 [ss_sold_date_sk#23])\n   :     :  +- Project [d_date_sk#24, d_date#26]\n   :     :     +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9L,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22,ss_sold_date_sk#23] parquet\n   +- Project [d_date_sk#24, d_date#26]\n      +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -9985628,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#24, d_date#26] Arguments: 0 "
          },
          "1" : {
            "sign" : -2139156725,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#23] Right keys [1]: [d_date_sk#24] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1819733374,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 4248649360,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_customer_sk#3, d_date#26] Input [4]: [ss_customer_sk#3, ss_sold_date_sk#23, d_date_sk#24, d_date#26] "
          },
          "2" : {
            "sign" : -127419660,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 4202704848,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ss_customer_sk#3, ss_sold_date_sk#23] Condition : isnotnull(ss_customer_sk#3) "
          },
          "3" : {
            "sign" : -1192345355,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4202704848,
            "rowCount" : 262669053,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [2]: [ss_customer_sk#3, ss_sold_date_sk#23] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#343)] PushedFilters: [IsNotNull(ss_customer_sk)] ReadSchema: struct<ss_customer_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#3, d_date#26]\n+- BroadcastHashJoin [ss_sold_date_sk#23], [d_date_sk#24], Inner, BuildRight, false\n   :- Filter isnotnull(ss_customer_sk#3)\n   :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#3,ss_sold_date_sk#23] Batched: true, DataFilters: [isnotnull(ss_customer_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#343)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int>\n   :        +- SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=866]\n   :                 +- Project [d_date_sk#24, d_date#26]\n   :                    +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n         +- *(1) Project [d_date_sk#24, d_date#26]\n            +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4203756344,
        "inputRowCount" : 262669418
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 16565.0,
        "FinishedTasksDistributionInMs" : [ 1163.0, 1240.0, 1250.0, 1310.0, 1398.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 18565,
        "TotalTasksDurationInMs" : 183205,
        "IOBytes" : {
          "Total" : 102714181,
          "Details" : {
            "IR" : 44520019,
            "IW" : 0,
            "SR" : 0,
            "SW" : 58194162
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1504517319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "1" : {
            "sign" : -869581940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 13477153599,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "2" : {
            "sign" : -666682334,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15677505207,
                "rowCount" : 275043951
              },
              "compileTime" : {
                "sizeInBytes" : 15677505207,
                "rowCount" : 275043951
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_customer_sk#3 = c_customer_sk#52) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [c_last_name#61, c_first_name#60, d_date#26], [c_last_name#61, c_first_name#60, d_date#26]\n+- Project [c_last_name#61, c_first_name#60, d_date#26]\n   +- Join Inner, (ss_customer_sk#3 = c_customer_sk#52)\n      :- Project [ss_customer_sk#3, d_date#26]\n      :  +- Join Inner, (ss_sold_date_sk#23 = d_date_sk#24)\n      :     :- Project [ss_customer_sk#3, ss_sold_date_sk#23]\n      :     :  +- Filter ((isnotnull(ss_sold_date_sk#23) AND isnotnull(ss_customer_sk#3)) AND dynamicpruning#343 [ss_sold_date_sk#23])\n      :     :     :  +- Project [d_date_sk#24, d_date#26]\n      :     :     :     +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#1,ss_item_sk#2,ss_customer_sk#3,ss_cdemo_sk#4,ss_hdemo_sk#5,ss_addr_sk#6,ss_store_sk#7,ss_promo_sk#8,ss_ticket_number#9L,ss_quantity#10,ss_wholesale_cost#11,ss_list_price#12,ss_sales_price#13,ss_ext_discount_amt#14,ss_ext_sales_price#15,ss_ext_wholesale_cost#16,ss_ext_list_price#17,ss_ext_tax#18,ss_coupon_amt#19,ss_net_paid#20,ss_net_paid_inc_tax#21,ss_net_profit#22,ss_sold_date_sk#23] parquet\n      :     +- Project [d_date_sk#24, d_date#26]\n      :        +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1212) AND (d_month_seq#27 <= 1223))) AND isnotnull(d_date_sk#24))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet\n      +- Project [c_customer_sk#52, c_first_name#60, c_last_name#61]\n         +- Filter isnotnull(c_customer_sk#52)\n            +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#52,c_customer_id#53,c_current_cdemo_sk#54,c_current_hdemo_sk#55,c_current_addr_sk#56,c_first_shipto_date_sk#57,c_first_sales_date_sk#58,c_salutation#59,c_first_name#60,c_last_name#61,c_preferred_cust_flag#62,c_birth_day#63,c_birth_month#64,c_birth_year#65,c_birth_country#66,c_login#67,c_email_address#68,c_last_review_date#69] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -567691307,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1281912888,
            "rowCount" : 53413037,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ss_customer_sk#3, d_date#26] Arguments: 10 "
          },
          "5" : {
            "sign" : 1286279658,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#52, c_first_name#60, c_last_name#61] Arguments: [c_customer_sk#52 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 2054940203,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 96527848,
            "rowCount" : 2000000,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#52, c_first_name#60, c_last_name#61] Arguments: 1 "
          },
          "1" : {
            "sign" : 906680649,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [c_last_name#61, c_first_name#60, d_date#26] Input [5]: [ss_customer_sk#3, d_date#26, c_customer_sk#52, c_first_name#60, c_last_name#61] "
          },
          "0" : {
            "sign" : -965943740,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 13477153599,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [c_last_name#61, c_first_name#60, d_date#26] Keys [3]: [c_last_name#61, c_first_name#60, d_date#26] Functions: [] Aggregate Attributes: [] Results [3]: [c_last_name#61, c_first_name#60, d_date#26] "
          },
          "2" : {
            "sign" : -985881663,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 15677505207,
            "rowCount" : 275043951,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [ss_customer_sk#3] Right keys [1]: [c_customer_sk#52] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -1268201595,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ss_customer_sk#3, d_date#26] Arguments: [ss_customer_sk#3 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[c_last_name#61, c_first_name#60, d_date#26], functions=[], output=[c_last_name#61, c_first_name#60, d_date#26])\n+- Project [c_last_name#61, c_first_name#60, d_date#26]\n   +- SortMergeJoin [ss_customer_sk#3], [c_customer_sk#52], Inner\n      :- Sort [ss_customer_sk#3 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 10\n      :     +- Exchange hashpartitioning(ss_customer_sk#3, 200), ENSURE_REQUIREMENTS, [plan_id=895]\n      :        +- *(7) Project [ss_customer_sk#3, d_date#26]\n      :           +- *(7) BroadcastHashJoin [ss_sold_date_sk#23], [d_date_sk#24], Inner, BuildRight, false\n      :              :- *(7) Filter isnotnull(ss_customer_sk#3)\n      :              :  +- *(7) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#3,ss_sold_date_sk#23] Batched: true, DataFilters: [isnotnull(ss_customer_sk#3)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#23), dynamicpruningexpression(ss_sold_date_sk#23 IN dynamicpruning#343)], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int>\n      :              :           +- SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#24, d_date#26], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=866]\n                                          +- Project [d_date_sk#24, d_date#26]\n                                             +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n      :              +- BroadcastQueryStage 0\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n      :                    +- *(1) Project [d_date_sk#24, d_date#26]\n      :                       +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1212)) AND (d_month_seq#27 <= 1223)) AND isnotnull(d_date_sk#24))\n      :                          +- *(1) ColumnarToRow\n      :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1212), (d_month_seq#27 <= 1223), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>\n      +- Sort [c_customer_sk#52 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 1\n            +- Exchange hashpartitioning(c_customer_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=468]\n               +- *(2) Filter isnotnull(c_customer_sk#52)\n                  +- *(2) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#52,c_first_name#60,c_last_name#61] Batched: true, DataFilters: [isnotnull(c_customer_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1378440736,
        "inputRowCount" : 55413037
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 311442, 305420, 304889, 304656, 304112, 303350, 303148, 301155, 305538, 304760, 308779, 307549, 311220, 308066, 302212, 303913, 307377, 310664, 305392, 301784, 303750, 309758, 305830, 308456, 310269, 303591, 303763, 310338, 304271, 303760, 299481, 302135, 310595, 299877, 306188, 303831, 302680, 299483, 301232, 304668, 301537, 302656, 296866, 307907, 307480, 303760, 311696, 304713, 305865, 307945, 309293, 307519, 302982, 307223, 301131, 304024, 299962, 302142, 302985, 300556, 302204, 310864, 301801, 307584, 299190, 309143, 306862, 301938, 302018, 310699, 303597, 297962, 302369, 306123, 308129, 308352, 308016, 309258, 310957, 303201, 304178, 311210, 306987, 300196, 303985, 304642, 300492, 304473, 306039, 310498, 303739, 305272, 311765, 303400, 303855, 308412, 300007, 302913, 303499, 300867, 298415, 309037, 304182, 297873, 300287, 309140, 310739, 313548, 302468, 303935, 300902, 306198, 306872, 307317, 306248, 304052, 300553, 301045, 307712, 304701, 300714, 298848, 316243, 307421, 306712, 311835, 303597, 300714, 305573, 301006, 307912, 309398, 307123, 304271, 300586, 301066, 306901, 309502, 305031, 309838, 303729, 305364, 307620, 308592, 305307, 309814, 314760, 306608, 306576, 310175, 307129, 302529, 312673, 310223, 308480, 309560, 302143, 307804, 308268, 302136, 298321, 303364, 308887, 302984, 303701, 306248, 304086, 309047, 307872, 301521, 306049, 305564, 308669, 309303, 307351, 302810, 306644, 299177, 307792, 306132, 303404, 305542, 304854, 303982, 313519, 308525, 312666, 311735, 302459, 306109, 306329, 303796, 304564, 294278, 308386, 307445, 303405, 305381, 308443, 306764 ],
        "0" : [ 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 290960, 264509, 290960, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509, 264509 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 2,
        "FinishedTasksTotalTimeInMs" : 6170.0,
        "FinishedTasksDistributionInMs" : [ 845.0, 845.0, 5325.0, 5325.0, 5325.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 22097,
        "TotalTasksDurationInMs" : 37114,
        "IOBytes" : {
          "Total" : 223365135,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 110201971,
            "SW" : 113163164
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 173057800,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#70, cs_ship_date_sk#71, cs_bill_customer_sk#72, cs_bill_cdemo_sk#73, cs_bill_hdemo_sk#74, cs_bill_addr_sk#75, cs_ship_customer_sk#76, cs_ship_cdemo_sk#77, cs_ship_hdemo_sk#78, cs_ship_addr_sk#79, cs_call_center_sk#80, cs_catalog_page_sk#81, cs_ship_mode_sk#82, cs_warehouse_sk#83, cs_item_sk#84, cs_promo_sk#85, cs_order_number#86L, cs_quantity#87, cs_wholesale_cost#88, cs_list_price#89, cs_sales_price#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -671984824,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#103 = d_date_sk#245) "
          },
          "0" : {
            "sign" : -1075867300,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2216260192,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 2216260192,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#72, d_date#247] "
          },
          "2" : {
            "sign" : 645883881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2280902528,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 2280902528,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#72, cs_sold_date_sk#103] "
          },
          "3" : {
            "sign" : -682488228,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              },
              "compileTime" : {
                "sizeInBytes" : 29651732864,
                "rowCount" : 142556408
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#344 [cs_sold_date_sk#103]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#72, d_date#247]\n+- Join Inner, (cs_sold_date_sk#103 = d_date_sk#245)\n   :- Project [cs_bill_customer_sk#72, cs_sold_date_sk#103]\n   :  +- Filter ((isnotnull(cs_sold_date_sk#103) AND isnotnull(cs_bill_customer_sk#72)) AND dynamicpruning#344 [cs_sold_date_sk#103])\n   :     :  +- Project [d_date_sk#245, d_date#247]\n   :     :     +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#70,cs_ship_date_sk#71,cs_bill_customer_sk#72,cs_bill_cdemo_sk#73,cs_bill_hdemo_sk#74,cs_bill_addr_sk#75,cs_ship_customer_sk#76,cs_ship_cdemo_sk#77,cs_ship_hdemo_sk#78,cs_ship_addr_sk#79,cs_call_center_sk#80,cs_catalog_page_sk#81,cs_ship_mode_sk#82,cs_warehouse_sk#83,cs_item_sk#84,cs_promo_sk#85,cs_order_number#86L,cs_quantity#87,cs_wholesale_cost#88,cs_list_price#89,cs_sales_price#90,cs_ext_discount_amt#91,cs_ext_sales_price#92,cs_ext_wholesale_cost#93,... 10 more fields] parquet\n   +- Project [d_date_sk#245, d_date#247]\n      +- Filter ((isnotnull(d_month_seq#248) AND ((d_month_seq#248 >= 1212) AND (d_month_seq#248 <= 1223))) AND isnotnull(d_date_sk#245))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#245,d_date_id#246,d_date#247,d_month_seq#248,d_week_seq#249,d_quarter_seq#250,d_year#251,d_dow#252,d_moy#253,d_dom#254,d_qoy#255,d_fy_year#256,d_fy_quarter_seq#257,d_fy_week_seq#258,d_day_name#259,d_quarter_name#260,d_holiday#261,d_weekend#262,d_following_holiday#263,d_first_dom#264,d_last_dom#265,d_same_day_ly#266,d_same_day_lq#267,d_current_day#268,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1060869697,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [d_date_sk#245, d_date#247] Arguments: 3 "
          },
          "1" : {
            "sign" : 963803725,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3324390288,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#103] Right keys [1]: [d_date_sk#245] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 358728955,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2216260192,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_bill_customer_sk#72, d_date#247] Input [4]: [cs_bill_customer_sk#72, cs_sold_date_sk#103, d_date_sk#245, d_date#247] "
          },
          "2" : {
            "sign" : 2091160735,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2280902528,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [cs_bill_customer_sk#72, cs_sold_date_sk#103] Condition : isnotnull(cs_bill_customer_sk#72) "
          },
          "3" : {
            "sign" : 906167544,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2280902528,
            "rowCount" : 142556408,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [2]: [cs_bill_customer_sk#72, cs_sold_date_sk#103] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#103), dynamicpruningexpression(cs_sold_date_sk#103 IN dynamicpruning#343)] PushedFilters: [IsNotNull(cs_bill_customer_sk)] ReadSchema: struct<cs_bill_customer_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#72, d_date#247]\n+- BroadcastHashJoin [cs_sold_date_sk#103], [d_date_sk#245], Inner, BuildRight, false\n   :- Filter isnotnull(cs_bill_customer_sk#72)\n   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#72,cs_sold_date_sk#103] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#72)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#103), dynamicpruningexpression(cs_sold_date_sk#103 IN dynamicpruning#3..., PushedFilters: [IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_bill_customer_sk:int>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#343, 0, [d_date_sk#24], [id=#869]\n   +- BroadcastQueryStage 3\n      +- ReusedExchange [d_date_sk#245, d_date#247], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=447]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2281954024,
        "inputRowCount" : 142556773
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 16565.0,
        "FinishedTasksDistributionInMs" : [ 1163.0, 1240.0, 1250.0, 1310.0, 1398.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 11207,
        "TotalTasksDurationInMs" : 12559,
        "IOBytes" : {
          "Total" : 79847227,
          "Details" : {
            "IR" : 41165151,
            "IW" : 0,
            "SR" : 0,
            "SW" : 38682076
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226918792,
  "SQLEndTimeInMs" : 1702226970727,
  "Objectives" : {
    "DurationInMs" : 51935,
    "IOBytes" : {
      "Total" : 1415783636,
      "Details" : {
        "IR" : 114420788,
        "IW" : 0,
        "SR" : 702689233,
        "SW" : 598673615
      }
    }
  }
}
