{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 2107952199,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#46, cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "34" : {
          "sign" : 841402843,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 47970,
          "rowCount" : 195,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#187) AND isnotnull(d_moy#189)) AND (((d_year#187 = 2002) AND (d_moy#189 >= 4)) AND (d_moy#189 <= 7))) AND isnotnull(d_date_sk#181)) "
        },
        "12" : {
          "sign" : 555750404,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 38601040,
          "rowCount" : 1930052,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
        },
        "8" : {
          "sign" : 892096334,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 38914988179694422584478254,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
        },
        "19" : {
          "sign" : 811865526,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#33, ca_address_id#34, ca_street_number#35, ca_street_name#36, ca_street_type#37, ca_suite_number#38, ca_city#39, ca_county#40, ca_state#41, ca_zip#42, ca_country#43, ca_gmt_offset#44, ca_location_type#45], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "23" : {
          "sign" : -1752342131,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#253 [ss_sold_date_sk#77]) "
        },
        "4" : {
          "sign" : 1982260125,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 121300159725737020139282386725274128000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
        },
        "40" : {
          "sign" : 2067005374,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#143, cs_ship_date_sk#144, cs_bill_customer_sk#145, cs_bill_cdemo_sk#146, cs_bill_hdemo_sk#147, cs_bill_addr_sk#148, cs_ship_customer_sk#149, cs_ship_cdemo_sk#150, cs_ship_hdemo_sk#151, cs_ship_addr_sk#152, cs_call_center_sk#153, cs_catalog_page_sk#154, cs_ship_mode_sk#155, cs_warehouse_sk#156, cs_item_sk#157, cs_promo_sk#158, cs_order_number#159L, cs_quantity#160, cs_wholesale_cost#161, cs_list_price#162, cs_sales_price#163, cs_ext_discount_amt#164, cs_ext_sales_price#165, cs_ext_wholesale_cost#166, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "15" : {
          "sign" : 679119660,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#15, c_customer_id#16, c_current_cdemo_sk#17, c_current_hdemo_sk#18, c_current_addr_sk#19, c_first_shipto_date_sk#20, c_first_sales_date_sk#21, c_salutation#22, c_first_name#23, c_last_name#24, c_preferred_cust_flag#25, c_birth_day#26, c_birth_month#27, c_birth_year#28, c_birth_country#29, c_login#30, c_email_address#31, c_last_review_date#32], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : -605524008,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 32191231541150400,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#251), (c_customer_sk#15 = ws_bill_customer_sk#111) "
        },
        "9" : {
          "sign" : 503262852,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 53508108747079831053657600,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (exists#251 OR exists#252) "
        },
        "44" : {
          "sign" : -714786699,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(cd_demo_sk#46) "
        },
        "33" : {
          "sign" : 87211627,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2340,
          "rowCount" : 195,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#181] "
        },
        "22" : {
          "sign" : -1742512305,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4400725648,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#57, ss_sold_date_sk#77] "
        },
        "26" : {
          "sign" : 920891825,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 47970,
          "rowCount" : 195,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78)) "
        },
        "37" : {
          "sign" : 1667768562,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2770325240,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#176 = d_date_sk#209) "
        },
        "13" : {
          "sign" : 2071840005,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 38601040,
          "rowCount" : 1930052,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19] "
        },
        "24" : {
          "sign" : 2103875801,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#55, ss_item_sk#56, ss_customer_sk#57, ss_cdemo_sk#58, ss_hdemo_sk#59, ss_addr_sk#60, ss_store_sk#61, ss_promo_sk#62, ss_ticket_number#63L, ss_quantity#64, ss_wholesale_cost#65, ss_list_price#66, ss_sales_price#67, ss_ext_discount_amt#68, ss_ext_sales_price#69, ss_ext_wholesale_cost#70, ss_ext_list_price#71, ss_ext_tax#72, ss_coupon_amt#73, ss_net_paid#74, ss_net_paid_inc_tax#75, ss_net_profit#76, ss_sold_date_sk#77], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "35" : {
          "sign" : -1714834755,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#181, d_date_id#182, d_date#183, d_month_seq#184, d_week_seq#185, d_quarter_seq#186, d_year#187, d_dow#188, d_moy#189, d_dom#190, d_qoy#191, d_fy_year#192, d_fy_quarter_seq#193, d_fy_week_seq#194, d_day_name#195, d_quarter_name#196, d_holiday#197, d_weekend#198, d_following_holiday#199, d_first_dom#200, d_last_dom#201, d_same_day_ly#202, d_same_day_lq#203, d_current_day#204, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 56352068,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 108,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#257] "
        },
        "5" : {
          "sign" : -648270410,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 130630941243101406303842570319525984000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
        },
        "10" : {
          "sign" : 1336458543,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 53508108747079831053657600,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#252), (c_customer_sk#15 = cs_ship_customer_sk#149) "
        },
        "21" : {
          "sign" : -1694102448,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 5310811700,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#77 = d_date_sk#78) "
        },
        "43" : {
          "sign" : -176405261,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#209, d_date_id#210, d_date#211, d_month_seq#212, d_week_seq#213, d_quarter_seq#214, d_year#215, d_dow#216, d_moy#217, d_dom#218, d_qoy#219, d_fy_year#220, d_fy_quarter_seq#221, d_fy_week_seq#222, d_day_name#223, d_quarter_name#224, d_holiday#225, d_weekend#226, d_following_holiday#227, d_first_dom#228, d_last_dom#229, d_same_day_ly#230, d_same_day_lq#231, d_current_day#232, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "32" : {
          "sign" : 851771108,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#108, ws_ship_date_sk#109, ws_item_sk#110, ws_bill_customer_sk#111, ws_bill_cdemo_sk#112, ws_bill_hdemo_sk#113, ws_bill_addr_sk#114, ws_ship_customer_sk#115, ws_ship_cdemo_sk#116, ws_ship_hdemo_sk#117, ws_ship_addr_sk#118, ws_web_page_sk#119, ws_web_site_sk#120, ws_ship_mode_sk#121, ws_warehouse_sk#122, ws_promo_sk#123, ws_order_number#124L, ws_quantity#125, ws_wholesale_cost#126, ws_list_price#127, ws_sales_price#128, ws_ext_discount_amt#129, ws_ext_sales_price#130, ws_ext_wholesale_cost#131, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : -1855221451,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 715880122553658597864061960584,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
        },
        "36" : {
          "sign" : 2044242911,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1662195144,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#149] "
        },
        "1" : {
          "sign" : -1250149031,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 177284848829923337126643488290785264000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : -102151815,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#255 [cs_sold_date_sk#176]) "
        },
        "17" : {
          "sign" : -1013828347,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 30660,
          "rowCount" : 2555,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#33] "
        },
        "25" : {
          "sign" : 1767714420,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2340,
          "rowCount" : 195,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#78] "
        },
        "14" : {
          "sign" : -1028221243,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 482513000,
          "rowCount" : 1930052,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(scalar-subquery#258 [], xxhash64(c_current_addr_sk#19, 42))) "
        },
        "31" : {
          "sign" : 1338033240,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#254 [ws_sold_date_sk#141]) "
        },
        "42" : {
          "sign" : 1763376648,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 47970,
          "rowCount" : 195,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#215) AND isnotnull(d_moy#217)) AND (((d_year#215 = 2002) AND (d_moy#217 >= 4)) AND (d_moy#217 <= 7))) AND isnotnull(d_date_sk#209)) "
        },
        "0" : {
          "sign" : -763761384,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 15200,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 10378332,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3186487020,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_customer_sk#57] "
        },
        "27" : {
          "sign" : -1032898136,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#78, d_date_id#79, d_date#80, d_month_seq#81, d_week_seq#82, d_quarter_seq#83, d_year#84, d_dow#85, d_moy#86, d_dom#87, d_qoy#88, d_fy_year#89, d_fy_quarter_seq#90, d_fy_week_seq#91, d_day_name#92, d_quarter_name#93, d_holiday#94, d_weekend#95, d_following_holiday#96, d_first_dom#97, d_last_dom#98, d_same_day_ly#99, d_same_day_lq#100, d_current_day#101, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : -1244992530,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 177284848829923337126643488290785264000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : -16350948,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2292368272,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#149, cs_sold_date_sk#176] "
        },
        "18" : {
          "sign" : 1472821613,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 628530,
          "rowCount" : 2555,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33)) "
        },
        "30" : {
          "sign" : -1417467525,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1151737984,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#111, ws_sold_date_sk#141] "
        },
        "7" : {
          "sign" : -74685988,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1193133537589430996440103267640,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
        },
        "29" : {
          "sign" : 773658686,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1389912100,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#141 = d_date_sk#181) "
        },
        "41" : {
          "sign" : 1447509723,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2340,
          "rowCount" : 195,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#209] "
        },
        "3" : {
          "sign" : -1733441078,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 177284848829923337126643488290785264000,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#0L, cd_purchase_estimate#50, count(1) AS cnt2#1L, cd_credit_rating#51, count(1) AS cnt3#2L, cd_dep_count#52, count(1) AS cnt4#3L, cd_dep_employed_count#53, count(1) AS cnt5#4L, cd_dep_college_count#54, count(1) AS cnt6#5L] "
        },
        "28" : {
          "sign" : -1906681613,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 833947260,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#111] "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Aggregate",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Join",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "LogicalRelation",
        "toId" : 31,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "LogicalRelation",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Filter",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 31,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 31,
        "fromName" : "Filter",
        "toId" : 30,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 29,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 29,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Join",
        "toId" : 28,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "LogicalRelation",
        "toId" : 42,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Filter",
        "toId" : 41,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Join",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Filter",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "LogicalRelation",
        "toId" : 44,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Filter",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#0L, cd_purchase_estimate#50, count(1) AS cnt2#1L, cd_credit_rating#51, count(1) AS cnt3#2L, cd_dep_count#52, count(1) AS cnt4#3L, cd_dep_employed_count#53, count(1) AS cnt5#4L, cd_dep_college_count#54, count(1) AS cnt6#5L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#251 OR exists#252)\n               :     :     +- Join ExistenceJoin(exists#252), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#251), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :        :  :  :  +- Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(scalar-subquery#258 [], xxhash64(c_current_addr_sk#19, 42)))\n               :     :        :  :  :     :  +- Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#257]\n               :     :        :  :  :     :     +- Project [ca_address_sk#33]\n               :     :        :  :  :     :        +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n               :     :        :  :  :     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n               :     :        :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#15,c_customer_id#16,c_current_cdemo_sk#17,c_current_hdemo_sk#18,c_current_addr_sk#19,c_first_shipto_date_sk#20,c_first_sales_date_sk#21,c_salutation#22,c_first_name#23,c_last_name#24,c_preferred_cust_flag#25,c_birth_day#26,c_birth_month#27,c_birth_year#28,c_birth_country#29,c_login#30,c_email_address#31,c_last_review_date#32] parquet\n               :     :        :  :  +- Project [ss_customer_sk#57]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#77 = d_date_sk#78)\n               :     :        :  :        :- Project [ss_customer_sk#57, ss_sold_date_sk#77]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#253 [ss_sold_date_sk#77])\n               :     :        :  :        :     :  +- Project [d_date_sk#78]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#55,ss_item_sk#56,ss_customer_sk#57,ss_cdemo_sk#58,ss_hdemo_sk#59,ss_addr_sk#60,ss_store_sk#61,ss_promo_sk#62,ss_ticket_number#63L,ss_quantity#64,ss_wholesale_cost#65,ss_list_price#66,ss_sales_price#67,ss_ext_discount_amt#68,ss_ext_sales_price#69,ss_ext_wholesale_cost#70,ss_ext_list_price#71,ss_ext_tax#72,ss_coupon_amt#73,ss_net_paid#74,ss_net_paid_inc_tax#75,ss_net_profit#76,ss_sold_date_sk#77] parquet\n               :     :        :  :        +- Project [d_date_sk#78]\n               :     :        :  :           +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n               :     :        :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n               :     :        :  +- Project [ws_bill_customer_sk#111]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#141 = d_date_sk#181)\n               :     :        :        :- Project [ws_bill_customer_sk#111, ws_sold_date_sk#141]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#254 [ws_sold_date_sk#141])\n               :     :        :        :     :  +- Project [d_date_sk#181]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#187) AND isnotnull(d_moy#189)) AND (((d_year#187 = 2002) AND (d_moy#189 >= 4)) AND (d_moy#189 <= 7))) AND isnotnull(d_date_sk#181))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#181,d_date_id#182,d_date#183,d_month_seq#184,d_week_seq#185,d_quarter_seq#186,d_year#187,d_dow#188,d_moy#189,d_dom#190,d_qoy#191,d_fy_year#192,d_fy_quarter_seq#193,d_fy_week_seq#194,d_day_name#195,d_quarter_name#196,d_holiday#197,d_weekend#198,d_following_holiday#199,d_first_dom#200,d_last_dom#201,d_same_day_ly#202,d_same_day_lq#203,d_current_day#204,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#108,ws_ship_date_sk#109,ws_item_sk#110,ws_bill_customer_sk#111,ws_bill_cdemo_sk#112,ws_bill_hdemo_sk#113,ws_bill_addr_sk#114,ws_ship_customer_sk#115,ws_ship_cdemo_sk#116,ws_ship_hdemo_sk#117,ws_ship_addr_sk#118,ws_web_page_sk#119,ws_web_site_sk#120,ws_ship_mode_sk#121,ws_warehouse_sk#122,ws_promo_sk#123,ws_order_number#124L,ws_quantity#125,ws_wholesale_cost#126,ws_list_price#127,ws_sales_price#128,ws_ext_discount_amt#129,ws_ext_sales_price#130,ws_ext_wholesale_cost#131,... 10 more fields] parquet\n               :     :        :        +- Project [d_date_sk#181]\n               :     :        :           +- Filter (((isnotnull(d_year#187) AND isnotnull(d_moy#189)) AND (((d_year#187 = 2002) AND (d_moy#189 >= 4)) AND (d_moy#189 <= 7))) AND isnotnull(d_date_sk#181))\n               :     :        :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#181,d_date_id#182,d_date#183,d_month_seq#184,d_week_seq#185,d_quarter_seq#186,d_year#187,d_dow#188,d_moy#189,d_dom#190,d_qoy#191,d_fy_year#192,d_fy_quarter_seq#193,d_fy_week_seq#194,d_day_name#195,d_quarter_name#196,d_holiday#197,d_weekend#198,d_following_holiday#199,d_first_dom#200,d_last_dom#201,d_same_day_ly#202,d_same_day_lq#203,d_current_day#204,... 4 more fields] parquet\n               :     :        +- Project [cs_ship_customer_sk#149]\n               :     :           +- Join Inner, (cs_sold_date_sk#176 = d_date_sk#209)\n               :     :              :- Project [cs_ship_customer_sk#149, cs_sold_date_sk#176]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#255 [cs_sold_date_sk#176])\n               :     :              :     :  +- Project [d_date_sk#209]\n               :     :              :     :     +- Filter (((isnotnull(d_year#215) AND isnotnull(d_moy#217)) AND (((d_year#215 = 2002) AND (d_moy#217 >= 4)) AND (d_moy#217 <= 7))) AND isnotnull(d_date_sk#209))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#209,d_date_id#210,d_date#211,d_month_seq#212,d_week_seq#213,d_quarter_seq#214,d_year#215,d_dow#216,d_moy#217,d_dom#218,d_qoy#219,d_fy_year#220,d_fy_quarter_seq#221,d_fy_week_seq#222,d_day_name#223,d_quarter_name#224,d_holiday#225,d_weekend#226,d_following_holiday#227,d_first_dom#228,d_last_dom#229,d_same_day_ly#230,d_same_day_lq#231,d_current_day#232,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#143,cs_ship_date_sk#144,cs_bill_customer_sk#145,cs_bill_cdemo_sk#146,cs_bill_hdemo_sk#147,cs_bill_addr_sk#148,cs_ship_customer_sk#149,cs_ship_cdemo_sk#150,cs_ship_hdemo_sk#151,cs_ship_addr_sk#152,cs_call_center_sk#153,cs_catalog_page_sk#154,cs_ship_mode_sk#155,cs_warehouse_sk#156,cs_item_sk#157,cs_promo_sk#158,cs_order_number#159L,cs_quantity#160,cs_wholesale_cost#161,cs_list_price#162,cs_sales_price#163,cs_ext_discount_amt#164,cs_ext_sales_price#165,cs_ext_wholesale_cost#166,... 10 more fields] parquet\n               :     :              +- Project [d_date_sk#209]\n               :     :                 +- Filter (((isnotnull(d_year#215) AND isnotnull(d_moy#217)) AND (((d_year#215 = 2002) AND (d_moy#217 >= 4)) AND (d_moy#217 <= 7))) AND isnotnull(d_date_sk#209))\n               :     :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#209,d_date_id#210,d_date#211,d_month_seq#212,d_week_seq#213,d_quarter_seq#214,d_year#215,d_dow#216,d_moy#217,d_dom#218,d_qoy#219,d_fy_year#220,d_fy_quarter_seq#221,d_fy_week_seq#222,d_day_name#223,d_quarter_name#224,d_holiday#225,d_weekend#226,d_following_holiday#227,d_first_dom#228,d_last_dom#229,d_same_day_ly#230,d_same_day_lq#231,d_current_day#232,... 4 more fields] parquet\n               :     +- Project [ca_address_sk#33]\n               :        +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n               :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n               +- Filter isnotnull(cd_demo_sk#46)\n                  +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#46,cd_gender#47,cd_marital_status#48,cd_education_status#49,cd_purchase_estimate#50,cd_credit_rating#51,cd_dep_count#52,cd_dep_employed_count#53,cd_dep_college_count#54] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 87562661146,
      "inputRowCount" : 495441941
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 2026060079,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 356976838400,
            "rowCount" : 3432469600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "5" : {
            "sign" : 761023708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 384436595200,
            "rowCount" : 3432469600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "6" : {
            "sign" : 1876202987,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 28592,
            "rowCount" : 1787,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_current_cdemo_sk#17], ShuffleQueryStage 11 "
          },
          "1" : {
            "sign" : -1172935720,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 786685715,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1829913411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "3" : {
            "sign" : 1897699911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- LogicalQueryStage Project [c_current_cdemo_sk#17], ShuffleQueryStage 11\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 227780592,
        "inputRowCount" : 1922587
      },
      "PD" : {
        "2" : [ 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960 ],
        "6" : [ 80, 129, 88, 106, 106, 117, 106, 129, 88, 142, 88, 117, 129, 129, 117, 129, 60, 106, 117, 117, 117, 97, 97, 88, 117, 117, 106, 117, 129, 97, 156, 142, 80, 106, 129, 106, 106, 106, 117, 142, 97, 106, 97, 142, 97, 117, 117, 106, 129, 106, 117, 106, 129, 106, 117, 129, 117, 129, 106, 106, 156, 129, 117, 97, 106, 106, 117, 97, 117, 117, 106, 106, 106, 80, 142, 106, 106, 142, 129, 129, 97, 97, 106, 97, 171, 117, 106, 129, 97, 117, 142, 106, 106, 97, 129, 117, 156, 106, 97, 117, 80, 129, 129, 106, 117, 189, 97, 106, 97, 129, 129, 171, 106, 142, 117, 142, 106, 106, 117, 97, 106, 129, 129, 156, 142, 97, 129, 142, 80, 80, 88, 117, 117, 117, 129, 88, 117, 88, 117, 156, 129, 129, 117, 88, 129, 117, 117, 142, 106, 117, 129, 129, 117, 129, 142, 106, 88, 156, 97, 117, 117, 117, 129, 117, 142, 80, 106, 156, 106, 117, 97, 106, 88, 80, 129, 129, 106, 129, 156, 142, 117, 117, 88, 117, 129, 80, 106, 106, 117, 156, 97, 117, 156, 80, 106, 156, 106, 142, 117, 129 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226592814,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1505,
        "IOBytes" : {
          "Total" : 56850721,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 56750799,
            "SW" : 99922
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 727288681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4220520,
            "rowCount" : 211026,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "8" : {
            "sign" : 5169359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4254846136585022175730036,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "4" : {
            "sign" : 642989621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 707656585327054812462782296954503168000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "15" : {
            "sign" : 1208736820,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#111], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 457146795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3519691089775200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "9" : {
            "sign" : -1583505465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5850413437804405491628800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          },
          "13" : {
            "sign" : 1589352060,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6752832,
            "rowCount" : 211026,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -608857490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#149], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : -1848061158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 762091707275289798036842473643311104000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "10" : {
            "sign" : 260805912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5850413437804405491628800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "6" : {
            "sign" : -285821899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3346147156886832159703723671552,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "1" : {
            "sign" : 2082276758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1034267317016464725907143357087350784000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -874177892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#33], BroadcastQueryStage 6 "
          },
          "14" : {
            "sign" : -7948388,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#57], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 605950673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 830178791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1034267317016464725907143357087350784000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : 2118551502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5576911928144720266172872785920,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "3" : {
            "sign" : -1126353787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1034267317016464725907143357087350784000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#344 OR exists#345)\n               :     :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#57], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#111], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#149], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#33], BroadcastQueryStage 6\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5918444976,
        "inputRowCount" : 475691524
      },
      "PD" : {
        "2" : [ 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960 ],
        "1" : [ 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 20176, 18341, 20176, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 29765.0,
        "FinishedTasksDistributionInMs" : [ 182.0, 483.0, 1602.0, 2299.0, 3837.0 ]
      },
      "StartTimeInMs" : 1702226580681,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 13638,
        "IOBytes" : {
          "Total" : 118764850,
          "Details" : {
            "IR" : 20832449,
            "IW" : 0,
            "SR" : 79012656,
            "SW" : 18919745
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -1475383508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 356976838400,
            "rowCount" : 3432469600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "5" : {
            "sign" : 1220270527,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 384436595200,
            "rowCount" : 3432469600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "6" : {
            "sign" : -1240694770,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1114112,
            "rowCount" : 1787,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Project [c_current_cdemo_sk#17], ShuffleQueryStage 11, BroadcastQueryStage 12 "
          },
          "1" : {
            "sign" : 619012411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 668460176,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2036019066,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "3" : {
            "sign" : 1330662186,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- LogicalQueryStage LogicalQueryStage Project [c_current_cdemo_sk#17], ShuffleQueryStage 11, BroadcastQueryStage 12\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 228866112,
        "inputRowCount" : 1922587
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226592926,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1393,
        "IOBytes" : {
          "Total" : 56828474,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 56728552,
            "SW" : 99922
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 727288681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4220520,
            "rowCount" : 211026,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "8" : {
            "sign" : 5169359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 226639232521557815288552,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "4" : {
            "sign" : 642989621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37694135167029713050128192242712576000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "15" : {
            "sign" : 1208736820,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44421152,
            "rowCount" : 2776322,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#111], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 457146795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187480360439040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "9" : {
            "sign" : -1583505465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 311628944717141996021760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          },
          "13" : {
            "sign" : 1589352060,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6752832,
            "rowCount" : 211026,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -608857490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#149], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : -1848061158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40593684026031998669368822415228928000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "10" : {
            "sign" : 260805912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 311628944717141996021760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "6" : {
            "sign" : -285821899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 178236344910393755793006526464,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "1" : {
            "sign" : 2082276758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 55091428321043426765571973277810688000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -874177892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#33], BroadcastQueryStage 6 "
          },
          "14" : {
            "sign" : -7948388,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#57], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 605950673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 830178791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 55091428321043426765571973277810688000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : 2118551502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 297060574850656259655010877440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "3" : {
            "sign" : -1126353787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55091428321043426765571973277810688000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#344 OR exists#345)\n               :     :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#57], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#111], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#149], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#33], BroadcastQueryStage 6\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5128918868,
        "inputRowCount" : 408972241
      },
      "PD" : {
        "2" : [ 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960 ],
        "4" : [ 12843, 12333, 13004, 13318, 13009, 12938, 12510, 12995, 12718, 13878, 13186, 12993, 13003, 13164, 12602, 12995, 13002, 13232, 12776, 12905, 12829, 13041, 12945, 13493, 12747, 13148, 12841, 12492, 13404, 12622, 12320, 12730, 13269, 12967, 13060, 12693, 13196, 12721, 13137, 12480, 12483, 12691, 14220, 13237, 12556, 12820, 12844, 13148, 12865, 13208, 12893, 13391, 12536, 13756, 12679, 12873, 12819, 12215, 12458, 12590, 12693, 13225, 13058, 13129, 12914, 12907, 13200, 12476, 13328, 13275, 12962, 12319, 13273, 13243, 13456, 12920, 12590, 13057, 13085, 13479, 13256, 13378, 13320, 12795, 13844, 13158, 12917, 13525, 12733, 13097, 12767, 13126, 12959, 13464, 12758, 12740, 12645, 12010, 13431, 12376, 12949, 12813, 13517, 12235, 13477, 13837, 12668, 13126, 12785, 12228, 12427, 12835, 13727, 12290, 13119, 12647, 12649, 13050, 12894, 12360, 12360, 13383, 13613, 12422, 12996, 13510, 12451, 12913, 13345, 13309, 13560, 13445, 12986, 12812, 13581, 12532, 13051, 13161, 13044, 13161, 13199, 13076, 13042, 12752, 12816, 12715, 13186, 13170, 12787, 12764, 13738, 13059, 13734, 12945, 13075, 12586, 13091, 13483, 12884, 12675, 13122, 12851, 12776, 13485, 13642, 13151, 12029, 12621, 12631, 12585, 12526, 12362, 12515, 12764, 12906, 13010, 12143, 12457, 13233, 12839, 13241, 13315, 13468, 12445, 13592, 12808, 12706, 12622, 13161, 12900, 13074, 13224, 12913, 13298, 13300, 13494, 12718, 13046, 12652, 12159 ],
        "1" : [ 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 20176, 18341, 20176, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 8,
        "FinishedTasksNum" : 24,
        "FinishedTasksTotalTimeInMs" : 35414.0,
        "FinishedTasksDistributionInMs" : [ 210.0, 387.0, 1131.0, 2493.0, 3837.0 ]
      },
      "StartTimeInMs" : 1702226581980,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12339,
        "IOBytes" : {
          "Total" : 112887973,
          "Details" : {
            "IR" : 17426353,
            "IW" : 0,
            "SR" : 79012656,
            "SW" : 16448964
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1164234907,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 819888384,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 212104,
            "rowCount" : 1786,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1804824591,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 212104,
            "rowCount" : 1786,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -1741455247,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 212104,
            "rowCount" : 1786,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L], HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[count(1)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L], HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[count(1)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 212104,
        "inputRowCount" : 1786
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226594028,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 291,
        "IOBytes" : {
          "Total" : 99922,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 99922,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 727288681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4220520,
            "rowCount" : 211026,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "8" : {
            "sign" : 5169359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12073922828983968086574,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "4" : {
            "sign" : 642989621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2008108102240052581620265110208512000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "15" : {
            "sign" : 1208736820,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44421152,
            "rowCount" : 2776322,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#111], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 457146795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187480360439040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "9" : {
            "sign" : -1583505465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 16601643889852956119040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          },
          "13" : {
            "sign" : 1589352060,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6752832,
            "rowCount" : 211026,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -608857490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 88551376,
            "rowCount" : 5534461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#149], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : -1848061158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2162577956258518164821823964839936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "10" : {
            "sign" : 260805912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16601643889852956119040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "6" : {
            "sign" : -285821899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9495319278243519990260563968,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "1" : {
            "sign" : 2082276758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 2934927226350846080829618237997056000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -874177892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#33], BroadcastQueryStage 6 "
          },
          "14" : {
            "sign" : -7948388,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#57], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 605950673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 830178791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 2934927226350846080829618237997056000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : 2118551502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15825532130405866650434273280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "3" : {
            "sign" : -1126353787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2934927226350846080829618237997056000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#344 OR exists#345)\n               :     :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#57], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#111], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#149], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#33], BroadcastQueryStage 6\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3555275100,
        "inputRowCount" : 275990440
      },
      "PD" : {
        "2" : [ 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960 ],
        "5" : [ 33823, 34027, 32777, 33627, 31764, 35132, 32537, 33295, 34179, 34879, 34041, 33274, 32806, 33221, 33892, 32997, 34446, 35425, 32714, 32691, 33182, 33461, 34302, 34242, 32938, 33051, 31781, 32344, 33563, 32498, 32342, 33408, 32860, 31389, 33256, 34180, 32404, 33068, 33031, 33481, 33256, 30302, 59074, 34057, 33544, 32415, 32865, 33123, 31517, 33381, 33521, 31123, 33872, 34605, 35142, 33350, 33782, 33256, 33310, 32328, 33773, 35122, 32903, 32324, 33507, 33237, 33489, 33852, 33086, 33682, 32450, 33032, 33687, 35274, 33691, 32924, 34374, 32845, 33129, 33833, 32601, 32953, 33019, 32713, 34321, 33818, 33341, 33686, 32869, 33197, 32768, 33993, 33393, 34468, 31521, 33651, 32718, 31224, 33280, 32433, 31707, 32191, 32373, 31966, 34365, 32948, 34160, 33627, 32683, 33377, 33662, 33554, 33158, 32640, 34937, 32668, 33627, 34696, 34546, 34530, 32333, 32715, 34639, 32455, 32450, 34442, 31945, 33275, 33236, 32412, 33891, 33110, 32703, 32863, 31990, 32133, 34185, 34162, 33524, 31668, 32508, 33647, 33143, 32614, 32235, 32244, 33798, 31655, 32640, 31037, 33628, 32468, 34917, 33907, 33909, 35227, 33566, 32197, 34771, 32846, 33329, 32986, 32714, 32510, 32924, 32843, 31939, 35083, 33067, 33490, 33148, 33857, 33627, 33852, 33627, 33870, 32402, 32509, 31804, 33648, 32450, 33616, 32814, 32919, 35452, 34262, 34325, 34302, 33010, 33601, 34414, 34394, 33627, 32846, 32972, 35294, 32812, 32742, 34361, 31589 ],
        "4" : [ 12843, 12333, 13004, 13318, 13009, 12938, 12510, 12995, 12718, 13878, 13186, 12993, 13003, 13164, 12602, 12995, 13002, 13232, 12776, 12905, 12829, 13041, 12945, 13493, 12747, 13148, 12841, 12492, 13404, 12622, 12320, 12730, 13269, 12967, 13060, 12693, 13196, 12721, 13137, 12480, 12483, 12691, 14220, 13237, 12556, 12820, 12844, 13148, 12865, 13208, 12893, 13391, 12536, 13756, 12679, 12873, 12819, 12215, 12458, 12590, 12693, 13225, 13058, 13129, 12914, 12907, 13200, 12476, 13328, 13275, 12962, 12319, 13273, 13243, 13456, 12920, 12590, 13057, 13085, 13479, 13256, 13378, 13320, 12795, 13844, 13158, 12917, 13525, 12733, 13097, 12767, 13126, 12959, 13464, 12758, 12740, 12645, 12010, 13431, 12376, 12949, 12813, 13517, 12235, 13477, 13837, 12668, 13126, 12785, 12228, 12427, 12835, 13727, 12290, 13119, 12647, 12649, 13050, 12894, 12360, 12360, 13383, 13613, 12422, 12996, 13510, 12451, 12913, 13345, 13309, 13560, 13445, 12986, 12812, 13581, 12532, 13051, 13161, 13044, 13161, 13199, 13076, 13042, 12752, 12816, 12715, 13186, 13170, 12787, 12764, 13738, 13059, 13734, 12945, 13075, 12586, 13091, 13483, 12884, 12675, 13122, 12851, 12776, 13485, 13642, 13151, 12029, 12621, 12631, 12585, 12526, 12362, 12515, 12764, 12906, 13010, 12143, 12457, 13233, 12839, 13241, 13315, 13468, 12445, 13592, 12808, 12706, 12622, 13161, 12900, 13074, 13224, 12913, 13298, 13300, 13494, 12718, 13046, 12652, 12159 ],
        "1" : [ 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 20176, 18341, 20176, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 30551.0,
        "FinishedTasksDistributionInMs" : [ 483.0, 1131.0, 2299.0, 3168.0, 3837.0 ]
      },
      "StartTimeInMs" : 1702226582307,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12012,
        "IOBytes" : {
          "Total" : 98126953,
          "Details" : {
            "IR" : 9027936,
            "IW" : 0,
            "SR" : 79012656,
            "SW" : 10086361
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -1902112658,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 36280,
            "rowCount" : 5,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36280,
        "inputRowCount" : 5
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6146.0,
        "FinishedTasksDistributionInMs" : [ 1286.0, 1360.0, 1461.0, 2039.0, 2039.0 ]
      },
      "StartTimeInMs" : 1702226576100,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 18219,
        "IOBytes" : {
          "Total" : 216182624,
          "Details" : {
            "IR" : 58149967,
            "IW" : 0,
            "SR" : 79020001,
            "SW" : 79012656
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -1769082236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#149, cs_sold_date_sk#176] "
          },
          "12" : {
            "sign" : -2108845840,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "8" : {
            "sign" : -676735879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 620549706506466329418651670341,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "19" : {
            "sign" : 1767714420,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2340,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#78] "
          },
          "23" : {
            "sign" : 221498127,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 105384025536,
            "rowCount" : 8782002128,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#111] "
          },
          "4" : {
            "sign" : -367975839,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 82691109711932556146918170028345698811904000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "40" : {
            "sign" : 1151514882,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049552,
            "rowCount" : 122,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#302], BroadcastQueryStage 5 "
          },
          "15" : {
            "sign" : 1502709979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 671110661320,
            "rowCount" : 33555533066,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#77 = d_date_sk#78) "
          },
          "11" : {
            "sign" : -1746425347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4067932985076157440,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "9" : {
            "sign" : -401637925,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 853255846446391202950646046720,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          },
          "33" : {
            "sign" : -1525254171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 349586161480,
            "rowCount" : 17479308074,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#176 = d_date_sk#302) "
          },
          "22" : {
            "sign" : -911781174,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049552,
            "rowCount" : 122,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#78], BroadcastQueryStage 1 "
          },
          "26" : {
            "sign" : -37008340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#347 [ws_sold_date_sk#141]) "
          },
          "37" : {
            "sign" : 2119109088,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2340,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#302] "
          },
          "13" : {
            "sign" : 1589352060,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0 "
          },
          "24" : {
            "sign" : -1325438206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 175640042560,
            "rowCount" : 8782002128,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#141 = d_date_sk#274) "
          },
          "35" : {
            "sign" : 798745039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#348 [cs_sold_date_sk#176]) "
          },
          "16" : {
            "sign" : 1150356532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#57, ss_sold_date_sk#77] "
          },
          "5" : {
            "sign" : 537398178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 89051964305158137388988798492064598720512000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "10" : {
            "sign" : -822563440,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 853255846446391202950646046720,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "21" : {
            "sign" : -1032898136,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#78, d_date_id#79, d_date#80, d_month_seq#81, d_week_seq#82, d_quarter_seq#83, d_year#84, d_dow#85, d_moy#86, d_dom#87, d_qoy#88, d_fy_year#89, d_fy_quarter_seq#90, d_fy_week_seq#91, d_day_name#92, d_quarter_name#93, d_holiday#94, d_weekend#95, d_following_holiday#96, d_first_dom#97, d_last_dom#98, d_same_day_ly#99, d_same_day_lq#100, d_current_day#101, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : 634224540,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 209751696888,
            "rowCount" : 17479308074,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#149] "
          },
          "6" : {
            "sign" : 3039815,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 488020146787293328377369070409613312,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "36" : {
            "sign" : 2067005374,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#143, cs_ship_date_sk#144, cs_bill_customer_sk#145, cs_bill_cdemo_sk#146, cs_bill_hdemo_sk#147, cs_bill_addr_sk#148, cs_ship_customer_sk#149, cs_ship_cdemo_sk#150, cs_ship_hdemo_sk#151, cs_ship_addr_sk#152, cs_call_center_sk#153, cs_catalog_page_sk#154, cs_ship_mode_sk#155, cs_warehouse_sk#156, cs_item_sk#157, cs_promo_sk#158, cs_order_number#159L, cs_quantity#160, cs_wholesale_cost#161, cs_list_price#162, cs_sales_price#163, cs_ext_discount_amt#164, cs_ext_sales_price#165, cs_ext_wholesale_cost#166, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1355808730,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 120856237271286043599341940810659098263552000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1395232686,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#302, d_date_id#303, d_date#304, d_month_seq#305, d_week_seq#306, d_quarter_seq#307, d_year#308, d_dow#309, d_moy#310, d_dom#311, d_qoy#312, d_fy_year#313, d_fy_quarter_seq#314, d_fy_week_seq#315, d_day_name#316, d_quarter_name#317, d_holiday#318, d_weekend#319, d_following_holiday#320, d_first_dom#321, d_last_dom#322, d_same_day_ly#323, d_same_day_lq#324, d_current_day#325, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : 781417970,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#346 [ss_sold_date_sk#77]) "
          },
          "25" : {
            "sign" : -822687821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#111, ws_sold_date_sk#141] "
          },
          "14" : {
            "sign" : 1418309703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 402666396792,
            "rowCount" : 33555533066,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#57] "
          },
          "31" : {
            "sign" : -390345494,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1049552,
            "rowCount" : 122,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#274], BroadcastQueryStage 3 "
          },
          "42" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 182476000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "0" : {
            "sign" : 774257093,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 920891825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 47970,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78)) "
          },
          "27" : {
            "sign" : 851771108,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#108, ws_ship_date_sk#109, ws_item_sk#110, ws_bill_customer_sk#111, ws_bill_cdemo_sk#112, ws_bill_hdemo_sk#113, ws_bill_addr_sk#114, ws_ship_customer_sk#115, ws_ship_cdemo_sk#116, ws_ship_hdemo_sk#117, ws_ship_addr_sk#118, ws_web_page_sk#119, ws_web_site_sk#120, ws_ship_mode_sk#121, ws_warehouse_sk#122, ws_promo_sk#123, ws_order_number#124L, ws_quantity#125, ws_wholesale_cost#126, ws_list_price#127, ws_sales_price#128, ws_ext_discount_amt#129, ws_ext_sales_price#130, ws_ext_wholesale_cost#131, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "2" : {
            "sign" : -107089617,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 120856237271286043599341940810659098263552000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1463574651,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 47970,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#308) AND isnotnull(d_moy#310)) AND (((d_year#308 = 2002) AND (d_moy#310 >= 4)) AND (d_moy#310 <= 7))) AND isnotnull(d_date_sk#302)) "
          },
          "18" : {
            "sign" : 2103875801,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#55, ss_item_sk#56, ss_customer_sk#57, ss_cdemo_sk#58, ss_hdemo_sk#59, ss_addr_sk#60, ss_store_sk#61, ss_promo_sk#62, ss_ticket_number#63L, ss_quantity#64, ss_wholesale_cost#65, ss_list_price#66, ss_sales_price#67, ss_ext_discount_amt#68, ss_ext_sales_price#69, ss_ext_wholesale_cost#70, ss_ext_list_price#71, ss_ext_tax#72, ss_coupon_amt#73, ss_net_paid#74, ss_net_paid_inc_tax#75, ss_net_profit#76, ss_sold_date_sk#77], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -1375901434,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#274, d_date_id#275, d_date#276, d_month_seq#277, d_week_seq#278, d_quarter_seq#279, d_year#280, d_dow#281, d_moy#282, d_dom#283, d_qoy#284, d_fy_year#285, d_fy_quarter_seq#286, d_fy_week_seq#287, d_day_name#288, d_quarter_name#289, d_holiday#290, d_weekend#291, d_following_holiday#292, d_first_dom#293, d_last_dom#294, d_same_day_ly#295, d_same_day_lq#296, d_current_day#297, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 1293655820,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 813366911312155547295615117349355520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "29" : {
            "sign" : 485942979,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 47970,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#280) AND isnotnull(d_moy#282)) AND (((d_year#280 = 2002) AND (d_moy#282 >= 4)) AND (d_moy#282 <= 7))) AND isnotnull(d_date_sk#274)) "
          },
          "41" : {
            "sign" : -874177892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#33], BroadcastQueryStage 6 "
          },
          "3" : {
            "sign" : -210327465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 120856237271286043599341940810659098263552000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          },
          "28" : {
            "sign" : -1501053670,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2340,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#274] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalRelation",
          "toId" : 20,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Filter",
          "toId" : 19,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 15,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Join",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalRelation",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 26,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 26,
          "fromName" : "Filter",
          "toId" : 25,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Project",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 24,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Join",
          "toId" : 23,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#344 OR exists#345)\n               :     :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0\n               :     :        :  :  +- Project [ss_customer_sk#57]\n               :     :        :  :     +- Join Inner, (ss_sold_date_sk#77 = d_date_sk#78)\n               :     :        :  :        :- Project [ss_customer_sk#57, ss_sold_date_sk#77]\n               :     :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#346 [ss_sold_date_sk#77])\n               :     :        :  :        :     :  +- Project [d_date_sk#78]\n               :     :        :  :        :     :     +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n               :     :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n               :     :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#55,ss_item_sk#56,ss_customer_sk#57,ss_cdemo_sk#58,ss_hdemo_sk#59,ss_addr_sk#60,ss_store_sk#61,ss_promo_sk#62,ss_ticket_number#63L,ss_quantity#64,ss_wholesale_cost#65,ss_list_price#66,ss_sales_price#67,ss_ext_discount_amt#68,ss_ext_sales_price#69,ss_ext_wholesale_cost#70,ss_ext_list_price#71,ss_ext_tax#72,ss_coupon_amt#73,ss_net_paid#74,ss_net_paid_inc_tax#75,ss_net_profit#76,ss_sold_date_sk#77] parquet\n               :     :        :  :        +- LogicalQueryStage Project [d_date_sk#78], BroadcastQueryStage 1\n               :     :        :  +- Project [ws_bill_customer_sk#111]\n               :     :        :     +- Join Inner, (ws_sold_date_sk#141 = d_date_sk#274)\n               :     :        :        :- Project [ws_bill_customer_sk#111, ws_sold_date_sk#141]\n               :     :        :        :  +- Filter (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#347 [ws_sold_date_sk#141])\n               :     :        :        :     :  +- Project [d_date_sk#274]\n               :     :        :        :     :     +- Filter (((isnotnull(d_year#280) AND isnotnull(d_moy#282)) AND (((d_year#280 = 2002) AND (d_moy#282 >= 4)) AND (d_moy#282 <= 7))) AND isnotnull(d_date_sk#274))\n               :     :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#274,d_date_id#275,d_date#276,d_month_seq#277,d_week_seq#278,d_quarter_seq#279,d_year#280,d_dow#281,d_moy#282,d_dom#283,d_qoy#284,d_fy_year#285,d_fy_quarter_seq#286,d_fy_week_seq#287,d_day_name#288,d_quarter_name#289,d_holiday#290,d_weekend#291,d_following_holiday#292,d_first_dom#293,d_last_dom#294,d_same_day_ly#295,d_same_day_lq#296,d_current_day#297,... 4 more fields] parquet\n               :     :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#108,ws_ship_date_sk#109,ws_item_sk#110,ws_bill_customer_sk#111,ws_bill_cdemo_sk#112,ws_bill_hdemo_sk#113,ws_bill_addr_sk#114,ws_ship_customer_sk#115,ws_ship_cdemo_sk#116,ws_ship_hdemo_sk#117,ws_ship_addr_sk#118,ws_web_page_sk#119,ws_web_site_sk#120,ws_ship_mode_sk#121,ws_warehouse_sk#122,ws_promo_sk#123,ws_order_number#124L,ws_quantity#125,ws_wholesale_cost#126,ws_list_price#127,ws_sales_price#128,ws_ext_discount_amt#129,ws_ext_sales_price#130,ws_ext_wholesale_cost#131,... 10 more fields] parquet\n               :     :        :        +- LogicalQueryStage Project [d_date_sk#274], BroadcastQueryStage 3\n               :     :        +- Project [cs_ship_customer_sk#149]\n               :     :           +- Join Inner, (cs_sold_date_sk#176 = d_date_sk#302)\n               :     :              :- Project [cs_ship_customer_sk#149, cs_sold_date_sk#176]\n               :     :              :  +- Filter (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#348 [cs_sold_date_sk#176])\n               :     :              :     :  +- Project [d_date_sk#302]\n               :     :              :     :     +- Filter (((isnotnull(d_year#308) AND isnotnull(d_moy#310)) AND (((d_year#308 = 2002) AND (d_moy#310 >= 4)) AND (d_moy#310 <= 7))) AND isnotnull(d_date_sk#302))\n               :     :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#302,d_date_id#303,d_date#304,d_month_seq#305,d_week_seq#306,d_quarter_seq#307,d_year#308,d_dow#309,d_moy#310,d_dom#311,d_qoy#312,d_fy_year#313,d_fy_quarter_seq#314,d_fy_week_seq#315,d_day_name#316,d_quarter_name#317,d_holiday#318,d_weekend#319,d_following_holiday#320,d_first_dom#321,d_last_dom#322,d_same_day_ly#323,d_same_day_lq#324,d_current_day#325,... 4 more fields] parquet\n               :     :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#143,cs_ship_date_sk#144,cs_bill_customer_sk#145,cs_bill_cdemo_sk#146,cs_bill_hdemo_sk#147,cs_bill_addr_sk#148,cs_ship_customer_sk#149,cs_ship_cdemo_sk#150,cs_ship_hdemo_sk#151,cs_ship_addr_sk#152,cs_call_center_sk#153,cs_catalog_page_sk#154,cs_ship_mode_sk#155,cs_warehouse_sk#156,cs_item_sk#157,cs_promo_sk#158,cs_order_number#159L,cs_quantity#160,cs_wholesale_cost#161,cs_list_price#162,cs_sales_price#163,cs_ext_discount_amt#164,cs_ext_sales_price#165,cs_ext_wholesale_cost#166,... 10 more fields] parquet\n               :     :              +- LogicalQueryStage Project [d_date_sk#302], BroadcastQueryStage 5\n               :     +- LogicalQueryStage Project [ca_address_sk#33], BroadcastQueryStage 6\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86805811400,
        "inputRowCount" : 494160458
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226576470,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 17849,
        "IOBytes" : {
          "Total" : 210699938,
          "Details" : {
            "IR" : 52674626,
            "IW" : 0,
            "SR" : 79012656,
            "SW" : 79012656
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 727288681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4220520,
            "rowCount" : 211026,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "8" : {
            "sign" : 5169359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12073922828983968086574,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "4" : {
            "sign" : 642989621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2008108102240052581620265110208512000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "15" : {
            "sign" : 1208736820,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44421152,
            "rowCount" : 2776322,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#111], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 457146795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 187480360439040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "9" : {
            "sign" : -1583505465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 16601643889852956119040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          },
          "13" : {
            "sign" : 1589352060,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6752832,
            "rowCount" : 211026,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -608857490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 88551376,
            "rowCount" : 5534461,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#149], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : -1848061158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2162577956258518164821823964839936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "10" : {
            "sign" : 260805912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16601643889852956119040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "6" : {
            "sign" : -285821899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9495319278243519990260563968,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "1" : {
            "sign" : 2082276758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 2934927226350846080829618237997056000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -874177892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#33], BroadcastQueryStage 6 "
          },
          "14" : {
            "sign" : -7948388,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 169823136,
            "rowCount" : 10613946,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#57], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 605950673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 830178791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 2934927226350846080829618237997056000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : 2118551502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15825532130405866650434273280,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "3" : {
            "sign" : -1126353787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2934927226350846080829618237997056000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#344 OR exists#345)\n               :     :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#57], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#111], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#149], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#33], BroadcastQueryStage 6\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 538611216,
        "inputRowCount" : 21063801
      },
      "PD" : {
        "4" : [ 12843, 12333, 13004, 13318, 13009, 12938, 12510, 12995, 12718, 13878, 13186, 12993, 13003, 13164, 12602, 12995, 13002, 13232, 12776, 12905, 12829, 13041, 12945, 13493, 12747, 13148, 12841, 12492, 13404, 12622, 12320, 12730, 13269, 12967, 13060, 12693, 13196, 12721, 13137, 12480, 12483, 12691, 14220, 13237, 12556, 12820, 12844, 13148, 12865, 13208, 12893, 13391, 12536, 13756, 12679, 12873, 12819, 12215, 12458, 12590, 12693, 13225, 13058, 13129, 12914, 12907, 13200, 12476, 13328, 13275, 12962, 12319, 13273, 13243, 13456, 12920, 12590, 13057, 13085, 13479, 13256, 13378, 13320, 12795, 13844, 13158, 12917, 13525, 12733, 13097, 12767, 13126, 12959, 13464, 12758, 12740, 12645, 12010, 13431, 12376, 12949, 12813, 13517, 12235, 13477, 13837, 12668, 13126, 12785, 12228, 12427, 12835, 13727, 12290, 13119, 12647, 12649, 13050, 12894, 12360, 12360, 13383, 13613, 12422, 12996, 13510, 12451, 12913, 13345, 13309, 13560, 13445, 12986, 12812, 13581, 12532, 13051, 13161, 13044, 13161, 13199, 13076, 13042, 12752, 12816, 12715, 13186, 13170, 12787, 12764, 13738, 13059, 13734, 12945, 13075, 12586, 13091, 13483, 12884, 12675, 13122, 12851, 12776, 13485, 13642, 13151, 12029, 12621, 12631, 12585, 12526, 12362, 12515, 12764, 12906, 13010, 12143, 12457, 13233, 12839, 13241, 13315, 13468, 12445, 13592, 12808, 12706, 12622, 13161, 12900, 13074, 13224, 12913, 13298, 13300, 13494, 12718, 13046, 12652, 12159 ],
        "5" : [ 33823, 34027, 32777, 33627, 31764, 35132, 32537, 33295, 34179, 34879, 34041, 33274, 32806, 33221, 33892, 32997, 34446, 35425, 32714, 32691, 33182, 33461, 34302, 34242, 32938, 33051, 31781, 32344, 33563, 32498, 32342, 33408, 32860, 31389, 33256, 34180, 32404, 33068, 33031, 33481, 33256, 30302, 59074, 34057, 33544, 32415, 32865, 33123, 31517, 33381, 33521, 31123, 33872, 34605, 35142, 33350, 33782, 33256, 33310, 32328, 33773, 35122, 32903, 32324, 33507, 33237, 33489, 33852, 33086, 33682, 32450, 33032, 33687, 35274, 33691, 32924, 34374, 32845, 33129, 33833, 32601, 32953, 33019, 32713, 34321, 33818, 33341, 33686, 32869, 33197, 32768, 33993, 33393, 34468, 31521, 33651, 32718, 31224, 33280, 32433, 31707, 32191, 32373, 31966, 34365, 32948, 34160, 33627, 32683, 33377, 33662, 33554, 33158, 32640, 34937, 32668, 33627, 34696, 34546, 34530, 32333, 32715, 34639, 32455, 32450, 34442, 31945, 33275, 33236, 32412, 33891, 33110, 32703, 32863, 31990, 32133, 34185, 34162, 33524, 31668, 32508, 33647, 33143, 32614, 32235, 32244, 33798, 31655, 32640, 31037, 33628, 32468, 34917, 33907, 33909, 35227, 33566, 32197, 34771, 32846, 33329, 32986, 32714, 32510, 32924, 32843, 31939, 35083, 33067, 33490, 33148, 33857, 33627, 33852, 33627, 33870, 32402, 32509, 31804, 33648, 32450, 33616, 32814, 32919, 35452, 34262, 34325, 34302, 33010, 33601, 34414, 34394, 33627, 32846, 32972, 35294, 32812, 32742, 34361, 31589 ],
        "1" : [ 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 20176, 18341, 20176, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 16674 ],
        "2" : [ 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960, 290960 ],
        "3" : [ 52631, 51539, 51446, 50713, 51035, 53625, 51641, 48692, 53106, 53160, 52170, 51390, 51147, 51062, 51038, 52133, 53162, 53229, 51334, 51736, 52349, 51690, 54393, 51631, 51602, 50856, 50084, 52413, 52326, 52730, 51178, 51430, 51968, 50493, 52168, 53462, 50148, 51473, 51817, 51273, 50607, 52569, 143603, 52303, 52262, 50682, 52167, 50196, 51334, 52270, 52528, 53520, 49682, 49723, 51060, 50383, 51606, 50576, 51720, 51632, 51143, 52262, 51301, 51807, 50352, 53436, 52050, 49187, 53058, 51390, 55009, 50715, 50651, 50466, 52413, 51838, 52413, 51776, 52924, 52648, 51342, 52334, 51627, 50705, 51641, 51207, 52229, 51971, 52735, 51940, 52766, 51901, 50342, 49771, 51301, 54482, 48821, 51390, 52116, 49785, 52528, 52349, 50792, 51485, 50906, 53221, 51838, 53953, 48821, 50130, 49534, 52114, 53588, 48795, 52002, 50851, 50148, 50414, 51817, 51270, 51690, 53359, 50981, 52623, 52365, 51930, 50352, 50932, 51641, 49777, 54577, 53820, 52380, 52019, 49621, 50761, 52712, 51342, 53011, 51731, 49950, 51610, 51729, 52710, 53822, 52167, 54517, 52633, 53122, 52114, 51751, 51243, 52262, 50823, 53190, 52083, 51272, 52198, 53388, 51973, 50580, 51454, 52019, 50981, 52265, 53353, 52827, 52827, 52164, 51643, 52436, 53559, 53654, 52234, 51784, 51406, 51705, 50280, 52349, 50849, 51697, 51932, 53326, 51122, 53520, 51437, 52444, 52262, 49802, 51342, 52382, 50148, 51452, 49713, 53129, 52334, 52021, 49204, 51641, 51012 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226583277,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11042,
        "IOBytes" : {
          "Total" : 79134825,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 79012656,
            "SW" : 122169
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 727288681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "8" : {
            "sign" : 5169359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "4" : {
            "sign" : 642989621,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6472254640772477300917507773381476352000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "15" : {
            "sign" : 1208736820,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ws_bill_customer_sk#111], ShuffleQueryStage 9 "
          },
          "11" : {
            "sign" : 457146795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "9" : {
            "sign" : -1583505465,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          },
          "13" : {
            "sign" : 1589352060,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0 "
          },
          "16" : {
            "sign" : -608857490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_ship_customer_sk#149], ShuffleQueryStage 10 "
          },
          "5" : {
            "sign" : -1848061158,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6970120382370360170218854525180051456000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "10" : {
            "sign" : 260805912,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "6" : {
            "sign" : -285821899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 30603991984133444141956402249728,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "1" : {
            "sign" : 2082276758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 9459449090359774516725588284172926976000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -874177892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#33], BroadcastQueryStage 6 "
          },
          "14" : {
            "sign" : -7948388,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ss_customer_sk#57], ShuffleQueryStage 8 "
          },
          "0" : {
            "sign" : 605950673,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 830178791,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 9459449090359774516725588284172926976000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          },
          "7" : {
            "sign" : 2118551502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 51006653306889073569927337082880,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "3" : {
            "sign" : -1126353787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 9459449090359774516725588284172926976000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- Project [c_current_cdemo_sk#17]\n               :  +- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n               :     :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n               :     :  +- Filter (exists#344 OR exists#345)\n               :     :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n               :     :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n               :     :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n               :     :        :  :  :- LogicalQueryStage Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19], ShuffleQueryStage 0\n               :     :        :  :  +- LogicalQueryStage Project [ss_customer_sk#57], ShuffleQueryStage 8\n               :     :        :  +- LogicalQueryStage Project [ws_bill_customer_sk#111], ShuffleQueryStage 9\n               :     :        +- LogicalQueryStage Project [cs_ship_customer_sk#149], ShuffleQueryStage 10\n               :     +- LogicalQueryStage Project [ca_address_sk#33], BroadcastQueryStage 6\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5950293184,
        "inputRowCount" : 477410550
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 14073.0,
        "FinishedTasksDistributionInMs" : [ 110.0, 271.0, 483.0, 1203.0, 1557.0 ]
      },
      "StartTimeInMs" : 1702226578292,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16027,
        "IOBytes" : {
          "Total" : 146249110,
          "Details" : {
            "IR" : 44852428,
            "IW" : 0,
            "SR" : 79012656,
            "SW" : 22384026
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 786685715,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15200,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 15200,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -1172935720,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 521735379200,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 521735379200,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1829913411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 521735379200,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 521735379200,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], true\n      +- Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n         +- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n            +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n               :- LogicalQueryStage Project [c_current_cdemo_sk#17], ShuffleQueryStage 11\n               +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1803915553,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 15200,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [14]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cnt1#259L, cd_purchase_estimate#50, cnt2#260L, cd_credit_rating#51, cnt3#261L, cd_dep_count#52, cnt4#262L, cd_dep_employed_count#53, cnt5#263L, cd_dep_college_count#54, cnt6#264L] Arguments: 100, [cd_gender#47 ASC NULLS FIRST, cd_marital_status#48 ASC NULLS FIRST, cd_education_status#49 ASC NULLS FIRST, cd_purchase_estimate#50 ASC NULLS FIRST, cd_credit_rating#51 ASC NULLS FIRST, cd_dep_count#52 ASC NULLS FIRST, cd_dep_employed_count#53 ASC NULLS FIRST, cd_dep_college_count#54 ASC NULLS FIRST], [cd_gender#47, cd_marital_status#48, cd_education_status#49, cnt1#259L, cd_purchase_estimate#50, cnt2#260L, cd_credit_rating#51, cnt3#261L, cd_dep_count#52, cnt4#262L, cd_dep_employed_count#53, cnt5#263L, cd_dep_college_count#54, cnt6#264L] "
          },
          "1" : {
            "sign" : -1236874854,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 212104,
            "rowCount" : 1786,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [9]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, count#353L] Keys [8]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Functions [1]: [count(1)] Aggregate Attributes [1]: [count(1)#268L] Results [14]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1)#268L AS cnt1#259L, cd_purchase_estimate#50, count(1)#268L AS cnt2#260L, cd_credit_rating#51, count(1)#268L AS cnt3#261L, cd_dep_count#52, count(1)#268L AS cnt4#262L, cd_dep_employed_count#53, count(1)#268L AS cnt5#263L, cd_dep_college_count#54, count(1)#268L AS cnt6#264L] "
          },
          "2" : {
            "sign" : -1600405931,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, count#353L] Arguments: 13 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[cd_gender#47 ASC NULLS FIRST,cd_marital_status#48 ASC NULLS FIRST,cd_education_status#49 ASC NULLS FIRST,cd_purchase_estimate#50 ASC NULLS FIRST,cd_credit_rating#51 ASC NULLS FIRST,cd_dep_count#52 ASC NULLS FIRST,cd_dep_employed_count#53 ASC NULLS FIRST,cd_dep_college_count#54 ASC NULLS FIRST], output=[cd_gender#47,cd_marital_status#48,cd_education_status#49,cnt1#259L,cd_purchase_estimate#50,cnt2#260L,cd_credit_rating#51,cnt3#261L,cd_dep_count#52,cnt4#262L,cd_dep_employed_count#53,cnt5#263L,cd_dep_college_count#54,cnt6#264L])\n+- HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[count(1)], output=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cnt1#259L, cd_purchase_estimate#50, cnt2#260L, cd_credit_rating#51, cnt3#261L, cd_dep_count#52, cnt4#262L, cd_dep_employed_count#53, cnt5#263L, cd_dep_college_count#54, cnt6#264L])\n   +- ShuffleQueryStage 13\n      +- Exchange hashpartitioning(cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, 200), ENSURE_REQUIREMENTS, [plan_id=1449]\n         +- *(17) HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[partial_count(1)], output=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, count#353L])\n            +- *(17) Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n               +- *(17) BroadcastHashJoin [c_current_cdemo_sk#17], [cd_demo_sk#46], Inner, BuildLeft, false\n                  :- BroadcastQueryStage 12\n                  :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1397]\n                  :     +- AQEShuffleRead local\n                  :        +- ShuffleQueryStage 11\n                  :           +- Exchange hashpartitioning(c_current_cdemo_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=1307]\n                  :              +- *(16) Project [c_current_cdemo_sk#17]\n                  :                 +- *(16) BroadcastHashJoin [c_current_addr_sk#19], [ca_address_sk#33], Inner, BuildRight, false\n                  :                    :- *(16) Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n                  :                    :  +- *(16) Filter (exists#344 OR exists#345)\n                  :                    :     +- *(16) SortMergeJoin [c_customer_sk#15], [cs_ship_customer_sk#149], ExistenceJoin(exists#345)\n                  :                    :        :- *(14) SortMergeJoin [c_customer_sk#15], [ws_bill_customer_sk#111], ExistenceJoin(exists#344)\n                  :                    :        :  :- *(12) SortMergeJoin [c_customer_sk#15], [ss_customer_sk#57], LeftSemi\n                  :                    :        :  :  :- *(10) Sort [c_customer_sk#15 ASC NULLS FIRST], false, 0\n                  :                    :        :  :  :  +- AQEShuffleRead coalesced\n                  :                    :        :  :  :     +- ShuffleQueryStage 0\n                  :                    :        :  :  :        +- Exchange hashpartitioning(c_customer_sk#15, 200), ENSURE_REQUIREMENTS, [plan_id=370]\n                  :                    :        :  :  :           +- *(1) Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(Subquery subquery#351, [id=#144], xxhash64(c_current_addr_sk#19, 42)))\n                  :                    :        :  :  :              :  +- Subquery subquery#351, [id=#144]\n                  :                    :        :  :  :              :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                                              +- == Final Plan ==\n                                                                                 ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                                                                 +- ShuffleQueryStage 0\n                                                                                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=516]\n                                                                                       +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                                                          +- *(1) Project [ca_address_sk#33]\n                                                                                             +- *(1) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                                                                +- *(1) ColumnarToRow\n                                                                                                   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n                                                                              +- == Initial Plan ==\n                                                                                 ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                                                                 +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=142]\n                                                                                    +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                                                       +- Project [ca_address_sk#33]\n                                                                                          +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                                                             +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n                  :                    :        :  :  :              +- *(1) ColumnarToRow\n                  :                    :        :  :  :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#15,c_current_cdemo_sk#17,c_current_addr_sk#19] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#19), isnotnull(c_current_cdemo_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n                  :                    :        :  :  +- *(11) Sort [ss_customer_sk#57 ASC NULLS FIRST], false, 0\n                  :                    :        :  :     +- AQEShuffleRead coalesced\n                  :                    :        :  :        +- ShuffleQueryStage 8\n                  :                    :        :  :           +- Exchange hashpartitioning(ss_customer_sk#57, 200), ENSURE_REQUIREMENTS, [plan_id=734]\n                  :                    :        :  :              +- *(7) Project [ss_customer_sk#57]\n                  :                    :        :  :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#77], [d_date_sk#78], Inner, BuildRight, false\n                  :                    :        :  :                    :- *(7) ColumnarToRow\n                  :                    :        :  :                    :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#57,ss_sold_date_sk#77] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#77), dynamicpruningexpression(ss_sold_date_sk#77 IN dynamicpruning#346)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n                  :                    :        :  :                    :        +- SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n                  :                    :        :  :                    :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#78], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=710]\n                                                                                          +- Project [d_date_sk#78]\n                                                                                             +- Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                  :                    :        :  :                    +- BroadcastQueryStage 1\n                  :                    :        :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                  :                    :        :  :                          +- *(2) Project [d_date_sk#78]\n                  :                    :        :  :                             +- *(2) Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n                  :                    :        :  :                                +- *(2) ColumnarToRow\n                  :                    :        :  :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                  :                    :        :  +- *(13) Sort [ws_bill_customer_sk#111 ASC NULLS FIRST], false, 0\n                  :                    :        :     +- AQEShuffleRead coalesced\n                  :                    :        :        +- ShuffleQueryStage 9\n                  :                    :        :           +- Exchange hashpartitioning(ws_bill_customer_sk#111, 200), ENSURE_REQUIREMENTS, [plan_id=776]\n                  :                    :        :              +- *(8) Project [ws_bill_customer_sk#111]\n                  :                    :        :                 +- *(8) BroadcastHashJoin [ws_sold_date_sk#141], [d_date_sk#274], Inner, BuildRight, false\n                  :                    :        :                    :- *(8) ColumnarToRow\n                  :                    :        :                    :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#111,ws_sold_date_sk#141] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#141), dynamicpruningexpression(ws_sold_date_sk#141 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n                  :                    :        :                    :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n                  :                    :        :                    +- BroadcastQueryStage 3\n                  :                    :        :                       +- ReusedExchange [d_date_sk#274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                  :                    :        +- *(15) Sort [cs_ship_customer_sk#149 ASC NULLS FIRST], false, 0\n                  :                    :           +- AQEShuffleRead coalesced\n                  :                    :              +- ShuffleQueryStage 10\n                  :                    :                 +- Exchange hashpartitioning(cs_ship_customer_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=818]\n                  :                    :                    +- *(9) Project [cs_ship_customer_sk#149]\n                  :                    :                       +- *(9) BroadcastHashJoin [cs_sold_date_sk#176], [d_date_sk#302], Inner, BuildRight, false\n                  :                    :                          :- *(9) ColumnarToRow\n                  :                    :                          :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#149,cs_sold_date_sk#176] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#176), dynamicpruningexpression(cs_sold_date_sk#176 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n                  :                    :                          :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n                  :                    :                          +- BroadcastQueryStage 5\n                  :                    :                             +- ReusedExchange [d_date_sk#302], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                  :                    +- BroadcastQueryStage 6\n                  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=467]\n                  :                          +- *(5) Project [ca_address_sk#33]\n                  :                             +- *(5) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                  :                                +- *(5) ColumnarToRow\n                  :                                   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n                  +- AQEShuffleRead local\n                     +- ShuffleQueryStage 7\n                        +- Exchange hashpartitioning(cd_demo_sk#46, 200), ENSURE_REQUIREMENTS, [plan_id=488]\n                           +- *(6) Filter isnotnull(cd_demo_sk#46)\n                              +- *(6) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#46,cd_gender#47,cd_marital_status#48,cd_education_status#49,cd_purchase_estimate#50,cd_credit_rating#51,cd_dep_count#52,cd_dep_employed_count#53,cd_dep_college_count#54] Batched: true, DataFilters: [isnotnull(cd_demo_sk#46)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 212104,
        "inputRowCount" : 1786
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "7" : [ 405, 368, 593, 539, 539, 334, 593, 490, 593, 490, 652, 593, 405, 368, 652, 405, 490, 593, 445, 368, 490, 490, 445, 445, 593, 652, 717, 445, 368, 593, 276, 652, 490, 539, 490, 652, 490, 490, 334, 445, 490, 539, 652, 445, 717, 0, 368, 445, 539, 490, 490, 652, 593, 405, 593, 539, 405, 445, 789, 368, 652, 490, 490, 652, 490, 539, 368, 490, 539, 789, 368, 445, 490, 539, 539, 539, 490, 405, 652, 490, 717, 539, 593, 405, 490, 490, 445, 593, 652, 304, 490, 334, 405, 368, 539, 539, 490, 593, 593, 276, 539, 368, 717, 445, 304, 652, 652, 593, 652, 405, 490, 652, 539, 593, 490, 490, 593, 445, 539, 539, 652, 539, 652, 490, 490, 593, 652, 539, 405, 368, 717, 368, 593, 652, 593, 490, 405, 593, 445, 593, 276, 539, 593, 445, 539, 652, 334, 539, 405, 368, 539, 652, 445, 405, 717, 789, 490, 789, 593, 490, 717, 717, 717, 539, 593, 593, 445, 789, 445, 789, 539, 593, 593, 652, 593, 405, 789, 490, 445, 368, 445, 593, 652, 405, 490, 445, 717, 445, 789, 304, 717, 368, 539, 652, 368, 445, 445, 539, 652, 405 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 28 ],
      "Objectives" : {
        "DurationInMs" : 121,
        "TotalTasksDurationInMs" : 112,
        "IOBytes" : {
          "Total" : 99922,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 99922,
            "SW" : 0
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 2067005374,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#143, cs_ship_date_sk#144, cs_bill_customer_sk#145, cs_bill_cdemo_sk#146, cs_bill_hdemo_sk#147, cs_bill_addr_sk#148, cs_ship_customer_sk#149, cs_ship_cdemo_sk#150, cs_ship_hdemo_sk#151, cs_ship_addr_sk#152, cs_call_center_sk#153, cs_catalog_page_sk#154, cs_ship_mode_sk#155, cs_warehouse_sk#156, cs_item_sk#157, cs_promo_sk#158, cs_order_number#159L, cs_quantity#160, cs_wholesale_cost#161, cs_list_price#162, cs_sales_price#163, cs_ext_discount_amt#164, cs_ext_sales_price#165, cs_ext_wholesale_cost#166, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -2111343793,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 2770325240,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#176 = d_date_sk#302) "
          },
          "0" : {
            "sign" : 341516358,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1662195144,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 1662195144,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#149] "
          },
          "2" : {
            "sign" : -1769082236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2292368272,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 2292368272,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ship_customer_sk#149, cs_sold_date_sk#176] "
          },
          "3" : {
            "sign" : 798745039,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#348 [cs_sold_date_sk#176]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_ship_customer_sk#149]\n+- Join Inner, (cs_sold_date_sk#176 = d_date_sk#302)\n   :- Project [cs_ship_customer_sk#149, cs_sold_date_sk#176]\n   :  +- Filter (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#348 [cs_sold_date_sk#176])\n   :     :  +- Project [d_date_sk#302]\n   :     :     +- Filter (((isnotnull(d_year#308) AND isnotnull(d_moy#310)) AND (((d_year#308 = 2002) AND (d_moy#310 >= 4)) AND (d_moy#310 <= 7))) AND isnotnull(d_date_sk#302))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#302,d_date_id#303,d_date#304,d_month_seq#305,d_week_seq#306,d_quarter_seq#307,d_year#308,d_dow#309,d_moy#310,d_dom#311,d_qoy#312,d_fy_year#313,d_fy_quarter_seq#314,d_fy_week_seq#315,d_day_name#316,d_quarter_name#317,d_holiday#318,d_weekend#319,d_following_holiday#320,d_first_dom#321,d_last_dom#322,d_same_day_ly#323,d_same_day_lq#324,d_current_day#325,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#143,cs_ship_date_sk#144,cs_bill_customer_sk#145,cs_bill_cdemo_sk#146,cs_bill_hdemo_sk#147,cs_bill_addr_sk#148,cs_ship_customer_sk#149,cs_ship_cdemo_sk#150,cs_ship_hdemo_sk#151,cs_ship_addr_sk#152,cs_call_center_sk#153,cs_catalog_page_sk#154,cs_ship_mode_sk#155,cs_warehouse_sk#156,cs_item_sk#157,cs_promo_sk#158,cs_order_number#159L,cs_quantity#160,cs_wholesale_cost#161,cs_list_price#162,cs_sales_price#163,cs_ext_discount_amt#164,cs_ext_sales_price#165,cs_ext_wholesale_cost#166,... 10 more fields] parquet\n   +- Project [d_date_sk#302]\n      +- Filter (((isnotnull(d_year#308) AND isnotnull(d_moy#310)) AND (((d_year#308 = 2002) AND (d_moy#310 >= 4)) AND (d_moy#310 <= 7))) AND isnotnull(d_date_sk#302))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#302,d_date_id#303,d_date#304,d_month_seq#305,d_week_seq#306,d_quarter_seq#307,d_year#308,d_dow#309,d_moy#310,d_dom#311,d_qoy#312,d_fy_year#313,d_fy_quarter_seq#314,d_fy_week_seq#315,d_day_name#316,d_quarter_name#317,d_holiday#318,d_weekend#319,d_following_holiday#320,d_first_dom#321,d_last_dom#322,d_same_day_ly#323,d_same_day_lq#324,d_current_day#325,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -2127010430,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1662195144,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [cs_ship_customer_sk#149] Input [3]: [cs_ship_customer_sk#149, cs_sold_date_sk#176, d_date_sk#302] "
          },
          "1" : {
            "sign" : -1394029177,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#176] Right keys [1]: [d_date_sk#302] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : 1912426943,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2292368272,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [2]: [cs_ship_customer_sk#149, cs_sold_date_sk#176] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#176), dynamicpruningexpression(cs_sold_date_sk#176 IN dynamicpruning#346)] ReadSchema: struct<cs_ship_customer_sk:int> "
          },
          "3" : {
            "sign" : -892656981,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049552,
            "rowCount" : 122,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#302] Arguments: 5 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_ship_customer_sk#149]\n+- BroadcastHashJoin [cs_sold_date_sk#176], [d_date_sk#302], Inner, BuildRight, false\n   :- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#149,cs_sold_date_sk#176] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#176), dynamicpruningexpression(cs_sold_date_sk#176 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n   :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n   +- BroadcastQueryStage 5\n      +- ReusedExchange [d_date_sk#302], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2293417824,
        "inputRowCount" : 143273139
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 110.0,
        "FinishedTasksDistributionInMs" : [ 110.0, 110.0, 110.0, 110.0, 110.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 5530,
        "TotalTasksDurationInMs" : 8085,
        "IOBytes" : {
          "Total" : 14761020,
          "Details" : {
            "IR" : 8398417,
            "IW" : 0,
            "SR" : 0,
            "SW" : 6362603
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -800848879,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              },
              "compileTime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "1" : {
            "sign" : 657277829,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 482513000,
                "rowCount" : 1930052
              },
              "compileTime" : {
                "sizeInBytes" : 482513000,
                "rowCount" : 1930052
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(scalar-subquery#351 [], xxhash64(c_current_addr_sk#19, 42))) "
          },
          "2" : {
            "sign" : 679119660,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#15, c_customer_id#16, c_current_cdemo_sk#17, c_current_hdemo_sk#18, c_current_addr_sk#19, c_first_shipto_date_sk#20, c_first_sales_date_sk#21, c_salutation#22, c_first_name#23, c_last_name#24, c_preferred_cust_flag#25, c_birth_day#26, c_birth_month#27, c_birth_year#28, c_birth_country#29, c_login#30, c_email_address#31, c_last_review_date#32], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19]\n+- Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(scalar-subquery#351 [], xxhash64(c_current_addr_sk#19, 42)))\n   :  +- Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350]\n   :     +- Project [ca_address_sk#33]\n   :        +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n   :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#15,c_customer_id#16,c_current_cdemo_sk#17,c_current_hdemo_sk#18,c_current_addr_sk#19,c_first_shipto_date_sk#20,c_first_sales_date_sk#21,c_salutation#22,c_first_name#23,c_last_name#24,c_preferred_cust_flag#25,c_birth_day#26,c_birth_month#27,c_birth_year#28,c_birth_country#29,c_login#30,c_email_address#31,c_last_review_date#32] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1444677986,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19] Condition : ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(Subquery subquery#351, [id=#144], xxhash64(c_current_addr_sk#19, 42))) "
          },
          "1" : {
            "sign" : -1561329725,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [3]: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)] ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(Subquery subquery#351, [id=#144], xxhash64(c_current_addr_sk#19, 42)))\n:  +- Subquery subquery#351, [id=#144]\n:     +- AdaptiveSparkPlan isFinalPlan=false\n:        +- ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n:           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=142]\n:              +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n:                 +- Project [ca_address_sk#33]\n:                    +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n:                       +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#15,c_current_cdemo_sk#17,c_current_addr_sk#19] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#19), isnotnull(c_current_cdemo_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 38601040,
        "inputRowCount" : 1930052
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 4302,
        "TotalTasksDurationInMs" : 16020,
        "IOBytes" : {
          "Total" : 27484260,
          "Details" : {
            "IR" : 24019979,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3464281
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1897699911,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 521735379200,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 521735379200,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L] "
          },
          "1" : {
            "sign" : 2026060079,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 356976838400,
                "rowCount" : 3432469600
              },
              "compileTime" : {
                "sizeInBytes" : 356976838400,
                "rowCount" : 3432469600
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "2" : {
            "sign" : 761023708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 384436595200,
                "rowCount" : 3432469600
              },
              "compileTime" : {
                "sizeInBytes" : 384436595200,
                "rowCount" : 3432469600
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17) "
          },
          "3" : {
            "sign" : 479948177,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 227752000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], [cd_gender#47, cd_marital_status#48, cd_education_status#49, count(1) AS cnt1#259L, cd_purchase_estimate#50, count(1) AS cnt2#260L, cd_credit_rating#51, count(1) AS cnt3#261L, cd_dep_count#52, count(1) AS cnt4#262L, cd_dep_employed_count#53, count(1) AS cnt5#263L, cd_dep_college_count#54, count(1) AS cnt6#264L]\n+- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n   +- Join Inner, (cd_demo_sk#46 = c_current_cdemo_sk#17)\n      :- LogicalQueryStage Project [c_current_cdemo_sk#17], ShuffleQueryStage 11\n      +- LogicalQueryStage Filter isnotnull(cd_demo_sk#46), ShuffleQueryStage 7\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -932568214,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 227752000,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [9]: [cd_demo_sk#46, cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Arguments: 7 "
          },
          "1" : {
            "sign" : 150350820,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 356976838400,
            "rowCount" : 3432469600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Input [10]: [c_current_cdemo_sk#17, cd_demo_sk#46, cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] "
          },
          "0" : {
            "sign" : 1464326985,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 521735379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [8]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Keys [8]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Functions [1]: [partial_count(1)] Aggregate Attributes [1]: [count#352L] Results [9]: [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, count#353L] "
          },
          "2" : {
            "sign" : 155006717,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 384436595200,
            "rowCount" : 3432469600,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_cdemo_sk#17] Right keys [1]: [cd_demo_sk#46] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 1901140846,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1114112,
            "rowCount" : 1787,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [c_current_cdemo_sk#17] Arguments: 12 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], functions=[partial_count(1)], output=[cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54, count#353L])\n+- Project [cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54]\n   +- BroadcastHashJoin [c_current_cdemo_sk#17], [cd_demo_sk#46], Inner, BuildLeft, false\n      :- BroadcastQueryStage 12\n      :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1397]\n      :     +- AQEShuffleRead local\n      :        +- ShuffleQueryStage 11\n      :           +- Exchange hashpartitioning(c_current_cdemo_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=1307]\n      :              +- *(16) Project [c_current_cdemo_sk#17]\n      :                 +- *(16) BroadcastHashJoin [c_current_addr_sk#19], [ca_address_sk#33], Inner, BuildRight, false\n      :                    :- *(16) Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n      :                    :  +- *(16) Filter (exists#344 OR exists#345)\n      :                    :     +- *(16) SortMergeJoin [c_customer_sk#15], [cs_ship_customer_sk#149], ExistenceJoin(exists#345)\n      :                    :        :- *(14) SortMergeJoin [c_customer_sk#15], [ws_bill_customer_sk#111], ExistenceJoin(exists#344)\n      :                    :        :  :- *(12) SortMergeJoin [c_customer_sk#15], [ss_customer_sk#57], LeftSemi\n      :                    :        :  :  :- *(10) Sort [c_customer_sk#15 ASC NULLS FIRST], false, 0\n      :                    :        :  :  :  +- AQEShuffleRead coalesced\n      :                    :        :  :  :     +- ShuffleQueryStage 0\n      :                    :        :  :  :        +- Exchange hashpartitioning(c_customer_sk#15, 200), ENSURE_REQUIREMENTS, [plan_id=370]\n      :                    :        :  :  :           +- *(1) Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(Subquery subquery#351, [id=#144], xxhash64(c_current_addr_sk#19, 42)))\n      :                    :        :  :  :              :  +- Subquery subquery#351, [id=#144]\n      :                    :        :  :  :              :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                                                     +- ShuffleQueryStage 0\n                                                                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=516]\n                                                                           +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                                              +- *(1) Project [ca_address_sk#33]\n                                                                                 +- *(1) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                                                    +- *(1) ColumnarToRow\n                                                                                       +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n                                                                  +- == Initial Plan ==\n                                                                     ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                                                     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=142]\n                                                                        +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                                           +- Project [ca_address_sk#33]\n                                                                              +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                                                 +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n      :                    :        :  :  :              +- *(1) ColumnarToRow\n      :                    :        :  :  :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#15,c_current_cdemo_sk#17,c_current_addr_sk#19] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#19), isnotnull(c_current_cdemo_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n      :                    :        :  :  +- *(11) Sort [ss_customer_sk#57 ASC NULLS FIRST], false, 0\n      :                    :        :  :     +- AQEShuffleRead coalesced\n      :                    :        :  :        +- ShuffleQueryStage 8\n      :                    :        :  :           +- Exchange hashpartitioning(ss_customer_sk#57, 200), ENSURE_REQUIREMENTS, [plan_id=734]\n      :                    :        :  :              +- *(7) Project [ss_customer_sk#57]\n      :                    :        :  :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#77], [d_date_sk#78], Inner, BuildRight, false\n      :                    :        :  :                    :- *(7) ColumnarToRow\n      :                    :        :  :                    :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#57,ss_sold_date_sk#77] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#77), dynamicpruningexpression(ss_sold_date_sk#77 IN dynamicpruning#346)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n      :                    :        :  :                    :        +- SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n      :                    :        :  :                    :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                                           +- == Final Plan ==\n                                                                              BroadcastQueryStage 1\n                                                                              +- ReusedExchange [d_date_sk#78], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                                                                           +- == Initial Plan ==\n                                                                              BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=710]\n                                                                              +- Project [d_date_sk#78]\n                                                                                 +- Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :                    :        :  :                    +- BroadcastQueryStage 1\n      :                    :        :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n      :                    :        :  :                          +- *(2) Project [d_date_sk#78]\n      :                    :        :  :                             +- *(2) Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n      :                    :        :  :                                +- *(2) ColumnarToRow\n      :                    :        :  :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :                    :        :  +- *(13) Sort [ws_bill_customer_sk#111 ASC NULLS FIRST], false, 0\n      :                    :        :     +- AQEShuffleRead coalesced\n      :                    :        :        +- ShuffleQueryStage 9\n      :                    :        :           +- Exchange hashpartitioning(ws_bill_customer_sk#111, 200), ENSURE_REQUIREMENTS, [plan_id=776]\n      :                    :        :              +- *(8) Project [ws_bill_customer_sk#111]\n      :                    :        :                 +- *(8) BroadcastHashJoin [ws_sold_date_sk#141], [d_date_sk#274], Inner, BuildRight, false\n      :                    :        :                    :- *(8) ColumnarToRow\n      :                    :        :                    :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#111,ws_sold_date_sk#141] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#141), dynamicpruningexpression(ws_sold_date_sk#141 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n      :                    :        :                    :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n      :                    :        :                    +- BroadcastQueryStage 3\n      :                    :        :                       +- ReusedExchange [d_date_sk#274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n      :                    :        +- *(15) Sort [cs_ship_customer_sk#149 ASC NULLS FIRST], false, 0\n      :                    :           +- AQEShuffleRead coalesced\n      :                    :              +- ShuffleQueryStage 10\n      :                    :                 +- Exchange hashpartitioning(cs_ship_customer_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=818]\n      :                    :                    +- *(9) Project [cs_ship_customer_sk#149]\n      :                    :                       +- *(9) BroadcastHashJoin [cs_sold_date_sk#176], [d_date_sk#302], Inner, BuildRight, false\n      :                    :                          :- *(9) ColumnarToRow\n      :                    :                          :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#149,cs_sold_date_sk#176] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#176), dynamicpruningexpression(cs_sold_date_sk#176 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n      :                    :                          :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n      :                    :                          +- BroadcastQueryStage 5\n      :                    :                             +- ReusedExchange [d_date_sk#302], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n      :                    +- BroadcastQueryStage 6\n      :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=467]\n      :                          +- *(5) Project [ca_address_sk#33]\n      :                             +- *(5) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n      :                                +- *(5) ColumnarToRow\n      :                                   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n      +- ShuffleQueryStage 7\n         +- Exchange hashpartitioning(cd_demo_sk#46, 200), ENSURE_REQUIREMENTS, [plan_id=488]\n            +- *(6) Filter isnotnull(cd_demo_sk#46)\n               +- *(6) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#46,cd_gender#47,cd_marital_status#48,cd_education_status#49,cd_purchase_estimate#50,cd_credit_rating#51,cd_dep_count#52,cd_dep_employed_count#53,cd_dep_college_count#54] Batched: true, DataFilters: [isnotnull(cd_demo_sk#46)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 228866112,
        "inputRowCount" : 1922587
      },
      "InitialPartitionNum" : 200,
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 25 ],
      "Objectives" : {
        "DurationInMs" : 974,
        "TotalTasksDurationInMs" : 966,
        "IOBytes" : {
          "Total" : 56728552,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 56628630,
            "SW" : 99922
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1296491319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149) "
          },
          "5" : {
            "sign" : 1912262946,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 32191231541150400,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 32191231541150400,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111) "
          },
          "6" : {
            "sign" : -756241687,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              },
              "compileTime" : {
                "sizeInBytes" : 38601040,
                "rowCount" : 1930052
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (c_customer_sk#15 = ss_customer_sk#57) "
          },
          "1" : {
            "sign" : -736822678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1193133537589430996440103267640,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1193133537589430996440103267640,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#19 = ca_address_sk#33) "
          },
          "0" : {
            "sign" : -845065583,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 715880122553658597864061960584,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 715880122553658597864061960584,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17] "
          },
          "2" : {
            "sign" : 73764658,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38914988179694422584478254,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 38914988179694422584478254,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_current_cdemo_sk#17, c_current_addr_sk#19] "
          },
          "3" : {
            "sign" : 1501649234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 53508108747079831053657600,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (exists#344 OR exists#345) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_current_cdemo_sk#17]\n+- Join Inner, (c_current_addr_sk#19 = ca_address_sk#33)\n   :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n   :  +- Filter (exists#344 OR exists#345)\n   :     +- Join ExistenceJoin(exists#345), (c_customer_sk#15 = cs_ship_customer_sk#149)\n   :        :- Join ExistenceJoin(exists#344), (c_customer_sk#15 = ws_bill_customer_sk#111)\n   :        :  :- Join LeftSemi, (c_customer_sk#15 = ss_customer_sk#57)\n   :        :  :  :- Project [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19]\n   :        :  :  :  +- Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(scalar-subquery#351 [], xxhash64(c_current_addr_sk#19, 42)))\n   :        :  :  :     :  +- Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350]\n   :        :  :  :     :     +- Project [ca_address_sk#33]\n   :        :  :  :     :        +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n   :        :  :  :     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n   :        :  :  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#15,c_customer_id#16,c_current_cdemo_sk#17,c_current_hdemo_sk#18,c_current_addr_sk#19,c_first_shipto_date_sk#20,c_first_sales_date_sk#21,c_salutation#22,c_first_name#23,c_last_name#24,c_preferred_cust_flag#25,c_birth_day#26,c_birth_month#27,c_birth_year#28,c_birth_country#29,c_login#30,c_email_address#31,c_last_review_date#32] parquet\n   :        :  :  +- Project [ss_customer_sk#57]\n   :        :  :     +- Join Inner, (ss_sold_date_sk#77 = d_date_sk#78)\n   :        :  :        :- Project [ss_customer_sk#57, ss_sold_date_sk#77]\n   :        :  :        :  +- Filter (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#346 [ss_sold_date_sk#77])\n   :        :  :        :     :  +- Project [d_date_sk#78]\n   :        :  :        :     :     +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n   :        :  :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n   :        :  :        :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#55,ss_item_sk#56,ss_customer_sk#57,ss_cdemo_sk#58,ss_hdemo_sk#59,ss_addr_sk#60,ss_store_sk#61,ss_promo_sk#62,ss_ticket_number#63L,ss_quantity#64,ss_wholesale_cost#65,ss_list_price#66,ss_sales_price#67,ss_ext_discount_amt#68,ss_ext_sales_price#69,ss_ext_wholesale_cost#70,ss_ext_list_price#71,ss_ext_tax#72,ss_coupon_amt#73,ss_net_paid#74,ss_net_paid_inc_tax#75,ss_net_profit#76,ss_sold_date_sk#77] parquet\n   :        :  :        +- Project [d_date_sk#78]\n   :        :  :           +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n   :        :  :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n   :        :  +- Project [ws_bill_customer_sk#111]\n   :        :     +- Join Inner, (ws_sold_date_sk#141 = d_date_sk#274)\n   :        :        :- Project [ws_bill_customer_sk#111, ws_sold_date_sk#141]\n   :        :        :  +- Filter (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#347 [ws_sold_date_sk#141])\n   :        :        :     :  +- Project [d_date_sk#274]\n   :        :        :     :     +- Filter (((isnotnull(d_year#280) AND isnotnull(d_moy#282)) AND (((d_year#280 = 2002) AND (d_moy#282 >= 4)) AND (d_moy#282 <= 7))) AND isnotnull(d_date_sk#274))\n   :        :        :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#274,d_date_id#275,d_date#276,d_month_seq#277,d_week_seq#278,d_quarter_seq#279,d_year#280,d_dow#281,d_moy#282,d_dom#283,d_qoy#284,d_fy_year#285,d_fy_quarter_seq#286,d_fy_week_seq#287,d_day_name#288,d_quarter_name#289,d_holiday#290,d_weekend#291,d_following_holiday#292,d_first_dom#293,d_last_dom#294,d_same_day_ly#295,d_same_day_lq#296,d_current_day#297,... 4 more fields] parquet\n   :        :        :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#108,ws_ship_date_sk#109,ws_item_sk#110,ws_bill_customer_sk#111,ws_bill_cdemo_sk#112,ws_bill_hdemo_sk#113,ws_bill_addr_sk#114,ws_ship_customer_sk#115,ws_ship_cdemo_sk#116,ws_ship_hdemo_sk#117,ws_ship_addr_sk#118,ws_web_page_sk#119,ws_web_site_sk#120,ws_ship_mode_sk#121,ws_warehouse_sk#122,ws_promo_sk#123,ws_order_number#124L,ws_quantity#125,ws_wholesale_cost#126,ws_list_price#127,ws_sales_price#128,ws_ext_discount_amt#129,ws_ext_sales_price#130,ws_ext_wholesale_cost#131,... 10 more fields] parquet\n   :        :        +- Project [d_date_sk#274]\n   :        :           +- Filter (((isnotnull(d_year#280) AND isnotnull(d_moy#282)) AND (((d_year#280 = 2002) AND (d_moy#282 >= 4)) AND (d_moy#282 <= 7))) AND isnotnull(d_date_sk#274))\n   :        :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#274,d_date_id#275,d_date#276,d_month_seq#277,d_week_seq#278,d_quarter_seq#279,d_year#280,d_dow#281,d_moy#282,d_dom#283,d_qoy#284,d_fy_year#285,d_fy_quarter_seq#286,d_fy_week_seq#287,d_day_name#288,d_quarter_name#289,d_holiday#290,d_weekend#291,d_following_holiday#292,d_first_dom#293,d_last_dom#294,d_same_day_ly#295,d_same_day_lq#296,d_current_day#297,... 4 more fields] parquet\n   :        +- Project [cs_ship_customer_sk#149]\n   :           +- Join Inner, (cs_sold_date_sk#176 = d_date_sk#302)\n   :              :- Project [cs_ship_customer_sk#149, cs_sold_date_sk#176]\n   :              :  +- Filter (isnotnull(cs_sold_date_sk#176) AND dynamicpruning#348 [cs_sold_date_sk#176])\n   :              :     :  +- Project [d_date_sk#302]\n   :              :     :     +- Filter (((isnotnull(d_year#308) AND isnotnull(d_moy#310)) AND (((d_year#308 = 2002) AND (d_moy#310 >= 4)) AND (d_moy#310 <= 7))) AND isnotnull(d_date_sk#302))\n   :              :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#302,d_date_id#303,d_date#304,d_month_seq#305,d_week_seq#306,d_quarter_seq#307,d_year#308,d_dow#309,d_moy#310,d_dom#311,d_qoy#312,d_fy_year#313,d_fy_quarter_seq#314,d_fy_week_seq#315,d_day_name#316,d_quarter_name#317,d_holiday#318,d_weekend#319,d_following_holiday#320,d_first_dom#321,d_last_dom#322,d_same_day_ly#323,d_same_day_lq#324,d_current_day#325,... 4 more fields] parquet\n   :              :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#143,cs_ship_date_sk#144,cs_bill_customer_sk#145,cs_bill_cdemo_sk#146,cs_bill_hdemo_sk#147,cs_bill_addr_sk#148,cs_ship_customer_sk#149,cs_ship_cdemo_sk#150,cs_ship_hdemo_sk#151,cs_ship_addr_sk#152,cs_call_center_sk#153,cs_catalog_page_sk#154,cs_ship_mode_sk#155,cs_warehouse_sk#156,cs_item_sk#157,cs_promo_sk#158,cs_order_number#159L,cs_quantity#160,cs_wholesale_cost#161,cs_list_price#162,cs_sales_price#163,cs_ext_discount_amt#164,cs_ext_sales_price#165,cs_ext_wholesale_cost#166,... 10 more fields] parquet\n   :              +- Project [d_date_sk#302]\n   :                 +- Filter (((isnotnull(d_year#308) AND isnotnull(d_moy#310)) AND (((d_year#308 = 2002) AND (d_moy#310 >= 4)) AND (d_moy#310 <= 7))) AND isnotnull(d_date_sk#302))\n   :                    +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#302,d_date_id#303,d_date#304,d_month_seq#305,d_week_seq#306,d_quarter_seq#307,d_year#308,d_dow#309,d_moy#310,d_dom#311,d_qoy#312,d_fy_year#313,d_fy_quarter_seq#314,d_fy_week_seq#315,d_day_name#316,d_quarter_name#317,d_holiday#318,d_weekend#319,d_following_holiday#320,d_first_dom#321,d_last_dom#322,d_same_day_ly#323,d_same_day_lq#324,d_current_day#325,... 4 more fields] parquet\n   +- Project [ca_address_sk#33]\n      +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n         +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -332436793,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 44421152,
            "rowCount" : 2776322,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [ws_bill_customer_sk#111] Arguments: 9 "
          },
          "8" : {
            "sign" : 1743490355,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 6752832,
            "rowCount" : 211026,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19] Arguments: 0 "
          },
          "4" : {
            "sign" : 354221536,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#15] Right keys [1]: [cs_ship_customer_sk#149] Join type: ExistenceJoin(exists#345) Join condition: None "
          },
          "15" : {
            "sign" : 63269292,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1310720,
            "rowCount" : 7246,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#33] Arguments: 6 "
          },
          "11" : {
            "sign" : -576096471,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [ws_bill_customer_sk#111] Arguments: [ws_bill_customer_sk#111 ASC NULLS FIRST], false, 0 "
          },
          "9" : {
            "sign" : -415581278,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [ss_customer_sk#57] Arguments: [ss_customer_sk#57 ASC NULLS FIRST], false, 0 "
          },
          "13" : {
            "sign" : 902201316,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [cs_ship_customer_sk#149] Arguments: [cs_ship_customer_sk#149 ASC NULLS FIRST], false, 0 "
          },
          "5" : {
            "sign" : 1376885321,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 32191231541150400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#15] Right keys [1]: [ws_bill_customer_sk#111] Join type: ExistenceJoin(exists#344) Join condition: None "
          },
          "10" : {
            "sign" : 2068839049,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 169823136,
            "rowCount" : 10613946,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [ss_customer_sk#57] Arguments: 8 "
          },
          "6" : {
            "sign" : 195220628,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 38601040,
            "rowCount" : 1930052,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_customer_sk#15] Right keys [1]: [ss_customer_sk#57] Join type: LeftSemi Join condition: None "
          },
          "1" : {
            "sign" : 290963294,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1193133537589430996440103267640,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_addr_sk#19] Right keys [1]: [ca_address_sk#33] Join type: Inner Join condition: None "
          },
          "14" : {
            "sign" : -508683958,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 88551376,
            "rowCount" : 5534461,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [cs_ship_customer_sk#149] Arguments: 10 "
          },
          "0" : {
            "sign" : 1846638369,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 715880122553658597864061960584,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [c_current_cdemo_sk#17] Input [3]: [c_current_cdemo_sk#17, c_current_addr_sk#19, ca_address_sk#33] "
          },
          "2" : {
            "sign" : 202719191,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 38914988179694422584478254,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [c_current_cdemo_sk#17, c_current_addr_sk#19] Input [5]: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19, exists#344, exists#345] "
          },
          "7" : {
            "sign" : -226752827,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19] Arguments: [c_customer_sk#15 ASC NULLS FIRST], false, 0 "
          },
          "3" : {
            "sign" : 547082251,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 53508108747079831053657600,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [c_customer_sk#15, c_current_cdemo_sk#17, c_current_addr_sk#19, exists#344, exists#345] Condition : (exists#344 OR exists#345) "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "ShuffleQueryStage",
          "toId" : 7,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Sort",
          "toId" : 6,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "ShuffleQueryStage",
          "toId" : 9,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Sort",
          "toId" : 6,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "SortMergeJoin",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 11,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "ShuffleQueryStage",
          "toId" : 13,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Sort",
          "toId" : 4,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "SortMergeJoin",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_current_cdemo_sk#17]\n+- BroadcastHashJoin [c_current_addr_sk#19], [ca_address_sk#33], Inner, BuildRight, false\n   :- Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n   :  +- Filter (exists#344 OR exists#345)\n   :     +- SortMergeJoin [c_customer_sk#15], [cs_ship_customer_sk#149], ExistenceJoin(exists#345)\n   :        :- SortMergeJoin [c_customer_sk#15], [ws_bill_customer_sk#111], ExistenceJoin(exists#344)\n   :        :  :- SortMergeJoin [c_customer_sk#15], [ss_customer_sk#57], LeftSemi\n   :        :  :  :- Sort [c_customer_sk#15 ASC NULLS FIRST], false, 0\n   :        :  :  :  +- ShuffleQueryStage 0\n   :        :  :  :     +- Exchange hashpartitioning(c_customer_sk#15, 200), ENSURE_REQUIREMENTS, [plan_id=370]\n   :        :  :  :        +- *(1) Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(Subquery subquery#351, [id=#144], xxhash64(c_current_addr_sk#19, 42)))\n   :        :  :  :           :  +- Subquery subquery#351, [id=#144]\n   :        :  :  :           :     +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                          +- ShuffleQueryStage 0\n                                             +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=516]\n                                                +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                   +- *(1) Project [ca_address_sk#33]\n                                                      +- *(1) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                         +- *(1) ColumnarToRow\n                                                            +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n                                       +- == Initial Plan ==\n                                          ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                          +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=142]\n                                             +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                +- Project [ca_address_sk#33]\n                                                   +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n   :        :  :  :           +- *(1) ColumnarToRow\n   :        :  :  :              +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#15,c_current_cdemo_sk#17,c_current_addr_sk#19] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#19), isnotnull(c_current_cdemo_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n   :        :  :  +- Sort [ss_customer_sk#57 ASC NULLS FIRST], false, 0\n   :        :  :     +- ShuffleQueryStage 8\n   :        :  :        +- Exchange hashpartitioning(ss_customer_sk#57, 200), ENSURE_REQUIREMENTS, [plan_id=734]\n   :        :  :           +- *(7) Project [ss_customer_sk#57]\n   :        :  :              +- *(7) BroadcastHashJoin [ss_sold_date_sk#77], [d_date_sk#78], Inner, BuildRight, false\n   :        :  :                 :- *(7) ColumnarToRow\n   :        :  :                 :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#57,ss_sold_date_sk#77] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#77), dynamicpruningexpression(ss_sold_date_sk#77 IN dynamicpruning#346)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n   :        :  :                 :        +- SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n   :        :  :                 :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   BroadcastQueryStage 1\n                                                   +- ReusedExchange [d_date_sk#78], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                                                +- == Initial Plan ==\n                                                   BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=710]\n                                                   +- Project [d_date_sk#78]\n                                                      +- Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n                                                         +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :        :  :                 +- BroadcastQueryStage 1\n   :        :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n   :        :  :                       +- *(2) Project [d_date_sk#78]\n   :        :  :                          +- *(2) Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n   :        :  :                             +- *(2) ColumnarToRow\n   :        :  :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :        :  +- Sort [ws_bill_customer_sk#111 ASC NULLS FIRST], false, 0\n   :        :     +- ShuffleQueryStage 9\n   :        :        +- Exchange hashpartitioning(ws_bill_customer_sk#111, 200), ENSURE_REQUIREMENTS, [plan_id=776]\n   :        :           +- *(8) Project [ws_bill_customer_sk#111]\n   :        :              +- *(8) BroadcastHashJoin [ws_sold_date_sk#141], [d_date_sk#274], Inner, BuildRight, false\n   :        :                 :- *(8) ColumnarToRow\n   :        :                 :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#111,ws_sold_date_sk#141] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#141), dynamicpruningexpression(ws_sold_date_sk#141 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n   :        :                 :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n   :        :                 +- BroadcastQueryStage 3\n   :        :                    +- ReusedExchange [d_date_sk#274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n   :        +- Sort [cs_ship_customer_sk#149 ASC NULLS FIRST], false, 0\n   :           +- ShuffleQueryStage 10\n   :              +- Exchange hashpartitioning(cs_ship_customer_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=818]\n   :                 +- *(9) Project [cs_ship_customer_sk#149]\n   :                    +- *(9) BroadcastHashJoin [cs_sold_date_sk#176], [d_date_sk#302], Inner, BuildRight, false\n   :                       :- *(9) ColumnarToRow\n   :                       :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#149,cs_sold_date_sk#176] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#176), dynamicpruningexpression(cs_sold_date_sk#176 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n   :                       :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n   :                       +- BroadcastQueryStage 5\n   :                          +- ReusedExchange [d_date_sk#302], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n   +- BroadcastQueryStage 6\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=467]\n         +- *(5) Project [ca_address_sk#33]\n            +- *(5) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n               +- *(5) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 310859216,
        "inputRowCount" : 19143001
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 33823, 34027, 32777, 33627, 31764, 35132, 32537, 33295, 34179, 34879, 34041, 33274, 32806, 33221, 33892, 32997, 34446, 35425, 32714, 32691, 33182, 33461, 34302, 34242, 32938, 33051, 31781, 32344, 33563, 32498, 32342, 33408, 32860, 31389, 33256, 34180, 32404, 33068, 33031, 33481, 33256, 30302, 59074, 34057, 33544, 32415, 32865, 33123, 31517, 33381, 33521, 31123, 33872, 34605, 35142, 33350, 33782, 33256, 33310, 32328, 33773, 35122, 32903, 32324, 33507, 33237, 33489, 33852, 33086, 33682, 32450, 33032, 33687, 35274, 33691, 32924, 34374, 32845, 33129, 33833, 32601, 32953, 33019, 32713, 34321, 33818, 33341, 33686, 32869, 33197, 32768, 33993, 33393, 34468, 31521, 33651, 32718, 31224, 33280, 32433, 31707, 32191, 32373, 31966, 34365, 32948, 34160, 33627, 32683, 33377, 33662, 33554, 33158, 32640, 34937, 32668, 33627, 34696, 34546, 34530, 32333, 32715, 34639, 32455, 32450, 34442, 31945, 33275, 33236, 32412, 33891, 33110, 32703, 32863, 31990, 32133, 34185, 34162, 33524, 31668, 32508, 33647, 33143, 32614, 32235, 32244, 33798, 31655, 32640, 31037, 33628, 32468, 34917, 33907, 33909, 35227, 33566, 32197, 34771, 32846, 33329, 32986, 32714, 32510, 32924, 32843, 31939, 35083, 33067, 33490, 33148, 33857, 33627, 33852, 33627, 33870, 32402, 32509, 31804, 33648, 32450, 33616, 32814, 32919, 35452, 34262, 34325, 34302, 33010, 33601, 34414, 34394, 33627, 32846, 32972, 35294, 32812, 32742, 34361, 31589 ],
        "4" : [ 12843, 12333, 13004, 13318, 13009, 12938, 12510, 12995, 12718, 13878, 13186, 12993, 13003, 13164, 12602, 12995, 13002, 13232, 12776, 12905, 12829, 13041, 12945, 13493, 12747, 13148, 12841, 12492, 13404, 12622, 12320, 12730, 13269, 12967, 13060, 12693, 13196, 12721, 13137, 12480, 12483, 12691, 14220, 13237, 12556, 12820, 12844, 13148, 12865, 13208, 12893, 13391, 12536, 13756, 12679, 12873, 12819, 12215, 12458, 12590, 12693, 13225, 13058, 13129, 12914, 12907, 13200, 12476, 13328, 13275, 12962, 12319, 13273, 13243, 13456, 12920, 12590, 13057, 13085, 13479, 13256, 13378, 13320, 12795, 13844, 13158, 12917, 13525, 12733, 13097, 12767, 13126, 12959, 13464, 12758, 12740, 12645, 12010, 13431, 12376, 12949, 12813, 13517, 12235, 13477, 13837, 12668, 13126, 12785, 12228, 12427, 12835, 13727, 12290, 13119, 12647, 12649, 13050, 12894, 12360, 12360, 13383, 13613, 12422, 12996, 13510, 12451, 12913, 13345, 13309, 13560, 13445, 12986, 12812, 13581, 12532, 13051, 13161, 13044, 13161, 13199, 13076, 13042, 12752, 12816, 12715, 13186, 13170, 12787, 12764, 13738, 13059, 13734, 12945, 13075, 12586, 13091, 13483, 12884, 12675, 13122, 12851, 12776, 13485, 13642, 13151, 12029, 12621, 12631, 12585, 12526, 12362, 12515, 12764, 12906, 13010, 12143, 12457, 13233, 12839, 13241, 13315, 13468, 12445, 13592, 12808, 12706, 12622, 13161, 12900, 13074, 13224, 12913, 13298, 13300, 13494, 12718, 13046, 12652, 12159 ],
        "1" : [ 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 20176, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 20176, 18341, 20176, 20176, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 18341, 16674, 18341, 18341, 18341, 18341, 16674 ],
        "3" : [ 52631, 51539, 51446, 50713, 51035, 53625, 51641, 48692, 53106, 53160, 52170, 51390, 51147, 51062, 51038, 52133, 53162, 53229, 51334, 51736, 52349, 51690, 54393, 51631, 51602, 50856, 50084, 52413, 52326, 52730, 51178, 51430, 51968, 50493, 52168, 53462, 50148, 51473, 51817, 51273, 50607, 52569, 143603, 52303, 52262, 50682, 52167, 50196, 51334, 52270, 52528, 53520, 49682, 49723, 51060, 50383, 51606, 50576, 51720, 51632, 51143, 52262, 51301, 51807, 50352, 53436, 52050, 49187, 53058, 51390, 55009, 50715, 50651, 50466, 52413, 51838, 52413, 51776, 52924, 52648, 51342, 52334, 51627, 50705, 51641, 51207, 52229, 51971, 52735, 51940, 52766, 51901, 50342, 49771, 51301, 54482, 48821, 51390, 52116, 49785, 52528, 52349, 50792, 51485, 50906, 53221, 51838, 53953, 48821, 50130, 49534, 52114, 53588, 48795, 52002, 50851, 50148, 50414, 51817, 51270, 51690, 53359, 50981, 52623, 52365, 51930, 50352, 50932, 51641, 49777, 54577, 53820, 52380, 52019, 49621, 50761, 52712, 51342, 53011, 51731, 49950, 51610, 51729, 52710, 53822, 52167, 54517, 52633, 53122, 52114, 51751, 51243, 52262, 50823, 53190, 52083, 51272, 52198, 53388, 51973, 50580, 51454, 52019, 50981, 52265, 53353, 52827, 52827, 52164, 51643, 52436, 53559, 53654, 52234, 51784, 51406, 51705, 50280, 52349, 50849, 51697, 51932, 53326, 51122, 53520, 51437, 52444, 52262, 49802, 51342, 52382, 50148, 51452, 49713, 53129, 52334, 52021, 49204, 51641, 51012 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 17 ],
      "Objectives" : {
        "DurationInMs" : 9234,
        "TotalTasksDurationInMs" : 9223,
        "IOBytes" : {
          "Total" : 22284104,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 22261857,
            "SW" : 22247
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -714786699,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cd_demo_sk#46) "
          },
          "1" : {
            "sign" : 2107952199,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#46, cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalRelation",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cd_demo_sk#46)\n+- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#46,cd_gender#47,cd_marital_status#48,cd_education_status#49,cd_purchase_estimate#50,cd_credit_rating#51,cd_dep_count#52,cd_dep_employed_count#53,cd_dep_college_count#54] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1776234822,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 182476000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [9]: [cd_demo_sk#46, cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Condition : isnotnull(cd_demo_sk#46) "
          },
          "1" : {
            "sign" : 320682776,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 182476000,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [9]: [cd_demo_sk#46, cd_gender#47, cd_marital_status#48, cd_education_status#49, cd_purchase_estimate#50, cd_credit_rating#51, cd_dep_count#52, cd_dep_employed_count#53, cd_dep_college_count#54] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cd_demo_sk#46)\n+- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#46,cd_gender#47,cd_marital_status#48,cd_education_status#49,cd_purchase_estimate#50,cd_credit_rating#51,cd_dep_count#52,cd_dep_employed_count#53,cd_dep_college_count#54] Batched: true, DataFilters: [isnotnull(cd_demo_sk#46)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 182476000,
        "inputRowCount" : 1920800
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 1860,
        "TotalTasksDurationInMs" : 1922,
        "IOBytes" : {
          "Total" : 64450828,
          "Details" : {
            "IR" : 7822198,
            "IW" : 0,
            "SR" : 0,
            "SW" : 56628630
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1876202987,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 28592,
                "rowCount" : 1787
              },
              "compileTime" : {
                "sizeInBytes" : 715880122553658597864061960584,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_current_cdemo_sk#17], ShuffleQueryStage 11 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [c_current_cdemo_sk#17], ShuffleQueryStage 11\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 624256643,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 28592,
            "rowCount" : 1787,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [c_current_cdemo_sk#17] Arguments: 11 "
          }
        },
        "links" : [ ],
        "rawPlan" : "ShuffleQueryStage 11\n+- Exchange hashpartitioning(c_current_cdemo_sk#17, 200), ENSURE_REQUIREMENTS, [plan_id=1307]\n   +- *(16) Project [c_current_cdemo_sk#17]\n      +- *(16) BroadcastHashJoin [c_current_addr_sk#19], [ca_address_sk#33], Inner, BuildRight, false\n         :- *(16) Project [c_current_cdemo_sk#17, c_current_addr_sk#19]\n         :  +- *(16) Filter (exists#344 OR exists#345)\n         :     +- *(16) SortMergeJoin [c_customer_sk#15], [cs_ship_customer_sk#149], ExistenceJoin(exists#345)\n         :        :- *(14) SortMergeJoin [c_customer_sk#15], [ws_bill_customer_sk#111], ExistenceJoin(exists#344)\n         :        :  :- *(12) SortMergeJoin [c_customer_sk#15], [ss_customer_sk#57], LeftSemi\n         :        :  :  :- *(10) Sort [c_customer_sk#15 ASC NULLS FIRST], false, 0\n         :        :  :  :  +- AQEShuffleRead coalesced\n         :        :  :  :     +- ShuffleQueryStage 0\n         :        :  :  :        +- Exchange hashpartitioning(c_customer_sk#15, 200), ENSURE_REQUIREMENTS, [plan_id=370]\n         :        :  :  :           +- *(1) Filter ((isnotnull(c_current_addr_sk#19) AND isnotnull(c_current_cdemo_sk#17)) AND might_contain(Subquery subquery#351, [id=#144], xxhash64(c_current_addr_sk#19, 42)))\n         :        :  :  :              :  +- Subquery subquery#351, [id=#144]\n         :        :  :  :              :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                +- == Final Plan ==\n                                                   ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                                   +- ShuffleQueryStage 0\n                                                      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=516]\n                                                         +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                            +- *(1) Project [ca_address_sk#33]\n                                                               +- *(1) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                                  +- *(1) ColumnarToRow\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n                                                +- == Initial Plan ==\n                                                   ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n                                                   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=142]\n                                                      +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n                                                         +- Project [ca_address_sk#33]\n                                                            +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                                                               +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n         :        :  :  :              +- *(1) ColumnarToRow\n         :        :  :  :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#15,c_current_cdemo_sk#17,c_current_addr_sk#19] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#19), isnotnull(c_current_cdemo_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>\n         :        :  :  +- *(11) Sort [ss_customer_sk#57 ASC NULLS FIRST], false, 0\n         :        :  :     +- AQEShuffleRead coalesced\n         :        :  :        +- ShuffleQueryStage 8\n         :        :  :           +- Exchange hashpartitioning(ss_customer_sk#57, 200), ENSURE_REQUIREMENTS, [plan_id=734]\n         :        :  :              +- *(7) Project [ss_customer_sk#57]\n         :        :  :                 +- *(7) BroadcastHashJoin [ss_sold_date_sk#77], [d_date_sk#78], Inner, BuildRight, false\n         :        :  :                    :- *(7) ColumnarToRow\n         :        :  :                    :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#57,ss_sold_date_sk#77] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#77), dynamicpruningexpression(ss_sold_date_sk#77 IN dynamicpruning#346)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n         :        :  :                    :        +- SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n         :        :  :                    :           +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 1\n                                                            +- ReusedExchange [d_date_sk#78], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=710]\n                                                            +- Project [d_date_sk#78]\n                                                               +- Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n                                                                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n         :        :  :                    +- BroadcastQueryStage 1\n         :        :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n         :        :  :                          +- *(2) Project [d_date_sk#78]\n         :        :  :                             +- *(2) Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n         :        :  :                                +- *(2) ColumnarToRow\n         :        :  :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n         :        :  +- *(13) Sort [ws_bill_customer_sk#111 ASC NULLS FIRST], false, 0\n         :        :     +- AQEShuffleRead coalesced\n         :        :        +- ShuffleQueryStage 9\n         :        :           +- Exchange hashpartitioning(ws_bill_customer_sk#111, 200), ENSURE_REQUIREMENTS, [plan_id=776]\n         :        :              +- *(8) Project [ws_bill_customer_sk#111]\n         :        :                 +- *(8) BroadcastHashJoin [ws_sold_date_sk#141], [d_date_sk#274], Inner, BuildRight, false\n         :        :                    :- *(8) ColumnarToRow\n         :        :                    :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#111,ws_sold_date_sk#141] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#141), dynamicpruningexpression(ws_sold_date_sk#141 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n         :        :                    :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n         :        :                    +- BroadcastQueryStage 3\n         :        :                       +- ReusedExchange [d_date_sk#274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n         :        +- *(15) Sort [cs_ship_customer_sk#149 ASC NULLS FIRST], false, 0\n         :           +- AQEShuffleRead coalesced\n         :              +- ShuffleQueryStage 10\n         :                 +- Exchange hashpartitioning(cs_ship_customer_sk#149, 200), ENSURE_REQUIREMENTS, [plan_id=818]\n         :                    +- *(9) Project [cs_ship_customer_sk#149]\n         :                       +- *(9) BroadcastHashJoin [cs_sold_date_sk#176], [d_date_sk#302], Inner, BuildRight, false\n         :                          :- *(9) ColumnarToRow\n         :                          :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_ship_customer_sk#149,cs_sold_date_sk#176] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#176), dynamicpruningexpression(cs_sold_date_sk#176 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<cs_ship_customer_sk:int>\n         :                          :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n         :                          +- BroadcastQueryStage 5\n         :                             +- ReusedExchange [d_date_sk#302], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n         +- BroadcastQueryStage 6\n            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=467]\n               +- *(5) Project [ca_address_sk#33]\n                  +- *(5) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n                     +- *(5) ColumnarToRow\n                        +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 28592,
        "inputRowCount" : 1787
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "6" : [ 80, 129, 88, 106, 106, 117, 106, 129, 88, 142, 88, 117, 129, 129, 117, 129, 60, 106, 117, 117, 117, 97, 97, 88, 117, 117, 106, 117, 129, 97, 156, 142, 80, 106, 129, 106, 106, 106, 117, 142, 97, 106, 97, 142, 97, 117, 117, 106, 129, 106, 117, 106, 129, 106, 117, 129, 117, 129, 106, 106, 156, 129, 117, 97, 106, 106, 117, 97, 117, 117, 106, 106, 106, 80, 142, 106, 106, 142, 129, 129, 97, 97, 106, 97, 171, 117, 106, 129, 97, 117, 142, 106, 106, 97, 129, 117, 156, 106, 97, 117, 80, 129, 129, 106, 117, 189, 97, 106, 97, 129, 129, 171, 106, 142, 117, 142, 106, 106, 117, 97, 106, 129, 129, 156, 142, 97, 129, 142, 80, 80, 88, 117, 117, 117, 129, 88, 117, 88, 117, 156, 129, 129, 117, 88, 129, 117, 117, 142, 106, 117, 129, 129, 117, 129, 142, 106, 88, 156, 97, 117, 117, 117, 129, 117, 142, 80, 106, 156, 106, 117, 97, 106, 88, 80, 129, 129, 106, 129, 156, 142, 117, 117, 88, 117, 129, 80, 106, 106, 117, 156, 97, 117, 156, 80, 106, 156, 106, 142, 117, 129 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 23 ],
      "Objectives" : {
        "DurationInMs" : 44,
        "TotalTasksDurationInMs" : 39,
        "IOBytes" : {
          "Total" : 22247,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 22247,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 2103875801,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#55, ss_item_sk#56, ss_customer_sk#57, ss_cdemo_sk#58, ss_hdemo_sk#59, ss_addr_sk#60, ss_store_sk#61, ss_promo_sk#62, ss_ticket_number#63L, ss_quantity#64, ss_wholesale_cost#65, ss_list_price#66, ss_sales_price#67, ss_ext_discount_amt#68, ss_ext_sales_price#69, ss_ext_wholesale_cost#70, ss_ext_list_price#71, ss_ext_tax#72, ss_coupon_amt#73, ss_net_paid#74, ss_net_paid_inc_tax#75, ss_net_profit#76, ss_sold_date_sk#77], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1925138485,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 5310811700,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#77 = d_date_sk#78) "
          },
          "0" : {
            "sign" : -1909984873,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3186487020,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 3186487020,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#57] "
          },
          "2" : {
            "sign" : 1150356532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 4400725648,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_customer_sk#57, ss_sold_date_sk#77] "
          },
          "3" : {
            "sign" : 781417970,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#346 [ss_sold_date_sk#77]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#57]\n+- Join Inner, (ss_sold_date_sk#77 = d_date_sk#78)\n   :- Project [ss_customer_sk#57, ss_sold_date_sk#77]\n   :  +- Filter (isnotnull(ss_sold_date_sk#77) AND dynamicpruning#346 [ss_sold_date_sk#77])\n   :     :  +- Project [d_date_sk#78]\n   :     :     +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#55,ss_item_sk#56,ss_customer_sk#57,ss_cdemo_sk#58,ss_hdemo_sk#59,ss_addr_sk#60,ss_store_sk#61,ss_promo_sk#62,ss_ticket_number#63L,ss_quantity#64,ss_wholesale_cost#65,ss_list_price#66,ss_sales_price#67,ss_ext_discount_amt#68,ss_ext_sales_price#69,ss_ext_wholesale_cost#70,ss_ext_list_price#71,ss_ext_tax#72,ss_coupon_amt#73,ss_net_paid#74,ss_net_paid_inc_tax#75,ss_net_profit#76,ss_sold_date_sk#77] parquet\n   +- Project [d_date_sk#78]\n      +- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 574682604,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3186487020,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ss_customer_sk#57] Input [3]: [ss_customer_sk#57, ss_sold_date_sk#77, d_date_sk#78] "
          },
          "1" : {
            "sign" : -721985412,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#77] Right keys [1]: [d_date_sk#78] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : 1785201351,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 4400725648,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [2]: [ss_customer_sk#57, ss_sold_date_sk#77] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#77), dynamicpruningexpression(ss_sold_date_sk#77 IN dynamicpruning#346)] ReadSchema: struct<ss_customer_sk:int> "
          },
          "3" : {
            "sign" : -1913109332,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049552,
            "rowCount" : 122,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#78] Arguments: 1 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ss_customer_sk#57]\n+- BroadcastHashJoin [ss_sold_date_sk#77], [d_date_sk#78], Inner, BuildRight, false\n   :- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_customer_sk#57,ss_sold_date_sk#77] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#77), dynamicpruningexpression(ss_sold_date_sk#77 IN dynamicpruning#346)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int>\n   :     +- SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n   :        +- AdaptiveSparkPlan isFinalPlan=false\n   :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=710]\n   :              +- Project [d_date_sk#78]\n   :                 +- Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n         +- *(2) Project [d_date_sk#78]\n            +- *(2) Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4401775200,
        "inputRowCount" : 275045475
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 110.0,
        "FinishedTasksDistributionInMs" : [ 110.0, 110.0, 110.0, 110.0, 110.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 6616,
        "TotalTasksDurationInMs" : 42778,
        "IOBytes" : {
          "Total" : 18992128,
          "Details" : {
            "IR" : 9027936,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9964192
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1013828347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 30660,
                "rowCount" : 2555
              },
              "compileTime" : {
                "sizeInBytes" : 30660,
                "rowCount" : 2555
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#33] "
          },
          "1" : {
            "sign" : 1472821613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 628530,
                "rowCount" : 2555
              },
              "compileTime" : {
                "sizeInBytes" : 628530,
                "rowCount" : 2555
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33)) "
          },
          "2" : {
            "sign" : 811865526,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#33, ca_address_id#34, ca_street_number#35, ca_street_name#36, ca_street_type#37, ca_suite_number#38, ca_city#39, ca_county#40, ca_state#41, ca_zip#42, ca_country#43, ca_gmt_offset#44, ca_location_type#45], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#33]\n+- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 628286270,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 30660,
            "rowCount" : 2555,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#33] Input [2]: [ca_address_sk#33, ca_county#40] "
          },
          "1" : {
            "sign" : 1723789270,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 30660,
            "rowCount" : 2555,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#33, ca_county#40] Condition : (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33)) "
          },
          "2" : {
            "sign" : -710464723,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 30660,
            "rowCount" : 2555,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#33, ca_county#40] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_county:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#33]\n+- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 30660,
        "inputRowCount" : 2555
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 2137,
        "TotalTasksDurationInMs" : 8408,
        "IOBytes" : {
          "Total" : 5482686,
          "Details" : {
            "IR" : 5475341,
            "IW" : 0,
            "SR" : 0,
            "SW" : 7345
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1767714420,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2340,
                "rowCount" : 195
              },
              "compileTime" : {
                "sizeInBytes" : 2340,
                "rowCount" : 195
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#78] "
          },
          "1" : {
            "sign" : 920891825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 47970,
                "rowCount" : 195
              },
              "compileTime" : {
                "sizeInBytes" : 47970,
                "rowCount" : 195
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78)) "
          },
          "2" : {
            "sign" : -1032898136,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#78, d_date_id#79, d_date#80, d_month_seq#81, d_week_seq#82, d_quarter_seq#83, d_year#84, d_dow#85, d_moy#86, d_dom#87, d_qoy#88, d_fy_year#89, d_fy_quarter_seq#90, d_fy_week_seq#91, d_day_name#92, d_quarter_name#93, d_holiday#94, d_weekend#95, d_following_holiday#96, d_first_dom#97, d_last_dom#98, d_same_day_ly#99, d_same_day_lq#100, d_current_day#101, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#78]\n+- Filter (((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (((d_year#84 = 2002) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7))) AND isnotnull(d_date_sk#78))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_date_id#79,d_date#80,d_month_seq#81,d_week_seq#82,d_quarter_seq#83,d_year#84,d_dow#85,d_moy#86,d_dom#87,d_qoy#88,d_fy_year#89,d_fy_quarter_seq#90,d_fy_week_seq#91,d_day_name#92,d_quarter_name#93,d_holiday#94,d_weekend#95,d_following_holiday#96,d_first_dom#97,d_last_dom#98,d_same_day_ly#99,d_same_day_lq#100,d_current_day#101,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2015024469,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2340,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#78] Input [3]: [d_date_sk#78, d_year#84, d_moy#86] "
          },
          "1" : {
            "sign" : -239705972,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2340,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#78, d_year#84, d_moy#86] Condition : (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78)) "
          },
          "2" : {
            "sign" : 1469126155,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2340,
            "rowCount" : 195,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#78, d_year#84, d_moy#86] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#78]\n+- Filter (((((isnotnull(d_year#84) AND isnotnull(d_moy#86)) AND (d_year#84 = 2002)) AND (d_moy#86 >= 4)) AND (d_moy#86 <= 7)) AND isnotnull(d_date_sk#78))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#78,d_year#84,d_moy#86] Batched: true, DataFilters: [isnotnull(d_year#84), isnotnull(d_moy#86), (d_year#84 = 2002), (d_moy#86 >= 4), (d_moy#86 <= 7),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThan..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2340,
        "inputRowCount" : 195
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1788,
        "TotalTasksDurationInMs" : 1783,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1259722622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 108,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 108,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350] "
          }
        },
        "links" : [ ],
        "rawPlan" : "Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350]\n+- Project [ca_address_sk#33]\n   +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n      +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_address_id#34,ca_street_number#35,ca_street_name#36,ca_street_type#37,ca_suite_number#38,ca_city#39,ca_county#40,ca_state#41,ca_zip#42,ca_country#43,ca_gmt_offset#44,ca_location_type#45] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1505350411,
            "className" : "org.apache.spark.sql.execution.aggregate.ObjectHashAggregateExec",
            "sizeInBytes" : 108,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ObjectHashAggregate Input [1]: [ca_address_sk#33] Keys: [] Functions [1]: [partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)] Aggregate Attributes [1]: [buf#354] Results [1]: [buf#355] "
          },
          "1" : {
            "sign" : 628286270,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 30660,
            "rowCount" : 2555,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#33] Input [2]: [ca_address_sk#33, ca_county#40] "
          },
          "2" : {
            "sign" : 1723789270,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 30660,
            "rowCount" : 2555,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#33, ca_county#40] Condition : (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33)) "
          },
          "3" : {
            "sign" : -710464723,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 30660,
            "rowCount" : 2555,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#33, ca_county#40] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_county:string> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "ObjectHashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n+- Project [ca_address_sk#33]\n   +- Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 30660,
        "inputRowCount" : 2555
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 2181,
        "TotalTasksDurationInMs" : 8319,
        "IOBytes" : {
          "Total" : 5475341,
          "Details" : {
            "IR" : 5475341,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 851771108,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#108, ws_ship_date_sk#109, ws_item_sk#110, ws_bill_customer_sk#111, ws_bill_cdemo_sk#112, ws_bill_hdemo_sk#113, ws_bill_addr_sk#114, ws_ship_customer_sk#115, ws_ship_cdemo_sk#116, ws_ship_hdemo_sk#117, ws_ship_addr_sk#118, ws_web_page_sk#119, ws_web_site_sk#120, ws_ship_mode_sk#121, ws_warehouse_sk#122, ws_promo_sk#123, ws_order_number#124L, ws_quantity#125, ws_wholesale_cost#126, ws_list_price#127, ws_sales_price#128, ws_ext_discount_amt#129, ws_ext_sales_price#130, ws_ext_wholesale_cost#131, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1352087452,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1389912100,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#141 = d_date_sk#274) "
          },
          "0" : {
            "sign" : -50843371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 833947260,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 833947260,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#111] "
          },
          "2" : {
            "sign" : -822687821,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1151737984,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 1151737984,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_bill_customer_sk#111, ws_sold_date_sk#141] "
          },
          "3" : {
            "sign" : -37008340,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#347 [ws_sold_date_sk#141]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#111]\n+- Join Inner, (ws_sold_date_sk#141 = d_date_sk#274)\n   :- Project [ws_bill_customer_sk#111, ws_sold_date_sk#141]\n   :  +- Filter (isnotnull(ws_sold_date_sk#141) AND dynamicpruning#347 [ws_sold_date_sk#141])\n   :     :  +- Project [d_date_sk#274]\n   :     :     +- Filter (((isnotnull(d_year#280) AND isnotnull(d_moy#282)) AND (((d_year#280 = 2002) AND (d_moy#282 >= 4)) AND (d_moy#282 <= 7))) AND isnotnull(d_date_sk#274))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#274,d_date_id#275,d_date#276,d_month_seq#277,d_week_seq#278,d_quarter_seq#279,d_year#280,d_dow#281,d_moy#282,d_dom#283,d_qoy#284,d_fy_year#285,d_fy_quarter_seq#286,d_fy_week_seq#287,d_day_name#288,d_quarter_name#289,d_holiday#290,d_weekend#291,d_following_holiday#292,d_first_dom#293,d_last_dom#294,d_same_day_ly#295,d_same_day_lq#296,d_current_day#297,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#108,ws_ship_date_sk#109,ws_item_sk#110,ws_bill_customer_sk#111,ws_bill_cdemo_sk#112,ws_bill_hdemo_sk#113,ws_bill_addr_sk#114,ws_ship_customer_sk#115,ws_ship_cdemo_sk#116,ws_ship_hdemo_sk#117,ws_ship_addr_sk#118,ws_web_page_sk#119,ws_web_site_sk#120,ws_ship_mode_sk#121,ws_warehouse_sk#122,ws_promo_sk#123,ws_order_number#124L,ws_quantity#125,ws_wholesale_cost#126,ws_list_price#127,ws_sales_price#128,ws_ext_discount_amt#129,ws_ext_sales_price#130,ws_ext_wholesale_cost#131,... 10 more fields] parquet\n   +- Project [d_date_sk#274]\n      +- Filter (((isnotnull(d_year#280) AND isnotnull(d_moy#282)) AND (((d_year#280 = 2002) AND (d_moy#282 >= 4)) AND (d_moy#282 <= 7))) AND isnotnull(d_date_sk#274))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#274,d_date_id#275,d_date#276,d_month_seq#277,d_week_seq#278,d_quarter_seq#279,d_year#280,d_dow#281,d_moy#282,d_dom#283,d_qoy#284,d_fy_year#285,d_fy_quarter_seq#286,d_fy_week_seq#287,d_day_name#288,d_quarter_name#289,d_holiday#290,d_weekend#291,d_following_holiday#292,d_first_dom#293,d_last_dom#294,d_same_day_ly#295,d_same_day_lq#296,d_current_day#297,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -665609231,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 833947260,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ws_bill_customer_sk#111] Input [3]: [ws_bill_customer_sk#111, ws_sold_date_sk#141, d_date_sk#274] "
          },
          "1" : {
            "sign" : -28874502,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#141] Right keys [1]: [d_date_sk#274] Join type: Inner Join condition: None "
          },
          "2" : {
            "sign" : -1337620878,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1151737984,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [2]: [ws_bill_customer_sk#111, ws_sold_date_sk#141] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#141), dynamicpruningexpression(ws_sold_date_sk#141 IN dynamicpruning#346)] ReadSchema: struct<ws_bill_customer_sk:int> "
          },
          "3" : {
            "sign" : 1800720719,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1049552,
            "rowCount" : 122,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#274] Arguments: 3 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ws_bill_customer_sk#111]\n+- BroadcastHashJoin [ws_sold_date_sk#141], [d_date_sk#274], Inner, BuildRight, false\n   :- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_bill_customer_sk#111,ws_sold_date_sk#141] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#141), dynamicpruningexpression(ws_sold_date_sk#141 IN dynamicpruning#3..., PushedFilters: [], ReadSchema: struct<ws_bill_customer_sk:int>\n   :     +- ReusedSubquery SubqueryBroadcast dynamicpruning#346, 0, [d_date_sk#78], [id=#713]\n   +- BroadcastQueryStage 3\n      +- ReusedExchange [d_date_sk#274], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=389]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1152787536,
        "inputRowCount" : 71983746
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 110.0,
        "FinishedTasksDistributionInMs" : [ 110.0, 110.0, 110.0, 110.0, 110.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 5258,
        "TotalTasksDurationInMs" : 23850,
        "IOBytes" : {
          "Total" : 5876877,
          "Details" : {
            "IR" : 3406096,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2470781
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1902112658,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 36280,
                "rowCount" : 5
              },
              "compileTime" : {
                "sizeInBytes" : 108,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0) AS bloomFilter#350], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1016979868,
            "className" : "org.apache.spark.sql.execution.aggregate.ObjectHashAggregateExec",
            "sizeInBytes" : 36280,
            "rowCount" : 5,
            "isRuntime" : true,
            "predicate" : " (unknown) ObjectHashAggregate Input [1]: [buf#355] Keys: [] Functions [1]: [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)] Aggregate Attributes [1]: [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)#349] Results [1]: [bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)#349 AS bloomFilter#350] "
          },
          "1" : {
            "sign" : 1636129112,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 108,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [buf#355] Arguments: 0 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "ObjectHashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[bloomFilter#350])\n+- ShuffleQueryStage 0\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=516]\n      +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#33, 42), 2555, 57765, 0, 0)], output=[buf#355])\n         +- *(1) Project [ca_address_sk#33]\n            +- *(1) Filter (ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#33))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#33,ca_county#40] Batched: true, DataFilters: [ca_county#40 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsN..., ReadSchema: struct<ca_address_sk:int,ca_county:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 36280,
        "inputRowCount" : 5
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 7495 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6146.0,
        "FinishedTasksDistributionInMs" : [ 1286.0, 1360.0, 1461.0, 2039.0, 2039.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 176,
        "TotalTasksDurationInMs" : 159,
        "IOBytes" : {
          "Total" : 7345,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 7345,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226573345,
  "SQLEndTimeInMs" : 1702226594319,
  "Objectives" : {
    "DurationInMs" : 20974,
    "IOBytes" : {
      "Total" : 221759260,
      "Details" : {
        "IR" : 63719258,
        "IW" : 0,
        "SR" : 79020001,
        "SW" : 79020001
      }
    }
  }
}
