{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "34" : {
          "sign" : 1370222232,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#121, cd_gender#122, cd_marital_status#123, cd_education_status#124, cd_purchase_estimate#125, cd_credit_rating#126, cd_dep_count#127, cd_dep_employed_count#128, cd_dep_college_count#129], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "12" : {
          "sign" : -1744889148,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 335285424,
          "rowCount" : 13970226,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] "
        },
        "8" : {
          "sign" : -1611218477,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1870017732,
          "rowCount" : 17314979,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
        },
        "19" : {
          "sign" : 707037506,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#62, d_date_id#63, d_date#64, d_month_seq#65, d_week_seq#66, d_quarter_seq#67, d_year#68, d_dow#69, d_moy#70, d_dom#71, d_qoy#72, d_fy_year#73, d_fy_quarter_seq#74, d_fy_week_seq#75, d_day_name#76, d_quarter_name#77, d_holiday#78, d_weekend#79, d_following_holiday#80, d_first_dom#81, d_last_dom#82, d_same_day_ly#83, d_same_day_lq#84, d_current_day#85, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "23" : {
          "sign" : -1385304414,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2760,
          "rowCount" : 30,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15] "
        },
        "4" : {
          "sign" : -1968190410,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 201016000,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
        },
        "15" : {
          "sign" : 1195150494,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2157377976,
          "rowCount" : 13829346,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#148 [cr_returned_date_sk#61]) "
        },
        "11" : {
          "sign" : 1126128393,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 563367520,
          "rowCount" : 14084188,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
        },
        "9" : {
          "sign" : -1687245298,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2008537564,
          "rowCount" : 17314979,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
        },
        "33" : {
          "sign" : -342097260,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 10278240,
          "rowCount" : 108192,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121)) "
        },
        "22" : {
          "sign" : -1239934022,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#90, c_customer_id#91, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, c_first_shipto_date_sk#95, c_first_sales_date_sk#96, c_salutation#97, c_first_name#98, c_last_name#99, c_preferred_cust_flag#100, c_birth_day#101, c_birth_month#102, c_birth_year#103, c_birth_country#104, c_login#105, c_email_address#106, c_last_review_date#107], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "26" : {
          "sign" : 43763294,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 86400,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [hd_demo_sk#130] "
        },
        "13" : {
          "sign" : -2067832478,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 447047232,
          "rowCount" : 13970226,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#61 = d_date_sk#62) "
        },
        "24" : {
          "sign" : 580590178,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 15990,
          "rowCount" : 30,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(cc_call_center_sk#4) "
        },
        "16" : {
          "sign" : -758618342,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 2246060232,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#35, cr_item_sk#36, cr_refunded_customer_sk#37, cr_refunded_cdemo_sk#38, cr_refunded_hdemo_sk#39, cr_refunded_addr_sk#40, cr_returning_customer_sk#41, cr_returning_cdemo_sk#42, cr_returning_hdemo_sk#43, cr_returning_addr_sk#44, cr_call_center_sk#45, cr_catalog_page_sk#46, cr_ship_mode_sk#47, cr_warehouse_sk#48, cr_reason_sk#49, cr_order_number#50L, cr_return_quantity#51, cr_return_amount#52, cr_return_tax#53, cr_return_amt_inc_tax#54, cr_fee#55, cr_return_ship_cost#56, cr_refunded_cash#57, cr_reversed_charge#58, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "5" : {
          "sign" : -1150230798,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 217097280,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
        },
        "10" : {
          "sign" : 1717189991,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 450694016,
          "rowCount" : 14084188,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
        },
        "21" : {
          "sign" : 1153751939,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 465685000,
          "rowCount" : 1862740,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND (isnotnull(c_current_cdemo_sk#92) AND isnotnull(c_current_hdemo_sk#93))) "
        },
        "32" : {
          "sign" : 576054611,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5085024,
          "rowCount" : 108192,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124] "
        },
        "6" : {
          "sign" : 1883671991,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 202100704,
          "rowCount" : 1943276,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
        },
        "1" : {
          "sign" : -1523476599,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 1152,
          "rowCount" : 12,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#0, cc_name#10 AS Call_Center_Name#1, cc_manager#15 AS Manager#2, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#3] "
        },
        "17" : {
          "sign" : -413743872,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#62] "
        },
        "25" : {
          "sign" : 1851733774,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 15990,
          "rowCount" : 30,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cc_call_center_sk#4, cc_call_center_id#5, cc_rec_start_date#6, cc_rec_end_date#7, cc_closed_date_sk#8, cc_open_date_sk#9, cc_name#10, cc_class#11, cc_employees#12, cc_sq_ft#13, cc_hours#14, cc_manager#15, cc_mkt_id#16, cc_mkt_class#17, cc_mkt_desc#18, cc_market_manager#19, cc_division#20, cc_division_name#21, cc_company#22, cc_company_name#23, cc_street_number#24, cc_street_name#25, cc_street_type#26, cc_suite_number#27, ... 7 more fields], `spark_catalog`.`tpcds_100`.`call_center`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : -944824095,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 387221688,
          "rowCount" : 13829346,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61] "
        },
        "31" : {
          "sign" : 1674987711,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#108, ca_address_id#109, ca_street_number#110, ca_street_name#111, ca_street_type#112, ca_suite_number#113, ca_city#114, ca_county#115, ca_state#116, ca_zip#117, ca_country#118, ca_gmt_offset#119, ca_location_type#120], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "0" : {
          "sign" : 31420581,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 1152,
          "rowCount" : 12,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [Returns_Loss#3 DESC NULLS LAST], true "
        },
        "20" : {
          "sign" : -2084024479,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 44705760,
          "rowCount" : 1862740,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
        },
        "27" : {
          "sign" : -642221027,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130)) "
        },
        "2" : {
          "sign" : 821690446,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 254087731,
          "rowCount" : 1939601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
        },
        "18" : {
          "sign" : 1235322708,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62)) "
        },
        "30" : {
          "sign" : 1398746651,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 27246960,
          "rowCount" : 110760,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108)) "
        },
        "7" : {
          "sign" : 2016228263,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 217646912,
          "rowCount" : 1943276,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
        },
        "29" : {
          "sign" : 1876285844,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1329120,
          "rowCount" : 110760,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#108] "
        },
        "3" : {
          "sign" : -422675756,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 269604539,
          "rowCount" : 1939601,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
        },
        "28" : {
          "sign" : 1474822203,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 316800,
          "rowCount" : 7200,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#130, hd_income_band_sk#131, hd_buy_potential#132, hd_dep_count#133, hd_vehicle_count#134], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        }
      },
      "links" : [ {
        "fromId" : 16,
        "fromName" : "LogicalRelation",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 15,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 15,
        "fromName" : "Filter",
        "toId" : 14,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Join",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "LogicalRelation",
        "toId" : 21,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Filter",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "LogicalRelation",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Filter",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "LogicalRelation",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Filter",
        "toId" : 26,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "LogicalRelation",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Join",
        "toId" : 4,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "LogicalRelation",
        "toId" : 33,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Filter",
        "toId" : 32,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Project",
        "toId" : 3,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Join",
        "toId" : 2,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Project",
        "toId" : 1,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "Aggregate",
        "toId" : 0,
        "toName" : "Sort",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "Sort [Returns_Loss#3 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#0, cc_name#10 AS Call_Center_Name#1, cc_manager#15 AS Manager#2, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#3]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n         :     :     :     :     :  +- Join Inner, (cr_returned_date_sk#61 = d_date_sk#62)\n         :     :     :     :     :     :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61]\n         :     :     :     :     :     :  +- Filter (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#148 [cr_returned_date_sk#61])\n         :     :     :     :     :     :     :  +- Project [d_date_sk#62]\n         :     :     :     :     :     :     :     +- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n         :     :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n         :     :     :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#35,cr_item_sk#36,cr_refunded_customer_sk#37,cr_refunded_cdemo_sk#38,cr_refunded_hdemo_sk#39,cr_refunded_addr_sk#40,cr_returning_customer_sk#41,cr_returning_cdemo_sk#42,cr_returning_hdemo_sk#43,cr_returning_addr_sk#44,cr_call_center_sk#45,cr_catalog_page_sk#46,cr_ship_mode_sk#47,cr_warehouse_sk#48,cr_reason_sk#49,cr_order_number#50L,cr_return_quantity#51,cr_return_amount#52,cr_return_tax#53,cr_return_amt_inc_tax#54,cr_fee#55,cr_return_ship_cost#56,cr_refunded_cash#57,cr_reversed_charge#58,... 3 more fields] parquet\n         :     :     :     :     :     +- Project [d_date_sk#62]\n         :     :     :     :     :        +- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n         :     :     :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n         :     :     :     :     +- Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :        +- Filter ((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND (isnotnull(c_current_cdemo_sk#92) AND isnotnull(c_current_hdemo_sk#93)))\n         :     :     :     :           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#90,c_customer_id#91,c_current_cdemo_sk#92,c_current_hdemo_sk#93,c_current_addr_sk#94,c_first_shipto_date_sk#95,c_first_sales_date_sk#96,c_salutation#97,c_first_name#98,c_last_name#99,c_preferred_cust_flag#100,c_birth_day#101,c_birth_month#102,c_birth_year#103,c_birth_country#104,c_login#105,c_email_address#106,c_last_review_date#107] parquet\n         :     :     :     +- Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :        +- Filter isnotnull(cc_call_center_sk#4)\n         :     :     :           +- Relation spark_catalog.tpcds_100.call_center[cc_call_center_sk#4,cc_call_center_id#5,cc_rec_start_date#6,cc_rec_end_date#7,cc_closed_date_sk#8,cc_open_date_sk#9,cc_name#10,cc_class#11,cc_employees#12,cc_sq_ft#13,cc_hours#14,cc_manager#15,cc_mkt_id#16,cc_mkt_class#17,cc_mkt_desc#18,cc_market_manager#19,cc_division#20,cc_division_name#21,cc_company#22,cc_company_name#23,cc_street_number#24,cc_street_name#25,cc_street_type#26,cc_suite_number#27,... 7 more fields] parquet\n         :     :     +- Project [hd_demo_sk#130]\n         :     :        +- Filter ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130))\n         :     :           +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#130,hd_income_band_sk#131,hd_buy_potential#132,hd_dep_count#133,hd_vehicle_count#134] parquet\n         :     +- Project [ca_address_sk#108]\n         :        +- Filter ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108))\n         :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#108,ca_address_id#109,ca_street_number#110,ca_street_name#111,ca_street_type#112,ca_suite_number#113,ca_city#114,ca_county#115,ca_state#116,ca_zip#117,ca_country#118,ca_gmt_offset#119,ca_location_type#120] parquet\n         +- Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124]\n            +- Filter ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121))\n               +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#121,cd_gender#122,cd_marital_status#123,cd_education_status#124,cd_purchase_estimate#125,cd_credit_rating#126,cd_dep_count#127,cd_dep_employed_count#128,cd_dep_college_count#129] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 3192839076,
      "inputRowCount" : 19398901
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -830286951,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16777216,
            "rowCount" : 187128,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6, BroadcastQueryStage 7 "
          },
          "8" : {
            "sign" : -1182730344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 936256833768960,
            "rowCount" : 10639282201920,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "4" : {
            "sign" : 1645037682,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 111611347382112952320000,
            "rowCount" : 1395141842276411904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1200,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : 234783136,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14185709602560,
            "rowCount" : 354642740064,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : 1054138029,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1021371091384320,
            "rowCount" : 10639282201920,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "13" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 75807520,
            "rowCount" : 1895188,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "16" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : -1182745420,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 122772482120324247552000,
            "rowCount" : 1395141842276411904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : -1916860686,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11348567682048,
            "rowCount" : 354642740064,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "6" : {
            "sign" : 414237708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1072439645953536000,
            "rowCount" : 12767138642304000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 2093047177,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12582912,
            "rowCount" : 109760,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : -1498492732,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "2" : {
            "sign" : 924859103,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17763169158558040587632640000,
            "rowCount" : 153130768608258970583040000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "7" : {
            "sign" : -477164720,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1174576755091968000,
            "rowCount" : 12767138642304000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : 693988171,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18988215307424112352296960000,
            "rowCount" : 153130768608258970583040000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6, BroadcastQueryStage 7\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 115711248,
        "inputRowCount" : 2302582
      },
      "PD" : {
        "0" : [ 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227487362,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2164,
        "IOBytes" : {
          "Total" : 39308683,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 39300346,
            "SW" : 8337
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -294227038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6 "
          },
          "8" : {
            "sign" : -312286357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37182256320,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "4" : {
            "sign" : -906288323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16988274254080,
            "rowCount" : 212353428176,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -826164049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 563367520,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : 462060850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40562461440,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "13" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "16" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : 1034431767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18687101679488,
            "rowCount" : 212353428176,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 321840819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 450694016,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "6" : {
            "sign" : -559739249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 163235184,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1270140800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1771401333021429760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12582912,
            "rowCount" : 109760,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : 1440571775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1771401333021429760,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "2" : {
            "sign" : -24121916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2703717824085340160,
            "rowCount" : 23307912276597760,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "7" : {
            "sign" : -874512303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 178781392,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : -868903234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2890181122298122240,
            "rowCount" : 23307912276597760,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 402097920,
        "inputRowCount" : 16059232
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 19408.0,
        "FinishedTasksDistributionInMs" : [ 1273.0, 1275.0, 1330.0, 1441.0, 1842.0 ]
      },
      "StartTimeInMs" : 1702227479791,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9735,
        "IOBytes" : {
          "Total" : 115102163,
          "Details" : {
            "IR" : 29365808,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 42865839
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -1207914005,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3752,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "1" : {
            "sign" : 715619490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3752,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152], HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[sum(UnscaledValue(cr_net_loss#60))]) "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- LogicalQueryStage Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152], HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[sum(UnscaledValue(cr_net_loss#60))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3752,
        "inputRowCount" : 30
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227488721,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 805,
        "IOBytes" : {
          "Total" : 16674,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 13014,
            "SW" : 3660
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -294227038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6 "
          },
          "8" : {
            "sign" : -312286357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37182256320,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "4" : {
            "sign" : -906288323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4432503536317440000,
            "rowCount" : 55406294203968000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1200,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -826164049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 563367520,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : 462060850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40562461440,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "13" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "16" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : 1034431767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4875753889949184000,
            "rowCount" : 55406294203968000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 321840819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 450694016,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "6" : {
            "sign" : -559739249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 42590584512000,
            "rowCount" : 507030768000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1270140800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 462186008738892103680000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12582912,
            "rowCount" : 109760,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : 1440571775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 462186008738892103680000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "2" : {
            "sign" : -24121916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 705441802811993210880000,
            "rowCount" : 6081394851827527680000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "7" : {
            "sign" : -874512303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 46646830656000,
            "rowCount" : 507030768000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : -868903234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 754092961626613432320000,
            "rowCount" : 6081394851827527680000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 403117696,
        "inputRowCount" : 16053232
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 13,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 22187.0,
        "FinishedTasksDistributionInMs" : [ 130.0, 1273.0, 1285.0, 1437.0, 1842.0 ]
      },
      "StartTimeInMs" : 1702227480515,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9011,
        "IOBytes" : {
          "Total" : 115070506,
          "Details" : {
            "IR" : 29334151,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 42865839
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1754447492,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 2672,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "1" : {
            "sign" : -842546451,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2672,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152], ShuffleQueryStage 9 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- LogicalQueryStage Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152], ShuffleQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2672,
        "inputRowCount" : 30
      },
      "PD" : {
        "3" : [ 142, 129, 129, 117, 129, 129, 129, 129, 129, 129, 142, 129, 117, 129, 117, 129, 129, 129, 129, 142, 129, 129, 142, 117, 129, 129, 129, 129, 129, 129 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227489350,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 176,
        "IOBytes" : {
          "Total" : 3660,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3660,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -294227038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6 "
          },
          "8" : {
            "sign" : -312286357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 69897180335368320,
            "rowCount" : 794286140174640,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "4" : {
            "sign" : -906288323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8332455576357500221440000,
            "rowCount" : 104155694704468752768000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1200,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -826164049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1059048186899520,
            "rowCount" : 26476204672488,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : 462060850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 76251469456765440,
            "rowCount" : 794286140174640,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "13" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 75807520,
            "rowCount" : 1895188,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "16" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : 1034431767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9165701133993250243584000,
            "rowCount" : 104155694704468752768000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 321840819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 847238549519616,
            "rowCount" : 26476204672488,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "6" : {
            "sign" : -559739249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 80064042929603712000,
            "rowCount" : 953143368209568000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1270140800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 868841807857949263089991680000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12582912,
            "rowCount" : 109760,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : 1440571775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 868841807857949263089991680000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "2" : {
            "sign" : -24121916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1326126969888448875242618880000,
            "rowCount" : 11432129050762490303815680000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "7" : {
            "sign" : -874512303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 87689189875280256000,
            "rowCount" : 953143368209568000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : -868903234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1417584002294548797673144320000,
            "rowCount" : 11432129050762490303815680000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 434219456,
        "inputRowCount" : 16085680
      },
      "PD" : {
        "0" : [ 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 8,
        "FinishedTasksNum" : 7,
        "FinishedTasksTotalTimeInMs" : 5667.0,
        "FinishedTasksDistributionInMs" : [ 130.0, 133.0, 893.0, 1358.0, 1397.0 ]
      },
      "StartTimeInMs" : 1702227481314,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8212,
        "IOBytes" : {
          "Total" : 48438967,
          "Details" : {
            "IR" : 1989944,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 3578507
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 2119293068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] "
          },
          "8" : {
            "sign" : -1390152639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37182256320,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "19" : {
            "sign" : 707037506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#62, d_date_id#63, d_date#64, d_month_seq#65, d_week_seq#66, d_quarter_seq#67, d_year#68, d_dow#69, d_moy#70, d_dom#71, d_qoy#72, d_fy_year#73, d_fy_quarter_seq#74, d_fy_week_seq#75, d_day_name#76, d_quarter_name#77, d_holiday#78, d_weekend#79, d_following_holiday#80, d_first_dom#81, d_last_dom#82, d_same_day_ly#83, d_same_day_lq#84, d_current_day#85, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "4" : {
            "sign" : 59830055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 160812800,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : -292836162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2157377976,
            "rowCount" : 13829346,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#159 [cr_returned_date_sk#61]) "
          },
          "11" : {
            "sign" : 1086305045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 563367520,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : -1443744080,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40562461440,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "22" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "13" : {
            "sign" : 279877714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#61 = d_date_sk#62) "
          },
          "24" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1329120,
            "rowCount" : 110760,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "16" : {
            "sign" : -758618342,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 2246060232,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#35, cr_item_sk#36, cr_refunded_customer_sk#37, cr_refunded_cdemo_sk#38, cr_refunded_hdemo_sk#39, cr_refunded_addr_sk#40, cr_returning_customer_sk#41, cr_returning_cdemo_sk#42, cr_returning_hdemo_sk#43, cr_returning_addr_sk#44, cr_call_center_sk#45, cr_catalog_page_sk#46, cr_ship_mode_sk#47, cr_warehouse_sk#48, cr_reason_sk#49, cr_order_number#50L, cr_return_quantity#51, cr_return_amount#52, cr_return_tax#53, cr_return_amt_inc_tax#54, cr_fee#55, cr_return_ship_cost#56, cr_refunded_cash#57, cr_reversed_charge#58, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 721421481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 176894080,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 381724957,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 450694016,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "21" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "6" : {
            "sign" : -1250658331,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 163235184,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1472249542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 141055810,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -413743872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#62] "
          },
          "25" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5085024,
            "rowCount" : 108192,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 565121281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 387221688,
            "rowCount" : 13829346,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61] "
          },
          "0" : {
            "sign" : -1961449623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 141055810,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "20" : {
            "sign" : -2059514064,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#62], BroadcastQueryStage 0 "
          },
          "2" : {
            "sign" : -2050740434,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 215295711,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "18" : {
            "sign" : 1235322708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62)) "
          },
          "7" : {
            "sign" : 111824507,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 178781392,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : 56918916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 230812519,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n         :     :     :     :     :  +- Join Inner, (cr_returned_date_sk#61 = d_date_sk#62)\n         :     :     :     :     :     :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61]\n         :     :     :     :     :     :  +- Filter (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#159 [cr_returned_date_sk#61])\n         :     :     :     :     :     :     :  +- Project [d_date_sk#62]\n         :     :     :     :     :     :     :     +- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n         :     :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n         :     :     :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#35,cr_item_sk#36,cr_refunded_customer_sk#37,cr_refunded_cdemo_sk#38,cr_refunded_hdemo_sk#39,cr_refunded_addr_sk#40,cr_returning_customer_sk#41,cr_returning_cdemo_sk#42,cr_returning_hdemo_sk#43,cr_returning_addr_sk#44,cr_call_center_sk#45,cr_catalog_page_sk#46,cr_ship_mode_sk#47,cr_warehouse_sk#48,cr_reason_sk#49,cr_order_number#50L,cr_return_quantity#51,cr_return_amount#52,cr_return_tax#53,cr_return_amt_inc_tax#54,cr_fee#55,cr_return_ship_cost#56,cr_refunded_cash#57,cr_reversed_charge#58,... 3 more fields] parquet\n         :     :     :     :     :     +- LogicalQueryStage Project [d_date_sk#62], BroadcastQueryStage 0\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2298316252,
        "inputRowCount" : 16486819
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 7,
        "FinishedTasksNum" : 18,
        "FinishedTasksTotalTimeInMs" : 18364.0,
        "FinishedTasksDistributionInMs" : [ 124.0, 192.0, 1280.0, 1433.0, 1512.0 ]
      },
      "StartTimeInMs" : 1702227479275,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10251,
        "IOBytes" : {
          "Total" : 127433981,
          "Details" : {
            "IR" : 41697626,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 42865839
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 2119293068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9957129120,
            "rowCount" : 414880380,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] "
          },
          "8" : {
            "sign" : -1390152639,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37182256320,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "19" : {
            "sign" : 707037506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#62, d_date_id#63, d_date#64, d_month_seq#65, d_week_seq#66, d_quarter_seq#67, d_year#68, d_dow#69, d_moy#70, d_dom#71, d_qoy#72, d_fy_year#73, d_fy_quarter_seq#74, d_fy_week_seq#75, d_day_name#76, d_quarter_name#77, d_holiday#78, d_weekend#79, d_following_holiday#80, d_first_dom#81, d_last_dom#82, d_same_day_ly#83, d_same_day_lq#84, d_current_day#85, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "4" : {
            "sign" : 59830055,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 160812800,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : -292836162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2157377976,
            "rowCount" : 13829346,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#159 [cr_returned_date_sk#61]) "
          },
          "11" : {
            "sign" : 1086305045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 563367520,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : -1443744080,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40562461440,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "22" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "13" : {
            "sign" : 279877714,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13276172160,
            "rowCount" : 414880380,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#61 = d_date_sk#62) "
          },
          "24" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1329120,
            "rowCount" : 110760,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "16" : {
            "sign" : -758618342,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 2246060232,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#35, cr_item_sk#36, cr_refunded_customer_sk#37, cr_refunded_cdemo_sk#38, cr_refunded_hdemo_sk#39, cr_refunded_addr_sk#40, cr_returning_customer_sk#41, cr_returning_cdemo_sk#42, cr_returning_hdemo_sk#43, cr_returning_addr_sk#44, cr_call_center_sk#45, cr_catalog_page_sk#46, cr_ship_mode_sk#47, cr_warehouse_sk#48, cr_reason_sk#49, cr_order_number#50L, cr_return_quantity#51, cr_return_amount#52, cr_return_tax#53, cr_return_amt_inc_tax#54, cr_fee#55, cr_return_ship_cost#56, cr_refunded_cash#57, cr_reversed_charge#58, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 721421481,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 176894080,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 381724957,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 450694016,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "21" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "6" : {
            "sign" : -1250658331,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 163235184,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1472249542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 141055810,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -413743872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#62] "
          },
          "25" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5085024,
            "rowCount" : 108192,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 565121281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 387221688,
            "rowCount" : 13829346,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61] "
          },
          "0" : {
            "sign" : -1961449623,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 141055810,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "20" : {
            "sign" : -2059514064,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#62], BroadcastQueryStage 0 "
          },
          "2" : {
            "sign" : -2050740434,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 215295711,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "18" : {
            "sign" : 1235322708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62)) "
          },
          "7" : {
            "sign" : 111824507,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 178781392,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : 56918916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 230812519,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 16,
          "fromName" : "LogicalRelation",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 15,
          "fromName" : "Filter",
          "toId" : 14,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n         :     :     :     :     :  +- Join Inner, (cr_returned_date_sk#61 = d_date_sk#62)\n         :     :     :     :     :     :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61]\n         :     :     :     :     :     :  +- Filter (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#159 [cr_returned_date_sk#61])\n         :     :     :     :     :     :     :  +- Project [d_date_sk#62]\n         :     :     :     :     :     :     :     +- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n         :     :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n         :     :     :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#35,cr_item_sk#36,cr_refunded_customer_sk#37,cr_refunded_cdemo_sk#38,cr_refunded_hdemo_sk#39,cr_refunded_addr_sk#40,cr_returning_customer_sk#41,cr_returning_cdemo_sk#42,cr_returning_hdemo_sk#43,cr_returning_addr_sk#44,cr_call_center_sk#45,cr_catalog_page_sk#46,cr_ship_mode_sk#47,cr_warehouse_sk#48,cr_reason_sk#49,cr_order_number#50L,cr_return_quantity#51,cr_return_amount#52,cr_return_tax#53,cr_return_amt_inc_tax#54,cr_fee#55,cr_return_ship_cost#56,cr_refunded_cash#57,cr_reversed_charge#58,... 3 more fields] parquet\n         :     :     :     :     :     +- LogicalQueryStage Project [d_date_sk#62], BroadcastQueryStage 0\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2299364168,
        "inputRowCount" : 16486774
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 20206.0,
        "FinishedTasksDistributionInMs" : [ 124.0, 192.0, 1280.0, 1437.0, 1842.0 ]
      },
      "StartTimeInMs" : 1702227479373,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10153,
        "IOBytes" : {
          "Total" : 127340031,
          "Details" : {
            "IR" : 41603676,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 42865839
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -294227038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5988096,
            "rowCount" : 187128,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6 "
          },
          "8" : {
            "sign" : -312286357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 936256833768960,
            "rowCount" : 10639282201920,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "4" : {
            "sign" : -906288323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 111611347382112952320000,
            "rowCount" : 1395141842276411904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1106176,
            "rowCount" : 1200,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -826164049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14185709602560,
            "rowCount" : 354642740064,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : 462060850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1021371091384320,
            "rowCount" : 10639282201920,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "13" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 75807520,
            "rowCount" : 1895188,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "16" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : 1034431767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 122772482120324247552000,
            "rowCount" : 1395141842276411904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 321840819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 11348567682048,
            "rowCount" : 354642740064,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "6" : {
            "sign" : -559739249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1072439645953536000,
            "rowCount" : 12767138642304000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1270140800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 12582912,
            "rowCount" : 109760,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : 1440571775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "2" : {
            "sign" : -24121916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 17763169158558040587632640000,
            "rowCount" : 153130768608258970583040000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "7" : {
            "sign" : -874512303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1174576755091968000,
            "rowCount" : 12767138642304000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : -868903234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18988215307424112352296960000,
            "rowCount" : 153130768608258970583040000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 104922128,
        "inputRowCount" : 2302582
      },
      "PD" : {
        "1" : [ 18238, 19396, 18572, 18445, 18513, 18178, 18599, 18186, 18357, 18829, 20339, 18667, 19572, 17559, 18839, 17450, 19253, 19163, 18174, 18884, 17964, 19128, 19279, 18234, 18862, 18076, 19551, 18741, 19097, 19475, 18620, 18413, 19108, 17849, 18457, 19382, 18834, 18398, 18583, 17560, 18214, 18793, 18481, 19305, 18688, 18032, 17616, 19025, 17234, 19499, 18099, 18435, 19020, 18738, 19010, 20231, 18132, 19266, 18978, 17661, 18454, 18593, 19059, 19523, 19091, 19167, 18878, 18884, 19408, 19101, 19094, 18698, 18965, 19035, 19755, 18819, 18223, 18931, 19260, 18609, 17537, 18572, 18275, 18701, 18573, 18734, 17712, 19792, 19421, 19337, 18586, 18322, 18696, 18941, 18997, 18711, 19091, 18036, 18473, 19490, 18955, 19036, 17980, 18447, 19291, 17514, 19069, 18410, 18271, 19070, 17674, 18487, 18732, 20357, 18921, 19144, 18348, 19088, 18614, 18719, 18558, 18270, 18965, 18087, 19036, 19371, 18721, 17955, 18916, 17780, 18976, 18835, 17589, 18733, 18259, 18874, 19138, 18827, 18480, 19535, 18294, 17611, 18910, 17868, 19316, 18678, 19271, 19575, 18171, 18690, 18306, 19522, 19466, 18469, 17946, 18431, 18921, 18549, 18665, 18372, 18579, 19128, 18687, 18909, 19640, 18592, 17833, 19007, 19518, 18677, 19279, 19024, 18700, 19279, 19115, 17294, 18683, 19343, 18976, 19209, 18976, 17890, 18559, 18738, 18819, 18746, 18700, 20059, 19524, 19036, 19533, 19347, 18161, 18365, 18645, 18539, 18146, 18467, 19360, 18987 ],
        "0" : [ 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227486821,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2705,
        "IOBytes" : {
          "Total" : 42878853,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 8337
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -294227038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6 "
          },
          "8" : {
            "sign" : -312286357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 37182256320,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "4" : {
            "sign" : -906288323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16988274254080,
            "rowCount" : 212353428176,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "15" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -826164049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 563367520,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "9" : {
            "sign" : 462060850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 40562461440,
            "rowCount" : 422525640,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "13" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "16" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "5" : {
            "sign" : 1034431767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18687101679488,
            "rowCount" : 212353428176,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "10" : {
            "sign" : 321840819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 450694016,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "6" : {
            "sign" : -559739249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 163235184,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 1270140800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 141055810,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "17" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5085024,
            "rowCount" : 108192,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "0" : {
            "sign" : 1440571775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 141055810,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          },
          "2" : {
            "sign" : -24121916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 215295711,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "7" : {
            "sign" : -874512303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 178781392,
            "rowCount" : 1943276,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "3" : {
            "sign" : -868903234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 230812519,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          }
        },
        "links" : [ {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Aggregate",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 394600032,
        "inputRowCount" : 16057664
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 15,
        "FinishedTasksTotalTimeInMs" : 19532.0,
        "FinishedTasksDistributionInMs" : [ 124.0, 1274.0, 1299.0, 1441.0, 1842.0 ]
      },
      "StartTimeInMs" : 1702227479549,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9977,
        "IOBytes" : {
          "Total" : 122871786,
          "Details" : {
            "IR" : 37135431,
            "IW" : 0,
            "SR" : 42870516,
            "SW" : 42865839
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "12" : {
            "sign" : 506950524,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1048816,
                "rowCount" : 30
              },
              "compileTime" : {
                "sizeInBytes" : 2760,
                "rowCount" : 30
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2 "
          },
          "8" : {
            "sign" : 462060850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1021371091384320,
                "rowCount" : 10639282201920
              },
              "compileTime" : {
                "sizeInBytes" : 1021371091384320,
                "rowCount" : 10639282201920
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_call_center_sk#45 = cc_call_center_sk#4) "
          },
          "4" : {
            "sign" : 1034431767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 122772482120324247552000,
                "rowCount" : 1395141842276411904000
              },
              "compileTime" : {
                "sizeInBytes" : 122772482120324247552000,
                "rowCount" : 1395141842276411904000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#108 = c_current_addr_sk#94) "
          },
          "15" : {
            "sign" : -1943280244,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12582912,
                "rowCount" : 109760
              },
              "compileTime" : {
                "sizeInBytes" : 5085024,
                "rowCount" : 108192
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5 "
          },
          "11" : {
            "sign" : -591165609,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 75807520,
                "rowCount" : 1895188
              },
              "compileTime" : {
                "sizeInBytes" : 44705760,
                "rowCount" : 1862740
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1 "
          },
          "9" : {
            "sign" : 321840819,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11348567682048,
                "rowCount" : 354642740064
              },
              "compileTime" : {
                "sizeInBytes" : 11348567682048,
                "rowCount" : 354642740064
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "13" : {
            "sign" : 1094810018,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1106176,
                "rowCount" : 1200
              },
              "compileTime" : {
                "sizeInBytes" : 86400,
                "rowCount" : 7200
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [hd_demo_sk#130], BroadcastQueryStage 3 "
          },
          "5" : {
            "sign" : -559739249,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1072439645953536000,
                "rowCount" : 12767138642304000
              },
              "compileTime" : {
                "sizeInBytes" : 1072439645953536000,
                "rowCount" : 12767138642304000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "10" : {
            "sign" : -826164049,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14185709602560,
                "rowCount" : 354642740064
              },
              "compileTime" : {
                "sizeInBytes" : 14185709602560,
                "rowCount" : 354642740064
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_customer_sk#41 = c_customer_sk#90) "
          },
          "6" : {
            "sign" : -874512303,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1174576755091968000,
                "rowCount" : 12767138642304000
              },
              "compileTime" : {
                "sizeInBytes" : 1174576755091968000,
                "rowCount" : 12767138642304000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93) "
          },
          "1" : {
            "sign" : -24121916,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17763169158558040587632640000,
                "rowCount" : 153130768608258970583040000
              },
              "compileTime" : {
                "sizeInBytes" : 17763169158558040587632640000,
                "rowCount" : 153130768608258970583040000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] "
          },
          "14" : {
            "sign" : -1788006967,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8388608,
                "rowCount" : 109276
              },
              "compileTime" : {
                "sizeInBytes" : 1329120,
                "rowCount" : 110760
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#108], BroadcastQueryStage 4 "
          },
          "0" : {
            "sign" : 1270140800,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11637938414227681764311040000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 11637938414227681764311040000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152] "
          },
          "2" : {
            "sign" : -868903234,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18988215307424112352296960000,
                "rowCount" : 153130768608258970583040000
              },
              "compileTime" : {
                "sizeInBytes" : 18988215307424112352296960000,
                "rowCount" : 153130768608258970583040000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92) "
          },
          "7" : {
            "sign" : -312286357,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 936256833768960,
                "rowCount" : 10639282201920
              },
              "compileTime" : {
                "sizeInBytes" : 936256833768960,
                "rowCount" : 10639282201920
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "3" : {
            "sign" : -906288323,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 111611347382112952320000,
                "rowCount" : 1395141842276411904000
              },
              "compileTime" : {
                "sizeInBytes" : 111611347382112952320000,
                "rowCount" : 1395141842276411904000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n+- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n   +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n      :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n      :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n      :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n      :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n      :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n      :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n      :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n      :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n      :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n      :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n      :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n      :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n      :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n      +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "12" : {
            "sign" : -818393495,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 75807520,
            "rowCount" : 1895188,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] Arguments: 1 "
          },
          "8" : {
            "sign" : -811382697,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1021371091384320,
            "rowCount" : 10639282201920,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cr_call_center_sk#45] Right keys [1]: [cc_call_center_sk#4] Join type: Inner Join condition: None "
          },
          "4" : {
            "sign" : 1897674836,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 122772482120324247552000,
            "rowCount" : 1395141842276411904000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_addr_sk#94] Right keys [1]: [ca_address_sk#108] Join type: Inner Join condition: None "
          },
          "15" : {
            "sign" : -550659358,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 8388608,
            "rowCount" : 109276,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#108] Arguments: 4 "
          },
          "11" : {
            "sign" : 480274120,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16777216,
            "rowCount" : 187128,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] Arguments: 7 "
          },
          "9" : {
            "sign" : -737332996,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 11348567682048,
            "rowCount" : 354642740064,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] Input [7]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "13" : {
            "sign" : -1085658032,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15] Arguments: 2 "
          },
          "16" : {
            "sign" : 465337645,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 12582912,
            "rowCount" : 109760,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [3]: [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124] Arguments: 5 "
          },
          "5" : {
            "sign" : 1984588313,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1072439645953536000,
            "rowCount" : 12767138642304000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] Input [8]: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15, hd_demo_sk#130] "
          },
          "10" : {
            "sign" : -436924378,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14185709602560,
            "rowCount" : 354642740064,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cr_returning_customer_sk#41] Right keys [1]: [c_customer_sk#90] Join type: Inner Join condition: None "
          },
          "6" : {
            "sign" : 937639781,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1174576755091968000,
            "rowCount" : 12767138642304000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_hdemo_sk#93] Right keys [1]: [hd_demo_sk#130] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 389863454,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 17763169158558040587632640000,
            "rowCount" : 153130768608258970583040000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [6]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] Input [8]: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15, cd_demo_sk#121, cd_marital_status#123, cd_education_status#124] "
          },
          "14" : {
            "sign" : 2055179249,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1106176,
            "rowCount" : 1200,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [hd_demo_sk#130] Arguments: 3 "
          },
          "0" : {
            "sign" : 105836946,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [6]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124] Keys [5]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124] Functions [1]: [partial_sum(UnscaledValue(cr_net_loss#60))] Aggregate Attributes [1]: [sum#160L] Results [6]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, sum#161L] "
          },
          "2" : {
            "sign" : 488404000,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 18988215307424112352296960000,
            "rowCount" : 153130768608258970583040000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_cdemo_sk#92] Right keys [1]: [cd_demo_sk#121] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -860545982,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 936256833768960,
            "rowCount" : 10639282201920,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [7]: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15] Input [9]: [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "3" : {
            "sign" : -1939136396,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 111611347382112952320000,
            "rowCount" : 1395141842276411904000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [5]: [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15] Input [7]: [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15, ca_address_sk#108] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 10,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "ShuffleQueryStage",
          "toId" : 10,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastHashJoin",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "BroadcastQueryStage",
          "toId" : 8,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastHashJoin",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[partial_sum(UnscaledValue(cr_net_loss#60))], output=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, sum#161L])\n+- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n   +- BroadcastHashJoin [c_current_cdemo_sk#92], [cd_demo_sk#121], Inner, BuildRight, false\n      :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n      :  +- BroadcastHashJoin [c_current_addr_sk#94], [ca_address_sk#108], Inner, BuildRight, false\n      :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n      :     :  +- BroadcastHashJoin [c_current_hdemo_sk#93], [hd_demo_sk#130], Inner, BuildRight, false\n      :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n      :     :     :  +- BroadcastHashJoin [cr_call_center_sk#45], [cc_call_center_sk#4], Inner, BuildRight, false\n      :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n      :     :     :     :  +- BroadcastHashJoin [cr_returning_customer_sk#41], [c_customer_sk#90], Inner, BuildLeft, false\n      :     :     :     :     :- BroadcastQueryStage 7\n      :     :     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1142]\n      :     :     :     :     :     +- AQEShuffleRead local\n      :     :     :     :     :        +- ShuffleQueryStage 6\n      :     :     :     :     :           +- Exchange hashpartitioning(cr_returning_customer_sk#41, 200), ENSURE_REQUIREMENTS, [plan_id=687]\n      :     :     :     :     :              +- *(7) Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n      :     :     :     :     :                 +- *(7) BroadcastHashJoin [cr_returned_date_sk#61], [d_date_sk#62], Inner, BuildRight, false\n      :     :     :     :     :                    :- *(7) Filter (isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returning_customer_sk#41))\n      :     :     :     :     :                    :  +- *(7) ColumnarToRow\n      :     :     :     :     :                    :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#41,cr_call_center_sk#45,cr_net_loss#60,cr_returned_date_sk#61] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#45), isnotnull(cr_returning_customer_sk#41)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#61), dynamicpruningexpression(cr_returned_date_sk#61 IN dynamicpru..., PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>\n      :     :     :     :     :                    :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#62], [id=#661]\n      :     :     :     :     :                    :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                     +- == Final Plan ==\n                                                                        BroadcastQueryStage 1\n                                                                        +- ReusedExchange [d_date_sk#62], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n                                                                     +- == Initial Plan ==\n                                                                        BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=658]\n                                                                        +- Project [d_date_sk#62]\n                                                                           +- Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :     :     :     :                    +- BroadcastQueryStage 0\n      :     :     :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n      :     :     :     :     :                          +- *(1) Project [d_date_sk#62]\n      :     :     :     :     :                             +- *(1) Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n      :     :     :     :     :                                +- *(1) ColumnarToRow\n      :     :     :     :     :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :     :     :     +- ShuffleQueryStage 1\n      :     :     :     :        +- Exchange hashpartitioning(c_customer_sk#90, 200), ENSURE_REQUIREMENTS, [plan_id=299]\n      :     :     :     :           +- *(2) Filter (((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND isnotnull(c_current_cdemo_sk#92)) AND isnotnull(c_current_hdemo_sk#93))\n      :     :     :     :              +- *(2) ColumnarToRow\n      :     :     :     :                 +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#90,c_current_cdemo_sk#92,c_current_hdemo_sk#93,c_current_addr_sk#94] Batched: true, DataFilters: [isnotnull(c_customer_sk#90), isnotnull(c_current_addr_sk#94), isnotnull(c_current_cdemo_sk#92), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>\n      :     :     :     +- BroadcastQueryStage 2\n      :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=318]\n      :     :     :           +- *(3) Filter isnotnull(cc_call_center_sk#4)\n      :     :     :              +- *(3) ColumnarToRow\n      :     :     :                 +- FileScan parquet spark_catalog.tpcds_100.call_center[cc_call_center_sk#4,cc_call_center_id#5,cc_name#10,cc_manager#15] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>\n      :     :     +- BroadcastQueryStage 3\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n      :     :           +- *(4) Project [hd_demo_sk#130]\n      :     :              +- *(4) Filter ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130))\n      :     :                 +- *(4) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#130,hd_buy_potential#132] Batched: true, DataFilters: [isnotnull(hd_buy_potential#132), StartsWith(hd_buy_potential#132, 0-500), isnotnull(hd_demo_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,0-500), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>\n      :     +- BroadcastQueryStage 4\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=358]\n      :           +- *(5) Project [ca_address_sk#108]\n      :              +- *(5) Filter ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108))\n      :                 +- *(5) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#108,ca_gmt_offset#119] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#119), (ca_gmt_offset#119 = -7.00), isnotnull(ca_address_sk#108)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n      +- BroadcastQueryStage 5\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=377]\n            +- *(6) Filter ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121))\n               +- *(6) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#121,cd_marital_status#123,cd_education_status#124] Batched: true, DataFilters: [(((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#12..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 115711248,
        "inputRowCount" : 2302582
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "0" : [ 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 1108,
        "TotalTasksDurationInMs" : 1099,
        "IOBytes" : {
          "Total" : 39292009,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 39287332,
            "SW" : 4677
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 576054611,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5085024,
                "rowCount" : 108192
              },
              "compileTime" : {
                "sizeInBytes" : 5085024,
                "rowCount" : 108192
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124] "
          },
          "1" : {
            "sign" : -342097260,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10278240,
                "rowCount" : 108192
              },
              "compileTime" : {
                "sizeInBytes" : 10278240,
                "rowCount" : 108192
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121)) "
          },
          "2" : {
            "sign" : 1370222232,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#121, cd_gender#122, cd_marital_status#123, cd_education_status#124, cd_purchase_estimate#125, cd_credit_rating#126, cd_dep_count#127, cd_dep_employed_count#128, cd_dep_college_count#129], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124]\n+- Filter ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121))\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#121,cd_gender#122,cd_marital_status#123,cd_education_status#124,cd_purchase_estimate#125,cd_credit_rating#126,cd_dep_count#127,cd_dep_employed_count#128,cd_dep_college_count#129] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 173448949,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5085024,
            "rowCount" : 108192,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124] Condition : ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121)) "
          },
          "1" : {
            "sign" : 1092306289,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5085024,
            "rowCount" : 108192,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [3]: [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital_status,W),EqualTo(cd_education_status,Advanced Degree))), IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121))\n+- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#121,cd_marital_status#123,cd_education_status#124] Batched: true, DataFilters: [(((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#12..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5085024,
        "inputRowCount" : 108192
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 2198,
        "TotalTasksDurationInMs" : 912,
        "IOBytes" : {
          "Total" : 7769623,
          "Details" : {
            "IR" : 7769623,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 715619490,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3752,
                "rowCount" : 30
              },
              "compileTime" : {
                "sizeInBytes" : 11637938414227681764311040000,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152], HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[sum(UnscaledValue(cr_net_loss#60))]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152], HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[sum(UnscaledValue(cr_net_loss#60))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1377431048,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 3752,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [6]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, sum#161L] Keys [5]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124] Functions [1]: [sum(UnscaledValue(cr_net_loss#60))] Aggregate Attributes [1]: [sum(UnscaledValue(cr_net_loss#60))#153L] Results [4]: [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60))#153L,17,2) AS Returns_Loss#152] "
          },
          "1" : {
            "sign" : -1495571840,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [6]: [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, sum#161L] Arguments: 8 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[sum(UnscaledValue(cr_net_loss#60))], output=[Call_Center#149, Call_Center_Name#150, Manager#151, Returns_Loss#152])\n+- ShuffleQueryStage 8\n   +- Exchange hashpartitioning(cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, 200), ENSURE_REQUIREMENTS, [plan_id=1286]\n      +- *(8) HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[partial_sum(UnscaledValue(cr_net_loss#60))], output=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, sum#161L])\n         +- *(8) Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n            +- *(8) BroadcastHashJoin [c_current_cdemo_sk#92], [cd_demo_sk#121], Inner, BuildRight, false\n               :- *(8) Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n               :  +- *(8) BroadcastHashJoin [c_current_addr_sk#94], [ca_address_sk#108], Inner, BuildRight, false\n               :     :- *(8) Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n               :     :  +- *(8) BroadcastHashJoin [c_current_hdemo_sk#93], [hd_demo_sk#130], Inner, BuildRight, false\n               :     :     :- *(8) Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n               :     :     :  +- *(8) BroadcastHashJoin [cr_call_center_sk#45], [cc_call_center_sk#4], Inner, BuildRight, false\n               :     :     :     :- *(8) Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n               :     :     :     :  +- *(8) BroadcastHashJoin [cr_returning_customer_sk#41], [c_customer_sk#90], Inner, BuildLeft, false\n               :     :     :     :     :- BroadcastQueryStage 7\n               :     :     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1142]\n               :     :     :     :     :     +- AQEShuffleRead local\n               :     :     :     :     :        +- ShuffleQueryStage 6\n               :     :     :     :     :           +- Exchange hashpartitioning(cr_returning_customer_sk#41, 200), ENSURE_REQUIREMENTS, [plan_id=687]\n               :     :     :     :     :              +- *(7) Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n               :     :     :     :     :                 +- *(7) BroadcastHashJoin [cr_returned_date_sk#61], [d_date_sk#62], Inner, BuildRight, false\n               :     :     :     :     :                    :- *(7) Filter (isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returning_customer_sk#41))\n               :     :     :     :     :                    :  +- *(7) ColumnarToRow\n               :     :     :     :     :                    :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#41,cr_call_center_sk#45,cr_net_loss#60,cr_returned_date_sk#61] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#45), isnotnull(cr_returning_customer_sk#41)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#61), dynamicpruningexpression(cr_returned_date_sk#61 IN dynamicpru..., PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>\n               :     :     :     :     :                    :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#62], [id=#661]\n               :     :     :     :     :                    :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                              +- == Final Plan ==\n                                                                                 BroadcastQueryStage 1\n                                                                                 +- ReusedExchange [d_date_sk#62], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n                                                                              +- == Initial Plan ==\n                                                                                 BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=658]\n                                                                                 +- Project [d_date_sk#62]\n                                                                                    +- Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n                                                                                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :     :     :     :     :                    +- BroadcastQueryStage 0\n               :     :     :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n               :     :     :     :     :                          +- *(1) Project [d_date_sk#62]\n               :     :     :     :     :                             +- *(1) Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n               :     :     :     :     :                                +- *(1) ColumnarToRow\n               :     :     :     :     :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :     :     :     :     +- AQEShuffleRead local\n               :     :     :     :        +- ShuffleQueryStage 1\n               :     :     :     :           +- Exchange hashpartitioning(c_customer_sk#90, 200), ENSURE_REQUIREMENTS, [plan_id=299]\n               :     :     :     :              +- *(2) Filter (((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND isnotnull(c_current_cdemo_sk#92)) AND isnotnull(c_current_hdemo_sk#93))\n               :     :     :     :                 +- *(2) ColumnarToRow\n               :     :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#90,c_current_cdemo_sk#92,c_current_hdemo_sk#93,c_current_addr_sk#94] Batched: true, DataFilters: [isnotnull(c_customer_sk#90), isnotnull(c_current_addr_sk#94), isnotnull(c_current_cdemo_sk#92), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>\n               :     :     :     +- BroadcastQueryStage 2\n               :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=318]\n               :     :     :           +- *(3) Filter isnotnull(cc_call_center_sk#4)\n               :     :     :              +- *(3) ColumnarToRow\n               :     :     :                 +- FileScan parquet spark_catalog.tpcds_100.call_center[cc_call_center_sk#4,cc_call_center_id#5,cc_name#10,cc_manager#15] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>\n               :     :     +- BroadcastQueryStage 3\n               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n               :     :           +- *(4) Project [hd_demo_sk#130]\n               :     :              +- *(4) Filter ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130))\n               :     :                 +- *(4) ColumnarToRow\n               :     :                    +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#130,hd_buy_potential#132] Batched: true, DataFilters: [isnotnull(hd_buy_potential#132), StartsWith(hd_buy_potential#132, 0-500), isnotnull(hd_demo_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,0-500), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>\n               :     +- BroadcastQueryStage 4\n               :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=358]\n               :           +- *(5) Project [ca_address_sk#108]\n               :              +- *(5) Filter ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108))\n               :                 +- *(5) ColumnarToRow\n               :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#108,ca_gmt_offset#119] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#119), (ca_gmt_offset#119 = -7.00), isnotnull(ca_address_sk#108)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n               +- BroadcastQueryStage 5\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=377]\n                     +- *(6) Filter ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121))\n                        +- *(6) ColumnarToRow\n                           +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#121,cd_marital_status#123,cd_education_status#124] Batched: true, DataFilters: [(((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#12..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3752,
        "inputRowCount" : 30
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 0, 156, 0, 0, 0, 0, 171, 0, 156, 0, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 171, 171, 0, 156, 0, 0, 171, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 171, 156, 0, 0, 0, 0, 156, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 156, 0, 0, 156, 156, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 156, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 156, 0, 0, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 171, 0, 0, 0, 0, 0, 0, 0 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14, 17 ],
      "Objectives" : {
        "DurationInMs" : 497,
        "TotalTasksDurationInMs" : 460,
        "IOBytes" : {
          "Total" : 13014,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 9354,
            "SW" : 3660
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2084024479,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 44705760,
                "rowCount" : 1862740
              },
              "compileTime" : {
                "sizeInBytes" : 44705760,
                "rowCount" : 1862740
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] "
          },
          "1" : {
            "sign" : 1153751939,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 465685000,
                "rowCount" : 1862740
              },
              "compileTime" : {
                "sizeInBytes" : 465685000,
                "rowCount" : 1862740
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND (isnotnull(c_current_cdemo_sk#92) AND isnotnull(c_current_hdemo_sk#93))) "
          },
          "2" : {
            "sign" : -1239934022,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#90, c_customer_id#91, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, c_first_shipto_date_sk#95, c_first_sales_date_sk#96, c_salutation#97, c_first_name#98, c_last_name#99, c_preferred_cust_flag#100, c_birth_day#101, c_birth_month#102, c_birth_year#103, c_birth_country#104, c_login#105, c_email_address#106, c_last_review_date#107], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n+- Filter ((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND (isnotnull(c_current_cdemo_sk#92) AND isnotnull(c_current_hdemo_sk#93)))\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#90,c_customer_id#91,c_current_cdemo_sk#92,c_current_hdemo_sk#93,c_current_addr_sk#94,c_first_shipto_date_sk#95,c_first_sales_date_sk#96,c_salutation#97,c_first_name#98,c_last_name#99,c_preferred_cust_flag#100,c_birth_day#101,c_birth_month#102,c_birth_year#103,c_birth_country#104,c_login#105,c_email_address#106,c_last_review_date#107] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 701743637,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] Condition : (((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND isnotnull(c_current_cdemo_sk#92)) AND isnotnull(c_current_hdemo_sk#93)) "
          },
          "1" : {
            "sign" : 1680252452,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 44705760,
            "rowCount" : 1862740,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [4]: [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_hdemo_sk)] ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND isnotnull(c_current_cdemo_sk#92)) AND isnotnull(c_current_hdemo_sk#93))\n+- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#90,c_current_cdemo_sk#92,c_current_hdemo_sk#93,c_current_addr_sk#94] Batched: true, DataFilters: [isnotnull(c_customer_sk#90), isnotnull(c_current_addr_sk#94), isnotnull(c_current_cdemo_sk#92), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 44705760,
        "inputRowCount" : 1862740
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 3842,
        "TotalTasksDurationInMs" : 26585,
        "IOBytes" : {
          "Total" : 66631539,
          "Details" : {
            "IR" : 27344207,
            "IW" : 0,
            "SR" : 0,
            "SW" : 39287332
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1440571775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11637938414227681764311040000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 11637938414227681764311040000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [Returns_Loss#152 DESC NULLS LAST], true "
          }
        },
        "links" : [ ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true\n+- Aggregate [cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], [cc_call_center_id#5 AS Call_Center#149, cc_name#10 AS Call_Center_Name#150, cc_manager#15 AS Manager#151, MakeDecimal(sum(UnscaledValue(cr_net_loss#60)),17,2) AS Returns_Loss#152]\n   +- Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n      +- Join Inner, (cd_demo_sk#121 = c_current_cdemo_sk#92)\n         :- Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :  +- Join Inner, (ca_address_sk#108 = c_current_addr_sk#94)\n         :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :  +- Join Inner, (hd_demo_sk#130 = c_current_hdemo_sk#93)\n         :     :     :- Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n         :     :     :  +- Join Inner, (cr_call_center_sk#45 = cc_call_center_sk#4)\n         :     :     :     :- Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n         :     :     :     :  +- Join Inner, (cr_returning_customer_sk#41 = c_customer_sk#90)\n         :     :     :     :     :- LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n         :     :     :     :     +- LogicalQueryStage Project [c_customer_sk#90, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94], ShuffleQueryStage 1\n         :     :     :     +- LogicalQueryStage Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15], BroadcastQueryStage 2\n         :     :     +- LogicalQueryStage Project [hd_demo_sk#130], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [ca_address_sk#108], BroadcastQueryStage 4\n         +- LogicalQueryStage Project [cd_demo_sk#121, cd_marital_status#123, cd_education_status#124], BroadcastQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -473782301,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : 11637938414227681764311040000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [4]: [Call_Center#149, Call_Center_Name#150, Manager#151, Returns_Loss#152] Arguments: [Returns_Loss#152 DESC NULLS LAST], true, 0 "
          },
          "1" : {
            "sign" : -1435488590,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 2672,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [Call_Center#149, Call_Center_Name#150, Manager#151, Returns_Loss#152] Arguments: 9 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "Sort",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Sort [Returns_Loss#152 DESC NULLS LAST], true, 0\n+- ShuffleQueryStage 9\n   +- Exchange rangepartitioning(Returns_Loss#152 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [plan_id=1339]\n      +- *(9) HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[sum(UnscaledValue(cr_net_loss#60))], output=[Call_Center#149, Call_Center_Name#150, Manager#151, Returns_Loss#152])\n         +- AQEShuffleRead coalesced\n            +- ShuffleQueryStage 8\n               +- Exchange hashpartitioning(cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, 200), ENSURE_REQUIREMENTS, [plan_id=1286]\n                  +- *(8) HashAggregate(keys=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124], functions=[partial_sum(UnscaledValue(cr_net_loss#60))], output=[cc_call_center_id#5, cc_name#10, cc_manager#15, cd_marital_status#123, cd_education_status#124, sum#161L])\n                     +- *(8) Project [cc_call_center_id#5, cc_name#10, cc_manager#15, cr_net_loss#60, cd_marital_status#123, cd_education_status#124]\n                        +- *(8) BroadcastHashJoin [c_current_cdemo_sk#92], [cd_demo_sk#121], Inner, BuildRight, false\n                           :- *(8) Project [cr_net_loss#60, c_current_cdemo_sk#92, cc_call_center_id#5, cc_name#10, cc_manager#15]\n                           :  +- *(8) BroadcastHashJoin [c_current_addr_sk#94], [ca_address_sk#108], Inner, BuildRight, false\n                           :     :- *(8) Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n                           :     :  +- *(8) BroadcastHashJoin [c_current_hdemo_sk#93], [hd_demo_sk#130], Inner, BuildRight, false\n                           :     :     :- *(8) Project [cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94, cc_call_center_id#5, cc_name#10, cc_manager#15]\n                           :     :     :  +- *(8) BroadcastHashJoin [cr_call_center_sk#45], [cc_call_center_sk#4], Inner, BuildRight, false\n                           :     :     :     :- *(8) Project [cr_call_center_sk#45, cr_net_loss#60, c_current_cdemo_sk#92, c_current_hdemo_sk#93, c_current_addr_sk#94]\n                           :     :     :     :  +- *(8) BroadcastHashJoin [cr_returning_customer_sk#41], [c_customer_sk#90], Inner, BuildLeft, false\n                           :     :     :     :     :- BroadcastQueryStage 7\n                           :     :     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1142]\n                           :     :     :     :     :     +- AQEShuffleRead local\n                           :     :     :     :     :        +- ShuffleQueryStage 6\n                           :     :     :     :     :           +- Exchange hashpartitioning(cr_returning_customer_sk#41, 200), ENSURE_REQUIREMENTS, [plan_id=687]\n                           :     :     :     :     :              +- *(7) Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n                           :     :     :     :     :                 +- *(7) BroadcastHashJoin [cr_returned_date_sk#61], [d_date_sk#62], Inner, BuildRight, false\n                           :     :     :     :     :                    :- *(7) Filter (isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returning_customer_sk#41))\n                           :     :     :     :     :                    :  +- *(7) ColumnarToRow\n                           :     :     :     :     :                    :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#41,cr_call_center_sk#45,cr_net_loss#60,cr_returned_date_sk#61] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#45), isnotnull(cr_returning_customer_sk#41)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#61), dynamicpruningexpression(cr_returned_date_sk#61 IN dynamicpru..., PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>\n                           :     :     :     :     :                    :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#62], [id=#661]\n                           :     :     :     :     :                    :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                          +- == Final Plan ==\n                                                                                             BroadcastQueryStage 1\n                                                                                             +- ReusedExchange [d_date_sk#62], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n                                                                                          +- == Initial Plan ==\n                                                                                             BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=658]\n                                                                                             +- Project [d_date_sk#62]\n                                                                                                +- Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n                                                                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                           :     :     :     :     :                    +- BroadcastQueryStage 0\n                           :     :     :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n                           :     :     :     :     :                          +- *(1) Project [d_date_sk#62]\n                           :     :     :     :     :                             +- *(1) Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n                           :     :     :     :     :                                +- *(1) ColumnarToRow\n                           :     :     :     :     :                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n                           :     :     :     :     +- AQEShuffleRead local\n                           :     :     :     :        +- ShuffleQueryStage 1\n                           :     :     :     :           +- Exchange hashpartitioning(c_customer_sk#90, 200), ENSURE_REQUIREMENTS, [plan_id=299]\n                           :     :     :     :              +- *(2) Filter (((isnotnull(c_customer_sk#90) AND isnotnull(c_current_addr_sk#94)) AND isnotnull(c_current_cdemo_sk#92)) AND isnotnull(c_current_hdemo_sk#93))\n                           :     :     :     :                 +- *(2) ColumnarToRow\n                           :     :     :     :                    +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#90,c_current_cdemo_sk#92,c_current_hdemo_sk#93,c_current_addr_sk#94] Batched: true, DataFilters: [isnotnull(c_customer_sk#90), isnotnull(c_current_addr_sk#94), isnotnull(c_current_cdemo_sk#92), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>\n                           :     :     :     +- BroadcastQueryStage 2\n                           :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=318]\n                           :     :     :           +- *(3) Filter isnotnull(cc_call_center_sk#4)\n                           :     :     :              +- *(3) ColumnarToRow\n                           :     :     :                 +- FileScan parquet spark_catalog.tpcds_100.call_center[cc_call_center_sk#4,cc_call_center_id#5,cc_name#10,cc_manager#15] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>\n                           :     :     +- BroadcastQueryStage 3\n                           :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n                           :     :           +- *(4) Project [hd_demo_sk#130]\n                           :     :              +- *(4) Filter ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130))\n                           :     :                 +- *(4) ColumnarToRow\n                           :     :                    +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#130,hd_buy_potential#132] Batched: true, DataFilters: [isnotnull(hd_buy_potential#132), StartsWith(hd_buy_potential#132, 0-500), isnotnull(hd_demo_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,0-500), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>\n                           :     +- BroadcastQueryStage 4\n                           :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=358]\n                           :           +- *(5) Project [ca_address_sk#108]\n                           :              +- *(5) Filter ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108))\n                           :                 +- *(5) ColumnarToRow\n                           :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#108,ca_gmt_offset#119] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#119), (ca_gmt_offset#119 = -7.00), isnotnull(ca_address_sk#108)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n                           +- BroadcastQueryStage 5\n                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=377]\n                                 +- *(6) Filter ((((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#123 = W) AND (cd_education_status#124 = Advanced Degree))) AND isnotnull(cd_demo_sk#121))\n                                    +- *(6) ColumnarToRow\n                                       +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#121,cd_marital_status#123,cd_education_status#124] Batched: true, DataFilters: [(((cd_marital_status#123 = M) AND (cd_education_status#124 = Unknown)) OR ((cd_marital_status#12..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2672,
        "inputRowCount" : 30
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 142, 129, 129, 117, 129, 129, 129, 129, 129, 129, 142, 129, 117, 129, 117, 129, 129, 129, 129, 142, 129, 129, 142, 117, 129, 129, 129, 129, 129, 129 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 21 ],
      "Objectives" : {
        "DurationInMs" : 88,
        "TotalTasksDurationInMs" : 78,
        "IOBytes" : {
          "Total" : 3660,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3660,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -758618342,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              },
              "compileTime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#35, cr_item_sk#36, cr_refunded_customer_sk#37, cr_refunded_cdemo_sk#38, cr_refunded_hdemo_sk#39, cr_refunded_addr_sk#40, cr_returning_customer_sk#41, cr_returning_cdemo_sk#42, cr_returning_hdemo_sk#43, cr_returning_addr_sk#44, cr_call_center_sk#45, cr_catalog_page_sk#46, cr_ship_mode_sk#47, cr_warehouse_sk#48, cr_reason_sk#49, cr_order_number#50L, cr_return_quantity#51, cr_return_amount#52, cr_return_tax#53, cr_return_amt_inc_tax#54, cr_fee#55, cr_return_ship_cost#56, cr_refunded_cash#57, cr_reversed_charge#58, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1946021502,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 447047232,
                "rowCount" : 13970226
              },
              "compileTime" : {
                "sizeInBytes" : 447047232,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#61 = d_date_sk#62) "
          },
          "0" : {
            "sign" : -821969244,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              },
              "compileTime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] "
          },
          "2" : {
            "sign" : 565121281,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 387221688,
                "rowCount" : 13829346
              },
              "compileTime" : {
                "sizeInBytes" : 387221688,
                "rowCount" : 13829346
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61] "
          },
          "3" : {
            "sign" : -292836162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2157377976,
                "rowCount" : 13829346
              },
              "compileTime" : {
                "sizeInBytes" : 2157377976,
                "rowCount" : 13829346
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#159 [cr_returned_date_sk#61]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n+- Join Inner, (cr_returned_date_sk#61 = d_date_sk#62)\n   :- Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61]\n   :  +- Filter (((isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returned_date_sk#61)) AND isnotnull(cr_returning_customer_sk#41)) AND dynamicpruning#159 [cr_returned_date_sk#61])\n   :     :  +- Project [d_date_sk#62]\n   :     :     +- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#35,cr_item_sk#36,cr_refunded_customer_sk#37,cr_refunded_cdemo_sk#38,cr_refunded_hdemo_sk#39,cr_refunded_addr_sk#40,cr_returning_customer_sk#41,cr_returning_cdemo_sk#42,cr_returning_hdemo_sk#43,cr_returning_addr_sk#44,cr_call_center_sk#45,cr_catalog_page_sk#46,cr_ship_mode_sk#47,cr_warehouse_sk#48,cr_reason_sk#49,cr_order_number#50L,cr_return_quantity#51,cr_return_amount#52,cr_return_tax#53,cr_return_amt_inc_tax#54,cr_fee#55,cr_return_ship_cost#56,cr_refunded_cash#57,cr_reversed_charge#58,... 3 more fields] parquet\n   +- Project [d_date_sk#62]\n      +- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 159964265,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048816,
            "rowCount" : 30,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#62] Arguments: 0 "
          },
          "1" : {
            "sign" : -1808079424,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cr_returned_date_sk#61] Right keys [1]: [d_date_sk#62] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -814648838,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] Input [5]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61, d_date_sk#62] "
          },
          "2" : {
            "sign" : 1203114184,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 387221688,
            "rowCount" : 13829346,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61] Condition : (isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returning_customer_sk#41)) "
          },
          "3" : {
            "sign" : 1041103133,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 387221688,
            "rowCount" : 13829346,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_returns Output [4]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60, cr_returned_date_sk#61] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_returns/cr_returned_date_sk=2450822, ... 2100 entries] PartitionFilters: [isnotnull(cr_returned_date_sk#61), dynamicpruningexpression(cr_returned_date_sk#61 IN dynamicpruning#159)] PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)] ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_returns",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n+- BroadcastHashJoin [cr_returned_date_sk#61], [d_date_sk#62], Inner, BuildRight, false\n   :- Filter (isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returning_customer_sk#41))\n   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#41,cr_call_center_sk#45,cr_net_loss#60,cr_returned_date_sk#61] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#45), isnotnull(cr_returning_customer_sk#41)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#61), dynamicpruningexpression(cr_returned_date_sk#61 IN dynamicpru..., PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#62], [id=#661]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=658]\n   :                 +- Project [d_date_sk#62]\n   :                    +- Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n         +- *(1) Project [d_date_sk#62]\n            +- *(1) Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 388270504,
        "inputRowCount" : 13829376
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 15,
        "FinishedTasksTotalTimeInMs" : 19532.0,
        "FinishedTasksDistributionInMs" : [ 124.0, 1274.0, 1299.0, 1441.0, 1842.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 7294,
        "TotalTasksDurationInMs" : 40162,
        "IOBytes" : {
          "Total" : 5560114,
          "Details" : {
            "IR" : 1989944,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3570170
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1385304414,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2760,
                "rowCount" : 30
              },
              "compileTime" : {
                "sizeInBytes" : 2760,
                "rowCount" : 30
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15] "
          },
          "1" : {
            "sign" : 580590178,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15990,
                "rowCount" : 30
              },
              "compileTime" : {
                "sizeInBytes" : 15990,
                "rowCount" : 30
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cc_call_center_sk#4) "
          },
          "2" : {
            "sign" : 1851733774,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 15990,
                "rowCount" : 30
              },
              "compileTime" : {
                "sizeInBytes" : 15990,
                "rowCount" : 30
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cc_call_center_sk#4, cc_call_center_id#5, cc_rec_start_date#6, cc_rec_end_date#7, cc_closed_date_sk#8, cc_open_date_sk#9, cc_name#10, cc_class#11, cc_employees#12, cc_sq_ft#13, cc_hours#14, cc_manager#15, cc_mkt_id#16, cc_mkt_class#17, cc_mkt_desc#18, cc_market_manager#19, cc_division#20, cc_division_name#21, cc_company#22, cc_company_name#23, cc_street_number#24, cc_street_name#25, cc_street_type#26, cc_suite_number#27, ... 7 more fields], `spark_catalog`.`tpcds_100`.`call_center`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15]\n+- Filter isnotnull(cc_call_center_sk#4)\n   +- Relation spark_catalog.tpcds_100.call_center[cc_call_center_sk#4,cc_call_center_id#5,cc_rec_start_date#6,cc_rec_end_date#7,cc_closed_date_sk#8,cc_open_date_sk#9,cc_name#10,cc_class#11,cc_employees#12,cc_sq_ft#13,cc_hours#14,cc_manager#15,cc_mkt_id#16,cc_mkt_class#17,cc_mkt_desc#18,cc_market_manager#19,cc_division#20,cc_division_name#21,cc_company#22,cc_company_name#23,cc_street_number#24,cc_street_name#25,cc_street_type#26,cc_suite_number#27,... 7 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -2010046008,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2760,
            "rowCount" : 30,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15] Condition : isnotnull(cc_call_center_sk#4) "
          },
          "1" : {
            "sign" : -1440739980,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2760,
            "rowCount" : 30,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.call_center Output [4]: [cc_call_center_sk#4, cc_call_center_id#5, cc_name#10, cc_manager#15] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/call_center] PushedFilters: [IsNotNull(cc_call_center_sk)] ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.call_center",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cc_call_center_sk#4)\n+- FileScan parquet spark_catalog.tpcds_100.call_center[cc_call_center_sk#4,cc_call_center_id#5,cc_name#10,cc_manager#15] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2760,
        "inputRowCount" : 30
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 1696,
        "TotalTasksDurationInMs" : 439,
        "IOBytes" : {
          "Total" : 13785,
          "Details" : {
            "IR" : 13785,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -413743872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#62] "
          },
          "1" : {
            "sign" : 1235322708,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62)) "
          },
          "2" : {
            "sign" : 707037506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#62, d_date_id#63, d_date#64, d_month_seq#65, d_week_seq#66, d_quarter_seq#67, d_year#68, d_dow#69, d_moy#70, d_dom#71, d_qoy#72, d_fy_year#73, d_fy_quarter_seq#74, d_fy_week_seq#75, d_day_name#76, d_quarter_name#77, d_holiday#78, d_weekend#79, d_following_holiday#80, d_first_dom#81, d_last_dom#82, d_same_day_ly#83, d_same_day_lq#84, d_current_day#85, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#62]\n+- Filter (((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND ((d_year#68 = 1999) AND (d_moy#70 = 11))) AND isnotnull(d_date_sk#62))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_date_id#63,d_date#64,d_month_seq#65,d_week_seq#66,d_quarter_seq#67,d_year#68,d_dow#69,d_moy#70,d_dom#71,d_qoy#72,d_fy_year#73,d_fy_quarter_seq#74,d_fy_week_seq#75,d_day_name#76,d_quarter_name#77,d_holiday#78,d_weekend#79,d_following_holiday#80,d_first_dom#81,d_last_dom#82,d_same_day_ly#83,d_same_day_lq#84,d_current_day#85,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 140905151,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#62] Input [3]: [d_date_sk#62, d_year#68, d_moy#70] "
          },
          "1" : {
            "sign" : 1497840455,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#62, d_year#68, d_moy#70] Condition : ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62)) "
          },
          "2" : {
            "sign" : -393841589,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#62, d_year#68, d_moy#70] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#62]\n+- Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 900,
        "inputRowCount" : 75
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1815,
        "TotalTasksDurationInMs" : 502,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 43763294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86400,
                "rowCount" : 7200
              },
              "compileTime" : {
                "sizeInBytes" : 86400,
                "rowCount" : 7200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [hd_demo_sk#130] "
          },
          "1" : {
            "sign" : -642221027,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              },
              "compileTime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130)) "
          },
          "2" : {
            "sign" : 1474822203,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              },
              "compileTime" : {
                "sizeInBytes" : 316800,
                "rowCount" : 7200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [hd_demo_sk#130, hd_income_band_sk#131, hd_buy_potential#132, hd_dep_count#133, hd_vehicle_count#134], `spark_catalog`.`tpcds_100`.`household_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [hd_demo_sk#130]\n+- Filter ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130))\n   +- Relation spark_catalog.tpcds_100.household_demographics[hd_demo_sk#130,hd_income_band_sk#131,hd_buy_potential#132,hd_dep_count#133,hd_vehicle_count#134] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 646651003,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [hd_demo_sk#130] Input [2]: [hd_demo_sk#130, hd_buy_potential#132] "
          },
          "1" : {
            "sign" : -1664871972,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [hd_demo_sk#130, hd_buy_potential#132] Condition : ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130)) "
          },
          "2" : {
            "sign" : 833548286,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 86400,
            "rowCount" : 7200,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.household_demographics Output [2]: [hd_demo_sk#130, hd_buy_potential#132] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household_demographics] PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,0-500), IsNotNull(hd_demo_sk)] ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.household_demographics",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [hd_demo_sk#130]\n+- Filter ((isnotnull(hd_buy_potential#132) AND StartsWith(hd_buy_potential#132, 0-500)) AND isnotnull(hd_demo_sk#130))\n   +- FileScan parquet spark_catalog.tpcds_100.household_demographics[hd_demo_sk#130,hd_buy_potential#132] Batched: true, DataFilters: [isnotnull(hd_buy_potential#132), StartsWith(hd_buy_potential#132, 0-500), isnotnull(hd_demo_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/household..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,0-500), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86400,
        "inputRowCount" : 7200
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 2995,
        "TotalTasksDurationInMs" : 1710,
        "IOBytes" : {
          "Total" : 31657,
          "Details" : {
            "IR" : 31657,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -294227038,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5988096,
                "rowCount" : 187128
              },
              "compileTime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60], ShuffleQueryStage 6\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -29124617,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 5988096,
            "rowCount" : 187128,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60] Arguments: 6 "
          }
        },
        "links" : [ ],
        "rawPlan" : "ShuffleQueryStage 6\n+- Exchange hashpartitioning(cr_returning_customer_sk#41, 200), ENSURE_REQUIREMENTS, [plan_id=687]\n   +- *(7) Project [cr_returning_customer_sk#41, cr_call_center_sk#45, cr_net_loss#60]\n      +- *(7) BroadcastHashJoin [cr_returned_date_sk#61], [d_date_sk#62], Inner, BuildRight, false\n         :- *(7) Filter (isnotnull(cr_call_center_sk#45) AND isnotnull(cr_returning_customer_sk#41))\n         :  +- *(7) ColumnarToRow\n         :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#41,cr_call_center_sk#45,cr_net_loss#60,cr_returned_date_sk#61] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#45), isnotnull(cr_returning_customer_sk#41)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#61), dynamicpruningexpression(cr_returned_date_sk#61 IN dynamicpru..., PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>\n         :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#62], [id=#661]\n         :              +- AdaptiveSparkPlan isFinalPlan=true\n                           +- == Final Plan ==\n                              BroadcastQueryStage 1\n                              +- ReusedExchange [d_date_sk#62], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n                           +- == Initial Plan ==\n                              BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=658]\n                              +- Project [d_date_sk#62]\n                                 +- Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n         +- BroadcastQueryStage 0\n            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=278]\n               +- *(1) Project [d_date_sk#62]\n                  +- *(1) Filter ((((isnotnull(d_year#68) AND isnotnull(d_moy#70)) AND (d_year#68 = 1999)) AND (d_moy#70 = 11)) AND isnotnull(d_date_sk#62))\n                     +- *(1) ColumnarToRow\n                        +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#62,d_year#68,d_moy#70] Batched: true, DataFilters: [isnotnull(d_year#68), isnotnull(d_moy#70), (d_year#68 = 1999), (d_moy#70 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5988096,
        "inputRowCount" : 187128
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 18238, 19396, 18572, 18445, 18513, 18178, 18599, 18186, 18357, 18829, 20339, 18667, 19572, 17559, 18839, 17450, 19253, 19163, 18174, 18884, 17964, 19128, 19279, 18234, 18862, 18076, 19551, 18741, 19097, 19475, 18620, 18413, 19108, 17849, 18457, 19382, 18834, 18398, 18583, 17560, 18214, 18793, 18481, 19305, 18688, 18032, 17616, 19025, 17234, 19499, 18099, 18435, 19020, 18738, 19010, 20231, 18132, 19266, 18978, 17661, 18454, 18593, 19059, 19523, 19091, 19167, 18878, 18884, 19408, 19101, 19094, 18698, 18965, 19035, 19755, 18819, 18223, 18931, 19260, 18609, 17537, 18572, 18275, 18701, 18573, 18734, 17712, 19792, 19421, 19337, 18586, 18322, 18696, 18941, 18997, 18711, 19091, 18036, 18473, 19490, 18955, 19036, 17980, 18447, 19291, 17514, 19069, 18410, 18271, 19070, 17674, 18487, 18732, 20357, 18921, 19144, 18348, 19088, 18614, 18719, 18558, 18270, 18965, 18087, 19036, 19371, 18721, 17955, 18916, 17780, 18976, 18835, 17589, 18733, 18259, 18874, 19138, 18827, 18480, 19535, 18294, 17611, 18910, 17868, 19316, 18678, 19271, 19575, 18171, 18690, 18306, 19522, 19466, 18469, 17946, 18431, 18921, 18549, 18665, 18372, 18579, 19128, 18687, 18909, 19640, 18592, 17833, 19007, 19518, 18677, 19279, 19024, 18700, 19279, 19115, 17294, 18683, 19343, 18976, 19209, 18976, 17890, 18559, 18738, 18819, 18746, 18700, 20059, 19524, 19036, 19533, 19347, 18161, 18365, 18645, 18539, 18146, 18467, 19360, 18987 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 357,
        "TotalTasksDurationInMs" : 348,
        "IOBytes" : {
          "Total" : 3570170,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3570170,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1876285844,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1329120,
                "rowCount" : 110760
              },
              "compileTime" : {
                "sizeInBytes" : 1329120,
                "rowCount" : 110760
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#108] "
          },
          "1" : {
            "sign" : 1398746651,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 27246960,
                "rowCount" : 110760
              },
              "compileTime" : {
                "sizeInBytes" : 27246960,
                "rowCount" : 110760
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108)) "
          },
          "2" : {
            "sign" : 1674987711,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#108, ca_address_id#109, ca_street_number#110, ca_street_name#111, ca_street_type#112, ca_suite_number#113, ca_city#114, ca_county#115, ca_state#116, ca_zip#117, ca_country#118, ca_gmt_offset#119, ca_location_type#120], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#108]\n+- Filter ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#108,ca_address_id#109,ca_street_number#110,ca_street_name#111,ca_street_type#112,ca_suite_number#113,ca_city#114,ca_county#115,ca_state#116,ca_zip#117,ca_country#118,ca_gmt_offset#119,ca_location_type#120] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1243641061,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1329120,
            "rowCount" : 110760,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#108] Input [2]: [ca_address_sk#108, ca_gmt_offset#119] "
          },
          "1" : {
            "sign" : 1594034174,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1329120,
            "rowCount" : 110760,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#108, ca_gmt_offset#119] Condition : ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108)) "
          },
          "2" : {
            "sign" : -2137827622,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1329120,
            "rowCount" : 110760,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#108, ca_gmt_offset#119] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#108]\n+- Filter ((isnotnull(ca_gmt_offset#119) AND (ca_gmt_offset#119 = -7.00)) AND isnotnull(ca_address_sk#108))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#108,ca_gmt_offset#119] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#119), (ca_gmt_offset#119 = -7.00), isnotnull(ca_address_sk#108)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1329120,
        "inputRowCount" : 110760
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1890,
        "TotalTasksDurationInMs" : 1293,
        "IOBytes" : {
          "Total" : 4468245,
          "Details" : {
            "IR" : 4468245,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227476834,
  "SQLEndTimeInMs" : 1702227489526,
  "Objectives" : {
    "DurationInMs" : 12692,
    "IOBytes" : {
      "Total" : 127447766,
      "Details" : {
        "IR" : 41711411,
        "IW" : 0,
        "SR" : 42870516,
        "SW" : 42865839
      }
    }
  }
}
