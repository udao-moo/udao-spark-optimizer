{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "34" : {
          "sign" : -206103104,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#109, i_item_id#110] "
        },
        "12" : {
          "sign" : 2116891194,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 10294768656,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
        },
        "8" : {
          "sign" : -1569556139,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 178443292,
          "rowCount" : 1939601,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#131) "
        },
        "19" : {
          "sign" : -377160295,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#7, cs_ship_date_sk#8, cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_bill_hdemo_sk#11, cs_bill_addr_sk#12, cs_ship_customer_sk#13, cs_ship_cdemo_sk#14, cs_ship_hdemo_sk#15, cs_ship_addr_sk#16, cs_call_center_sk#17, cs_catalog_page_sk#18, cs_ship_mode_sk#19, cs_warehouse_sk#20, cs_item_sk#21, cs_promo_sk#22, cs_order_number#23L, cs_quantity#24, cs_wholesale_cost#25, cs_list_price#26, cs_sales_price#27, cs_ext_discount_amt#28, cs_ext_sales_price#29, cs_ext_wholesale_cost#30, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "23" : {
          "sign" : -1126561090,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2195200,
          "rowCount" : 137200,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#41, cd_dep_count#47] "
        },
        "4" : {
          "sign" : 929612691,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
          "sizeInBytes" : 1545691210,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#159, ca_country#160, ca_state#161, ca_county#162, spark_grouping_id#158L] "
        },
        "40" : {
          "sign" : -108448169,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9981510,
          "rowCount" : 129630,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78] "
        },
        "15" : {
          "sign" : 2039954704,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7756910672,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39] "
        },
        "11" : {
          "sign" : 2073157978,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 9150905472,
          "rowCount" : 142982898,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
        },
        "9" : {
          "sign" : 264411900,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12660951864,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
        },
        "33" : {
          "sign" : -547234420,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#68, ca_address_id#69, ca_street_number#70, ca_street_name#71, ca_street_type#72, ca_suite_number#73, ca_city#74, ca_county#75, ca_state#76, ca_zip#77, ca_country#78, ca_gmt_offset#79, ca_location_type#80], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "22" : {
          "sign" : -225897553,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#81, d_date_id#82, d_date#83, d_month_seq#84, d_week_seq#85, d_quarter_seq#86, d_year#87, d_dow#88, d_moy#89, d_dom#90, d_qoy#91, d_fy_year#92, d_fy_quarter_seq#93, d_fy_week_seq#94, d_day_name#95, d_quarter_name#96, d_holiday#97, d_weekend#98, d_following_holiday#99, d_first_dom#100, d_last_dom#101, d_same_day_ly#102, d_same_day_lq#103, d_current_day#104, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "26" : {
          "sign" : -1472247429,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23160624,
          "rowCount" : 965026,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
        },
        "37" : {
          "sign" : 1524936367,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 23049600,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cd_demo_sk#131] "
        },
        "13" : {
          "sign" : 397960069,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8030913632,
          "rowCount" : 143409172,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47] "
        },
        "24" : {
          "sign" : 636681142,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 13034000,
          "rowCount" : 137200,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND ((cd_gender#42 = M) AND (cd_education_status#44 = College))) AND isnotnull(cd_demo_sk#41)) "
        },
        "35" : {
          "sign" : 331413796,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#109) "
        },
        "16" : {
          "sign" : -110918823,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8865040768,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#40 = d_date_sk#81) "
        },
        "5" : {
          "sign" : 2108224537,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 291473200,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
        },
        "10" : {
          "sign" : 1316836671,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 13811947488,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
        },
        "21" : {
          "sign" : -315914142,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81)) "
        },
        "32" : {
          "sign" : -1155584390,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 31888980,
          "rowCount" : 129630,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68)) "
        },
        "6" : {
          "sign" : 1515498270,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 307554480,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
        },
        "36" : {
          "sign" : 62730172,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#109, i_item_id#110, i_rec_start_date#111, i_rec_end_date#112, i_item_desc#113, i_current_price#114, i_wholesale_cost#115, i_brand_id#116, i_brand#117, i_class_id#118, i_class#119, i_category_id#120, i_category#121, i_manufact_id#122, i_manufact#123, i_size#124, i_formulation#125, i_color#126, i_units#127, i_container#128, i_manager_id#129, i_product_name#130], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "1" : {
          "sign" : -61562953,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 1589853816,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : 1058406357,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#131, cd_gender#132, cd_marital_status#133, cd_education_status#134, cd_purchase_estimate#135, cd_credit_rating#136, cd_dep_count#137, cd_dep_employed_count#138, cd_dep_college_count#139], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "17" : {
          "sign" : 1787823623,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8510565060,
          "rowCount" : 141842751,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40] "
        },
        "25" : {
          "sign" : 1114535329,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#41, cd_gender#42, cd_marital_status#43, cd_education_status#44, cd_purchase_estimate#45, cd_credit_rating#46, cd_dep_count#47, cd_dep_employed_count#48, cd_dep_college_count#49], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1500057531,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9178187008,
          "rowCount" : 143409172,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_cdemo_sk#10 = cd_demo_sk#41) "
        },
        "31" : {
          "sign" : 459146206,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1555560,
          "rowCount" : 129630,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#68] "
        },
        "0" : {
          "sign" : 1403888284,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 14400,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1472606895,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6912,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#81] "
        },
        "27" : {
          "sign" : 912280901,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 241256500,
          "rowCount" : 965026,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND (isnotnull(c_current_cdemo_sk#52) AND isnotnull(c_current_addr_sk#54))) AND might_contain(scalar-subquery#177 [], xxhash64(c_current_addr_sk#54, 42))) "
        },
        "2" : {
          "sign" : -705083342,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 1589853816,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [ca_country#160 ASC NULLS FIRST, ca_state#161 ASC NULLS FIRST, ca_county#162 ASC NULLS FIRST, i_item_id#159 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : 1714930682,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 182476000,
          "rowCount" : 1920800,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(cd_demo_sk#131) "
        },
        "18" : {
          "sign" : 1997741968,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29503292208,
          "rowCount" : 141842751,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_sold_date_sk#40)) AND isnotnull(cs_item_sk#21)) AND dynamicpruning#174 [cs_sold_date_sk#40]) "
        },
        "30" : {
          "sign" : 1186282902,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1555560,
          "rowCount" : 129630,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#68] "
        },
        "7" : {
          "sign" : 570275865,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 162926484,
          "rowCount" : 1939601,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
        },
        "29" : {
          "sign" : 1591775931,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 108,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#176] "
        },
        "3" : {
          "sign" : 1191407488,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 1589853816,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#159, ca_country#160, ca_state#161, ca_county#162, spark_grouping_id#158L], [i_item_id#159, ca_country#160, ca_state#161, ca_county#162, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#0, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#1, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#2, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#3, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#4, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#5, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#6] "
        },
        "28" : {
          "sign" : 593468542,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#50, c_customer_id#51, c_current_cdemo_sk#52, c_current_hdemo_sk#53, c_current_addr_sk#54, c_first_shipto_date_sk#55, c_first_sales_date_sk#56, c_salutation#57, c_first_name#58, c_last_name#59, c_preferred_cust_flag#60, c_birth_day#61, c_birth_month#62, c_birth_year#63, c_birth_country#64, c_login#65, c_email_address#66, c_last_review_date#67], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        }
      },
      "links" : [ {
        "fromId" : 19,
        "fromName" : "LogicalRelation",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "LogicalRelation",
        "toId" : 21,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Filter",
        "toId" : 20,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 18,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 18,
        "fromName" : "Filter",
        "toId" : 17,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Project",
        "toId" : 16,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Join",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "LogicalRelation",
        "toId" : 24,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Filter",
        "toId" : 23,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 14,
        "fromName" : "Join",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "LogicalRelation",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "LogicalRelation",
        "toId" : 32,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Filter",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Project",
        "toId" : 29,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Aggregate",
        "toId" : 27,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 27,
        "fromName" : "Filter",
        "toId" : 26,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "LogicalRelation",
        "toId" : 35,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Filter",
        "toId" : 34,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "LogicalRelation",
        "toId" : 38,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Filter",
        "toId" : 37,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Filter",
        "toId" : 40,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Project",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Expand",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Expand",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#160 ASC NULLS FIRST, ca_state#161 ASC NULLS FIRST, ca_county#162 ASC NULLS FIRST, i_item_id#159 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#159, ca_country#160, ca_state#161, ca_county#162, spark_grouping_id#158L], [i_item_id#159, ca_country#160, ca_state#161, ca_county#162, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#0, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#1, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#2, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#3, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#4, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#5, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#6]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#159, ca_country#160, ca_state#161, ca_county#162, spark_grouping_id#158L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#131)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n                  :     :     :     :  +- Join Inner, (cs_bill_cdemo_sk#10 = cd_demo_sk#41)\n                  :     :     :     :     :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n                  :     :     :     :     :  +- Join Inner, (cs_sold_date_sk#40 = d_date_sk#81)\n                  :     :     :     :     :     :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40]\n                  :     :     :     :     :     :  +- Filter ((((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_sold_date_sk#40)) AND isnotnull(cs_item_sk#21)) AND dynamicpruning#174 [cs_sold_date_sk#40])\n                  :     :     :     :     :     :     :  +- Project [d_date_sk#81]\n                  :     :     :     :     :     :     :     +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                  :     :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_date_id#82,d_date#83,d_month_seq#84,d_week_seq#85,d_quarter_seq#86,d_year#87,d_dow#88,d_moy#89,d_dom#90,d_qoy#91,d_fy_year#92,d_fy_quarter_seq#93,d_fy_week_seq#94,d_day_name#95,d_quarter_name#96,d_holiday#97,d_weekend#98,d_following_holiday#99,d_first_dom#100,d_last_dom#101,d_same_day_ly#102,d_same_day_lq#103,d_current_day#104,... 4 more fields] parquet\n                  :     :     :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#7,cs_ship_date_sk#8,cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_bill_hdemo_sk#11,cs_bill_addr_sk#12,cs_ship_customer_sk#13,cs_ship_cdemo_sk#14,cs_ship_hdemo_sk#15,cs_ship_addr_sk#16,cs_call_center_sk#17,cs_catalog_page_sk#18,cs_ship_mode_sk#19,cs_warehouse_sk#20,cs_item_sk#21,cs_promo_sk#22,cs_order_number#23L,cs_quantity#24,cs_wholesale_cost#25,cs_list_price#26,cs_sales_price#27,cs_ext_discount_amt#28,cs_ext_sales_price#29,cs_ext_wholesale_cost#30,... 10 more fields] parquet\n                  :     :     :     :     :     +- Project [d_date_sk#81]\n                  :     :     :     :     :        +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                  :     :     :     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_date_id#82,d_date#83,d_month_seq#84,d_week_seq#85,d_quarter_seq#86,d_year#87,d_dow#88,d_moy#89,d_dom#90,d_qoy#91,d_fy_year#92,d_fy_quarter_seq#93,d_fy_week_seq#94,d_day_name#95,d_quarter_name#96,d_holiday#97,d_weekend#98,d_following_holiday#99,d_first_dom#100,d_last_dom#101,d_same_day_ly#102,d_same_day_lq#103,d_current_day#104,... 4 more fields] parquet\n                  :     :     :     :     +- Project [cd_demo_sk#41, cd_dep_count#47]\n                  :     :     :     :        +- Filter (((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND ((cd_gender#42 = M) AND (cd_education_status#44 = College))) AND isnotnull(cd_demo_sk#41))\n                  :     :     :     :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_marital_status#43,cd_education_status#44,cd_purchase_estimate#45,cd_credit_rating#46,cd_dep_count#47,cd_dep_employed_count#48,cd_dep_college_count#49] parquet\n                  :     :     :     +- Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :        +- Filter (((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND (isnotnull(c_current_cdemo_sk#52) AND isnotnull(c_current_addr_sk#54))) AND might_contain(scalar-subquery#177 [], xxhash64(c_current_addr_sk#54, 42)))\n                  :     :     :           :  +- Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#176]\n                  :     :     :           :     +- Project [ca_address_sk#68]\n                  :     :     :           :        +- Project [ca_address_sk#68]\n                  :     :     :           :           +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                  :     :     :           :              +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_address_id#69,ca_street_number#70,ca_street_name#71,ca_street_type#72,ca_suite_number#73,ca_city#74,ca_county#75,ca_state#76,ca_zip#77,ca_country#78,ca_gmt_offset#79,ca_location_type#80] parquet\n                  :     :     :           +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#50,c_customer_id#51,c_current_cdemo_sk#52,c_current_hdemo_sk#53,c_current_addr_sk#54,c_first_shipto_date_sk#55,c_first_sales_date_sk#56,c_salutation#57,c_first_name#58,c_last_name#59,c_preferred_cust_flag#60,c_birth_day#61,c_birth_month#62,c_birth_year#63,c_birth_country#64,c_login#65,c_email_address#66,c_last_review_date#67] parquet\n                  :     :     +- Project [i_item_sk#109, i_item_id#110]\n                  :     :        +- Filter isnotnull(i_item_sk#109)\n                  :     :           +- Relation spark_catalog.tpcds_100.item[i_item_sk#109,i_item_id#110,i_rec_start_date#111,i_rec_end_date#112,i_item_desc#113,i_current_price#114,i_wholesale_cost#115,i_brand_id#116,i_brand#117,i_class_id#118,i_class#119,i_category_id#120,i_category#121,i_manufact_id#122,i_manufact#123,i_size#124,i_formulation#125,i_color#126,i_units#127,i_container#128,i_manager_id#129,i_product_name#130] parquet\n                  :     +- Project [cd_demo_sk#131]\n                  :        +- Filter isnotnull(cd_demo_sk#131)\n                  :           +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#131,cd_gender#132,cd_marital_status#133,cd_education_status#134,cd_purchase_estimate#135,cd_credit_rating#136,cd_dep_count#137,cd_dep_employed_count#138,cd_dep_college_count#139] parquet\n                  +- Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78]\n                     +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                        +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_address_id#69,ca_street_number#70,ca_street_name#71,ca_street_type#72,ca_suite_number#73,ca_city#74,ca_county#75,ca_state#76,ca_zip#77,ca_country#78,ca_gmt_offset#79,ca_location_type#80] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 31016613590,
      "inputRowCount" : 150391666
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -889554804,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27664268217600,
            "rowCount" : 329336526400,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "4" : {
            "sign" : -1768733671,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 39277497479780000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "11" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "9" : {
            "sign" : 1222831863,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 17831632,
            "rowCount" : 171458,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110], ShuffleQueryStage 8 "
          },
          "5" : {
            "sign" : 1836477089,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7406613810472800000,
            "rowCount" : 56110710685400000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 30732800,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "6" : {
            "sign" : 1149729580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7855499495956000000,
            "rowCount" : 56110710685400000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : 228786098,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 40399711693488000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1993208037,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 780463631,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 40399711693488000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -770318206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25029576006400,
            "rowCount" : 329336526400,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : -1925314709,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 40399711693488000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- LogicalQueryStage Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110], ShuffleQueryStage 8\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 73341384,
        "inputRowCount" : 2262633
      },
      "PD" : {
        "2" : [ 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331 ],
        "4" : [ 26854, 29539, 29539, 26854, 32493, 29539, 24413, 32493, 29539, 26854, 26854, 26854, 32493, 26854, 26854, 26854, 26854, 29539, 39317, 32493, 24413, 26854, 32493, 22193, 32493, 24413, 26854, 32493, 29539, 29539, 29539, 29539, 26854, 35743, 32493, 26854, 22193, 32493, 26854, 29539, 24413, 22193, 26854, 26854, 26854, 26854, 26854, 26854, 29539, 29539, 26854, 26854, 32493, 26854, 29539, 26854, 24413, 29539, 29539, 32493, 29539, 26854, 29539, 32493, 24413, 32493, 32493, 32493, 39317, 39317, 32493, 29539, 29539, 32493, 32493, 26854, 29539, 26854, 26854, 29539, 22193, 29539, 29539, 32493, 32493, 24413, 24413, 32493, 32493, 29539, 26854, 29539, 24413, 26854, 26854, 26854, 35743, 29539, 26854, 29539, 29539, 29539, 26854, 29539, 26854, 32493, 32493, 32493, 32493, 29539, 22193, 24413, 29539, 29539, 24413, 24413, 24413, 26854, 26854, 32493, 26854, 29539, 32493, 26854, 29539, 29539, 32493, 32493, 32493, 29539, 29539, 32493, 26854, 29539, 29539, 29539, 29539, 26854, 29539, 24413, 24413, 29539, 26854, 29539, 32493, 29539, 32493, 24413, 32493, 29539, 29539, 29539, 29539, 26854, 26854, 32493, 24413, 29539, 32493, 32493, 29539, 26854, 29539, 26854, 24413, 32493, 29539, 35743, 32493, 29539, 26854, 26854, 29539, 35743, 24413, 24413, 32493, 24413, 32493, 26854, 32493, 35743, 26854, 29539, 26854, 26854, 26854, 29539, 22193, 29539, 26854, 29539, 26854, 29539, 24413, 29539, 26854, 24413, 32493, 29539 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226654440,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9646,
        "IOBytes" : {
          "Total" : 94839568,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 55165816,
            "SW" : 39673752
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1392090296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10294768656,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          },
          "8" : {
            "sign" : 424634030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4706257608997862400000,
            "rowCount" : 56026876297593600000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "4" : {
            "sign" : -1289154901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 6681905334441756720000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "15" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : 231648860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9150905472,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "9" : {
            "sign" : 1128718847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2333480895360000,
            "rowCount" : 29168511192000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "13" : {
            "sign" : -977299414,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8030913632,
            "rowCount" : 143409172,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 30732800,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 104099961,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1260016434494731267200000000,
            "rowCount" : 9545579049202509600000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 792139144,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2566828984896000,
            "rowCount" : 29168511192000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "6" : {
            "sign" : 828258622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1336381066888351344000000000,
            "rowCount" : 9545579049202509600000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : 1135114890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 6872816915425806912000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : -250288322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23160624,
            "rowCount" : 965026,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2 "
          },
          "0" : {
            "sign" : -355462665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -758119711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 6872816915425806912000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1245879182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4258042598617113600000,
            "rowCount" : 56026876297593600000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : 1671379587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 6872816915425806912000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8127993224,
        "inputRowCount" : 146669373
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 13,
        "FinishedTasksNum" : 31,
        "FinishedTasksTotalTimeInMs" : 21924.0,
        "FinishedTasksDistributionInMs" : [ 168.0, 352.0, 513.0, 903.0, 3151.0 ]
      },
      "StartTimeInMs" : 1702226645894,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 18192,
        "IOBytes" : {
          "Total" : 820507311,
          "Details" : {
            "IR" : 592220280,
            "IW" : 0,
            "SR" : 119126728,
            "SW" : 109160303
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 1738986517,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : -212014066,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 149739256,
            "rowCount" : 480124,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1454609259,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 149739256,
            "rowCount" : 480124,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 129699765,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 149739256,
            "rowCount" : 480124,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184], HashAggregate(keys=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], functions=[avg(cast(cs_quantity#24 as decimal(12,2))), avg(cast(cs_list_price#26 as decimal(12,2))), avg(cast(cs_coupon_amt#33 as decimal(12,2))), avg(cast(cs_sales_price#27 as decimal(12,2))), avg(cast(cs_net_profit#39 as decimal(12,2))), avg(cast(c_birth_year#63 as decimal(12,2))), avg(cast(cd_dep_count#47 as decimal(12,2)))]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184], HashAggregate(keys=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], functions=[avg(cast(cs_quantity#24 as decimal(12,2))), avg(cast(cs_list_price#26 as decimal(12,2))), avg(cast(cs_coupon_amt#33 as decimal(12,2))), avg(cast(cs_sales_price#27 as decimal(12,2))), avg(cast(cs_net_profit#39 as decimal(12,2))), avg(cast(c_birth_year#63 as decimal(12,2))), avg(cast(cd_dep_count#47 as decimal(12,2)))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 149739256,
        "inputRowCount" : 480124
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226660745,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3341,
        "IOBytes" : {
          "Total" : 39673752,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 39673752,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1392090296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1739137943397888,
            "rowCount" : 24154693658304,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          },
          "8" : {
            "sign" : 424634030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 795047606479521858355200000,
            "rowCount" : 9464852458089545932800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "4" : {
            "sign" : -1289154901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 1128801966282904471810560000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "15" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : 231648860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1545900394131456,
            "rowCount" : 24154693658304,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "9" : {
            "sign" : 1128718847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 394204600503521280000,
            "rowCount" : 4927557506294016000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "13" : {
            "sign" : -977299414,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8030913632,
            "rowCount" : 143409172,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 30732800,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 104099961,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 212859799356204843255705600000000,
            "rowCount" : 1612574237547006388300800000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 792139144,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 433625060553873408000,
            "rowCount" : 4927557506294016000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "6" : {
            "sign" : 828258622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 225760393256580894362112000000000,
            "rowCount" : 1612574237547006388300800000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : 1135114890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : -250288322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6737280,
            "rowCount" : 168432,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2 "
          },
          "0" : {
            "sign" : -355462665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -758119711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1245879182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 719328786814805490892800000,
            "rowCount" : 9464852458089545932800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : 1671379587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8111569880,
        "inputRowCount" : 145872779
      },
      "PD" : {

        "1" : [ 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 18341, 16674, 16674, 16674, 18341, 16674, 16674, 18341, 16674, 16674, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 18341, 18341, 18341, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 18341, 16674, 16674, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 16674, 16674, 16674, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 16674, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 22,
        "FinishedTasksTotalTimeInMs" : 33921.0,
        "FinishedTasksDistributionInMs" : [ 440.0, 529.0, 601.0, 1579.0, 5212.0 ]
      },
      "StartTimeInMs" : 1702226648247,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 15839,
        "IOBytes" : {
          "Total" : 790229079,
          "Details" : {
            "IR" : 565231653,
            "IW" : 0,
            "SR" : 119126728,
            "SW" : 105870698
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 2074559521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1739137943397888,
            "rowCount" : 24154693658304,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          },
          "8" : {
            "sign" : -764863827,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 795047606479521858355200000,
            "rowCount" : 9464852458089545932800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "4" : {
            "sign" : 222746526,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 1128801966282904471810560000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "15" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -1446028547,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1545900394131456,
            "rowCount" : 24154693658304,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "9" : {
            "sign" : -2112076344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 394204600503521280000,
            "rowCount" : 4927557506294016000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "13" : {
            "sign" : -977299414,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8030913632,
            "rowCount" : 143409172,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 30732800,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 1146253394,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 212859799356204843255705600000000,
            "rowCount" : 1612574237547006388300800000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 1570814221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 433625060553873408000,
            "rowCount" : 4927557506294016000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "6" : {
            "sign" : 816279851,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 225760393256580894362112000000000,
            "rowCount" : 1612574237547006388300800000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : -382087455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 1480656987,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16777216,
            "rowCount" : 168432,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2, BroadcastQueryStage 7 "
          },
          "0" : {
            "sign" : -1706212270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1047526040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1772066285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 719328786814805490892800000,
            "rowCount" : 9464852458089545932800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : -912719288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n                  :     :     :     +- LogicalQueryStage LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2, BroadcastQueryStage 7\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8121609816,
        "inputRowCount" : 145872779
      },
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 23,
        "FinishedTasksTotalTimeInMs" : 37305.0,
        "FinishedTasksDistributionInMs" : [ 440.0, 529.0, 601.0, 1727.0, 5212.0 ]
      },
      "StartTimeInMs" : 1702226648573,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 15513,
        "IOBytes" : {
          "Total" : 786939474,
          "Details" : {
            "IR" : 565231653,
            "IW" : 0,
            "SR" : 115837123,
            "SW" : 105870698
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : -1227505976,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1169800,
            "rowCount" : 5,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1169800,
        "inputRowCount" : 5
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 10059.0,
        "FinishedTasksDistributionInMs" : [ 1173.0, 1464.0, 2189.0, 5233.0, 5233.0 ]
      },
      "StartTimeInMs" : 1702226639417,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 24669,
        "IOBytes" : {
          "Total" : 844737210,
          "Details" : {
            "IR" : 606244733,
            "IW" : 0,
            "SR" : 119365749,
            "SW" : 119126728
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2123840994,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10294768656,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          },
          "8" : {
            "sign" : 618800214,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 162926484,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "19" : {
            "sign" : -377160295,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#7, cs_ship_date_sk#8, cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_bill_hdemo_sk#11, cs_bill_addr_sk#12, cs_ship_customer_sk#13, cs_ship_cdemo_sk#14, cs_ship_hdemo_sk#15, cs_ship_addr_sk#16, cs_call_center_sk#17, cs_catalog_page_sk#18, cs_ship_mode_sk#19, cs_warehouse_sk#20, cs_item_sk#21, cs_promo_sk#22, cs_order_number#23L, cs_quantity#24, cs_wholesale_cost#25, cs_list_price#26, cs_sales_price#27, cs_ext_discount_amt#28, cs_ext_sales_price#29, cs_ext_wholesale_cost#30, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "23" : {
            "sign" : -167305837,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#81], BroadcastQueryStage 0 "
          },
          "4" : {
            "sign" : 1906624415,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 1460411695,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "15" : {
            "sign" : -212011248,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2899265830440,
            "rowCount" : 51772604115,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39] "
          },
          "11" : {
            "sign" : 722388352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9150905472,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "9" : {
            "sign" : -901455043,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2333480895360000,
            "rowCount" : 29168511192000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "22" : {
            "sign" : -225897553,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#81, d_date_id#82, d_date#83, d_month_seq#84, d_week_seq#85, d_quarter_seq#86, d_year#87, d_dow#88, d_moy#89, d_dom#90, d_qoy#91, d_fy_year#92, d_fy_quarter_seq#93, d_fy_week_seq#94, d_day_name#95, d_quarter_name#96, d_holiday#97, d_weekend#98, d_following_holiday#99, d_first_dom#100, d_last_dom#101, d_same_day_ly#102, d_same_day_lq#103, d_current_day#104, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "26" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "13" : {
            "sign" : -1687301836,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 397779271936368000,
            "rowCount" : 7103201284578000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47] "
          },
          "24" : {
            "sign" : 686330681,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16777216,
            "rowCount" : 137200,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#41, cd_dep_count#47], BroadcastQueryStage 1 "
          },
          "16" : {
            "sign" : 1420769307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3313446663360,
            "rowCount" : 51772604115,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#40 = d_date_sk#81) "
          },
          "5" : {
            "sign" : -442804885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 275391920,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 127810106,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2566828984896000,
            "rowCount" : 29168511192000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "21" : {
            "sign" : -315914142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81)) "
          },
          "6" : {
            "sign" : 1521548332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 291473200,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : -1152976580,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1502137743,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 1183054691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 8510565060,
            "rowCount" : 141842751,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40] "
          },
          "25" : {
            "sign" : -250288322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23160624,
            "rowCount" : 965026,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2 "
          },
          "14" : {
            "sign" : 340895906,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 454604882212992000,
            "rowCount" : 7103201284578000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_cdemo_sk#10 = cd_demo_sk#41) "
          },
          "0" : {
            "sign" : 1680182611,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1472606895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#81] "
          },
          "27" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23049600,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "2" : {
            "sign" : -1638631319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1502137743,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1138278676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29503292208,
            "rowCount" : 141842751,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_sold_date_sk#40)) AND isnotnull(cs_item_sk#21)) AND dynamicpruning#222 [cs_sold_date_sk#40]) "
          },
          "7" : {
            "sign" : 412214346,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 147409676,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : 325628341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1502137743,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          },
          "28" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9981510,
            "rowCount" : 129630,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          }
        },
        "links" : [ {
          "fromId" : 19,
          "fromName" : "LogicalRelation",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "LogicalRelation",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 20,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Project",
          "toId" : 18,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 18,
          "fromName" : "Filter",
          "toId" : 17,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Project",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalQueryStage",
          "toId" : 16,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Join",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Join",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n                  :     :     :     :  +- Join Inner, (cs_bill_cdemo_sk#10 = cd_demo_sk#41)\n                  :     :     :     :     :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n                  :     :     :     :     :  +- Join Inner, (cs_sold_date_sk#40 = d_date_sk#81)\n                  :     :     :     :     :     :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40]\n                  :     :     :     :     :     :  +- Filter ((((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_sold_date_sk#40)) AND isnotnull(cs_item_sk#21)) AND dynamicpruning#222 [cs_sold_date_sk#40])\n                  :     :     :     :     :     :     :  +- Project [d_date_sk#81]\n                  :     :     :     :     :     :     :     +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                  :     :     :     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_date_id#82,d_date#83,d_month_seq#84,d_week_seq#85,d_quarter_seq#86,d_year#87,d_dow#88,d_moy#89,d_dom#90,d_qoy#91,d_fy_year#92,d_fy_quarter_seq#93,d_fy_week_seq#94,d_day_name#95,d_quarter_name#96,d_holiday#97,d_weekend#98,d_following_holiday#99,d_first_dom#100,d_last_dom#101,d_same_day_ly#102,d_same_day_lq#103,d_current_day#104,... 4 more fields] parquet\n                  :     :     :     :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#7,cs_ship_date_sk#8,cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_bill_hdemo_sk#11,cs_bill_addr_sk#12,cs_ship_customer_sk#13,cs_ship_cdemo_sk#14,cs_ship_hdemo_sk#15,cs_ship_addr_sk#16,cs_call_center_sk#17,cs_catalog_page_sk#18,cs_ship_mode_sk#19,cs_warehouse_sk#20,cs_item_sk#21,cs_promo_sk#22,cs_order_number#23L,cs_quantity#24,cs_wholesale_cost#25,cs_list_price#26,cs_sales_price#27,cs_ext_discount_amt#28,cs_ext_sales_price#29,cs_ext_wholesale_cost#30,... 10 more fields] parquet\n                  :     :     :     :     :     +- LogicalQueryStage Project [d_date_sk#81], BroadcastQueryStage 0\n                  :     :     :     :     +- LogicalQueryStage Project [cd_demo_sk#41, cd_dep_count#47], BroadcastQueryStage 1\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 29893217198,
        "inputRowCount" : 146630038
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 10059.0,
        "FinishedTasksDistributionInMs" : [ 1173.0, 1464.0, 2189.0, 5233.0, 5233.0 ]
      },
      "StartTimeInMs" : 1702226642777,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 21309,
        "IOBytes" : {
          "Total" : 844498189,
          "Details" : {
            "IR" : 606244733,
            "IW" : 0,
            "SR" : 119126728,
            "SW" : 119126728
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 2074559521,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 24570822431232,
            "rowCount" : 341261422656,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          },
          "8" : {
            "sign" : -764863827,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11232561302766681292800000,
            "rowCount" : 133720967890079539200000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "4" : {
            "sign" : 222746526,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 15947896932990611043840000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "15" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : -1446028547,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 21840731049984,
            "rowCount" : 341261422656,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "9" : {
            "sign" : -2112076344,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5569386417745920000,
            "rowCount" : 69617330221824000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "13" : {
            "sign" : -977299414,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 145879776,
            "rowCount" : 2026108,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 30732800,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 1146253394,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3007317707363943796838400000000,
            "rowCount" : 22782709904272301491200000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 1570814221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 6126325059520512000,
            "rowCount" : 69617330221824000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "6" : {
            "sign" : 816279851,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3189579386598122208768000000000,
            "rowCount" : 22782709904272301491200000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : -382087455,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16403551131076057073664000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : 1480656987,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16777216,
            "rowCount" : 168432,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2, BroadcastQueryStage 7 "
          },
          "0" : {
            "sign" : -1706212270,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1047526040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16403551131076057073664000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1772066285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10162793559646044979200000,
            "rowCount" : 133720967890079539200000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : -912719288,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 16403551131076057073664000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n                  :     :     :     +- LogicalQueryStage LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2, BroadcastQueryStage 7\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 236575960,
        "inputRowCount" : 4489715
      },
      "PD" : {
        "2" : [ 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331, 52331 ],
        "3" : [ 312547, 329293, 315148, 321181, 339854, 322625, 303185, 315639, 340469, 308102, 315292, 312680, 316616, 312345, 302728, 312070, 333945, 348618, 320632, 306683, 302465, 314951, 311147, 312011, 314857, 295776, 320714, 302207, 306098, 333019, 304040, 313543, 303913, 310833, 326225, 311439, 327526, 317843, 295233, 314927, 318463, 305766, 333678, 331228, 297858, 324288, 298645, 316707, 331149, 327857, 323067, 320572, 318873, 322538, 322716, 306256, 312467, 323566, 322463, 317118, 315702, 305508, 335321, 322827, 319005, 331551, 313039, 319701, 311626, 320625, 329522, 298784, 309943, 315711, 327393, 289479, 334893, 317162, 323085, 319784, 321982, 324985, 323253, 324738, 329590, 314134, 299705, 313015, 328151, 308977, 321478, 319740, 328338, 309411, 305203, 338604, 319869, 303583, 309867, 304318, 321502, 327321, 317638, 316754, 323354, 327227, 317401, 335313, 306428, 295651, 310251, 324028, 317507, 306102, 314593, 327058, 316820, 322117, 315704, 298882, 315169, 318587, 332897, 309906, 330500, 316563, 303642, 305950, 331553, 289577, 342048, 330138, 310919, 322712, 315092, 304831, 320476, 320389, 315623, 333584, 331802, 315787, 304737, 329530, 327123, 313160, 316652, 310491, 314952, 320417, 323983, 313093, 327563, 325898, 325285, 339813, 303557, 347035, 310223, 301347, 313479, 314893, 315837, 323342, 311733, 329138, 323231, 319598, 323014, 315017, 310491, 323465, 307459, 335888, 324676, 326399, 322377, 319899, 314228, 322443, 328237, 316189, 323004, 339970, 332977, 309036, 320553, 322924, 322552, 328218, 328943, 329280, 311955, 302395, 322847, 321124, 328068, 330441, 318278, 313899 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226652064,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 12022,
        "IOBytes" : {
          "Total" : 161036514,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 115837123,
            "SW" : 45199391
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1392090296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 10294768656,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          },
          "8" : {
            "sign" : 424634030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 162926484,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "4" : {
            "sign" : -1289154901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "sizeInBytes" : 231321664262500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "15" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "11" : {
            "sign" : 231648860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 9150905472,
            "rowCount" : 142982898,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "9" : {
            "sign" : 1128718847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2333480895360000,
            "rowCount" : 29168511192000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "13" : {
            "sign" : -977299414,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8030913632,
            "rowCount" : 143409172,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6 "
          },
          "16" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23049600,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "5" : {
            "sign" : 104099961,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 43620656689500,
            "rowCount" : 330459520375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "10" : {
            "sign" : 792139144,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2566828984896000,
            "rowCount" : 29168511192000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "6" : {
            "sign" : 828258622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 46264332852500,
            "rowCount" : 330459520375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          },
          "1" : {
            "sign" : 1135114890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 237930854670000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "14" : {
            "sign" : -250288322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 23160624,
            "rowCount" : 965026,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2 "
          },
          "0" : {
            "sign" : -355462665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -758119711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 237930854670000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -1245879182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 147409676,
            "rowCount" : 1939601,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "3" : {
            "sign" : 1671379587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 237930854670000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          }
        },
        "links" : [ {
          "fromId" : 13,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 8,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Expand",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8120310024,
        "inputRowCount" : 146669373
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 6,
        "FinishedTasksTotalTimeInMs" : 1379.0,
        "FinishedTasksDistributionInMs" : [ 168.0, 172.0, 241.0, 304.0, 308.0 ]
      },
      "StartTimeInMs" : 1702226643017,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 21069,
        "IOBytes" : {
          "Total" : 838172692,
          "Details" : {
            "IR" : 599919236,
            "IW" : 0,
            "SR" : 119126728,
            "SW" : 119126728
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -355462665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14400,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 14400,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 1135114890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1161053451033844599576576000000000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1161053451033844599576576000000000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -758119711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1161053451033844599576576000000000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1161053451033844599576576000000000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], true\n      +- Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n         +- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n            +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n               +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n                  :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n                  :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                  :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n                  :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                  :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n                  :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n                  :     :     :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n                  :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n                  :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n                  +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 410563455,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 14400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [11]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, agg1#178, agg2#179, agg3#180, agg4#181, agg5#182, agg6#183, agg7#184] Arguments: 100, [ca_country#208 ASC NULLS FIRST, ca_state#209 ASC NULLS FIRST, ca_county#210 ASC NULLS FIRST, i_item_id#207 ASC NULLS FIRST], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, agg1#178, agg2#179, agg3#180, agg4#181, agg5#182, agg6#183, agg7#184] "
          },
          "1" : {
            "sign" : 331933913,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 149739256,
            "rowCount" : 480124,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [19]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L, sum#240, count#241L, sum#242, count#243L, sum#244, count#245L, sum#246, count#247L, sum#248, count#249L, sum#250, count#251L, sum#252, count#253L] Keys [5]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] Functions [7]: [avg(cast(cs_quantity#24 as decimal(12,2))), avg(cast(cs_list_price#26 as decimal(12,2))), avg(cast(cs_coupon_amt#33 as decimal(12,2))), avg(cast(cs_sales_price#27 as decimal(12,2))), avg(cast(cs_net_profit#39 as decimal(12,2))), avg(cast(c_birth_year#63 as decimal(12,2))), avg(cast(cd_dep_count#47 as decimal(12,2)))] Aggregate Attributes [7]: [avg(cast(cs_quantity#24 as decimal(12,2)))#194, avg(cast(cs_list_price#26 as decimal(12,2)))#195, avg(cast(cs_coupon_amt#33 as decimal(12,2)))#196, avg(cast(cs_sales_price#27 as decimal(12,2)))#197, avg(cast(cs_net_profit#39 as decimal(12,2)))#198, avg(cast(c_birth_year#63 as decimal(12,2)))#199, avg(cast(cd_dep_count#47 as decimal(12,2)))#200] Results [11]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2)))#194 AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2)))#195 AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2)))#196 AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2)))#197 AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2)))#198 AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2)))#199 AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2)))#200 AS agg7#184] "
          },
          "2" : {
            "sign" : -1191681615,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [19]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L, sum#240, count#241L, sum#242, count#243L, sum#244, count#245L, sum#246, count#247L, sum#248, count#249L, sum#250, count#251L, sum#252, count#253L] Arguments: 9 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[ca_country#208 ASC NULLS FIRST,ca_state#209 ASC NULLS FIRST,ca_county#210 ASC NULLS FIRST,i_item_id#207 ASC NULLS FIRST], output=[i_item_id#207,ca_country#208,ca_state#209,ca_county#210,agg1#178,agg2#179,agg3#180,agg4#181,agg5#182,agg6#183,agg7#184])\n+- HashAggregate(keys=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], functions=[avg(cast(cs_quantity#24 as decimal(12,2))), avg(cast(cs_list_price#26 as decimal(12,2))), avg(cast(cs_coupon_amt#33 as decimal(12,2))), avg(cast(cs_sales_price#27 as decimal(12,2))), avg(cast(cs_net_profit#39 as decimal(12,2))), avg(cast(c_birth_year#63 as decimal(12,2))), avg(cast(cd_dep_count#47 as decimal(12,2)))], output=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, agg1#178, agg2#179, agg3#180, agg4#181, agg5#182, agg6#183, agg7#184])\n   +- ShuffleQueryStage 9\n      +- Exchange hashpartitioning(i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L, 200), ENSURE_REQUIREMENTS, [plan_id=1260]\n         +- *(11) HashAggregate(keys=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], functions=[partial_avg(cast(cs_quantity#24 as decimal(12,2))), partial_avg(cast(cs_list_price#26 as decimal(12,2))), partial_avg(cast(cs_coupon_amt#33 as decimal(12,2))), partial_avg(cast(cs_sales_price#27 as decimal(12,2))), partial_avg(cast(cs_net_profit#39 as decimal(12,2))), partial_avg(cast(c_birth_year#63 as decimal(12,2))), partial_avg(cast(cd_dep_count#47 as decimal(12,2)))], output=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L, sum#240, count#241L, sum#242, count#243L, sum#244, count#245L, sum#246, count#247L, sum#248, count#249L, sum#250, count#251L, sum#252, count#253L])\n            +- *(11) Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n               +- *(11) Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n                  +- *(11) BroadcastHashJoin [c_current_addr_sk#54], [ca_address_sk#68], Inner, BuildRight, false\n                     :- *(11) Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                     :  +- *(11) SortMergeJoin [c_current_cdemo_sk#52], [cd_demo_sk#185], Inner\n                     :     :- *(9) Sort [c_current_cdemo_sk#52 ASC NULLS FIRST], false, 0\n                     :     :  +- AQEShuffleRead coalesced\n                     :     :     +- ShuffleQueryStage 8\n                     :     :        +- Exchange hashpartitioning(c_current_cdemo_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=1150]\n                     :     :           +- *(8) Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n                     :     :              +- *(8) BroadcastHashJoin [cs_item_sk#21], [i_item_sk#109], Inner, BuildRight, false\n                     :     :                 :- *(8) Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                     :     :                 :  +- *(8) BroadcastHashJoin [cs_bill_customer_sk#9], [c_customer_sk#50], Inner, BuildRight, false\n                     :     :                 :     :- AQEShuffleRead local\n                     :     :                 :     :  +- ShuffleQueryStage 6\n                     :     :                 :     :     +- Exchange hashpartitioning(cs_bill_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=664]\n                     :     :                 :     :        +- *(7) Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n                     :     :                 :     :           +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#10], [cd_demo_sk#41], Inner, BuildRight, false\n                     :     :                 :     :              :- *(7) Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n                     :     :                 :     :              :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#40], [d_date_sk#81], Inner, BuildRight, false\n                     :     :                 :     :              :     :- *(7) Filter ((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_item_sk#21))\n                     :     :                 :     :              :     :  +- *(7) ColumnarToRow\n                     :     :                 :     :              :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_item_sk#21,cs_quantity#24,cs_list_price#26,cs_sales_price#27,cs_coupon_amt#33,cs_net_profit#39,cs_sold_date_sk#40] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#10), isnotnull(cs_bill_customer_sk#9), isnotnull(cs_item_sk#21)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#40), dynamicpruningexpression(cs_sold_date_sk#40 IN dynamicpruning#222)], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...\n                     :     :                 :     :              :     :           +- SubqueryBroadcast dynamicpruning#222, 0, [d_date_sk#81], [id=#627]\n                     :     :                 :     :              :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                          +- == Final Plan ==\n                                                                                             BroadcastQueryStage 1\n                                                                                             +- ReusedExchange [d_date_sk#81], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n                                                                                          +- == Initial Plan ==\n                                                                                             BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=624]\n                                                                                             +- Project [d_date_sk#81]\n                                                                                                +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                                                                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     :     :                 :     :              :     +- BroadcastQueryStage 0\n                     :     :                 :     :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n                     :     :                 :     :              :           +- *(1) Project [d_date_sk#81]\n                     :     :                 :     :              :              +- *(1) Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                     :     :                 :     :              :                 +- *(1) ColumnarToRow\n                     :     :                 :     :              :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n                     :     :                 :     :              +- BroadcastQueryStage 1\n                     :     :                 :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n                     :     :                 :     :                    +- *(2) Project [cd_demo_sk#41, cd_dep_count#47]\n                     :     :                 :     :                       +- *(2) Filter ((((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND (cd_gender#42 = M)) AND (cd_education_status#44 = College)) AND isnotnull(cd_demo_sk#41))\n                     :     :                 :     :                          +- *(2) ColumnarToRow\n                     :     :                 :     :                             +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_education_status#44,cd_dep_count#47] Batched: true, DataFilters: [isnotnull(cd_gender#42), isnotnull(cd_education_status#44), (cd_gender#42 = M), (cd_education_st..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_education..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>\n                     :     :                 :     +- BroadcastQueryStage 7\n                     :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=972]\n                     :     :                 :           +- AQEShuffleRead local\n                     :     :                 :              +- ShuffleQueryStage 2\n                     :     :                 :                 +- Exchange hashpartitioning(c_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=360]\n                     :     :                 :                    +- *(3) Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n                     :     :                 :                       +- *(3) Filter ((((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND isnotnull(c_current_cdemo_sk#52)) AND isnotnull(c_current_addr_sk#54)) AND might_contain(Subquery subquery#225, [id=#138], xxhash64(c_current_addr_sk#54, 42)))\n                     :     :                 :                          :  +- Subquery subquery#225, [id=#138]\n                     :     :                 :                          :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                 +- == Final Plan ==\n                                                                                    ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                                                                                    +- ShuffleQueryStage 0\n                                                                                       +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=446]\n                                                                                          +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                                                                                             +- *(1) Project [ca_address_sk#68]\n                                                                                                +- *(1) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                                                                                   +- *(1) ColumnarToRow\n                                                                                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n                                                                                 +- == Initial Plan ==\n                                                                                    ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                                                                                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136]\n                                                                                       +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                                                                                          +- Project [ca_address_sk#68]\n                                                                                             +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n                     :     :                 :                          +- *(3) ColumnarToRow\n                     :     :                 :                             +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#50,c_current_cdemo_sk#52,c_current_addr_sk#54,c_birth_month#62,c_birth_year#63] Batched: true, DataFilters: [c_birth_month#62 IN (9,5,12,4,1,10), isnotnull(c_customer_sk#50), isnotnull(c_current_cdemo_sk#5..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsN..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...\n                     :     :                 +- BroadcastQueryStage 3\n                     :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=381]\n                     :     :                       +- *(4) Filter isnotnull(i_item_sk#109)\n                     :     :                          +- *(4) ColumnarToRow\n                     :     :                             +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#109,i_item_id#110] Batched: true, DataFilters: [isnotnull(i_item_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n                     :     +- *(10) Sort [cd_demo_sk#185 ASC NULLS FIRST], false, 0\n                     :        +- AQEShuffleRead coalesced\n                     :           +- ShuffleQueryStage 4\n                     :              +- Exchange hashpartitioning(cd_demo_sk#185, 200), ENSURE_REQUIREMENTS, [plan_id=400]\n                     :                 +- *(5) Filter isnotnull(cd_demo_sk#185)\n                     :                    +- *(5) ColumnarToRow\n                     :                       +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#185] Batched: true, DataFilters: [isnotnull(cd_demo_sk#185)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int>\n                     +- BroadcastQueryStage 5\n                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=419]\n                           +- *(6) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                              +- *(6) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_county#75,ca_state#76,ca_country#78] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 149739256,
        "inputRowCount" : 480124
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "5" : [ 198730, 218603, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 218603, 218603, 218603, 218603, 218603, 198730, 218603, 218603, 218603, 218603, 218603, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 218603, 218603, 218603, 198730, 218603, 218603, 198730, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 198730, 218603, 218603, 218603, 218603, 218603, 218603, 218603, 218603, 218603, 218603, 218603, 218603, 198730, 198730, 218603, 218603, 218603, 198730, 198730, 218603, 198730, 198730, 218603, 218603, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 218603, 218603, 218603, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 218603, 218603, 198730, 218603, 198730, 218603, 218603, 218603, 218603, 218603, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 198730, 218603, 218603, 218603, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 218603, 218603, 218603, 198730, 218603, 198730, 218603, 198730, 218603, 218603, 198730, 198730, 198730, 218603, 218603, 198730, 198730, 218603, 198730, 198730, 198730, 218603, 198730, 218603, 198730, 198730, 218603, 198730, 218603, 218603, 218603, 198730, 218603, 198730, 198730, 198730, 198730, 198730, 198730, 218603, 198730, 218603, 218603, 198730 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 23 ],
      "Objectives" : {
        "DurationInMs" : 3171,
        "TotalTasksDurationInMs" : 3160,
        "IOBytes" : {
          "Total" : 39673752,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 39673752,
            "SW" : 0
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 1183054691,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8510565060,
                "rowCount" : 141842751
              },
              "compileTime" : {
                "sizeInBytes" : 8510565060,
                "rowCount" : 141842751
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40] "
          },
          "5" : {
            "sign" : -1138278676,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29503292208,
                "rowCount" : 141842751
              },
              "compileTime" : {
                "sizeInBytes" : 29503292208,
                "rowCount" : 141842751
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_sold_date_sk#40)) AND isnotnull(cs_item_sk#21)) AND dynamicpruning#222 [cs_sold_date_sk#40]) "
          },
          "6" : {
            "sign" : -377160295,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#7, cs_ship_date_sk#8, cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_bill_hdemo_sk#11, cs_bill_addr_sk#12, cs_ship_customer_sk#13, cs_ship_cdemo_sk#14, cs_ship_hdemo_sk#15, cs_ship_addr_sk#16, cs_call_center_sk#17, cs_catalog_page_sk#18, cs_ship_mode_sk#19, cs_warehouse_sk#20, cs_item_sk#21, cs_promo_sk#22, cs_order_number#23L, cs_quantity#24, cs_wholesale_cost#25, cs_list_price#26, cs_sales_price#27, cs_ext_discount_amt#28, cs_ext_sales_price#29, cs_ext_wholesale_cost#30, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1660411881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9178187008,
                "rowCount" : 143409172
              },
              "compileTime" : {
                "sizeInBytes" : 9178187008,
                "rowCount" : 143409172
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_cdemo_sk#10 = cd_demo_sk#41) "
          },
          "0" : {
            "sign" : -1958515999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8030913632,
                "rowCount" : 143409172
              },
              "compileTime" : {
                "sizeInBytes" : 8030913632,
                "rowCount" : 143409172
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47] "
          },
          "2" : {
            "sign" : -32667796,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7756910672,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 7756910672,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39] "
          },
          "3" : {
            "sign" : 2035021693,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8865040768,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 8865040768,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#40 = d_date_sk#81) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalRelation",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n+- Join Inner, (cs_bill_cdemo_sk#10 = cd_demo_sk#41)\n   :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n   :  +- Join Inner, (cs_sold_date_sk#40 = d_date_sk#81)\n   :     :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40]\n   :     :  +- Filter ((((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_sold_date_sk#40)) AND isnotnull(cs_item_sk#21)) AND dynamicpruning#222 [cs_sold_date_sk#40])\n   :     :     :  +- Project [d_date_sk#81]\n   :     :     :     +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_date_id#82,d_date#83,d_month_seq#84,d_week_seq#85,d_quarter_seq#86,d_year#87,d_dow#88,d_moy#89,d_dom#90,d_qoy#91,d_fy_year#92,d_fy_quarter_seq#93,d_fy_week_seq#94,d_day_name#95,d_quarter_name#96,d_holiday#97,d_weekend#98,d_following_holiday#99,d_first_dom#100,d_last_dom#101,d_same_day_ly#102,d_same_day_lq#103,d_current_day#104,... 4 more fields] parquet\n   :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#7,cs_ship_date_sk#8,cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_bill_hdemo_sk#11,cs_bill_addr_sk#12,cs_ship_customer_sk#13,cs_ship_cdemo_sk#14,cs_ship_hdemo_sk#15,cs_ship_addr_sk#16,cs_call_center_sk#17,cs_catalog_page_sk#18,cs_ship_mode_sk#19,cs_warehouse_sk#20,cs_item_sk#21,cs_promo_sk#22,cs_order_number#23L,cs_quantity#24,cs_wholesale_cost#25,cs_list_price#26,cs_sales_price#27,cs_ext_discount_amt#28,cs_ext_sales_price#29,cs_ext_wholesale_cost#30,... 10 more fields] parquet\n   :     +- Project [d_date_sk#81]\n   :        +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_date_id#82,d_date#83,d_month_seq#84,d_week_seq#85,d_quarter_seq#86,d_year#87,d_dow#88,d_moy#89,d_dom#90,d_qoy#91,d_fy_year#92,d_fy_quarter_seq#93,d_fy_week_seq#94,d_day_name#95,d_quarter_name#96,d_holiday#97,d_weekend#98,d_following_holiday#99,d_first_dom#100,d_last_dom#101,d_same_day_ly#102,d_same_day_lq#103,d_current_day#104,... 4 more fields] parquet\n   +- Project [cd_demo_sk#41, cd_dep_count#47]\n      +- Filter (((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND ((cd_gender#42 = M) AND (cd_education_status#44 = College))) AND isnotnull(cd_demo_sk#41))\n         +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_marital_status#43,cd_education_status#44,cd_purchase_estimate#45,cd_credit_rating#46,cd_dep_count#47,cd_dep_employed_count#48,cd_dep_college_count#49] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -882632085,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8510565060,
            "rowCount" : 141842751,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [9]: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40] Condition : ((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_item_sk#21)) "
          },
          "5" : {
            "sign" : 398358135,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8510565060,
            "rowCount" : 141842751,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [9]: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#40), dynamicpruningexpression(cs_sold_date_sk#40 IN dynamicpruning#222)] PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)] ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)> "
          },
          "6" : {
            "sign" : 1534896336,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#81] Arguments: 0 "
          },
          "1" : {
            "sign" : -1491574865,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9178187008,
            "rowCount" : 143409172,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_bill_cdemo_sk#10] Right keys [1]: [cd_demo_sk#41] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -2032877513,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 8030913632,
            "rowCount" : 143409172,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47] Input [10]: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_demo_sk#41, cd_dep_count#47] "
          },
          "2" : {
            "sign" : 995382539,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7756910672,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39] Input [10]: [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cs_sold_date_sk#40, d_date_sk#81] "
          },
          "7" : {
            "sign" : -1604968289,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16777216,
            "rowCount" : 137200,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [cd_demo_sk#41, cd_dep_count#47] Arguments: 1 "
          },
          "3" : {
            "sign" : -1021376696,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8865040768,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#40] Right keys [1]: [d_date_sk#81] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 4,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Filter",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n+- BroadcastHashJoin [cs_bill_cdemo_sk#10], [cd_demo_sk#41], Inner, BuildRight, false\n   :- Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n   :  +- BroadcastHashJoin [cs_sold_date_sk#40], [d_date_sk#81], Inner, BuildRight, false\n   :     :- Filter ((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_item_sk#21))\n   :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_item_sk#21,cs_quantity#24,cs_list_price#26,cs_sales_price#27,cs_coupon_amt#33,cs_net_profit#39,cs_sold_date_sk#40] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#10), isnotnull(cs_bill_customer_sk#9), isnotnull(cs_item_sk#21)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#40), dynamicpruningexpression(cs_sold_date_sk#40 IN dynamicpruning#222)], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...\n   :     :        +- SubqueryBroadcast dynamicpruning#222, 0, [d_date_sk#81], [id=#627]\n   :     :           +- AdaptiveSparkPlan isFinalPlan=false\n   :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=624]\n   :     :                 +- Project [d_date_sk#81]\n   :     :                    +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     +- BroadcastQueryStage 0\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n   :           +- *(1) Project [d_date_sk#81]\n   :              +- *(1) Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   :                 +- *(1) ColumnarToRow\n   :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 1\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n         +- *(2) Project [cd_demo_sk#41, cd_dep_count#47]\n            +- *(2) Filter ((((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND (cd_gender#42 = M)) AND (cd_education_status#44 = College)) AND isnotnull(cd_demo_sk#41))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_education_status#44,cd_dep_count#47] Batched: true, DataFilters: [isnotnull(cd_gender#42), isnotnull(cd_education_status#44), (cd_gender#42 = M), (cd_education_st..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_education..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8528393772,
        "inputRowCount" : 141980316
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 10059.0,
        "FinishedTasksDistributionInMs" : [ 1173.0, 1464.0, 2189.0, 5233.0, 5233.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 10 ],
      "Objectives" : {
        "DurationInMs" : 9062,
        "TotalTasksDurationInMs" : 70834,
        "IOBytes" : {
          "Total" : 625902960,
          "Details" : {
            "IR" : 565231653,
            "IW" : 0,
            "SR" : 0,
            "SW" : 60671307
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -547234420,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#68, ca_address_id#69, ca_street_number#70, ca_street_name#71, ca_street_type#72, ca_suite_number#73, ca_city#74, ca_county#75, ca_state#76, ca_zip#77, ca_country#78, ca_gmt_offset#79, ca_location_type#80], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1186282902,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1555560,
                "rowCount" : 129630
              },
              "compileTime" : {
                "sizeInBytes" : 1555560,
                "rowCount" : 129630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#68] "
          },
          "0" : {
            "sign" : -531761441,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 108,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 108,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224] "
          },
          "2" : {
            "sign" : 459146206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1555560,
                "rowCount" : 129630
              },
              "compileTime" : {
                "sizeInBytes" : 1555560,
                "rowCount" : 129630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#68] "
          },
          "3" : {
            "sign" : -1155584390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 31888980,
                "rowCount" : 129630
              },
              "compileTime" : {
                "sizeInBytes" : 31888980,
                "rowCount" : 129630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224]\n+- Project [ca_address_sk#68]\n   +- Project [ca_address_sk#68]\n      +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n         +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_address_id#69,ca_street_number#70,ca_street_name#71,ca_street_type#72,ca_suite_number#73,ca_city#74,ca_county#75,ca_state#76,ca_zip#77,ca_country#78,ca_gmt_offset#79,ca_location_type#80] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1971561918,
            "className" : "org.apache.spark.sql.execution.aggregate.ObjectHashAggregateExec",
            "sizeInBytes" : 108,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ObjectHashAggregate Input [1]: [ca_address_sk#68] Keys: [] Functions [1]: [partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)] Aggregate Attributes [1]: [buf#254] Results [1]: [buf#255] "
          },
          "1" : {
            "sign" : 1380334024,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1555560,
            "rowCount" : 129630,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#68] Input [2]: [ca_address_sk#68, ca_state#76] "
          },
          "2" : {
            "sign" : 1105961900,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1555560,
            "rowCount" : 129630,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#68, ca_state#76] Condition : (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68)) "
          },
          "3" : {
            "sign" : -1487839654,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1555560,
            "rowCount" : 129630,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#68, ca_state#76] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_state:string> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "ObjectHashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n+- Project [ca_address_sk#68]\n   +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1555560,
        "inputRowCount" : 129630
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 8986,
        "TotalTasksDurationInMs" : 19037,
        "IOBytes" : {
          "Total" : 6325497,
          "Details" : {
            "IR" : 6325497,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1245879182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 719328786814805490892800000,
                "rowCount" : 9464852458089545932800000
              },
              "compileTime" : {
                "sizeInBytes" : 719328786814805490892800000,
                "rowCount" : 9464852458089545932800000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "5" : {
            "sign" : 424634030,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 795047606479521858355200000,
                "rowCount" : 9464852458089545932800000
              },
              "compileTime" : {
                "sizeInBytes" : 795047606479521858355200000,
                "rowCount" : 9464852458089545932800000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185) "
          },
          "6" : {
            "sign" : 674500836,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 30732800,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 23049600,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cd_demo_sk#185], ShuffleQueryStage 4 "
          },
          "1" : {
            "sign" : -1289154901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Expand",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1128801966282904471810560000000000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1128801966282904471810560000000000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "0" : {
            "sign" : 1671379587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1161053451033844599576576000000000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 1161053451033844599576576000000000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184] "
          },
          "2" : {
            "sign" : 104099961,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 212859799356204843255705600000000,
                "rowCount" : 1612574237547006388300800000000
              },
              "compileTime" : {
                "sizeInBytes" : 212859799356204843255705600000000,
                "rowCount" : 1612574237547006388300800000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] "
          },
          "7" : {
            "sign" : -1724204,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 24776952,
                "rowCount" : 170375
              },
              "compileTime" : {
                "sizeInBytes" : 9981510,
                "rowCount" : 129630
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5 "
          },
          "3" : {
            "sign" : 828258622,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 225760393256580894362112000000000,
                "rowCount" : 1612574237547006388300800000000
              },
              "compileTime" : {
                "sizeInBytes" : 225760393256580894362112000000000,
                "rowCount" : 1612574237547006388300800000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (c_current_addr_sk#54 = ca_address_sk#68) "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 5,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Join",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, avg(cast(cs_quantity#24 as decimal(12,2))) AS agg1#178, avg(cast(cs_list_price#26 as decimal(12,2))) AS agg2#179, avg(cast(cs_coupon_amt#33 as decimal(12,2))) AS agg3#180, avg(cast(cs_sales_price#27 as decimal(12,2))) AS agg4#181, avg(cast(cs_net_profit#39 as decimal(12,2))) AS agg5#182, avg(cast(c_birth_year#63 as decimal(12,2))) AS agg6#183, avg(cast(cd_dep_count#47 as decimal(12,2))) AS agg7#184]\n+- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n   +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n      +- Join Inner, (c_current_addr_sk#54 = ca_address_sk#68)\n         :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n         :  +- Join Inner, (c_current_cdemo_sk#52 = cd_demo_sk#185)\n         :     :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n         :     :  +- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n         :     :     :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n         :     :     :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n         :     :     :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n         :     :     :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n         :     :     +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n         :     +- LogicalQueryStage Project [cd_demo_sk#185], ShuffleQueryStage 4\n         +- LogicalQueryStage Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78], BroadcastQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 2109650387,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [1]: [cd_demo_sk#185] Arguments: [cd_demo_sk#185 ASC NULLS FIRST], false, 0 "
          },
          "4" : {
            "sign" : -983084065,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 719328786814805490892800000,
            "rowCount" : 9464852458089545932800000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [9]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] Input [11]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110, cd_demo_sk#185] "
          },
          "9" : {
            "sign" : 557514328,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 30732800,
            "rowCount" : 1920800,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [cd_demo_sk#185] Arguments: 4 "
          },
          "5" : {
            "sign" : 1120875291,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 795047606479521858355200000,
            "rowCount" : 9464852458089545932800000,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [c_current_cdemo_sk#52] Right keys [1]: [cd_demo_sk#185] Join type: Inner Join condition: None "
          },
          "10" : {
            "sign" : -1398673964,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24776952,
            "rowCount" : 170375,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78] Arguments: 5 "
          },
          "6" : {
            "sign" : 966122019,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [10]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] Arguments: [c_current_cdemo_sk#52 ASC NULLS FIRST], false, 0 "
          },
          "1" : {
            "sign" : -2105707396,
            "className" : "org.apache.spark.sql.execution.ExpandExec",
            "sizeInBytes" : 1128801966282904471810560000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Expand Input [11]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] Arguments: [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] "
          },
          "0" : {
            "sign" : -1025875083,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 1161053451033844599576576000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [12]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] Keys [5]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L] Functions [7]: [partial_avg(cast(cs_quantity#24 as decimal(12,2))), partial_avg(cast(cs_list_price#26 as decimal(12,2))), partial_avg(cast(cs_coupon_amt#33 as decimal(12,2))), partial_avg(cast(cs_sales_price#27 as decimal(12,2))), partial_avg(cast(cs_net_profit#39 as decimal(12,2))), partial_avg(cast(c_birth_year#63 as decimal(12,2))), partial_avg(cast(cd_dep_count#47 as decimal(12,2)))] Aggregate Attributes [14]: [sum#226, count#227L, sum#228, count#229L, sum#230, count#231L, sum#232, count#233L, sum#234, count#235L, sum#236, count#237L, sum#238, count#239L] Results [19]: [i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L, sum#240, count#241L, sum#242, count#243L, sum#244, count#245L, sum#246, count#247L, sum#248, count#249L, sum#250, count#251L, sum#252, count#253L] "
          },
          "2" : {
            "sign" : -330754958,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 212859799356204843255705600000000,
            "rowCount" : 1612574237547006388300800000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [11]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75] Input [13]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110, ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78] "
          },
          "7" : {
            "sign" : -798890914,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 17831632,
            "rowCount" : 171458,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [10]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] Arguments: 8 "
          },
          "3" : {
            "sign" : -1359446321,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 225760393256580894362112000000000,
            "rowCount" : 1612574237547006388300800000000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_addr_sk#54] Right keys [1]: [ca_address_sk#68] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "ShuffleQueryStage",
          "toId" : 8,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Sort",
          "toId" : 5,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "SortMergeJoin",
          "toId" : 4,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Project",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Expand",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Expand",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L], functions=[partial_avg(cast(cs_quantity#24 as decimal(12,2))), partial_avg(cast(cs_list_price#26 as decimal(12,2))), partial_avg(cast(cs_coupon_amt#33 as decimal(12,2))), partial_avg(cast(cs_sales_price#27 as decimal(12,2))), partial_avg(cast(cs_net_profit#39 as decimal(12,2))), partial_avg(cast(c_birth_year#63 as decimal(12,2))), partial_avg(cast(cd_dep_count#47 as decimal(12,2)))], output=[i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L, sum#240, count#241L, sum#242, count#243L, sum#244, count#245L, sum#246, count#247L, sum#248, count#249L, sum#250, count#251L, sum#252, count#253L])\n+- Expand [[cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75, 0], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, null, 1], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, null, null, 3], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, null, null, null, 7], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, null, null, null, null, 15]], [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#207, ca_country#208, ca_state#209, ca_county#210, spark_grouping_id#206L]\n   +- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_birth_year#63, i_item_id#110, ca_country#78, ca_state#76, ca_county#75]\n      +- BroadcastHashJoin [c_current_addr_sk#54], [ca_address_sk#68], Inner, BuildRight, false\n         :- Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n         :  +- SortMergeJoin [c_current_cdemo_sk#52], [cd_demo_sk#185], Inner\n         :     :- Sort [c_current_cdemo_sk#52 ASC NULLS FIRST], false, 0\n         :     :  +- ShuffleQueryStage 8\n         :     :     +- Exchange hashpartitioning(c_current_cdemo_sk#52, 200), ENSURE_REQUIREMENTS, [plan_id=1150]\n         :     :        +- *(8) Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n         :     :           +- *(8) BroadcastHashJoin [cs_item_sk#21], [i_item_sk#109], Inner, BuildRight, false\n         :     :              :- *(8) Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n         :     :              :  +- *(8) BroadcastHashJoin [cs_bill_customer_sk#9], [c_customer_sk#50], Inner, BuildRight, false\n         :     :              :     :- AQEShuffleRead local\n         :     :              :     :  +- ShuffleQueryStage 6\n         :     :              :     :     +- Exchange hashpartitioning(cs_bill_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=664]\n         :     :              :     :        +- *(7) Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n         :     :              :     :           +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#10], [cd_demo_sk#41], Inner, BuildRight, false\n         :     :              :     :              :- *(7) Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n         :     :              :     :              :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#40], [d_date_sk#81], Inner, BuildRight, false\n         :     :              :     :              :     :- *(7) Filter ((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_item_sk#21))\n         :     :              :     :              :     :  +- *(7) ColumnarToRow\n         :     :              :     :              :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_item_sk#21,cs_quantity#24,cs_list_price#26,cs_sales_price#27,cs_coupon_amt#33,cs_net_profit#39,cs_sold_date_sk#40] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#10), isnotnull(cs_bill_customer_sk#9), isnotnull(cs_item_sk#21)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#40), dynamicpruningexpression(cs_sold_date_sk#40 IN dynamicpruning#222)], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...\n         :     :              :     :              :     :           +- SubqueryBroadcast dynamicpruning#222, 0, [d_date_sk#81], [id=#627]\n         :     :              :     :              :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                           +- == Final Plan ==\n                                                                              BroadcastQueryStage 1\n                                                                              +- ReusedExchange [d_date_sk#81], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n                                                                           +- == Initial Plan ==\n                                                                              BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=624]\n                                                                              +- Project [d_date_sk#81]\n                                                                                 +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                                                                                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :     :              :     :              :     +- BroadcastQueryStage 0\n         :     :              :     :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n         :     :              :     :              :           +- *(1) Project [d_date_sk#81]\n         :     :              :     :              :              +- *(1) Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n         :     :              :     :              :                 +- *(1) ColumnarToRow\n         :     :              :     :              :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :     :              :     :              +- BroadcastQueryStage 1\n         :     :              :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n         :     :              :     :                    +- *(2) Project [cd_demo_sk#41, cd_dep_count#47]\n         :     :              :     :                       +- *(2) Filter ((((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND (cd_gender#42 = M)) AND (cd_education_status#44 = College)) AND isnotnull(cd_demo_sk#41))\n         :     :              :     :                          +- *(2) ColumnarToRow\n         :     :              :     :                             +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_education_status#44,cd_dep_count#47] Batched: true, DataFilters: [isnotnull(cd_gender#42), isnotnull(cd_education_status#44), (cd_gender#42 = M), (cd_education_st..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_education..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>\n         :     :              :     +- BroadcastQueryStage 7\n         :     :              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=972]\n         :     :              :           +- AQEShuffleRead local\n         :     :              :              +- ShuffleQueryStage 2\n         :     :              :                 +- Exchange hashpartitioning(c_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=360]\n         :     :              :                    +- *(3) Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n         :     :              :                       +- *(3) Filter ((((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND isnotnull(c_current_cdemo_sk#52)) AND isnotnull(c_current_addr_sk#54)) AND might_contain(Subquery subquery#225, [id=#138], xxhash64(c_current_addr_sk#54, 42)))\n         :     :              :                          :  +- Subquery subquery#225, [id=#138]\n         :     :              :                          :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                                                                     +- ShuffleQueryStage 0\n                                                                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=446]\n                                                                           +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                                                                              +- *(1) Project [ca_address_sk#68]\n                                                                                 +- *(1) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                                                                    +- *(1) ColumnarToRow\n                                                                                       +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n                                                                  +- == Initial Plan ==\n                                                                     ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                                                                     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136]\n                                                                        +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                                                                           +- Project [ca_address_sk#68]\n                                                                              +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                                                                 +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n         :     :              :                          +- *(3) ColumnarToRow\n         :     :              :                             +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#50,c_current_cdemo_sk#52,c_current_addr_sk#54,c_birth_month#62,c_birth_year#63] Batched: true, DataFilters: [c_birth_month#62 IN (9,5,12,4,1,10), isnotnull(c_customer_sk#50), isnotnull(c_current_cdemo_sk#5..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsN..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...\n         :     :              +- BroadcastQueryStage 3\n         :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=381]\n         :     :                    +- *(4) Filter isnotnull(i_item_sk#109)\n         :     :                       +- *(4) ColumnarToRow\n         :     :                          +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#109,i_item_id#110] Batched: true, DataFilters: [isnotnull(i_item_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n         :     +- Sort [cd_demo_sk#185 ASC NULLS FIRST], false, 0\n         :        +- ShuffleQueryStage 4\n         :           +- Exchange hashpartitioning(cd_demo_sk#185, 200), ENSURE_REQUIREMENTS, [plan_id=400]\n         :              +- *(5) Filter isnotnull(cd_demo_sk#185)\n         :                 +- *(5) ColumnarToRow\n         :                    +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#185] Batched: true, DataFilters: [isnotnull(cd_demo_sk#185)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int>\n         +- BroadcastQueryStage 5\n            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=419]\n               +- *(6) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                  +- *(6) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_county#75,ca_state#76,ca_country#78] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 73341384,
        "inputRowCount" : 2262633
      },
      "InitialPartitionNum" : 0,
      "PD" : {

        "4" : [ 26854, 29539, 29539, 26854, 32493, 29539, 24413, 32493, 29539, 26854, 26854, 26854, 32493, 26854, 26854, 26854, 26854, 29539, 39317, 32493, 24413, 26854, 32493, 22193, 32493, 24413, 26854, 32493, 29539, 29539, 29539, 29539, 26854, 35743, 32493, 26854, 22193, 32493, 26854, 29539, 24413, 22193, 26854, 26854, 26854, 26854, 26854, 26854, 29539, 29539, 26854, 26854, 32493, 26854, 29539, 26854, 24413, 29539, 29539, 32493, 29539, 26854, 29539, 32493, 24413, 32493, 32493, 32493, 39317, 39317, 32493, 29539, 29539, 32493, 32493, 26854, 29539, 26854, 26854, 29539, 22193, 29539, 29539, 32493, 32493, 24413, 24413, 32493, 32493, 29539, 26854, 29539, 24413, 26854, 26854, 26854, 35743, 29539, 26854, 29539, 29539, 29539, 26854, 29539, 26854, 32493, 32493, 32493, 32493, 29539, 22193, 24413, 29539, 29539, 24413, 24413, 24413, 26854, 26854, 32493, 26854, 29539, 32493, 26854, 29539, 29539, 32493, 32493, 32493, 29539, 29539, 32493, 26854, 29539, 29539, 29539, 29539, 26854, 29539, 24413, 24413, 29539, 26854, 29539, 32493, 29539, 32493, 24413, 32493, 29539, 29539, 29539, 29539, 26854, 26854, 32493, 24413, 29539, 32493, 32493, 29539, 26854, 29539, 26854, 24413, 32493, 29539, 35743, 32493, 29539, 26854, 26854, 29539, 35743, 24413, 24413, 32493, 24413, 32493, 26854, 32493, 35743, 26854, 29539, 26854, 26854, 26854, 29539, 22193, 29539, 26854, 29539, 26854, 29539, 24413, 29539, 26854, 24413, 32493, 29539 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 6064,
        "TotalTasksDurationInMs" : 6053,
        "IOBytes" : {
          "Total" : 55165816,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 15492064,
            "SW" : 39673752
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -250288322,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6737280,
                "rowCount" : 168432
              },
              "compileTime" : {
                "sizeInBytes" : 23160624,
                "rowCount" : 965026
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1459146974,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 6737280,
            "rowCount" : 168432,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [4]: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] Arguments: 2 "
          }
        },
        "links" : [ ],
        "rawPlan" : "ShuffleQueryStage 2\n+- Exchange hashpartitioning(c_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=360]\n   +- *(3) Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n      +- *(3) Filter ((((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND isnotnull(c_current_cdemo_sk#52)) AND isnotnull(c_current_addr_sk#54)) AND might_contain(Subquery subquery#225, [id=#138], xxhash64(c_current_addr_sk#54, 42)))\n         :  +- Subquery subquery#225, [id=#138]\n         :     +- AdaptiveSparkPlan isFinalPlan=true\n                  +- == Final Plan ==\n                     ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                     +- ShuffleQueryStage 0\n                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=446]\n                           +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                              +- *(1) Project [ca_address_sk#68]\n                                 +- *(1) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                    +- *(1) ColumnarToRow\n                                       +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n                  +- == Initial Plan ==\n                     ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136]\n                        +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                           +- Project [ca_address_sk#68]\n                              +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                 +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n         +- *(3) ColumnarToRow\n            +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#50,c_current_cdemo_sk#52,c_current_addr_sk#54,c_birth_month#62,c_birth_year#63] Batched: true, DataFilters: [c_birth_month#62 IN (9,5,12,4,1,10), isnotnull(c_customer_sk#50), isnotnull(c_current_cdemo_sk#5..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsN..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6737280,
        "inputRowCount" : 168432
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 18341, 16674, 16674, 16674, 18341, 16674, 16674, 18341, 16674, 16674, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 18341, 18341, 18341, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 18341, 16674, 18341, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 18341, 16674, 16674, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 18341, 18341, 16674, 16674, 18341, 18341, 18341, 18341, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 18341, 16674, 16674, 16674, 18341, 18341, 18341, 18341, 16674, 18341, 16674, 16674, 18341, 16674, 18341, 16674, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 6,
        "FinishedTasksNum" : 22,
        "FinishedTasksTotalTimeInMs" : 33921.0,
        "FinishedTasksDistributionInMs" : [ 440.0, 529.0, 601.0, 1579.0, 5212.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 12 ],
      "Objectives" : {
        "DurationInMs" : 189,
        "TotalTasksDurationInMs" : 181,
        "IOBytes" : {
          "Total" : 3289605,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3289605,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1227505976,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1169800,
                "rowCount" : 5
              },
              "compileTime" : {
                "sizeInBytes" : 108,
                "rowCount" : 1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)]) "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224], ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1761367713,
            "className" : "org.apache.spark.sql.execution.aggregate.ObjectHashAggregateExec",
            "sizeInBytes" : 1169800,
            "rowCount" : 5,
            "isRuntime" : true,
            "predicate" : " (unknown) ObjectHashAggregate Input [1]: [buf#255] Keys: [] Functions [1]: [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)] Aggregate Attributes [1]: [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)#223] Results [1]: [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)#223 AS bloomFilter#224] "
          },
          "1" : {
            "sign" : -564930715,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 108,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [1]: [buf#255] Arguments: 0 "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "ShuffleQueryStage",
          "toId" : 0,
          "toName" : "ObjectHashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n+- ShuffleQueryStage 0\n   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=446]\n      +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n         +- *(1) Project [ca_address_sk#68]\n            +- *(1) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1169800,
        "inputRowCount" : 5
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 245547 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 10059.0,
        "FinishedTasksDistributionInMs" : [ 1173.0, 1464.0, 2189.0, 5233.0, 5233.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 3171,
        "TotalTasksDurationInMs" : 3154,
        "IOBytes" : {
          "Total" : 239021,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 239021,
            "SW" : 0
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -977299414,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 145879776,
                "rowCount" : 2026108
              },
              "compileTime" : {
                "sizeInBytes" : 8030913632,
                "rowCount" : 143409172
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6 "
          },
          "5" : {
            "sign" : -1070380551,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18409216,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3 "
          },
          "1" : {
            "sign" : 792139144,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 433625060553873408000,
                "rowCount" : 4927557506294016000
              },
              "compileTime" : {
                "sizeInBytes" : 433625060553873408000,
                "rowCount" : 4927557506294016000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#21 = i_item_sk#109) "
          },
          "0" : {
            "sign" : 1128718847,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 394204600503521280000,
                "rowCount" : 4927557506294016000
              },
              "compileTime" : {
                "sizeInBytes" : 394204600503521280000,
                "rowCount" : 4927557506294016000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] "
          },
          "2" : {
            "sign" : 231648860,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1545900394131456,
                "rowCount" : 24154693658304
              },
              "compileTime" : {
                "sizeInBytes" : 1545900394131456,
                "rowCount" : 24154693658304
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "3" : {
            "sign" : 1392090296,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1739137943397888,
                "rowCount" : 24154693658304
              },
              "compileTime" : {
                "sizeInBytes" : 1739137943397888,
                "rowCount" : 24154693658304
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_customer_sk#9 = c_customer_sk#50) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalQueryStage",
          "toId" : 3,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Join",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n+- Join Inner, (cs_item_sk#21 = i_item_sk#109)\n   :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n   :  +- Join Inner, (cs_bill_customer_sk#9 = c_customer_sk#50)\n   :     :- LogicalQueryStage Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47], ShuffleQueryStage 6\n   :     +- LogicalQueryStage Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63], ShuffleQueryStage 2\n   +- LogicalQueryStage Project [i_item_sk#109, i_item_id#110], BroadcastQueryStage 3\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1370640549,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 145879776,
            "rowCount" : 2026108,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [8]: [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47] Arguments: 6 "
          },
          "5" : {
            "sign" : 1186154887,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 16777216,
            "rowCount" : 168432,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [4]: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] Arguments: 7 "
          },
          "6" : {
            "sign" : -1107262539,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#109, i_item_id#110] Arguments: 3 "
          },
          "1" : {
            "sign" : -1271890658,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 433625060553873408000,
            "rowCount" : 4927557506294016000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#21] Right keys [1]: [i_item_sk#109] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1875745555,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 394204600503521280000,
            "rowCount" : 4927557506294016000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [10]: [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110] Input [12]: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_sk#109, i_item_id#110] "
          },
          "2" : {
            "sign" : 1420980430,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1545900394131456,
            "rowCount" : 24154693658304,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [10]: [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] Input [12]: [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "3" : {
            "sign" : -869314524,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1739137943397888,
            "rowCount" : 24154693658304,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_bill_customer_sk#9] Right keys [1]: [c_customer_sk#50] Join type: Inner Join condition: None "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 3,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastHashJoin",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63, i_item_id#110]\n+- BroadcastHashJoin [cs_item_sk#21], [i_item_sk#109], Inner, BuildRight, false\n   :- Project [cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n   :  +- BroadcastHashJoin [cs_bill_customer_sk#9], [c_customer_sk#50], Inner, BuildRight, false\n   :     :- ShuffleQueryStage 6\n   :     :  +- Exchange hashpartitioning(cs_bill_customer_sk#9, 200), ENSURE_REQUIREMENTS, [plan_id=664]\n   :     :     +- *(7) Project [cs_bill_customer_sk#9, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39, cd_dep_count#47]\n   :     :        +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#10], [cd_demo_sk#41], Inner, BuildRight, false\n   :     :           :- *(7) Project [cs_bill_customer_sk#9, cs_bill_cdemo_sk#10, cs_item_sk#21, cs_quantity#24, cs_list_price#26, cs_sales_price#27, cs_coupon_amt#33, cs_net_profit#39]\n   :     :           :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#40], [d_date_sk#81], Inner, BuildRight, false\n   :     :           :     :- *(7) Filter ((isnotnull(cs_bill_cdemo_sk#10) AND isnotnull(cs_bill_customer_sk#9)) AND isnotnull(cs_item_sk#21))\n   :     :           :     :  +- *(7) ColumnarToRow\n   :     :           :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_customer_sk#9,cs_bill_cdemo_sk#10,cs_item_sk#21,cs_quantity#24,cs_list_price#26,cs_sales_price#27,cs_coupon_amt#33,cs_net_profit#39,cs_sold_date_sk#40] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#10), isnotnull(cs_bill_customer_sk#9), isnotnull(cs_item_sk#21)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#40), dynamicpruningexpression(cs_sold_date_sk#40 IN dynamicpruning#222)], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...\n   :     :           :     :           +- SubqueryBroadcast dynamicpruning#222, 0, [d_date_sk#81], [id=#627]\n   :     :           :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                BroadcastQueryStage 1\n                                                +- ReusedExchange [d_date_sk#81], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n                                             +- == Initial Plan ==\n                                                BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=624]\n                                                +- Project [d_date_sk#81]\n                                                   +- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :           :     +- BroadcastQueryStage 0\n   :     :           :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=316]\n   :     :           :           +- *(1) Project [d_date_sk#81]\n   :     :           :              +- *(1) Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   :     :           :                 +- *(1) ColumnarToRow\n   :     :           :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :     :           +- BroadcastQueryStage 1\n   :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=337]\n   :     :                 +- *(2) Project [cd_demo_sk#41, cd_dep_count#47]\n   :     :                    +- *(2) Filter ((((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND (cd_gender#42 = M)) AND (cd_education_status#44 = College)) AND isnotnull(cd_demo_sk#41))\n   :     :                       +- *(2) ColumnarToRow\n   :     :                          +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_education_status#44,cd_dep_count#47] Batched: true, DataFilters: [isnotnull(cd_gender#42), isnotnull(cd_education_status#44), (cd_gender#42 = M), (cd_education_st..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_education..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>\n   :     +- BroadcastQueryStage 7\n   :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=972]\n   :           +- AQEShuffleRead local\n   :              +- ShuffleQueryStage 2\n   :                 +- Exchange hashpartitioning(c_customer_sk#50, 200), ENSURE_REQUIREMENTS, [plan_id=360]\n   :                    +- *(3) Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n   :                       +- *(3) Filter ((((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND isnotnull(c_current_cdemo_sk#52)) AND isnotnull(c_current_addr_sk#54)) AND might_contain(Subquery subquery#225, [id=#138], xxhash64(c_current_addr_sk#54, 42)))\n   :                          :  +- Subquery subquery#225, [id=#138]\n   :                          :     +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                                          +- ShuffleQueryStage 0\n                                             +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=446]\n                                                +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                                                   +- *(1) Project [ca_address_sk#68]\n                                                      +- *(1) Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                                         +- *(1) ColumnarToRow\n                                                            +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n                                       +- == Initial Plan ==\n                                          ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n                                          +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136]\n                                             +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n                                                +- Project [ca_address_sk#68]\n                                                   +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n                                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n   :                          +- *(3) ColumnarToRow\n   :                             +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#50,c_current_cdemo_sk#52,c_current_addr_sk#54,c_birth_month#62,c_birth_year#63] Batched: true, DataFilters: [c_birth_month#62 IN (9,5,12,4,1,10), isnotnull(c_customer_sk#50), isnotnull(c_current_cdemo_sk#5..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsN..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...\n   +- BroadcastQueryStage 3\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=381]\n         +- *(4) Filter isnotnull(i_item_sk#109)\n            +- *(4) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#109,i_item_id#110] Batched: true, DataFilters: [isnotnull(i_item_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 181066208,
        "inputRowCount" : 2398540
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 312547, 329293, 315148, 321181, 339854, 322625, 303185, 315639, 340469, 308102, 315292, 312680, 316616, 312345, 302728, 312070, 333945, 348618, 320632, 306683, 302465, 314951, 311147, 312011, 314857, 295776, 320714, 302207, 306098, 333019, 304040, 313543, 303913, 310833, 326225, 311439, 327526, 317843, 295233, 314927, 318463, 305766, 333678, 331228, 297858, 324288, 298645, 316707, 331149, 327857, 323067, 320572, 318873, 322538, 322716, 306256, 312467, 323566, 322463, 317118, 315702, 305508, 335321, 322827, 319005, 331551, 313039, 319701, 311626, 320625, 329522, 298784, 309943, 315711, 327393, 289479, 334893, 317162, 323085, 319784, 321982, 324985, 323253, 324738, 329590, 314134, 299705, 313015, 328151, 308977, 321478, 319740, 328338, 309411, 305203, 338604, 319869, 303583, 309867, 304318, 321502, 327321, 317638, 316754, 323354, 327227, 317401, 335313, 306428, 295651, 310251, 324028, 317507, 306102, 314593, 327058, 316820, 322117, 315704, 298882, 315169, 318587, 332897, 309906, 330500, 316563, 303642, 305950, 331553, 289577, 342048, 330138, 310919, 322712, 315092, 304831, 320476, 320389, 315623, 333584, 331802, 315787, 304737, 329530, 327123, 313160, 316652, 310491, 314952, 320417, 323983, 313093, 327563, 325898, 325285, 339813, 303557, 347035, 310223, 301347, 313479, 314893, 315837, 323342, 311733, 329138, 323231, 319598, 323014, 315017, 310491, 323465, 307459, 335888, 324676, 326399, 322377, 319899, 314228, 322443, 328237, 316189, 323004, 339970, 332977, 309036, 320553, 322924, 322552, 328218, 328943, 329280, 311955, 302395, 322847, 321124, 328068, 330441, 318278, 313899 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 14 ],
      "Objectives" : {
        "DurationInMs" : 2308,
        "TotalTasksDurationInMs" : 2300,
        "IOBytes" : {
          "Total" : 66196946,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 60671307,
            "SW" : 5525639
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1751219261,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23160624,
                "rowCount" : 965026
              },
              "compileTime" : {
                "sizeInBytes" : 23160624,
                "rowCount" : 965026
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] "
          },
          "1" : {
            "sign" : 1041284805,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 241256500,
                "rowCount" : 965026
              },
              "compileTime" : {
                "sizeInBytes" : 241256500,
                "rowCount" : 965026
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND (isnotnull(c_current_cdemo_sk#52) AND isnotnull(c_current_addr_sk#54))) AND might_contain(scalar-subquery#225 [], xxhash64(c_current_addr_sk#54, 42))) "
          },
          "2" : {
            "sign" : 593468542,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#50, c_customer_id#51, c_current_cdemo_sk#52, c_current_hdemo_sk#53, c_current_addr_sk#54, c_first_shipto_date_sk#55, c_first_sales_date_sk#56, c_salutation#57, c_first_name#58, c_last_name#59, c_preferred_cust_flag#60, c_birth_day#61, c_birth_month#62, c_birth_year#63, c_birth_country#64, c_login#65, c_email_address#66, c_last_review_date#67], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n+- Filter (((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND (isnotnull(c_current_cdemo_sk#52) AND isnotnull(c_current_addr_sk#54))) AND might_contain(scalar-subquery#225 [], xxhash64(c_current_addr_sk#54, 42)))\n   :  +- Aggregate [bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0) AS bloomFilter#224]\n   :     +- Project [ca_address_sk#68]\n   :        +- Project [ca_address_sk#68]\n   :           +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n   :              +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_address_id#69,ca_street_number#70,ca_street_name#71,ca_street_type#72,ca_suite_number#73,ca_city#74,ca_county#75,ca_state#76,ca_zip#77,ca_country#78,ca_gmt_offset#79,ca_location_type#80] parquet\n   +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#50,c_customer_id#51,c_current_cdemo_sk#52,c_current_hdemo_sk#53,c_current_addr_sk#54,c_first_shipto_date_sk#55,c_first_sales_date_sk#56,c_salutation#57,c_first_name#58,c_last_name#59,c_preferred_cust_flag#60,c_birth_day#61,c_birth_month#62,c_birth_year#63,c_birth_country#64,c_login#65,c_email_address#66,c_last_review_date#67] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -802419470,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 23160624,
            "rowCount" : 965026,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [4]: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63] Input [5]: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_month#62, c_birth_year#63] "
          },
          "1" : {
            "sign" : -1562945460,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 23160624,
            "rowCount" : 965026,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [5]: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_month#62, c_birth_year#63] Condition : ((((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND isnotnull(c_current_cdemo_sk#52)) AND isnotnull(c_current_addr_sk#54)) AND might_contain(Subquery subquery#225, [id=#138], xxhash64(c_current_addr_sk#54, 42))) "
          },
          "2" : {
            "sign" : 1620873390,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 23160624,
            "rowCount" : 965026,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [5]: [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_month#62, c_birth_year#63] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_addr_sk)] ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#50, c_current_cdemo_sk#52, c_current_addr_sk#54, c_birth_year#63]\n+- Filter ((((c_birth_month#62 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#50)) AND isnotnull(c_current_cdemo_sk#52)) AND isnotnull(c_current_addr_sk#54)) AND might_contain(Subquery subquery#225, [id=#138], xxhash64(c_current_addr_sk#54, 42)))\n   :  +- Subquery subquery#225, [id=#138]\n   :     +- AdaptiveSparkPlan isFinalPlan=false\n   :        +- ObjectHashAggregate(keys=[], functions=[bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[bloomFilter#224])\n   :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136]\n   :              +- ObjectHashAggregate(keys=[], functions=[partial_bloom_filter_agg(xxhash64(ca_address_sk#68, 42), 129630, 1871366, 0, 0)], output=[buf#255])\n   :                 +- Project [ca_address_sk#68]\n   :                    +- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_state#76] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n   +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#50,c_current_cdemo_sk#52,c_current_addr_sk#54,c_birth_month#62,c_birth_year#63] Batched: true, DataFilters: [c_birth_month#62 IN (9,5,12,4,1,10), isnotnull(c_customer_sk#50), isnotnull(c_current_cdemo_sk#5..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsN..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23160624,
        "inputRowCount" : 965026
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 5541,
        "TotalTasksDurationInMs" : 13619,
        "IOBytes" : {
          "Total" : 30278232,
          "Details" : {
            "IR" : 26988627,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3289605
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1126561090,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2195200,
                "rowCount" : 137200
              },
              "compileTime" : {
                "sizeInBytes" : 2195200,
                "rowCount" : 137200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#41, cd_dep_count#47] "
          },
          "1" : {
            "sign" : 636681142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13034000,
                "rowCount" : 137200
              },
              "compileTime" : {
                "sizeInBytes" : 13034000,
                "rowCount" : 137200
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND ((cd_gender#42 = M) AND (cd_education_status#44 = College))) AND isnotnull(cd_demo_sk#41)) "
          },
          "2" : {
            "sign" : 1114535329,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#41, cd_gender#42, cd_marital_status#43, cd_education_status#44, cd_purchase_estimate#45, cd_credit_rating#46, cd_dep_count#47, cd_dep_employed_count#48, cd_dep_college_count#49], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#41, cd_dep_count#47]\n+- Filter (((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND ((cd_gender#42 = M) AND (cd_education_status#44 = College))) AND isnotnull(cd_demo_sk#41))\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_marital_status#43,cd_education_status#44,cd_purchase_estimate#45,cd_credit_rating#46,cd_dep_count#47,cd_dep_employed_count#48,cd_dep_college_count#49] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 233649089,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2195200,
            "rowCount" : 137200,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cd_demo_sk#41, cd_dep_count#47] Input [4]: [cd_demo_sk#41, cd_gender#42, cd_education_status#44, cd_dep_count#47] "
          },
          "1" : {
            "sign" : -93279191,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2195200,
            "rowCount" : 137200,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cd_demo_sk#41, cd_gender#42, cd_education_status#44, cd_dep_count#47] Condition : ((((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND (cd_gender#42 = M)) AND (cd_education_status#44 = College)) AND isnotnull(cd_demo_sk#41)) "
          },
          "2" : {
            "sign" : -86301860,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2195200,
            "rowCount" : 137200,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [4]: [cd_demo_sk#41, cd_gender#42, cd_education_status#44, cd_dep_count#47] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_education_status,College), IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#41, cd_dep_count#47]\n+- Filter ((((isnotnull(cd_gender#42) AND isnotnull(cd_education_status#44)) AND (cd_gender#42 = M)) AND (cd_education_status#44 = College)) AND isnotnull(cd_demo_sk#41))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#41,cd_gender#42,cd_education_status#44,cd_dep_count#47] Batched: true, DataFilters: [isnotnull(cd_gender#42), isnotnull(cd_education_status#44), (cd_gender#42 = M), (cd_education_st..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,M), EqualTo(cd_education..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2195200,
        "inputRowCount" : 137200
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 3974,
        "TotalTasksDurationInMs" : 4868,
        "IOBytes" : {
          "Total" : 7749579,
          "Details" : {
            "IR" : 7749579,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1472606895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#81] "
          },
          "1" : {
            "sign" : -315914142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81)) "
          },
          "2" : {
            "sign" : -225897553,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#81, d_date_id#82, d_date#83, d_month_seq#84, d_week_seq#85, d_quarter_seq#86, d_year#87, d_dow#88, d_moy#89, d_dom#90, d_qoy#91, d_fy_year#92, d_fy_quarter_seq#93, d_fy_week_seq#94, d_day_name#95, d_quarter_name#96, d_holiday#97, d_weekend#98, d_following_holiday#99, d_first_dom#100, d_last_dom#101, d_same_day_ly#102, d_same_day_lq#103, d_current_day#104, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#81]\n+- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_date_id#82,d_date#83,d_month_seq#84,d_week_seq#85,d_quarter_seq#86,d_year#87,d_dow#88,d_moy#89,d_dom#90,d_qoy#91,d_fy_year#92,d_fy_quarter_seq#93,d_fy_week_seq#94,d_day_name#95,d_quarter_name#96,d_holiday#97,d_weekend#98,d_following_holiday#99,d_first_dom#100,d_last_dom#101,d_same_day_ly#102,d_same_day_lq#103,d_current_day#104,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1102343545,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#81] Input [2]: [d_date_sk#81, d_year#87] "
          },
          "1" : {
            "sign" : 2124489062,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#81, d_year#87] Condition : ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81)) "
          },
          "2" : {
            "sign" : 919956601,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#81, d_year#87] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#81]\n+- Filter ((isnotnull(d_year#87) AND (d_year#87 = 2001)) AND isnotnull(d_date_sk#81))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#81,d_year#87] Batched: true, DataFilters: [isnotnull(d_year#87), (d_year#87 = 2001), isnotnull(d_date_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6912,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1602,
        "TotalTasksDurationInMs" : 440,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -206103104,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#109, i_item_id#110] "
          },
          "1" : {
            "sign" : 331413796,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#109) "
          },
          "2" : {
            "sign" : 62730172,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#109, i_item_id#110, i_rec_start_date#111, i_rec_end_date#112, i_item_desc#113, i_current_price#114, i_wholesale_cost#115, i_brand_id#116, i_brand#117, i_class_id#118, i_class#119, i_category_id#120, i_category#121, i_manufact_id#122, i_manufact#123, i_size#124, i_formulation#125, i_color#126, i_units#127, i_container#128, i_manager_id#129, i_product_name#130], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#109, i_item_id#110]\n+- Filter isnotnull(i_item_sk#109)\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#109,i_item_id#110,i_rec_start_date#111,i_rec_end_date#112,i_item_desc#113,i_current_price#114,i_wholesale_cost#115,i_brand_id#116,i_brand#117,i_class_id#118,i_class#119,i_category_id#120,i_category#121,i_manufact_id#122,i_manufact#123,i_size#124,i_formulation#125,i_color#126,i_units#127,i_container#128,i_manager_id#129,i_product_name#130] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 821258022,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#109, i_item_id#110] Condition : isnotnull(i_item_sk#109) "
          },
          "1" : {
            "sign" : -256901698,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#109, i_item_id#110] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(i_item_sk#109)\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#109,i_item_id#110] Batched: true, DataFilters: [isnotnull(i_item_sk#109)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8160000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1800,
        "TotalTasksDurationInMs" : 7011,
        "IOBytes" : {
          "Total" : 1618808,
          "Details" : {
            "IR" : 1618808,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 753834862,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 23049600,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 23049600,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cd_demo_sk#185] "
          },
          "1" : {
            "sign" : -1235231594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cd_demo_sk#185) "
          },
          "2" : {
            "sign" : -65690734,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              },
              "compileTime" : {
                "sizeInBytes" : 182476000,
                "rowCount" : 1920800
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cd_demo_sk#185, cd_gender#186, cd_marital_status#187, cd_education_status#188, cd_purchase_estimate#189, cd_credit_rating#190, cd_dep_count#191, cd_dep_employed_count#192, cd_dep_college_count#193], `spark_catalog`.`tpcds_100`.`customer_demographics`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cd_demo_sk#185]\n+- Filter isnotnull(cd_demo_sk#185)\n   +- Relation spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#185,cd_gender#186,cd_marital_status#187,cd_education_status#188,cd_purchase_estimate#189,cd_credit_rating#190,cd_dep_count#191,cd_dep_employed_count#192,cd_dep_college_count#193] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -204041665,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 23049600,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [1]: [cd_demo_sk#185] Condition : isnotnull(cd_demo_sk#185) "
          },
          "1" : {
            "sign" : -1004284733,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 23049600,
            "rowCount" : 1920800,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_demographics Output [1]: [cd_demo_sk#185] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_demographics] PushedFilters: [IsNotNull(cd_demo_sk)] ReadSchema: struct<cd_demo_sk:int> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_demographics",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cd_demo_sk#185)\n+- FileScan parquet spark_catalog.tpcds_100.customer_demographics[cd_demo_sk#185] Batched: true, DataFilters: [isnotnull(cd_demo_sk#185)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 23049600,
        "inputRowCount" : 1920800
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 3143,
        "TotalTasksDurationInMs" : 4026,
        "IOBytes" : {
          "Total" : 17665381,
          "Details" : {
            "IR" : 7698956,
            "IW" : 0,
            "SR" : 0,
            "SW" : 9966425
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -108448169,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9981510,
                "rowCount" : 129630
              },
              "compileTime" : {
                "sizeInBytes" : 9981510,
                "rowCount" : 129630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78] "
          },
          "1" : {
            "sign" : -1155584390,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 31888980,
                "rowCount" : 129630
              },
              "compileTime" : {
                "sizeInBytes" : 31888980,
                "rowCount" : 129630
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68)) "
          },
          "2" : {
            "sign" : -547234420,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#68, ca_address_id#69, ca_street_number#70, ca_street_name#71, ca_street_type#72, ca_suite_number#73, ca_city#74, ca_county#75, ca_state#76, ca_zip#77, ca_country#78, ca_gmt_offset#79, ca_location_type#80], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78]\n+- Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_address_id#69,ca_street_number#70,ca_street_name#71,ca_street_type#72,ca_suite_number#73,ca_city#74,ca_county#75,ca_state#76,ca_zip#77,ca_country#78,ca_gmt_offset#79,ca_location_type#80] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -600560687,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9981510,
            "rowCount" : 129630,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78] Condition : (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68)) "
          },
          "1" : {
            "sign" : -2139338241,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 9981510,
            "rowCount" : 129630,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [4]: [ca_address_sk#68, ca_county#75, ca_state#76, ca_country#78] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#68))\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#68,ca_county#75,ca_state#76,ca_country#78] Batched: true, DataFilters: [ca_state#76 IN (ND,WI,AL,NC,OK,MS,TN), isnotnull(ca_address_sk#68)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [In(ca_state, [AL,MS,NC,ND,OK,TN,WI]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 9981510,
        "inputRowCount" : 129630
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 5661,
        "TotalTasksDurationInMs" : 14046,
        "IOBytes" : {
          "Total" : 5071905,
          "Details" : {
            "IR" : 4832884,
            "IW" : 0,
            "SR" : 0,
            "SW" : 239021
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226633044,
  "SQLEndTimeInMs" : 1702226664086,
  "Objectives" : {
    "DurationInMs" : 31042,
    "IOBytes" : {
      "Total" : 859271064,
      "Details" : {
        "IR" : 620539566,
        "IW" : 0,
        "SR" : 119365749,
        "SW" : 119365749
      }
    }
  }
}
