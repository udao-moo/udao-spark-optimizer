{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "34" : {
          "sign" : 793210881,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76)) "
        },
        "12" : {
          "sign" : -931371708,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 447047232,
          "rowCount" : 13970226,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
        },
        "8" : {
          "sign" : 1854875177,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 479907450,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#1, ca_state#67 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#3] "
        },
        "19" : {
          "sign" : 171012073,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 25210276,
          "rowCount" : 969626,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#59, ca_state#67] "
        },
        "23" : {
          "sign" : -388662774,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 2014,
          "rowCount" : 53,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ctr_state#2], [(avg(ctr_total_return#3) * 1.2) AS (avg(ctr_total_return) * 1.2)#108, ctr_state#2 AS ctr_state#2#127] "
        },
        "4" : {
          "sign" : -1399102098,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4380182468,
          "rowCount" : 14084188,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#1 = c_customer_sk#72) "
        },
        "15" : {
          "sign" : -1657717960,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 2246060232,
          "rowCount" : 14397822,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : -2122512137,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 335285424,
          "rowCount" : 13970226,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
        },
        "9" : {
          "sign" : 1033652545,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 479907450,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
        },
        "33" : {
          "sign" : -1222212500,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 194000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81] "
        },
        "22" : {
          "sign" : -575049305,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2014,
          "rowCount" : 53,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#108) "
        },
        "26" : {
          "sign" : -1913283804,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 592826850,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
        },
        "37" : {
          "sign" : 2034360964,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4417422,
          "rowCount" : 17957,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_state#98) AND (ca_state#98 = IL)) AND isnotnull(ca_address_sk#90)) "
        },
        "13" : {
          "sign" : -779655771,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 387236500,
          "rowCount" : 13829875,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
        },
        "24" : {
          "sign" : -1885524006,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 423447750,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#3] "
        },
        "35" : {
          "sign" : 968525662,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#72, c_customer_id#73, c_current_cdemo_sk#74, c_current_hdemo_sk#75, c_current_addr_sk#76, c_first_shipto_date_sk#77, c_first_sales_date_sk#78, c_salutation#79, c_first_name#80, c_last_name#81, c_preferred_cust_flag#82, c_birth_day#83, c_birth_month#84, c_birth_year#85, c_birth_country#86, c_login#87, c_email_address#88, c_last_review_date#89], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 2039589116,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6912,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#31] "
        },
        "5" : {
          "sign" : 98588654,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 282298500,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#1, ctr_total_return#3] "
        },
        "10" : {
          "sign" : -743272362,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 592826850,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
        },
        "21" : {
          "sign" : 1418879896,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#59, ca_address_id#60, ca_street_number#61, ca_street_name#62, ca_street_type#63, ca_suite_number#64, ca_city#65, ca_county#66, ca_state#67, ca_zip#68, ca_country#69, ca_gmt_offset#70, ca_location_type#71], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "32" : {
          "sign" : 1767633293,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 617119120,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#90 = c_current_addr_sk#76) "
        },
        "6" : {
          "sign" : -230069363,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 903355200,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#3 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#108) AND (ctr_state#2 = ctr_state#2#127)) "
        },
        "36" : {
          "sign" : -933903444,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3914626,
          "rowCount" : 17957,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#90, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102] "
        },
        "1" : {
          "sign" : 1914049954,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 4267508964,
          "rowCount" : 14084188,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : 904045042,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
        },
        "25" : {
          "sign" : -889437875,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 479907450,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
        },
        "14" : {
          "sign" : 1355226397,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2157460500,
          "rowCount" : 13829875,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#128 [cr_returned_date_sk#30]) "
        },
        "31" : {
          "sign" : -1838830533,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 601037840,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102] "
        },
        "0" : {
          "sign" : 466336229,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 30400,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 357430211,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238527996,
          "rowCount" : 969626,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67)) "
        },
        "27" : {
          "sign" : 1581420813,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 335285424,
          "rowCount" : 13970226,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
        },
        "2" : {
          "sign" : -47852145,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 4267508964,
          "rowCount" : 14084188,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#92 ASC NULLS FIRST, ca_street_name#93 ASC NULLS FIRST, ca_street_type#94 ASC NULLS FIRST, ca_suite_number#95 ASC NULLS FIRST, ca_city#96 ASC NULLS FIRST, ca_county#97 ASC NULLS FIRST, ca_state#98 ASC NULLS FIRST, ca_zip#99 ASC NULLS FIRST, ca_country#100 ASC NULLS FIRST, ca_gmt_offset#101 ASC NULLS FIRST, ca_location_type#102 ASC NULLS FIRST, ctr_total_return#3 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : 1974251875,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#90, ca_address_id#91, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "18" : {
          "sign" : -1043254498,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#31, d_date_id#32, d_date#33, d_month_seq#34, d_week_seq#35, d_quarter_seq#36, d_year#37, d_dow#38, d_moy#39, d_dom#40, d_qoy#41, d_fy_year#42, d_fy_quarter_seq#43, d_fy_week_seq#44, d_day_name#45, d_quarter_name#46, d_holiday#47, d_weekend#48, d_following_holiday#49, d_first_dom#50, d_last_dom#51, d_same_day_ly#52, d_same_day_lq#53, d_current_day#54, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "30" : {
          "sign" : 1898163851,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2201252820,
          "rowCount" : 14110595,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#129 [cr_returned_date_sk#30]) "
        },
        "7" : {
          "sign" : 90507575,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 479907450,
          "rowCount" : 14114925,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#3) "
        },
        "29" : {
          "sign" : -1176133189,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 395096660,
          "rowCount" : 14110595,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
        },
        "3" : {
          "sign" : -1834573474,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 4267508964,
          "rowCount" : 14084188,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102, ctr_total_return#3] "
        },
        "28" : {
          "sign" : 961004840,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 447047232,
          "rowCount" : 13970226,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "LogicalRelation",
        "toId" : 17,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Filter",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "LogicalRelation",
        "toId" : 20,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Filter",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Aggregate",
        "toId" : 7,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Join",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Join",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 24,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Aggregate",
        "toId" : 23,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Aggregate",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "LogicalRelation",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Filter",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "LogicalRelation",
        "toId" : 37,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Filter",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#92 ASC NULLS FIRST, ca_street_name#93 ASC NULLS FIRST, ca_street_type#94 ASC NULLS FIRST, ca_suite_number#95 ASC NULLS FIRST, ca_city#96 ASC NULLS FIRST, ca_county#97 ASC NULLS FIRST, ca_state#98 ASC NULLS FIRST, ca_zip#99 ASC NULLS FIRST, ca_country#100 ASC NULLS FIRST, ca_gmt_offset#101 ASC NULLS FIRST, ca_location_type#102 ASC NULLS FIRST, ctr_total_return#3 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102, ctr_total_return#3]\n         +- Join Inner, (ctr_customer_sk#1 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#1, ctr_total_return#3]\n            :  +- Join Inner, ((cast(ctr_total_return#3 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#108) AND (ctr_state#2 = ctr_state#2#127))\n            :     :- Filter isnotnull(ctr_total_return#3)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#1, ca_state#67 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#3]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :     :           :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :     :           :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :     :           :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#128 [cr_returned_date_sk#30])\n            :     :           :     :     :  +- Project [d_date_sk#31]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :     :           :     +- Project [d_date_sk#31]\n            :     :           :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :           +- Project [ca_address_sk#59, ca_state#67]\n            :     :              +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n            :     :                 +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#108)\n            :        +- Aggregate [ctr_state#2], [(avg(ctr_total_return#3) * 1.2) AS (avg(ctr_total_return) * 1.2)#108, ctr_state#2 AS ctr_state#2#127]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#3]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :                    :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :                    :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :                    :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#129 [cr_returned_date_sk#30])\n            :                    :     :     :  +- Project [d_date_sk#31]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :                    :     +- Project [d_date_sk#31]\n            :                    :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :                    +- Project [ca_address_sk#59, ca_state#67]\n            :                       +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n            :                          +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n            +- Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102]\n               +- Join Inner, (ca_address_sk#90 = c_current_addr_sk#76)\n                  :- Project [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81]\n                  :  +- Filter (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76))\n                  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#72,c_customer_id#73,c_current_cdemo_sk#74,c_current_hdemo_sk#75,c_current_addr_sk#76,c_first_shipto_date_sk#77,c_first_sales_date_sk#78,c_salutation#79,c_first_name#80,c_last_name#81,c_preferred_cust_flag#82,c_birth_day#83,c_birth_month#84,c_birth_year#85,c_birth_country#86,c_login#87,c_email_address#88,c_last_review_date#89] parquet\n                  +- Project [ca_address_sk#90, ca_street_number#92, ca_street_name#93, ca_street_type#94, ca_suite_number#95, ca_city#96, ca_county#97, ca_state#98, ca_zip#99, ca_country#100, ca_gmt_offset#101, ca_location_type#102]\n                     +- Filter ((isnotnull(ca_state#98) AND (ca_state#98 = IL)) AND isnotnull(ca_address_sk#90))\n                        +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#90,ca_address_id#91,ca_street_number#92,ca_street_name#93,ca_street_type#94,ca_suite_number#95,ca_city#96,ca_county#97,ca_state#98,ca_zip#99,ca_country#100,ca_gmt_offset#101,ca_location_type#102] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 5766060572,
      "inputRowCount" : 33941742
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "12" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 151471635,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "4" : {
            "sign" : 985200618,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1152232679119392,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "9" : {
            "sign" : 1434718718,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33556480,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull((avg(ctr_total_return) * 1.2)#149), BroadcastQueryStage 13 "
          },
          "5" : {
            "sign" : -1622576428,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1158732240,
            "rowCount" : 57936612,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : 1215940711,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4403182512,
            "rowCount" : 57936612,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -2047820224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1122688251449664,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1086743901,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1735663111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1122688251449664,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1836163853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -867600608,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1122688251449664,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            :     +- LogicalQueryStage Filter isnotnull((avg(ctr_total_return) * 1.2)#149), BroadcastQueryStage 13\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 97374160,
        "inputRowCount" : 1199806
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227396867,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2149,
        "IOBytes" : {
          "Total" : 31868922,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 28762356,
            "SW" : 3106566
          }
        }
      }
    },
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1904053936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46471575582320,
            "rowCount" : 1161789389558,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "8" : {
            "sign" : 151471635,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "4" : {
            "sign" : -2129712698,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 247217895269926395200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "11" : {
            "sign" : -766297987,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 41824418024088,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "9" : {
            "sign" : 1027235252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 51118733140552,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "13" : {
            "sign" : -69826761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 55765890698784,
            "rowCount" : 1161789389558,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "16" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "5" : {
            "sign" : -1408135222,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13452424486316,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : 190377480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 51118733140552,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "6" : {
            "sign" : 1030483595,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 51119213048002,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1341750294,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 240878974878389820964,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : 684640122,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 38341856,
            "rowCount" : 1198183,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9 "
          },
          "0" : {
            "sign" : -1004206599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1883044963,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 240878974878389820964,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1836163853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1680721654,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 240878974878389820964,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 13,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Join",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Aggregate",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 567654538,
        "inputRowCount" : 16346477
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ],
        "3" : [ 115535, 111619, 114187, 113481, 109554, 112451, 111027, 113874, 111045, 116657, 115659, 112950, 116919, 115236, 110805, 113662, 110856, 114237, 111395, 113136, 113392, 116025, 113103, 111103, 112733, 113196, 117109, 114478, 114618, 111733, 113596, 113456, 114229, 112003, 115012, 115859, 115557, 110658, 112391, 112643, 113137, 113096, 110301, 109271, 112163, 112719, 116827, 113227, 110913, 108148, 116877, 114058, 110520, 115236, 111022, 111885, 112649, 111295, 110548, 110761, 111430, 114440, 108807, 115074, 112744, 111635, 114360, 113776, 110277, 114950, 113166, 110751, 114739, 114493, 115459, 111233, 116352, 112065, 113178, 114573, 111041, 114573, 112115, 107627, 115016, 107211, 113325, 113175, 114875, 113160, 111295, 113067, 117225, 114065, 114545, 115936, 114160, 115156, 112431, 115109, 112274, 111603, 114737, 108989, 111116, 110341, 111829, 113629, 115673, 111849, 111410, 111989, 112567, 111729, 111518, 114139, 110092, 112052, 114378, 111871, 111147, 115350, 114241, 111420, 114449, 117074, 115244, 108071, 111407, 111303, 110509, 115776, 107076, 112151, 112460, 113267, 112984, 115012, 111707, 115988, 110028, 110167, 114937, 114095, 116122, 115362, 115228, 115107, 119470, 113947, 110187, 113535, 114687, 116552, 112146, 115901, 113106, 116003, 112307, 107662, 111150, 112544, 112679, 108310, 113485, 113266, 113117, 114947, 114924, 113664, 114501, 113687, 116573, 112131, 112466, 112943, 115062, 109668, 113289, 110033, 114405, 114858, 112851, 109621, 114600, 111072, 113021, 114046, 107718, 114296, 115880, 112917, 110022, 109748, 112711, 111717, 113319, 113637, 112136, 115053 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227391801,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 7215,
        "IOBytes" : {
          "Total" : 143570860,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 37655761
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1263434162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 161532940000,
            "rowCount" : 5047904375,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "8" : {
            "sign" : 1480107031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 195783173100550000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -680408626,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -926726069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 179781477207355800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "4" : {
            "sign" : -1143479802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 65721287639713685684063840,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -1657717960,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 2246060232,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -527302737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 121149705000,
            "rowCount" : 5047904375,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "9" : {
            "sign" : 1261286291,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195783173100550000,
            "rowCount" : 4894579327513750,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "22" : {
            "sign" : 1767844678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 219732916586768200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "26" : {
            "sign" : -1624602442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 123608812200,
            "rowCount" : 5150367175,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "13" : {
            "sign" : 2050825505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 387236500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          },
          "24" : {
            "sign" : -1805691170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 199757196897062000,
            "rowCount" : 4993929922426550,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "16" : {
            "sign" : 2039589116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#31] "
          },
          "5" : {
            "sign" : -1024384918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 109346339391399526,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -149693782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 234939807720660000,
            "rowCount" : 4894579327513750,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "21" : {
            "sign" : 1434586292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 219732916586768200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "32" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 601037840,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : -1398427953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 415516089687318200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1866093024,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 64036126418182565538318613,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 904045042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
          },
          "25" : {
            "sign" : 1732452753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 239708636276474400,
            "rowCount" : 4993929922426550,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : -157864295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2157460500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30]) "
          },
          "31" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "0" : {
            "sign" : 1282490995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "27" : {
            "sign" : 1057252779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 164811749600,
            "rowCount" : 5150367175,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "2" : {
            "sign" : -144243703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 64036126418182565538318613,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1043254498,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#31, d_date_id#32, d_date#33, d_month_seq#34, d_week_seq#35, d_quarter_seq#36, d_year#37, d_dow#38, d_moy#39, d_dom#40, d_qoy#41, d_fy_year#42, d_fy_quarter_seq#43, d_fy_week_seq#44, d_day_name#45, d_quarter_name#46, d_holiday#47, d_weekend#48, d_following_holiday#49, d_first_dom#50, d_last_dom#51, d_same_day_ly#52, d_same_day_lq#53, d_current_day#54, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -680408533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 586376321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 195783173100550000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "29" : {
            "sign" : 385073159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2201252820,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30]) "
          },
          "3" : {
            "sign" : 1816771008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 64036126418182565538318613,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          },
          "28" : {
            "sign" : 1654348087,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 395096660,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :     :           :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :     :           :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :     :           :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n            :     :           :     :     :  +- Project [d_date_sk#31]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :                    :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :                    :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :                    :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n            :                    :     :     :  +- Project [d_date_sk#31]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5157317360,
        "inputRowCount" : 32745786
      },
      "PD" : {
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 17327.0,
        "FinishedTasksDistributionInMs" : [ 29.0, 497.0, 1178.0, 1502.0, 3690.0 ]
      },
      "StartTimeInMs" : 1702227387543,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11473,
        "IOBytes" : {
          "Total" : 265775015,
          "Details" : {
            "IR" : 71008127,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 88851789
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : 151471635,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "4" : {
            "sign" : 1589951355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1152232679119392,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "11" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "9" : {
            "sign" : 1183297295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2244,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "5" : {
            "sign" : -1812437767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1158732240,
            "rowCount" : 57936612,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -252435635,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2856,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167], HashAggregate(keys=[ctr_state#132], functions=[avg(ctr_total_return#133)]) "
          },
          "6" : {
            "sign" : 1390871056,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4403182512,
            "rowCount" : 57936612,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : 1911810389,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1122688251449664,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1060255598,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1913813464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1122688251449664,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1836163853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1034475275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1122688251449664,
            "rowCount" : 3693053458716,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- LogicalQueryStage Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167], HashAggregate(keys=[ctr_state#132], functions=[avg(ctr_total_return#133)])\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 63820536,
        "inputRowCount" : 1199806
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227396178,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2838,
        "IOBytes" : {
          "Total" : 31873288,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 28766722,
            "SW" : 3106566
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "8" : {
            "sign" : 151471635,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "4" : {
            "sign" : -440863189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 22592797629792,
            "rowCount" : 72412812916,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "11" : {
            "sign" : 1464644076,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 423447750,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "9" : {
            "sign" : 1393130659,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "5" : {
            "sign" : -1234254919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22720240,
            "rowCount" : 1136012,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -309410633,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "6" : {
            "sign" : -520939718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 79520840,
            "rowCount" : 1136012,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : 1212576613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 22013495126464,
            "rowCount" : 72412812916,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1182066910,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1698056200,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 22013495126464,
            "rowCount" : 72412812916,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1836163853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1335635515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22013495126464,
            "rowCount" : 72412812916,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 487265430,
        "inputRowCount" : 15314680
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227394542,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4474,
        "IOBytes" : {
          "Total" : 96465481,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 76081591,
            "SW" : 20383890
          }
        }
      }
    },
    "13" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -1726734046,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5718642051720,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "5" : {
            "sign" : -1804194844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6901080,
            "rowCount" : 287545,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14 "
          },
          "6" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "1" : {
            "sign" : -1671143652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1532991019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1872620417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -574879364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- LogicalQueryStage Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25278280,
        "inputRowCount" : 351288
      },
      "PD" : {
        "7" : [ 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 18341, 15158, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674 ],
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227398105,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 911,
        "IOBytes" : {
          "Total" : 11490485,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 11490485,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -2108147895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "4" : {
            "sign" : 1586376084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 179972101863108126912080,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -766297987,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 487652196797136,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "11" : {
            "sign" : 684640091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 49708275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "13" : {
            "sign" : 1027235252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "16" : {
            "sign" : 1904053936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "5" : {
            "sign" : -194614230,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 299435559436837,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -1277745060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "6" : {
            "sign" : -1059580471,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1137855125859984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1357719210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -69826761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : 190377480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "0" : {
            "sign" : 1499480775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 601037840,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "2" : {
            "sign" : 2022113777,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 684640122,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : -1349996255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1000372554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1333664752,
        "inputRowCount" : 31889864
      },
      "PD" : {
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 17327.0,
        "FinishedTasksDistributionInMs" : [ 29.0, 497.0, 1178.0, 1502.0, 3690.0 ]
      },
      "StartTimeInMs" : 1702227387835,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11181,
        "IOBytes" : {
          "Total" : 265775015,
          "Details" : {
            "IR" : 71008127,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 88851789
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "8" : {
            "sign" : 151471635,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "4" : {
            "sign" : -440863189,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 488356374379200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "11" : {
            "sign" : 1464644076,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 45442520,
            "rowCount" : 1136063,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))]) "
          },
          "9" : {
            "sign" : 1393130659,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 55540857,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "5" : {
            "sign" : -1234254919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 26574036,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -309410633,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 55540857,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "6" : {
            "sign" : -520939718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 100981337,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : 1212576613,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 475834416061784,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1182066910,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1698056200,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 475834416061784,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1836163853,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1335635515,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 475834416061784,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- LogicalQueryStage Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133], HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))])\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 109260200,
        "inputRowCount" : 2335818
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227394782,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4234,
        "IOBytes" : {
          "Total" : 49150612,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 46039680,
            "SW" : 3110932
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -2108147895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "4" : {
            "sign" : 1586376084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5502787162882640916400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -766297987,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 487652196797136,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "11" : {
            "sign" : 684640091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 49708275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "13" : {
            "sign" : 1027235252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "16" : {
            "sign" : 1904053936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "5" : {
            "sign" : -194614230,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 299435559436837,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -1277745060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "6" : {
            "sign" : -1059580471,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1137855125859984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1357719210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 5361690056142060380082,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -69826761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : 190377480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "0" : {
            "sign" : 1499480775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "2" : {
            "sign" : 2022113777,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 5361690056142060380082,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 684640122,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : -1349996255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1000372554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5361690056142060380082,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 751004112,
        "inputRowCount" : 29943447
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 13,
        "FinishedTasksNum" : 19,
        "FinishedTasksTotalTimeInMs" : 16803.0,
        "FinishedTasksDistributionInMs" : [ 466.0, 508.0, 967.0, 1129.0, 1478.0 ]
      },
      "StartTimeInMs" : 1702227389262,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 9754,
        "IOBytes" : {
          "Total" : 223778424,
          "Details" : {
            "IR" : 37395455,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 80467870
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -1222212500,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 194000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81] "
          },
          "12" : {
            "sign" : 1263434162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "8" : {
            "sign" : 1480107031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -680408626,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -926726069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 423447750,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "4" : {
            "sign" : 1346836990,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4408350844,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -1657717960,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 2246060232,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -527302737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "9" : {
            "sign" : 1261286291,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "33" : {
            "sign" : -1313731111,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 19558464000000,
            "rowCount" : 63296000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#134 = c_current_addr_sk#76) "
          },
          "22" : {
            "sign" : 1767844678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "26" : {
            "sign" : -1624602442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "37" : {
            "sign" : 1116879535,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9437184,
            "rowCount" : 31648,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], BroadcastQueryStage 6 "
          },
          "13" : {
            "sign" : 2050825505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 387236500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          },
          "24" : {
            "sign" : -1805691170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "35" : {
            "sign" : 793210881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76)) "
          },
          "16" : {
            "sign" : 2039589116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#31] "
          },
          "5" : {
            "sign" : -1024384918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 282298500,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -149693782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 592826850,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "21" : {
            "sign" : 1434586292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "32" : {
            "sign" : -932422045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19052096000000,
            "rowCount" : 63296000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] "
          },
          "6" : {
            "sign" : -1398427953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 903355200,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "36" : {
            "sign" : 968525662,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#72, c_customer_id#73, c_current_cdemo_sk#74, c_current_hdemo_sk#75, c_current_addr_sk#76, c_first_shipto_date_sk#77, c_first_sales_date_sk#78, c_salutation#79, c_first_name#80, c_last_name#81, c_preferred_cust_flag#82, c_birth_day#83, c_birth_month#84, c_birth_year#85, c_birth_country#86, c_login#87, c_email_address#88, c_last_review_date#89], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1203413606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4295677340,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 904045042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
          },
          "25" : {
            "sign" : 1732452753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 592826850,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : -157864295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2157460500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30]) "
          },
          "31" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "0" : {
            "sign" : 307784555,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "27" : {
            "sign" : 1057252779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "2" : {
            "sign" : 1608493313,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4295677340,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1043254498,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#31, d_date_id#32, d_date#33, d_month_seq#34, d_week_seq#35, d_quarter_seq#36, d_year#37, d_dow#38, d_moy#39, d_dom#40, d_qoy#41, d_fy_year#42, d_fy_quarter_seq#43, d_fy_week_seq#44, d_day_name#45, d_quarter_name#46, d_holiday#47, d_weekend#48, d_following_holiday#49, d_first_dom#50, d_last_dom#51, d_same_day_ly#52, d_same_day_lq#53, d_current_day#54, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -680408533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 586376321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "29" : {
            "sign" : 385073159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2201252820,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30]) "
          },
          "3" : {
            "sign" : -1605520250,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4295677340,
            "rowCount" : 14084188,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          },
          "28" : {
            "sign" : 1654348087,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 395096660,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :     :           :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :     :           :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :     :           :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n            :     :           :     :     :  +- Project [d_date_sk#31]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :                    :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :                    :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :                    :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n            :                    :     :     :  +- Project [d_date_sk#31]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146]\n               +- Join Inner, (ca_address_sk#134 = c_current_addr_sk#76)\n                  :- Project [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81]\n                  :  +- Filter (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76))\n                  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#72,c_customer_id#73,c_current_cdemo_sk#74,c_current_hdemo_sk#75,c_current_addr_sk#76,c_first_shipto_date_sk#77,c_first_sales_date_sk#78,c_salutation#79,c_first_name#80,c_last_name#81,c_preferred_cust_flag#82,c_birth_day#83,c_birth_month#84,c_birth_year#85,c_birth_country#86,c_login#87,c_email_address#88,c_last_review_date#89] parquet\n                  +- LogicalQueryStage Project [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], BroadcastQueryStage 6\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5051992024,
        "inputRowCount" : 32767696
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 4857.0,
        "FinishedTasksDistributionInMs" : [ 1112.0, 1126.0, 1182.0, 1437.0, 1437.0 ]
      },
      "StartTimeInMs" : 1702227382872,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 16144,
        "IOBytes" : {
          "Total" : 279232868,
          "Details" : {
            "IR" : 75934325,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 97383444
          }
        }
      }
    },
    "14" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 1981945314,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5718642051720,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "5" : {
            "sign" : -1197104924,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32777176,
            "rowCount" : 287545,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: LogicalQueryStage Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14, BroadcastQueryStage 15 "
          },
          "6" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "1" : {
            "sign" : -1161529508,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1495387861,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 751568127,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -541611588,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- LogicalQueryStage LogicalQueryStage Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14, BroadcastQueryStage 15\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 51154376,
        "inputRowCount" : 351288
      },
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227398438,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 578,
        "IOBytes" : {
          "Total" : 8383919,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 8383919,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1263434162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "8" : {
            "sign" : 1480107031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -680408626,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -926726069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 487652196797136,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "4" : {
            "sign" : -1143479802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 179972101863108126912080,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -1657717960,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 2246060232,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -527302737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "9" : {
            "sign" : 1261286291,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "22" : {
            "sign" : 1767844678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "26" : {
            "sign" : -1624602442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "13" : {
            "sign" : 2050825505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 387236500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          },
          "24" : {
            "sign" : -1805691170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "16" : {
            "sign" : 2039589116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#31] "
          },
          "5" : {
            "sign" : -1024384918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 299435559436837,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -149693782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "21" : {
            "sign" : 1434586292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "32" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 601037840,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : -1398427953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1137855125859984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1866093024,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 904045042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
          },
          "25" : {
            "sign" : 1732452753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : -157864295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2157460500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30]) "
          },
          "31" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "0" : {
            "sign" : 1282490995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "27" : {
            "sign" : 1057252779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "2" : {
            "sign" : -144243703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1043254498,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#31, d_date_id#32, d_date#33, d_month_seq#34, d_week_seq#35, d_quarter_seq#36, d_year#37, d_dow#38, d_moy#39, d_dom#40, d_qoy#41, d_fy_year#42, d_fy_quarter_seq#43, d_fy_week_seq#44, d_day_name#45, d_quarter_name#46, d_holiday#47, d_weekend#48, d_following_holiday#49, d_first_dom#50, d_last_dom#51, d_same_day_ly#52, d_same_day_lq#53, d_current_day#54, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -680408533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 586376321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "29" : {
            "sign" : 385073159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2201252820,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30]) "
          },
          "3" : {
            "sign" : 1816771008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          },
          "28" : {
            "sign" : 1654348087,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 395096660,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :     :           :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :     :           :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :     :           :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n            :     :           :     :     :  +- Project [d_date_sk#31]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :                    :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :                    :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :                    :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n            :                    :     :     :  +- Project [d_date_sk#31]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5155228192,
        "inputRowCount" : 32746208
      },
      "PD" : {
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 17327.0,
        "FinishedTasksDistributionInMs" : [ 29.0, 497.0, 1178.0, 1502.0, 3690.0 ]
      },
      "StartTimeInMs" : 1702227387363,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11653,
        "IOBytes" : {
          "Total" : 265868577,
          "Details" : {
            "IR" : 71101689,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 88851789
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -2108147895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 46001539682560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "4" : {
            "sign" : 1586376084,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3104880611586916580800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -766297987,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 487652196797136,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "11" : {
            "sign" : 684640091,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 37954048,
            "rowCount" : 1186064,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 49708275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 46001539682560,
            "rowCount" : 1150038492064,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "13" : {
            "sign" : 1027235252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "16" : {
            "sign" : 1904053936,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "5" : {
            "sign" : -194614230,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 168952866137764,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -1277745060,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 55201847619072,
            "rowCount" : 1150038492064,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "6" : {
            "sign" : -1059580471,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 642020891323504,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1357719210,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3025268288212893078728,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -69826761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : 190377480,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "0" : {
            "sign" : 1499480775,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "2" : {
            "sign" : 2022113777,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3025268288212893078728,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : 684640122,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : -1349996255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 46001539682560,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : -1000372554,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3025268288212893078728,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- LogicalQueryStage Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 453672736,
        "inputRowCount" : 17159285
      },
      "PD" : {
        "2" : [ 115052, 110366, 112671, 112625, 109554, 112451, 111027, 113874, 109975, 115023, 113654, 112172, 115941, 113983, 109399, 113332, 110856, 113381, 109809, 111755, 111158, 114647, 112325, 110898, 112733, 112713, 115078, 112915, 112727, 110955, 110499, 111539, 113288, 111604, 113710, 113750, 114522, 110658, 111013, 112643, 113137, 110464, 107859, 108513, 111160, 112719, 116827, 113227, 110065, 107943, 114746, 112442, 109267, 114458, 110692, 111885, 111942, 110220, 110548, 108219, 108577, 112445, 107772, 114218, 112695, 110600, 114360, 112336, 110277, 113697, 112459, 109419, 114739, 112930, 114681, 109556, 116352, 111708, 113178, 113692, 109539, 113717, 112115, 106733, 114911, 106627, 112072, 111797, 113604, 109925, 111295, 112424, 113753, 112684, 114545, 114336, 112782, 113998, 111810, 112875, 110378, 111603, 112931, 108989, 111116, 108405, 111829, 113045, 112899, 111849, 108902, 111989, 111189, 111399, 111459, 111945, 108439, 110913, 114378, 111871, 110008, 113390, 111044, 110479, 114412, 114874, 114241, 106401, 110154, 109940, 108353, 114689, 107076, 107331, 111682, 112353, 112654, 113977, 110568, 113903, 109994, 110167, 113751, 114095, 114644, 112296, 113124, 115107, 115228, 113006, 109331, 110648, 114548, 112861, 109521, 115123, 110714, 110866, 111451, 107662, 109772, 111051, 111901, 106811, 112954, 112913, 113117, 114947, 114313, 113173, 113466, 111905, 113115, 111832, 110445, 112503, 115062, 106910, 112990, 110033, 112592, 112863, 111349, 109322, 112187, 111072, 113021, 114046, 107718, 113440, 115694, 112917, 108966, 108282, 111738, 111492, 112180, 112179, 111815, 114018 ],
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 15,
        "FinishedTasksTotalTimeInMs" : 12844.0,
        "FinishedTasksDistributionInMs" : [ 400.0, 475.0, 566.0, 1558.0, 1880.0 ]
      },
      "StartTimeInMs" : 1702227391530,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 7486,
        "IOBytes" : {
          "Total" : 183774632,
          "Details" : {
            "IR" : 18693516,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 59166017
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1263434162,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "8" : {
            "sign" : 1480107031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "19" : {
            "sign" : -680408626,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -926726069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 487652196797136,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "4" : {
            "sign" : -1143479802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 179972101863108126912080,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "15" : {
            "sign" : -1657717960,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 2246060232,
            "rowCount" : 14397822,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -527302737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "9" : {
            "sign" : 1261286291,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "22" : {
            "sign" : 1767844678,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "26" : {
            "sign" : -1624602442,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "13" : {
            "sign" : 2050825505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 387236500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          },
          "24" : {
            "sign" : -1805691170,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 541835774219040,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "16" : {
            "sign" : 2039589116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#31] "
          },
          "5" : {
            "sign" : -1024384918,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 299435559436837,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "10" : {
            "sign" : -149693782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "21" : {
            "sign" : 1434586292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 596019351640944,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "32" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 601037840,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : -1398427953,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1137855125859984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "1" : {
            "sign" : -1866093024,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : 904045042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
          },
          "25" : {
            "sign" : 1732452753,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 650202929062848,
            "rowCount" : 13545894355476,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          },
          "14" : {
            "sign" : -157864295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2157460500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30]) "
          },
          "31" : {
            "sign" : -2134393811,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5 "
          },
          "0" : {
            "sign" : 1282490995,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -2134393935,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1 "
          },
          "27" : {
            "sign" : 1057252779,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "2" : {
            "sign" : -144243703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1043254498,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#31, d_date_id#32, d_date#33, d_month_seq#34, d_week_seq#35, d_quarter_seq#36, d_year#37, d_dow#38, d_moy#39, d_dom#40, d_qoy#41, d_fy_year#42, d_fy_quarter_seq#43, d_fy_week_seq#44, d_day_name#45, d_quarter_name#46, d_holiday#47, d_weekend#48, d_following_holiday#49, d_first_dom#50, d_last_dom#51, d_same_day_ly#52, d_same_day_lq#53, d_current_day#54, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -680408533,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#31], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 586376321,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 541835774219040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          },
          "29" : {
            "sign" : 385073159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2201252820,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30]) "
          },
          "3" : {
            "sign" : 1816771008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175357432584566892888693,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          },
          "28" : {
            "sign" : 1654348087,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 395096660,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- Project [ctr_customer_sk#131, ctr_total_return#133]\n            :  +- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n            :     :- Filter isnotnull(ctr_total_return#133)\n            :     :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :     :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :     :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :     :           :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :     :           :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :     :           :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :     :           :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n            :     :           :     :     :  +- Project [d_date_sk#31]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            :        +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n            :           +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            :              +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n            :                 +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :                    :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :                    :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :                    :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :                    :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n            :                    :     :     :  +- Project [d_date_sk#31]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#31], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#59, ca_state#67], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5155228192,
        "inputRowCount" : 32746208
      },
      "PD" : {
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 17327.0,
        "FinishedTasksDistributionInMs" : [ 29.0, 497.0, 1178.0, 1502.0, 3690.0 ]
      },
      "StartTimeInMs" : 1702227387412,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 11604,
        "IOBytes" : {
          "Total" : 265868577,
          "Details" : {
            "IR" : 71101689,
            "IW" : 0,
            "SR" : 105915099,
            "SW" : 88851789
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "12" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1726734046,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5718642051720,
                "rowCount" : 18328980935
              },
              "compileTime" : {
                "sizeInBytes" : 5718642051720,
                "rowCount" : 18328980935
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#131 = c_customer_sk#72) "
          },
          "5" : {
            "sign" : 1604948483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18377200,
                "rowCount" : 63743
              },
              "compileTime" : {
                "sizeInBytes" : 601037840,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7 "
          },
          "1" : {
            "sign" : -1671143652,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5572010204240,
                "rowCount" : 18328980935
              },
              "compileTime" : {
                "sizeInBytes" : 5572010204240,
                "rowCount" : 18328980935
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -1532991019,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 30400,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 30400,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1872620417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5572010204240,
                "rowCount" : 18328980935
              },
              "compileTime" : {
                "sizeInBytes" : 5572010204240,
                "rowCount" : 18328980935
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -574879364,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5572010204240,
                "rowCount" : 18328980935
              },
              "compileTime" : {
                "sizeInBytes" : 5572010204240,
                "rowCount" : 18328980935
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], true\n      +- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n         +- Join Inner, (ctr_customer_sk#131 = c_customer_sk#72)\n            :- LogicalQueryStage Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14\n            +- LogicalQueryStage Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], ShuffleQueryStage 7\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 267258347,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 18377200,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [16]: [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] Arguments: 7 "
          },
          "1" : {
            "sign" : -826130805,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5572010204240,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [16]: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] Input [18]: [ctr_customer_sk#131, ctr_total_return#133, c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] "
          },
          "0" : {
            "sign" : -1117641813,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 30400,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [16]: [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] Arguments: 100, [c_customer_id#73 ASC NULLS FIRST, c_salutation#79 ASC NULLS FIRST, c_first_name#80 ASC NULLS FIRST, c_last_name#81 ASC NULLS FIRST, ca_street_number#136 ASC NULLS FIRST, ca_street_name#137 ASC NULLS FIRST, ca_street_type#138 ASC NULLS FIRST, ca_suite_number#139 ASC NULLS FIRST, ca_city#140 ASC NULLS FIRST, ca_county#141 ASC NULLS FIRST, ca_state#142 ASC NULLS FIRST, ca_zip#143 ASC NULLS FIRST, ca_country#144 ASC NULLS FIRST, ca_gmt_offset#145 ASC NULLS FIRST, ca_location_type#146 ASC NULLS FIRST, ctr_total_return#133 ASC NULLS FIRST], [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133] "
          },
          "2" : {
            "sign" : 216462821,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 5718642051720,
            "rowCount" : 18328980935,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ctr_customer_sk#131] Right keys [1]: [c_customer_sk#72] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 3141078,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 32777176,
            "rowCount" : 287545,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ctr_customer_sk#131, ctr_total_return#133] Arguments: 15 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#73 ASC NULLS FIRST,c_salutation#79 ASC NULLS FIRST,c_first_name#80 ASC NULLS FIRST,c_last_name#81 ASC NULLS FIRST,ca_street_number#136 ASC NULLS FIRST,ca_street_name#137 ASC NULLS FIRST,ca_street_type#138 ASC NULLS FIRST,ca_suite_number#139 ASC NULLS FIRST,ca_city#140 ASC NULLS FIRST,ca_county#141 ASC NULLS FIRST,ca_state#142 ASC NULLS FIRST,ca_zip#143 ASC NULLS FIRST,ca_country#144 ASC NULLS FIRST,ca_gmt_offset#145 ASC NULLS FIRST,ca_location_type#146 ASC NULLS FIRST,ctr_total_return#133 ASC NULLS FIRST], output=[c_customer_id#73,c_salutation#79,c_first_name#80,c_last_name#81,ca_street_number#136,ca_street_name#137,ca_street_type#138,ca_suite_number#139,ca_city#140,ca_county#141,ca_state#142,ca_zip#143,ca_country#144,ca_gmt_offset#145,ca_location_type#146,ctr_total_return#133])\n+- Project [c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146, ctr_total_return#133]\n   +- BroadcastHashJoin [ctr_customer_sk#131], [c_customer_sk#72], Inner, BuildLeft, false\n      :- BroadcastQueryStage 15\n      :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2227]\n      :     +- AQEShuffleRead local\n      :        +- ShuffleQueryStage 14\n      :           +- Exchange hashpartitioning(ctr_customer_sk#131, 200), ENSURE_REQUIREMENTS, [plan_id=2189]\n      :              +- *(17) Project [ctr_customer_sk#131, ctr_total_return#133]\n      :                 +- *(17) BroadcastHashJoin [ctr_state#132], [ctr_state#132#167], Inner, BuildRight, (cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149), false\n      :                    :- *(17) Filter isnotnull(ctr_total_return#133)\n      :                    :  +- *(17) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_customer_sk#131, ctr_state#132, ctr_total_return#133])\n      :                    :     +- AQEShuffleRead coalesced\n      :                    :        +- ShuffleQueryStage 10\n      :                    :           +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1760]\n      :                    :              +- *(11) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#171L])\n      :                    :                 +- *(11) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n      :                    :                    +- *(11) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n      :                    :                       :- *(9) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :                    :                       :  +- AQEShuffleRead coalesced\n      :                    :                       :     +- ShuffleQueryStage 8\n      :                    :                       :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1306]\n      :                    :                       :           +- *(7) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n      :                    :                       :              +- *(7) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n      :                    :                       :                 :- *(7) Filter (isnotnull(cr_returning_addr_sk#13) AND isnotnull(cr_returning_customer_sk#10))\n      :                    :                       :                 :  +- *(7) ColumnarToRow\n      :                    :                       :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13), isnotnull(cr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n      :                    :                       :                 :           +- SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n      :                    :                       :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                                       +- == Final Plan ==\n                                                                                          BroadcastQueryStage 1\n                                                                                          +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                                                       +- == Initial Plan ==\n                                                                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1277]\n                                                                                          +- Project [d_date_sk#31]\n                                                                                             +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n                                                                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :                    :                       :                 +- BroadcastQueryStage 0\n      :                    :                       :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      :                    :                       :                       +- *(1) Project [d_date_sk#31]\n      :                    :                       :                          +- *(1) Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n      :                    :                       :                             +- *(1) ColumnarToRow\n      :                    :                       :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :                    :                       +- *(10) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n      :                    :                          +- AQEShuffleRead coalesced\n      :                    :                             +- ShuffleQueryStage 1\n      :                    :                                +- Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n      :                    :                                   +- *(2) Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n      :                    :                                      +- *(2) ColumnarToRow\n      :                    :                                         +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_state#67] Batched: true, DataFilters: [isnotnull(ca_address_sk#59), isnotnull(ca_state#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n      :                    +- BroadcastQueryStage 13\n      :                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=2124]\n      :                          +- *(16) Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n      :                             +- *(16) HashAggregate(keys=[ctr_state#132], functions=[avg(ctr_total_return#133)], output=[(avg(ctr_total_return) * 1.2)#149, ctr_state#132#167])\n      :                                +- AQEShuffleRead coalesced\n      :                                   +- ShuffleQueryStage 12\n      :                                      +- Exchange hashpartitioning(ctr_state#132, 200), ENSURE_REQUIREMENTS, [plan_id=2048]\n      :                                         +- *(15) HashAggregate(keys=[ctr_state#132], functions=[partial_avg(ctr_total_return#133)], output=[ctr_state#132, sum#174, count#175L])\n      :                                            +- *(15) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_state#132, ctr_total_return#133])\n      :                                               +- AQEShuffleRead coalesced\n      :                                                  +- ShuffleQueryStage 11\n      :                                                     +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1894]\n      :                                                        +- *(14) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#177L])\n      :                                                           +- *(14) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n      :                                                              +- *(14) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n      :                                                                 :- *(12) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :                                                                 :  +- AQEShuffleRead coalesced\n      :                                                                 :     +- ShuffleQueryStage 9\n      :                                                                 :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1361]\n      :                                                                 :           +- *(8) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n      :                                                                 :              +- *(8) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n      :                                                                 :                 :- *(8) Filter isnotnull(cr_returning_addr_sk#13)\n      :                                                                 :                 :  +- *(8) ColumnarToRow\n      :                                                                 :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n      :                                                                 :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n      :                                                                 :                 +- BroadcastQueryStage 3\n      :                                                                 :                    +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      :                                                                 +- *(13) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n      :                                                                    +- AQEShuffleRead coalesced\n      :                                                                       +- ShuffleQueryStage 5\n      :                                                                          +- ReusedExchange [ca_address_sk#59, ca_state#67], Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n      +- ShuffleQueryStage 7\n         +- Exchange hashpartitioning(c_customer_sk#72, 200), ENSURE_REQUIREMENTS, [plan_id=758]\n            +- *(6) Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146]\n               +- *(6) BroadcastHashJoin [c_current_addr_sk#76], [ca_address_sk#134], Inner, BuildRight, false\n                  :- *(6) Filter (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76))\n                  :  +- *(6) ColumnarToRow\n                  :     +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#72,c_customer_id#73,c_current_addr_sk#76,c_salutation#79,c_first_name#80,c_last_name#81] Batched: true, DataFilters: [isnotnull(c_customer_sk#72), isnotnull(c_current_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...\n                  +- BroadcastQueryStage 6\n                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=490]\n                        +- *(5) Filter ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134))\n                           +- *(5) ColumnarToRow\n                              +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#134,ca_street_number#136,ca_street_name#137,ca_street_type#138,ca_suite_number#139,ca_city#140,ca_county#141,ca_state#142,ca_zip#143,ca_country#144,ca_gmt_offset#145,ca_location_type#146] Batched: true, DataFilters: [isnotnull(ca_state#142), (ca_state#142 = IL), isnotnull(ca_address_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 51154376,
        "inputRowCount" : 351288
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "1" : [ 39317, 39317, 52331, 43249, 47574, 47574, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 43249, 47574, 43249, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 47574, 39317, 43249, 43249, 43249, 39317, 47574, 43249, 39317, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 52331, 43249, 43249, 43249, 39317, 43249, 47574, 47574, 47574, 39317, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 39317, 47574, 47574, 47574, 39317, 43249, 39317, 47574, 43249, 47574, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 47574, 43249, 39317, 43249, 39317, 43249, 43249, 43249, 43249, 47574, 47574, 39317, 39317, 47574, 47574, 43249, 43249, 39317, 47574, 43249, 43249, 43249, 43249 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 12,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 31 ],
      "Objectives" : {
        "DurationInMs" : 442,
        "TotalTasksDurationInMs" : 439,
        "IOBytes" : {
          "Total" : 8383919,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 8383919,
            "SW" : 0
          }
        }
      }
    },
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -2144741063,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              },
              "compileTime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          }
        },
        "links" : [ ],
        "rawPlan" : "Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n+- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n   +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n      +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n         :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n         :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n         :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n         :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n         :     :     :  +- Project [d_date_sk#31]\n         :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n         :     +- Project [d_date_sk#31]\n         :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n         :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n         +- Project [ca_address_sk#59, ca_state#67]\n            +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n               +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1800080018,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ctr_state#132, ctr_total_return#133] Keys [1]: [ctr_state#132] Functions [1]: [partial_avg(ctr_total_return#133)] Aggregate Attributes [2]: [sum#172, count#173L] Results [3]: [ctr_state#132, sum#174, count#175L] "
          },
          "1" : {
            "sign" : 1439776146,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 45442520,
            "rowCount" : 1136063,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [cr_returning_customer_sk#10, ca_state#67, sum#177L] Keys [2]: [cr_returning_customer_sk#10, ca_state#67] Functions [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#23))] Aggregate Attributes [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#23))#147L] Results [2]: [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23))#147L,17,2) AS ctr_total_return#133] "
          },
          "2" : {
            "sign" : 69031609,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 423447750,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [cr_returning_customer_sk#10, ca_state#67, sum#177L] Arguments: 11 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ctr_state#132], functions=[partial_avg(ctr_total_return#133)], output=[ctr_state#132, sum#174, count#175L])\n+- HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_state#132, ctr_total_return#133])\n   +- ShuffleQueryStage 11\n      +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1894]\n         +- *(14) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#177L])\n            +- *(14) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n               +- *(14) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n                  :- *(12) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                  :  +- AQEShuffleRead coalesced\n                  :     +- ShuffleQueryStage 9\n                  :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1361]\n                  :           +- *(8) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n                  :              +- *(8) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n                  :                 :- *(8) Filter isnotnull(cr_returning_addr_sk#13)\n                  :                 :  +- *(8) ColumnarToRow\n                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n                  :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n                  :                 +- BroadcastQueryStage 3\n                  :                    +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                  +- *(13) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 5\n                           +- ReusedExchange [ca_address_sk#59, ca_state#67], Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 45442520,
        "inputRowCount" : 1136063
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "5" : [ 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 84280, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 1311,
        "TotalTasksDurationInMs" : 1298,
        "IOBytes" : {
          "Total" : 17277324,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 17272958,
            "SW" : 4366
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1657717960,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              },
              "compileTime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 1699097792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 447047232,
                "rowCount" : 13970226
              },
              "compileTime" : {
                "sizeInBytes" : 447047232,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "0" : {
            "sign" : 153880315,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              },
              "compileTime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "2" : {
            "sign" : 2050825505,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 387236500,
                "rowCount" : 13829875
              },
              "compileTime" : {
                "sizeInBytes" : 387236500,
                "rowCount" : 13829875
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          },
          "3" : {
            "sign" : -157864295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2157460500,
                "rowCount" : 13829875
              },
              "compileTime" : {
                "sizeInBytes" : 2157460500,
                "rowCount" : 13829875
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n+- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n   :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n   :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n   :     :  +- Project [d_date_sk#31]\n   :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n   +- Project [d_date_sk#31]\n      +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -506008688,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#31] Arguments: 0 "
          },
          "1" : {
            "sign" : -1547419792,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cr_returned_date_sk#30] Right keys [1]: [d_date_sk#31] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1821975757,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] Input [5]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30, d_date_sk#31] "
          },
          "2" : {
            "sign" : -1733915131,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 387236500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] Condition : (isnotnull(cr_returning_addr_sk#13) AND isnotnull(cr_returning_customer_sk#10)) "
          },
          "3" : {
            "sign" : 517745453,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 387236500,
            "rowCount" : 13829875,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_returns Output [4]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_returns/cr_returned_date_sk=2450822, ... 2100 entries] PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpruning#168)] PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)] ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_returns",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n+- BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n   :- Filter (isnotnull(cr_returning_addr_sk#13) AND isnotnull(cr_returning_customer_sk#10))\n   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13), isnotnull(cr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1277]\n   :                 +- Project [d_date_sk#31]\n   :                    +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n         +- *(1) Project [d_date_sk#31]\n            +- *(1) Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 388287996,
        "inputRowCount" : 13830240
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 17327.0,
        "FinishedTasksDistributionInMs" : [ 29.0, 497.0, 1178.0, 1502.0, 3690.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 3759,
        "TotalTasksDurationInMs" : 18417,
        "IOBytes" : {
          "Total" : 40003792,
          "Details" : {
            "IR" : 18701939,
            "IW" : 0,
            "SR" : 0,
            "SW" : 21301853
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1804194844,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6901080,
                "rowCount" : 287545
              },
              "compileTime" : {
                "sizeInBytes" : 282298500,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14 "
          }
        },
        "links" : [ ],
        "rawPlan" : "LogicalQueryStage Project [ctr_customer_sk#131, ctr_total_return#133], ShuffleQueryStage 14\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1970221523,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 6901080,
            "rowCount" : 287545,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ctr_customer_sk#131, ctr_total_return#133] Arguments: 14 "
          }
        },
        "links" : [ ],
        "rawPlan" : "ShuffleQueryStage 14\n+- Exchange hashpartitioning(ctr_customer_sk#131, 200), ENSURE_REQUIREMENTS, [plan_id=2189]\n   +- *(17) Project [ctr_customer_sk#131, ctr_total_return#133]\n      +- *(17) BroadcastHashJoin [ctr_state#132], [ctr_state#132#167], Inner, BuildRight, (cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149), false\n         :- *(17) Filter isnotnull(ctr_total_return#133)\n         :  +- *(17) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_customer_sk#131, ctr_state#132, ctr_total_return#133])\n         :     +- AQEShuffleRead coalesced\n         :        +- ShuffleQueryStage 10\n         :           +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1760]\n         :              +- *(11) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#171L])\n         :                 +- *(11) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n         :                    +- *(11) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n         :                       :- *(9) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n         :                       :  +- AQEShuffleRead coalesced\n         :                       :     +- ShuffleQueryStage 8\n         :                       :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1306]\n         :                       :           +- *(7) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n         :                       :              +- *(7) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n         :                       :                 :- *(7) Filter (isnotnull(cr_returning_addr_sk#13) AND isnotnull(cr_returning_customer_sk#10))\n         :                       :                 :  +- *(7) ColumnarToRow\n         :                       :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13), isnotnull(cr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n         :                       :                 :           +- SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n         :                       :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                     +- == Final Plan ==\n                                                                        BroadcastQueryStage 1\n                                                                        +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                                     +- == Initial Plan ==\n                                                                        BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1277]\n                                                                        +- Project [d_date_sk#31]\n                                                                           +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :                       :                 +- BroadcastQueryStage 0\n         :                       :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n         :                       :                       +- *(1) Project [d_date_sk#31]\n         :                       :                          +- *(1) Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n         :                       :                             +- *(1) ColumnarToRow\n         :                       :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n         :                       +- *(10) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n         :                          +- AQEShuffleRead coalesced\n         :                             +- ShuffleQueryStage 1\n         :                                +- Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n         :                                   +- *(2) Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n         :                                      +- *(2) ColumnarToRow\n         :                                         +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_state#67] Batched: true, DataFilters: [isnotnull(ca_address_sk#59), isnotnull(ca_state#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n         +- BroadcastQueryStage 13\n            +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=2124]\n               +- *(16) Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n                  +- *(16) HashAggregate(keys=[ctr_state#132], functions=[avg(ctr_total_return#133)], output=[(avg(ctr_total_return) * 1.2)#149, ctr_state#132#167])\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 12\n                           +- Exchange hashpartitioning(ctr_state#132, 200), ENSURE_REQUIREMENTS, [plan_id=2048]\n                              +- *(15) HashAggregate(keys=[ctr_state#132], functions=[partial_avg(ctr_total_return#133)], output=[ctr_state#132, sum#174, count#175L])\n                                 +- *(15) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_state#132, ctr_total_return#133])\n                                    +- AQEShuffleRead coalesced\n                                       +- ShuffleQueryStage 11\n                                          +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1894]\n                                             +- *(14) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#177L])\n                                                +- *(14) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n                                                   +- *(14) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n                                                      :- *(12) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                                                      :  +- AQEShuffleRead coalesced\n                                                      :     +- ShuffleQueryStage 9\n                                                      :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1361]\n                                                      :           +- *(8) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n                                                      :              +- *(8) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n                                                      :                 :- *(8) Filter isnotnull(cr_returning_addr_sk#13)\n                                                      :                 :  +- *(8) ColumnarToRow\n                                                      :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n                                                      :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n                                                      :                 +- BroadcastQueryStage 3\n                                                      :                    +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                      +- *(13) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n                                                         +- AQEShuffleRead coalesced\n                                                            +- ShuffleQueryStage 5\n                                                               +- ReusedExchange [ca_address_sk#59, ca_state#67], Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6901080,
        "inputRowCount" : 287545
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "7" : [ 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 18341, 15158, 15158, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 18341, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 15158, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 16674, 15158, 16674, 16674, 16674, 15158, 16674, 16674 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 29 ],
      "Objectives" : {
        "DurationInMs" : 117,
        "TotalTasksDurationInMs" : 113,
        "IOBytes" : {
          "Total" : 3106566,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3106566,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1381486069,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              },
              "compileTime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#149) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n+- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n   +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n      +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n         +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n            :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n            :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n            :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n            :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n            :     :     :  +- Project [d_date_sk#31]\n            :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n            :     +- Project [d_date_sk#31]\n            :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n            :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n            +- Project [ca_address_sk#59, ca_state#67]\n               +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n                  +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 352497413,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [(avg(ctr_total_return) * 1.2)#149, ctr_state#132#167] Condition : isnotnull((avg(ctr_total_return) * 1.2)#149) "
          },
          "1" : {
            "sign" : 315849649,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2856,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [ctr_state#132, sum#174, count#175L] Keys [1]: [ctr_state#132] Functions [1]: [avg(ctr_total_return#133)] Aggregate Attributes [1]: [avg(ctr_total_return#133)#148] Results [2]: [(avg(ctr_total_return#133)#148 * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167] "
          },
          "2" : {
            "sign" : 1715589210,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ctr_state#132, sum#174, count#175L] Arguments: 12 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n+- HashAggregate(keys=[ctr_state#132], functions=[avg(ctr_total_return#133)], output=[(avg(ctr_total_return) * 1.2)#149, ctr_state#132#167])\n   +- ShuffleQueryStage 12\n      +- Exchange hashpartitioning(ctr_state#132, 200), ENSURE_REQUIREMENTS, [plan_id=2048]\n         +- *(15) HashAggregate(keys=[ctr_state#132], functions=[partial_avg(ctr_total_return#133)], output=[ctr_state#132, sum#174, count#175L])\n            +- *(15) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_state#132, ctr_total_return#133])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 11\n                     +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1894]\n                        +- *(14) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#177L])\n                           +- *(14) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n                              +- *(14) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n                                 :- *(12) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                                 :  +- AQEShuffleRead coalesced\n                                 :     +- ShuffleQueryStage 9\n                                 :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1361]\n                                 :           +- *(8) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n                                 :              +- *(8) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n                                 :                 :- *(8) Filter isnotnull(cr_returning_addr_sk#13)\n                                 :                 :  +- *(8) ColumnarToRow\n                                 :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n                                 :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n                                 :                 +- BroadcastQueryStage 3\n                                 :                    +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                 +- *(13) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n                                    +- AQEShuffleRead coalesced\n                                       +- ShuffleQueryStage 5\n                                          +- ReusedExchange [ca_address_sk#59, ca_state#67], Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2856,
        "inputRowCount" : 51
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "6" : [ 0, 0, 0, 0, 117, 0, 0, 0, 0, 97, 97, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 97, 0, 129, 0, 97, 0, 0, 97, 97, 0, 0, 0, 97, 97, 0, 0, 0, 0, 97, 129, 97, 0, 0, 97, 97, 0, 0, 97, 97, 0, 0, 97, 0, 97, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 97, 97, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 97, 0, 129, 0, 0, 0, 0, 97, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 97, 0, 97, 0, 0, 0, 0, 0, 129, 0, 0, 0, 97, 0, 0, 0, 97, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 97 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 582,
        "TotalTasksDurationInMs" : 575,
        "IOBytes" : {
          "Total" : 4366,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4366,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -1657717960,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              },
              "compileTime" : {
                "sizeInBytes" : 2246060232,
                "rowCount" : 14397822
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cr_returned_time_sk#4, cr_item_sk#5, cr_refunded_customer_sk#6, cr_refunded_cdemo_sk#7, cr_refunded_hdemo_sk#8, cr_refunded_addr_sk#9, cr_returning_customer_sk#10, cr_returning_cdemo_sk#11, cr_returning_hdemo_sk#12, cr_returning_addr_sk#13, cr_call_center_sk#14, cr_catalog_page_sk#15, cr_ship_mode_sk#16, cr_warehouse_sk#17, cr_reason_sk#18, cr_order_number#19L, cr_return_quantity#20, cr_return_amount#21, cr_return_tax#22, cr_return_amt_inc_tax#23, cr_fee#24, cr_return_ship_cost#25, cr_refunded_cash#26, cr_reversed_charge#27, ... 3 more fields], `spark_catalog`.`tpcds_100`.`catalog_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -703492956,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 447047232,
                "rowCount" : 13970226
              },
              "compileTime" : {
                "sizeInBytes" : 447047232,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returned_date_sk#30 = d_date_sk#31) "
          },
          "0" : {
            "sign" : -437154031,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              },
              "compileTime" : {
                "sizeInBytes" : 335285424,
                "rowCount" : 13970226
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] "
          },
          "2" : {
            "sign" : 1654348087,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 395096660,
                "rowCount" : 14110595
              },
              "compileTime" : {
                "sizeInBytes" : 395096660,
                "rowCount" : 14110595
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] "
          },
          "3" : {
            "sign" : 385073159,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2201252820,
                "rowCount" : 14110595
              },
              "compileTime" : {
                "sizeInBytes" : 2201252820,
                "rowCount" : 14110595
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n+- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n   :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n   :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n   :     :  +- Project [d_date_sk#31]\n   :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n   +- Project [d_date_sk#31]\n      +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1715158373,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#31] Arguments: 3 "
          },
          "1" : {
            "sign" : -890959124,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 447047232,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cr_returned_date_sk#30] Right keys [1]: [d_date_sk#31] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1040505233,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 335285424,
            "rowCount" : 13970226,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] Input [5]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30, d_date_sk#31] "
          },
          "2" : {
            "sign" : 297687576,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 395096660,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] Condition : isnotnull(cr_returning_addr_sk#13) "
          },
          "3" : {
            "sign" : 1556659289,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 395096660,
            "rowCount" : 14110595,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_returns Output [4]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_returns/cr_returned_date_sk=2450822, ... 2100 entries] PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpruning#168)] PushedFilters: [IsNotNull(cr_returning_addr_sk)] ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_returns",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n+- BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n   :- Filter isnotnull(cr_returning_addr_sk#13)\n   :  +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n   +- BroadcastQueryStage 3\n      +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 396148156,
        "inputRowCount" : 14110960
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 13,
        "FinishedTasksTotalTimeInMs" : 17327.0,
        "FinishedTasksDistributionInMs" : [ 29.0, 497.0, 1178.0, 1502.0, 3690.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 3727,
        "TotalTasksDurationInMs" : 15319,
        "IOBytes" : {
          "Total" : 40203772,
          "Details" : {
            "IR" : 18693516,
            "IW" : 0,
            "SR" : 0,
            "SW" : 21510256
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -648323161,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 282298500,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 282298500,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#131, ctr_total_return#133] "
          },
          "1" : {
            "sign" : 1437709042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 903355200,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 903355200,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167)) "
          },
          "2" : {
            "sign" : 1255237107,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#133) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ctr_customer_sk#131, ctr_total_return#133]\n+- Join Inner, ((cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) AND (ctr_state#132 = ctr_state#132#167))\n   :- Filter isnotnull(ctr_total_return#133)\n   :  +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n   :     +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n   :        +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n   :           :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n   :           :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n   :           :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n   :           :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n   :           :     :     :  +- Project [d_date_sk#31]\n   :           :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n   :           :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n   :           :     +- Project [d_date_sk#31]\n   :           :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n   :           +- Project [ca_address_sk#59, ca_state#67]\n   :              +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n   :                 +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n   +- Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n      +- Aggregate [ctr_state#132], [(avg(ctr_total_return#133) * 1.2) AS (avg(ctr_total_return) * 1.2)#149, ctr_state#132 AS ctr_state#132#167]\n         +- Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n            +- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n               +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n                  :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n                  :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n                  :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n                  :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n                  :     :     :  +- Project [d_date_sk#31]\n                  :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n                  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n                  :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n                  :     +- Project [d_date_sk#31]\n                  :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n                  :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n                  +- Project [ca_address_sk#59, ca_state#67]\n                     +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n                        +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1175805619,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [cr_returning_customer_sk#10, ca_state#67, sum#171L] Arguments: 10 "
          },
          "5" : {
            "sign" : -1287959604,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33556480,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [(avg(ctr_total_return) * 1.2)#149, ctr_state#132#167] Arguments: 13 "
          },
          "1" : {
            "sign" : -706539013,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 903355200,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ctr_state#132] Right keys [1]: [ctr_state#132#167] Join type: Inner Join condition: (cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149) "
          },
          "0" : {
            "sign" : 1762316678,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 282298500,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ctr_customer_sk#131, ctr_total_return#133] Input [5]: [ctr_customer_sk#131, ctr_state#132, ctr_total_return#133, (avg(ctr_total_return) * 1.2)#149, ctr_state#132#167] "
          },
          "2" : {
            "sign" : 854840521,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ctr_customer_sk#131, ctr_state#132, ctr_total_return#133] Condition : isnotnull(ctr_total_return#133) "
          },
          "3" : {
            "sign" : 1235836527,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 45440480,
            "rowCount" : 1136012,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [cr_returning_customer_sk#10, ca_state#67, sum#171L] Keys [2]: [cr_returning_customer_sk#10, ca_state#67] Functions [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#23))] Aggregate Attributes [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#23))#147L] Results [3]: [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23))#147L,17,2) AS ctr_total_return#133] "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "HashAggregate",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ctr_customer_sk#131, ctr_total_return#133]\n+- BroadcastHashJoin [ctr_state#132], [ctr_state#132#167], Inner, BuildRight, (cast(ctr_total_return#133 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#149), false\n   :- Filter isnotnull(ctr_total_return#133)\n   :  +- HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_customer_sk#131, ctr_state#132, ctr_total_return#133])\n   :     +- ShuffleQueryStage 10\n   :        +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1760]\n   :           +- *(11) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#171L])\n   :              +- *(11) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n   :                 +- *(11) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n   :                    :- *(9) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n   :                    :  +- AQEShuffleRead coalesced\n   :                    :     +- ShuffleQueryStage 8\n   :                    :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1306]\n   :                    :           +- *(7) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n   :                    :              +- *(7) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n   :                    :                 :- *(7) Filter (isnotnull(cr_returning_addr_sk#13) AND isnotnull(cr_returning_customer_sk#10))\n   :                    :                 :  +- *(7) ColumnarToRow\n   :                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13), isnotnull(cr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n   :                    :                 :           +- SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n   :                    :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                            +- == Final Plan ==\n                                                               BroadcastQueryStage 1\n                                                               +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                            +- == Initial Plan ==\n                                                               BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1277]\n                                                               +- Project [d_date_sk#31]\n                                                                  +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :                    :                 +- BroadcastQueryStage 0\n   :                    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n   :                    :                       +- *(1) Project [d_date_sk#31]\n   :                    :                          +- *(1) Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   :                    :                             +- *(1) ColumnarToRow\n   :                    :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :                    +- *(10) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n   :                       +- AQEShuffleRead coalesced\n   :                          +- ShuffleQueryStage 1\n   :                             +- Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n   :                                +- *(2) Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n   :                                   +- *(2) ColumnarToRow\n   :                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_state#67] Batched: true, DataFilters: [isnotnull(ca_address_sk#59), isnotnull(ca_state#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n   +- BroadcastQueryStage 13\n      +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=2124]\n         +- *(16) Filter isnotnull((avg(ctr_total_return) * 1.2)#149)\n            +- *(16) HashAggregate(keys=[ctr_state#132], functions=[avg(ctr_total_return#133)], output=[(avg(ctr_total_return) * 1.2)#149, ctr_state#132#167])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 12\n                     +- Exchange hashpartitioning(ctr_state#132, 200), ENSURE_REQUIREMENTS, [plan_id=2048]\n                        +- *(15) HashAggregate(keys=[ctr_state#132], functions=[partial_avg(ctr_total_return#133)], output=[ctr_state#132, sum#174, count#175L])\n                           +- *(15) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[ctr_state#132, ctr_total_return#133])\n                              +- AQEShuffleRead coalesced\n                                 +- ShuffleQueryStage 11\n                                    +- Exchange hashpartitioning(cr_returning_customer_sk#10, ca_state#67, 200), ENSURE_REQUIREMENTS, [plan_id=1894]\n                                       +- *(14) HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#177L])\n                                          +- *(14) Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n                                             +- *(14) SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n                                                :- *(12) Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                                                :  +- AQEShuffleRead coalesced\n                                                :     +- ShuffleQueryStage 9\n                                                :        +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1361]\n                                                :           +- *(8) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n                                                :              +- *(8) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n                                                :                 :- *(8) Filter isnotnull(cr_returning_addr_sk#13)\n                                                :                 :  +- *(8) ColumnarToRow\n                                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n                                                :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n                                                :                 +- BroadcastQueryStage 3\n                                                :                    +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                +- *(13) Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n                                                   +- AQEShuffleRead coalesced\n                                                      +- ShuffleQueryStage 5\n                                                         +- ReusedExchange [ca_address_sk#59, ca_state#67], Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 78996960,
        "inputRowCount" : 1136063
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 84280, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709, 92709 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 1162,
        "TotalTasksDurationInMs" : 1152,
        "IOBytes" : {
          "Total" : 20378437,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 17271871,
            "SW" : 3106566
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 863974599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "1" : {
            "sign" : 823483461,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "2" : {
            "sign" : -1474559398,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 592826850,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 592826850,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [cr_returning_customer_sk#10, ca_state#67], [cr_returning_customer_sk#10 AS ctr_customer_sk#131, ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n+- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n   +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n      :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n      :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n      :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n      :     :  +- Filter (((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND isnotnull(cr_returning_customer_sk#10)) AND dynamicpruning#168 [cr_returned_date_sk#30])\n      :     :     :  +- Project [d_date_sk#31]\n      :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n      :     +- Project [d_date_sk#31]\n      :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n      +- Project [ca_address_sk#59, ca_state#67]\n         +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1483365837,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 37954048,
            "rowCount" : 1186064,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] Arguments: 8 "
          },
          "5" : {
            "sign" : -2079552636,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#59, ca_state#67] Arguments: [ca_address_sk#59 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -1509638005,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#59, ca_state#67] Arguments: 1 "
          },
          "1" : {
            "sign" : 1559608352,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] Input [5]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, ca_address_sk#59, ca_state#67] "
          },
          "0" : {
            "sign" : 1999961123,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] Keys [2]: [cr_returning_customer_sk#10, ca_state#67] Functions [1]: [partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))] Aggregate Attributes [1]: [sum#170L] Results [3]: [cr_returning_customer_sk#10, ca_state#67, sum#171L] "
          },
          "2" : {
            "sign" : -110765179,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 592826850,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cr_returning_addr_sk#13] Right keys [1]: [ca_address_sk#59] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -909899899,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] Arguments: [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#171L])\n+- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n   +- SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n      :- Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 8\n      :     +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1306]\n      :        +- *(7) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n      :           +- *(7) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n      :              :- *(7) Filter (isnotnull(cr_returning_addr_sk#13) AND isnotnull(cr_returning_customer_sk#10))\n      :              :  +- *(7) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13), isnotnull(cr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n      :              :           +- SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1277]\n                                          +- Project [d_date_sk#31]\n                                             +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :              +- BroadcastQueryStage 0\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      :                    +- *(1) Project [d_date_sk#31]\n      :                       +- *(1) Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n      :                          +- *(1) ColumnarToRow\n      :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      +- Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 1\n            +- Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n               +- *(2) Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n                  +- *(2) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_state#67] Batched: true, DataFilters: [isnotnull(ca_address_sk#59), isnotnull(ca_state#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 68982080,
        "inputRowCount" : 2155690
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 115052, 110366, 112671, 112625, 109554, 112451, 111027, 113874, 109975, 115023, 113654, 112172, 115941, 113983, 109399, 113332, 110856, 113381, 109809, 111755, 111158, 114647, 112325, 110898, 112733, 112713, 115078, 112915, 112727, 110955, 110499, 111539, 113288, 111604, 113710, 113750, 114522, 110658, 111013, 112643, 113137, 110464, 107859, 108513, 111160, 112719, 116827, 113227, 110065, 107943, 114746, 112442, 109267, 114458, 110692, 111885, 111942, 110220, 110548, 108219, 108577, 112445, 107772, 114218, 112695, 110600, 114360, 112336, 110277, 113697, 112459, 109419, 114739, 112930, 114681, 109556, 116352, 111708, 113178, 113692, 109539, 113717, 112115, 106733, 114911, 106627, 112072, 111797, 113604, 109925, 111295, 112424, 113753, 112684, 114545, 114336, 112782, 113998, 111810, 112875, 110378, 111603, 112931, 108989, 111116, 108405, 111829, 113045, 112899, 111849, 108902, 111989, 111189, 111399, 111459, 111945, 108439, 110913, 114378, 111871, 110008, 113390, 111044, 110479, 114412, 114874, 114241, 106401, 110154, 109940, 108353, 114689, 107076, 107331, 111682, 112353, 112654, 113977, 110568, 113903, 109994, 110167, 113751, 114095, 114644, 112296, 113124, 115107, 115228, 113006, 109331, 110648, 114548, 112861, 109521, 115123, 110714, 110866, 111451, 107662, 109772, 111051, 111901, 106811, 112954, 112913, 113117, 114947, 114313, 113173, 113466, 111905, 113115, 111832, 110445, 112503, 115062, 106910, 112990, 110033, 112592, 112863, 111349, 109322, 112187, 111072, 113021, 114046, 107718, 113440, 115694, 112917, 108966, 108282, 111738, 111492, 112180, 112179, 111815, 114018 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 15,
        "FinishedTasksTotalTimeInMs" : 12844.0,
        "FinishedTasksDistributionInMs" : [ 400.0, 475.0, 566.0, 1558.0, 1880.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 2729,
        "TotalTasksDurationInMs" : 2720,
        "IOBytes" : {
          "Total" : 47105379,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 29833508,
            "SW" : 17271871
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1545012292,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3914626,
                "rowCount" : 17957
              },
              "compileTime" : {
                "sizeInBytes" : 3914626,
                "rowCount" : 17957
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] "
          },
          "1" : {
            "sign" : 1721717245,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4417422,
                "rowCount" : 17957
              },
              "compileTime" : {
                "sizeInBytes" : 4417422,
                "rowCount" : 17957
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134)) "
          },
          "2" : {
            "sign" : 1649846137,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#134, ca_address_id#135, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146]\n+- Filter ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#134,ca_address_id#135,ca_street_number#136,ca_street_name#137,ca_street_type#138,ca_suite_number#139,ca_city#140,ca_county#141,ca_state#142,ca_zip#143,ca_country#144,ca_gmt_offset#145,ca_location_type#146] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -593209210,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3914626,
            "rowCount" : 17957,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [12]: [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] Condition : ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134)) "
          },
          "1" : {
            "sign" : 163051778,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3914626,
            "rowCount" : 17957,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [12]: [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_suite_number:string,ca_city:string,ca_county:string,ca_state:string,ca_zip:string,ca_country:string,ca_gmt_offset:decimal(5,2),ca_location_type:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134))\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#134,ca_street_number#136,ca_street_name#137,ca_street_type#138,ca_suite_number#139,ca_city#140,ca_county#141,ca_state#142,ca_zip#143,ca_country#144,ca_gmt_offset#145,ca_location_type#146] Batched: true, DataFilters: [isnotnull(ca_state#142), (ca_state#142 = IL), isnotnull(ca_address_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3914626,
        "inputRowCount" : 17957
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 8369,
        "TotalTasksDurationInMs" : 13195,
        "IOBytes" : {
          "Total" : 13364291,
          "Details" : {
            "IR" : 4832636,
            "IW" : 0,
            "SR" : 0,
            "SW" : 8531655
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 2039589116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#31] "
          },
          "1" : {
            "sign" : 904045042,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
          },
          "2" : {
            "sign" : -1043254498,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#31, d_date_id#32, d_date#33, d_month_seq#34, d_week_seq#35, d_quarter_seq#36, d_year#37, d_dow#38, d_moy#39, d_dom#40, d_qoy#41, d_fy_year#42, d_fy_quarter_seq#43, d_fy_week_seq#44, d_day_name#45, d_quarter_name#46, d_holiday#47, d_weekend#48, d_following_holiday#49, d_first_dom#50, d_last_dom#51, d_same_day_ly#52, d_same_day_lq#53, d_current_day#54, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#31]\n+- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2072633724,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#31] Input [2]: [d_date_sk#31, d_year#37] "
          },
          "1" : {
            "sign" : -939255950,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#31, d_year#37] Condition : ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31)) "
          },
          "2" : {
            "sign" : -459898210,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#31, d_year#37] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#31]\n+- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_year#37] Batched: true, DataFilters: [isnotnull(d_year#37), (d_year#37 = 1998), isnotnull(d_date_sk#31)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6912,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 8521,
        "TotalTasksDurationInMs" : 8514,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 171012073,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25210276,
                "rowCount" : 969626
              },
              "compileTime" : {
                "sizeInBytes" : 25210276,
                "rowCount" : 969626
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#59, ca_state#67] "
          },
          "1" : {
            "sign" : 357430211,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 238527996,
                "rowCount" : 969626
              },
              "compileTime" : {
                "sizeInBytes" : 238527996,
                "rowCount" : 969626
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67)) "
          },
          "2" : {
            "sign" : 1418879896,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#59, ca_address_id#60, ca_street_number#61, ca_street_name#62, ca_street_type#63, ca_suite_number#64, ca_city#65, ca_county#66, ca_state#67, ca_zip#68, ca_country#69, ca_gmt_offset#70, ca_location_type#71], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#59, ca_state#67]\n+- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -53450515,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#59, ca_state#67] Condition : (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67)) "
          },
          "1" : {
            "sign" : 311498872,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#59, ca_state#67] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)] ReadSchema: struct<ca_address_sk:int,ca_state:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_state#67] Batched: true, DataFilters: [isnotnull(ca_address_sk#59), isnotnull(ca_state#67)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25210276,
        "inputRowCount" : 969626
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 3700,
        "TotalTasksDurationInMs" : 9738,
        "IOBytes" : {
          "Total" : 14627646,
          "Details" : {
            "IR" : 14627646,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -628782366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 423447750,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 423447750,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133] "
          },
          "1" : {
            "sign" : -1099606959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 479907450,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] "
          },
          "2" : {
            "sign" : 1650396456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 592826850,
                "rowCount" : 14114925
              },
              "compileTime" : {
                "sizeInBytes" : 592826850,
                "rowCount" : 14114925
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cr_returning_addr_sk#13 = ca_address_sk#59) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [cr_returning_customer_sk#10, ca_state#67], [ca_state#67 AS ctr_state#132, MakeDecimal(sum(UnscaledValue(cr_return_amt_inc_tax#23)),17,2) AS ctr_total_return#133]\n+- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n   +- Join Inner, (cr_returning_addr_sk#13 = ca_address_sk#59)\n      :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n      :  +- Join Inner, (cr_returned_date_sk#30 = d_date_sk#31)\n      :     :- Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, cr_returned_date_sk#30]\n      :     :  +- Filter ((isnotnull(cr_returned_date_sk#30) AND isnotnull(cr_returning_addr_sk#13)) AND dynamicpruning#169 [cr_returned_date_sk#30])\n      :     :     :  +- Project [d_date_sk#31]\n      :     :     :     +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_returns[cr_returned_time_sk#4,cr_item_sk#5,cr_refunded_customer_sk#6,cr_refunded_cdemo_sk#7,cr_refunded_hdemo_sk#8,cr_refunded_addr_sk#9,cr_returning_customer_sk#10,cr_returning_cdemo_sk#11,cr_returning_hdemo_sk#12,cr_returning_addr_sk#13,cr_call_center_sk#14,cr_catalog_page_sk#15,cr_ship_mode_sk#16,cr_warehouse_sk#17,cr_reason_sk#18,cr_order_number#19L,cr_return_quantity#20,cr_return_amount#21,cr_return_tax#22,cr_return_amt_inc_tax#23,cr_fee#24,cr_return_ship_cost#25,cr_refunded_cash#26,cr_reversed_charge#27,... 3 more fields] parquet\n      :     +- Project [d_date_sk#31]\n      :        +- Filter ((isnotnull(d_year#37) AND (d_year#37 = 1998)) AND isnotnull(d_date_sk#31))\n      :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#31,d_date_id#32,d_date#33,d_month_seq#34,d_week_seq#35,d_quarter_seq#36,d_year#37,d_dow#38,d_moy#39,d_dom#40,d_qoy#41,d_fy_year#42,d_fy_quarter_seq#43,d_fy_week_seq#44,d_day_name#45,d_quarter_name#46,d_holiday#47,d_weekend#48,d_following_holiday#49,d_first_dom#50,d_last_dom#51,d_same_day_ly#52,d_same_day_lq#53,d_current_day#54,... 4 more fields] parquet\n      +- Project [ca_address_sk#59, ca_state#67]\n         +- Filter (isnotnull(ca_address_sk#59) AND isnotnull(ca_state#67))\n            +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#59,ca_address_id#60,ca_street_number#61,ca_street_name#62,ca_street_type#63,ca_suite_number#64,ca_city#65,ca_county#66,ca_state#67,ca_zip#68,ca_country#69,ca_gmt_offset#70,ca_location_type#71] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1381292707,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 38341856,
            "rowCount" : 1198183,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] Arguments: 9 "
          },
          "5" : {
            "sign" : 25040793,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#59, ca_state#67] Arguments: [ca_address_sk#59 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 801170266,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#59, ca_state#67] Arguments: 5 "
          },
          "1" : {
            "sign" : 1842150743,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 479907450,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] Input [5]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23, ca_address_sk#59, ca_state#67] "
          },
          "0" : {
            "sign" : 367082962,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 423447750,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67] Keys [2]: [cr_returning_customer_sk#10, ca_state#67] Functions [1]: [partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))] Aggregate Attributes [1]: [sum#176L] Results [3]: [cr_returning_customer_sk#10, ca_state#67, sum#177L] "
          },
          "2" : {
            "sign" : 1498820598,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 592826850,
            "rowCount" : 14114925,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [cr_returning_addr_sk#13] Right keys [1]: [ca_address_sk#59] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -394574677,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23] Arguments: [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[cr_returning_customer_sk#10, ca_state#67], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#23))], output=[cr_returning_customer_sk#10, ca_state#67, sum#177L])\n+- Project [cr_returning_customer_sk#10, cr_return_amt_inc_tax#23, ca_state#67]\n   +- SortMergeJoin [cr_returning_addr_sk#13], [ca_address_sk#59], Inner\n      :- Sort [cr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 9\n      :     +- Exchange hashpartitioning(cr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1361]\n      :        +- *(8) Project [cr_returning_customer_sk#10, cr_returning_addr_sk#13, cr_return_amt_inc_tax#23]\n      :           +- *(8) BroadcastHashJoin [cr_returned_date_sk#30], [d_date_sk#31], Inner, BuildRight, false\n      :              :- *(8) Filter isnotnull(cr_returning_addr_sk#13)\n      :              :  +- *(8) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.catalog_returns[cr_returning_customer_sk#10,cr_returning_addr_sk#13,cr_return_amt_inc_tax#23,cr_returned_date_sk#30] Batched: true, DataFilters: [isnotnull(cr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2101 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cr_returned_date_sk#30), dynamicpruningexpression(cr_returned_date_sk#30 IN dynamicpru..., PushedFilters: [IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#168, 0, [d_date_sk#31], [id=#1280]\n      :              +- BroadcastQueryStage 3\n      :                 +- ReusedExchange [d_date_sk#31], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      +- Sort [ca_address_sk#59 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 5\n            +- ReusedExchange [ca_address_sk#59, ca_state#67], Exchange hashpartitioning(ca_address_sk#59, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 69369888,
        "inputRowCount" : 2167809
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 115535, 111619, 114187, 113481, 109554, 112451, 111027, 113874, 111045, 116657, 115659, 112950, 116919, 115236, 110805, 113662, 110856, 114237, 111395, 113136, 113392, 116025, 113103, 111103, 112733, 113196, 117109, 114478, 114618, 111733, 113596, 113456, 114229, 112003, 115012, 115859, 115557, 110658, 112391, 112643, 113137, 113096, 110301, 109271, 112163, 112719, 116827, 113227, 110913, 108148, 116877, 114058, 110520, 115236, 111022, 111885, 112649, 111295, 110548, 110761, 111430, 114440, 108807, 115074, 112744, 111635, 114360, 113776, 110277, 114950, 113166, 110751, 114739, 114493, 115459, 111233, 116352, 112065, 113178, 114573, 111041, 114573, 112115, 107627, 115016, 107211, 113325, 113175, 114875, 113160, 111295, 113067, 117225, 114065, 114545, 115936, 114160, 115156, 112431, 115109, 112274, 111603, 114737, 108989, 111116, 110341, 111829, 113629, 115673, 111849, 111410, 111989, 112567, 111729, 111518, 114139, 110092, 112052, 114378, 111871, 111147, 115350, 114241, 111420, 114449, 117074, 115244, 108071, 111407, 111303, 110509, 115776, 107076, 112151, 112460, 113267, 112984, 115012, 111707, 115988, 110028, 110167, 114937, 114095, 116122, 115362, 115228, 115107, 119470, 113947, 110187, 113535, 114687, 116552, 112146, 115901, 113106, 116003, 112307, 107662, 111150, 112544, 112679, 108310, 113485, 113266, 113117, 114947, 114924, 113664, 114501, 113687, 116573, 112131, 112466, 112943, 115062, 109668, 113289, 110033, 114405, 114858, 112851, 109621, 114600, 111072, 113021, 114046, 107718, 114296, 115880, 112917, 110022, 109748, 112711, 111717, 113319, 113637, 112136, 115053 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 2855,
        "TotalTasksDurationInMs" : 2848,
        "IOBytes" : {
          "Total" : 47314869,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 30041911,
            "SW" : 17272958
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 968525662,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#72, c_customer_id#73, c_current_cdemo_sk#74, c_current_hdemo_sk#75, c_current_addr_sk#76, c_first_shipto_date_sk#77, c_first_sales_date_sk#78, c_salutation#79, c_first_name#80, c_last_name#81, c_preferred_cust_flag#82, c_birth_day#83, c_birth_month#84, c_birth_year#85, c_birth_country#86, c_login#87, c_email_address#88, c_last_review_date#89], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : 881033342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 617119120,
                "rowCount" : 2010160
              },
              "compileTime" : {
                "sizeInBytes" : 617119120,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#134 = c_current_addr_sk#76) "
          },
          "0" : {
            "sign" : -1660411016,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 601037840,
                "rowCount" : 2010160
              },
              "compileTime" : {
                "sizeInBytes" : 601037840,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] "
          },
          "2" : {
            "sign" : -1222212500,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 194000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 194000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81] "
          },
          "3" : {
            "sign" : 793210881,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146]\n+- Join Inner, (ca_address_sk#134 = c_current_addr_sk#76)\n   :- Project [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81]\n   :  +- Filter (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76))\n   :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#72,c_customer_id#73,c_current_cdemo_sk#74,c_current_hdemo_sk#75,c_current_addr_sk#76,c_first_shipto_date_sk#77,c_first_sales_date_sk#78,c_salutation#79,c_first_name#80,c_last_name#81,c_preferred_cust_flag#82,c_birth_day#83,c_birth_month#84,c_birth_year#85,c_birth_country#86,c_login#87,c_email_address#88,c_last_review_date#89] parquet\n   +- Project [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146]\n      +- Filter ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134))\n         +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#134,ca_address_id#135,ca_street_number#136,ca_street_name#137,ca_street_type#138,ca_suite_number#139,ca_city#140,ca_county#141,ca_state#142,ca_zip#143,ca_country#144,ca_gmt_offset#145,ca_location_type#146] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 875205573,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 9437184,
            "rowCount" : 31648,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [12]: [ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] Arguments: 6 "
          },
          "1" : {
            "sign" : 627011413,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 617119120,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_addr_sk#76] Right keys [1]: [ca_address_sk#134] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1160412043,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 601037840,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [16]: [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] Input [18]: [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81, ca_address_sk#134, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146] "
          },
          "2" : {
            "sign" : 42266150,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 194000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [6]: [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81] Condition : (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76)) "
          },
          "3" : {
            "sign" : 82651305,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 194000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [6]: [c_customer_sk#72, c_customer_id#73, c_current_addr_sk#76, c_salutation#79, c_first_name#80, c_last_name#81] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)] ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_name:string,c_last_name:string> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#72, c_customer_id#73, c_salutation#79, c_first_name#80, c_last_name#81, ca_street_number#136, ca_street_name#137, ca_street_type#138, ca_suite_number#139, ca_city#140, ca_county#141, ca_state#142, ca_zip#143, ca_country#144, ca_gmt_offset#145, ca_location_type#146]\n+- BroadcastHashJoin [c_current_addr_sk#76], [ca_address_sk#134], Inner, BuildRight, false\n   :- Filter (isnotnull(c_customer_sk#72) AND isnotnull(c_current_addr_sk#76))\n   :  +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#72,c_customer_id#73,c_current_addr_sk#76,c_salutation#79,c_first_name#80,c_last_name#81] Batched: true, DataFilters: [isnotnull(c_customer_sk#72), isnotnull(c_current_addr_sk#76)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...\n   +- BroadcastQueryStage 6\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=490]\n         +- *(5) Filter ((isnotnull(ca_state#142) AND (ca_state#142 = IL)) AND isnotnull(ca_address_sk#134))\n            +- *(5) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#134,ca_street_number#136,ca_street_name#137,ca_street_type#138,ca_suite_number#139,ca_city#140,ca_county#141,ca_state#142,ca_zip#143,ca_country#144,ca_gmt_offset#145,ca_location_type#146] Batched: true, DataFilters: [isnotnull(ca_state#142), (ca_state#142 = IL), isnotnull(ca_address_sk#134)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...\n"
      },
      "IM" : {
        "inputSizeInBytes" : 203437184,
        "inputRowCount" : 2031648
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 4857.0,
        "FinishedTasksDistributionInMs" : [ 1112.0, 1126.0, 1182.0, 1437.0, 1437.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 6244,
        "TotalTasksDurationInMs" : 34481,
        "IOBytes" : {
          "Total" : 41996591,
          "Details" : {
            "IR" : 33612672,
            "IW" : 0,
            "SR" : 0,
            "SW" : 8383919
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227378355,
  "SQLEndTimeInMs" : 1702227399016,
  "Objectives" : {
    "DurationInMs" : 20661,
    "IOBytes" : {
      "Total" : 293860514,
      "Details" : {
        "IR" : 90561971,
        "IW" : 0,
        "SR" : 105915099,
        "SW" : 97383444
      }
    }
  }
}
