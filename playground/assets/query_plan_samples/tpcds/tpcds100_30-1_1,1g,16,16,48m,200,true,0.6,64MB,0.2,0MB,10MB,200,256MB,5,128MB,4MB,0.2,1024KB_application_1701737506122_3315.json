{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "34" : {
          "sign" : 543595436,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73)) "
        },
        "12" : {
          "sign" : -1289321689,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 213763200,
          "rowCount" : 6680100,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
        },
        "8" : {
          "sign" : -542316029,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 233422716,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#1, ca_state#64 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#3] "
        },
        "19" : {
          "sign" : 541426365,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 25210276,
          "rowCount" : 969626,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#56, ca_state#64] "
        },
        "23" : {
          "sign" : -2045591427,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 2014,
          "rowCount" : 53,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [ctr_state#2], [(avg(ctr_total_return#3) * 1.2) AS (avg(ctr_total_return) * 1.2)#105, ctr_state#2 AS ctr_state#2#121] "
        },
        "4" : {
          "sign" : -749193410,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1671392844,
          "rowCount" : 6906582,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#1 = c_customer_sk#69) "
        },
        "15" : {
          "sign" : -956948140,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 989985600,
          "rowCount" : 6874900,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#4, wr_item_sk#5, wr_refunded_customer_sk#6, wr_refunded_cdemo_sk#7, wr_refunded_hdemo_sk#8, wr_refunded_addr_sk#9, wr_returning_customer_sk#10, wr_returning_cdemo_sk#11, wr_returning_hdemo_sk#12, wr_returning_addr_sk#13, wr_web_page_sk#14, wr_reason_sk#15, wr_order_number#16L, wr_return_quantity#17, wr_return_amt#18, wr_return_tax#19, wr_return_amt_inc_tax#20, wr_fee#21, wr_return_ship_cost#22, wr_refunded_cash#23, wr_reversed_charge#24, wr_account_credit#25, wr_net_loss#26, wr_returned_date_sk#27], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : 1632876487,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 160322400,
          "rowCount" : 6680100,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
        },
        "9" : {
          "sign" : -847882840,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 233422716,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
        },
        "33" : {
          "sign" : -751035216,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 468000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
        },
        "22" : {
          "sign" : -523620993,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 2014,
          "rowCount" : 53,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#105) "
        },
        "26" : {
          "sign" : -1082604249,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 288345708,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
        },
        "37" : {
          "sign" : -1329831812,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4417422,
          "rowCount" : 17957,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_state#95) AND (ca_state#95 = IL)) AND isnotnull(ca_address_sk#87)) "
        },
        "13" : {
          "sign" : 49185589,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 175586516,
          "rowCount" : 6270947,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
        },
        "24" : {
          "sign" : 284315014,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 205961220,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#3] "
        },
        "35" : {
          "sign" : 838642660,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 500000000,
          "rowCount" : 2000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#69, c_customer_id#70, c_current_cdemo_sk#71, c_current_hdemo_sk#72, c_current_addr_sk#73, c_first_shipto_date_sk#74, c_first_sales_date_sk#75, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "16" : {
          "sign" : 732514785,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6912,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#28] "
        },
        "5" : {
          "sign" : -1863187001,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 137307480,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#1, ctr_total_return#3] "
        },
        "10" : {
          "sign" : -1051822313,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 288345708,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
        },
        "21" : {
          "sign" : -402689684,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#56, ca_address_id#57, ca_street_number#58, ca_street_name#59, ca_street_type#60, ca_suite_number#61, ca_city#62, ca_county#63, ca_state#64, ca_zip#65, ca_country#66, ca_gmt_offset#67, ca_location_type#68], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "32" : {
          "sign" : 525651421,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 478418080,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#87 = c_current_addr_sk#73) "
        },
        "6" : {
          "sign" : -365551298,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 439383936,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#3 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#105) AND (ctr_state#2 = ctr_state#2#121)) "
        },
        "36" : {
          "sign" : 415023877,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 215484,
          "rowCount" : 17957,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#87] "
        },
        "1" : {
          "sign" : -933002661,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 1616140188,
          "rowCount" : 6906582,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "17" : {
          "sign" : -1273740767,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 141696,
          "rowCount" : 576,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28)) "
        },
        "25" : {
          "sign" : 586796506,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 233422716,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
        },
        "14" : {
          "sign" : 1887694992,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 903016368,
          "rowCount" : 6270947,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#122 [wr_returned_date_sk#27]) "
        },
        "31" : {
          "sign" : 1327966518,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 462336800,
          "rowCount" : 2010160,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
        },
        "0" : {
          "sign" : 860360352,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 20800,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 1824332727,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 238527996,
          "rowCount" : 969626,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64)) "
        },
        "27" : {
          "sign" : 875093817,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 160322400,
          "rowCount" : 6680100,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
        },
        "2" : {
          "sign" : -410518346,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 1616140188,
          "rowCount" : 6906582,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#3 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : 933444959,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#87, ca_address_id#88, ca_street_number#89, ca_street_name#90, ca_street_type#91, ca_suite_number#92, ca_city#93, ca_county#94, ca_state#95, ca_zip#96, ca_country#97, ca_gmt_offset#98, ca_location_type#99], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "18" : {
          "sign" : -1601037564,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#28, d_date_id#29, d_date#30, d_month_seq#31, d_week_seq#32, d_quarter_seq#33, d_year#34, d_dow#35, d_moy#36, d_dom#37, d_qoy#38, d_fy_year#39, d_fy_quarter_seq#40, d_fy_week_seq#41, d_day_name#42, d_quarter_name#43, d_holiday#44, d_weekend#45, d_following_holiday#46, d_first_dom#47, d_last_dom#48, d_same_day_ly#49, d_same_day_lq#50, d_current_day#51, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "30" : {
          "sign" : -734714802,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 945478080,
          "rowCount" : 6565820,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#123 [wr_returned_date_sk#27]) "
        },
        "7" : {
          "sign" : -1822382371,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 233422716,
          "rowCount" : 6865374,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#3) "
        },
        "29" : {
          "sign" : -249033847,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 183842960,
          "rowCount" : 6565820,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
        },
        "3" : {
          "sign" : 1789585839,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1616140188,
          "rowCount" : 6906582,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#3] "
        },
        "28" : {
          "sign" : 1454227801,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 213763200,
          "rowCount" : 6680100,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "LogicalRelation",
        "toId" : 17,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Filter",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "LogicalRelation",
        "toId" : 20,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "Filter",
        "toId" : 19,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Aggregate",
        "toId" : 7,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Join",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Project",
        "toId" : 26,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Join",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 24,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Aggregate",
        "toId" : 23,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Aggregate",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "LogicalRelation",
        "toId" : 34,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Filter",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "LogicalRelation",
        "toId" : 37,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "Filter",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#3 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#3]\n         +- Join Inner, (ctr_customer_sk#1 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#1, ctr_total_return#3]\n            :  +- Join Inner, ((cast(ctr_total_return#3 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#105) AND (ctr_state#2 = ctr_state#2#121))\n            :     :- Filter isnotnull(ctr_total_return#3)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#1, ca_state#64 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#3]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :     :           :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :     :           :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :     :           :     :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#122 [wr_returned_date_sk#27])\n            :     :           :     :     :  +- Project [d_date_sk#28]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :     :           :     +- Project [d_date_sk#28]\n            :     :           :        +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :     :           :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :     :           +- Project [ca_address_sk#56, ca_state#64]\n            :     :              +- Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n            :     :                 +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_address_id#57,ca_street_number#58,ca_street_name#59,ca_street_type#60,ca_suite_number#61,ca_city#62,ca_county#63,ca_state#64,ca_zip#65,ca_country#66,ca_gmt_offset#67,ca_location_type#68] parquet\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#105)\n            :        +- Aggregate [ctr_state#2], [(avg(ctr_total_return#3) * 1.2) AS (avg(ctr_total_return) * 1.2)#105, ctr_state#2 AS ctr_state#2#121]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#2, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#3]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :                    :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :                    :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :                    :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#123 [wr_returned_date_sk#27])\n            :                    :     :     :  +- Project [d_date_sk#28]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :                    :     +- Project [d_date_sk#28]\n            :                    :        +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :                    :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :                    +- Project [ca_address_sk#56, ca_state#64]\n            :                       +- Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n            :                          +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_address_id#57,ca_street_number#58,ca_street_name#59,ca_street_type#60,ca_suite_number#61,ca_city#62,ca_county#63,ca_state#64,ca_zip#65,ca_country#66,ca_gmt_offset#67,ca_location_type#68] parquet\n            +- Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n               +- Join Inner, (ca_address_sk#87 = c_current_addr_sk#73)\n                  :- Project [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n                  :  +- Filter (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73))\n                  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#69,c_customer_id#70,c_current_cdemo_sk#71,c_current_hdemo_sk#72,c_current_addr_sk#73,c_first_shipto_date_sk#74,c_first_sales_date_sk#75,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86] parquet\n                  +- Project [ca_address_sk#87]\n                     +- Filter ((isnotnull(ca_state#95) AND (ca_state#95 = IL)) AND isnotnull(ca_address_sk#87))\n                        +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#87,ca_address_id#88,ca_street_number#89,ca_street_name#90,ca_street_type#91,ca_suite_number#92,ca_city#93,ca_county#94,ca_state#95,ca_zip#96,ca_country#97,ca_gmt_offset#98,ca_location_type#99] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 3253911308,
      "inputRowCount" : 18895898
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "8" : {
            "sign" : -920141231,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "4" : {
            "sign" : 157900606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 395129210867392,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "11" : {
            "sign" : 756966553,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50828560,
            "rowCount" : 1270714,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "9" : {
            "sign" : 904785518,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 62123795,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "5" : {
            "sign" : 1536073788,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 29723767,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : -305173568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 62123795,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "6" : {
            "sign" : 297719545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 112950315,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 1356267345,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 380494795650081,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -408099306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1505282240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 380494795650081,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -460533264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 775044232,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 380494795650081,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 114948456,
        "inputRowCount" : 2605120
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226852510,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3802,
        "IOBytes" : {
          "Total" : 45371433,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 45367068,
            "SW" : 4365
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -1236782413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 88774909535001200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "19" : {
            "sign" : 1372296461,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5 "
          },
          "4" : {
            "sign" : 403347045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 668233976589365941721664,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "15" : {
            "sign" : 1451639062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 83654361752824800,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "11" : {
            "sign" : -1713482114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 54933495720,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 1344926587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 88774909535001200,
            "rowCount" : 2219372738375030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "13" : {
            "sign" : -1042332501,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 102244219920119200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "16" : {
            "sign" : -1095695048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 92949290836472000,
            "rowCount" : 2323732270911800,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "5" : {
            "sign" : -94607737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 50268191961873789,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : -1841973738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 106529891442001440,
            "rowCount" : 2219372738375030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "6" : {
            "sign" : -593013174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 191019129455120400,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 2017412316,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 643484570049019054991232,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -634055439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 111539149003766400,
            "rowCount" : 2323732270911800,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "14" : {
            "sign" : 1788255999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 102244219920119200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "0" : {
            "sign" : 26693949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "2" : {
            "sign" : -548353689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 643484570049019054991232,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1713482083,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 57516583200,
            "rowCount" : 2396524300,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : 1616702386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 88774909535001200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 839099283,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 643484570049019054991232,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 112525428360,
        "inputRowCount" : 4687422950
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 30,
        "FinishedTasksTotalTimeInMs" : 53662.0,
        "FinishedTasksDistributionInMs" : [ 341.0, 463.0, 728.0, 2950.0, 5632.0 ]
      },
      "StartTimeInMs" : 1702226845510,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10802,
        "IOBytes" : {
          "Total" : 237710643,
          "Details" : {
            "IR" : 40250536,
            "IW" : 0,
            "SR" : 110645594,
            "SW" : 86814513
          }
        }
      }
    },
    "11" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : 2021685324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4417344005040,
            "rowCount" : 20450666690,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "5" : {
            "sign" : -743788106,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 32777048,
            "rowCount" : 320830,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ctr_customer_sk#125, ctr_total_return#127], BroadcastQueryStage 14 "
          },
          "6" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "1" : {
            "sign" : -1547765225,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4253738671520,
            "rowCount" : 20450666690,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -2100013276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1984016846,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4253738671520,
            "rowCount" : 20450666690,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 1435269326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4253738671520,
            "rowCount" : 20450666690,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- LogicalQueryStage Project [ctr_customer_sk#125, ctr_total_return#127], BroadcastQueryStage 14\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 46070424,
        "inputRowCount" : 384573
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226855596,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 716,
        "IOBytes" : {
          "Total" : 6767771,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 6767771,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -920141231,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "4" : {
            "sign" : 937511825,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 892250521644744,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "11" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "9" : {
            "sign" : -2049209285,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2244,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "5" : {
            "sign" : -322489363,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1296076260,
            "rowCount" : 64803813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : 104204467,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2856,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158], HashAggregate(keys=[ctr_state#126], functions=[avg(ctr_total_return#127)]) "
          },
          "6" : {
            "sign" : -2038933972,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4925089788,
            "rowCount" : 64803813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : -43292206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 859204206028272,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1961625449,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 529462547,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 859204206028272,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -460533264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 9536763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 859204206028272,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- LogicalQueryStage Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158], HashAggregate(keys=[ctr_state#126], functions=[avg(ctr_total_return#127)])\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 64122752,
        "inputRowCount" : 1334457
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226853931,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2381,
        "IOBytes" : {
          "Total" : 26069157,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 26069157,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -1236782413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 88774909535001200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "19" : {
            "sign" : 1372296461,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5 "
          },
          "4" : {
            "sign" : 403347045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 310757765399895043332032,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "15" : {
            "sign" : 1451639062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 46853891357112,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "11" : {
            "sign" : -1713482114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 54933495720,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 1344926587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 88774909535001200,
            "rowCount" : 2219372738375030,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "13" : {
            "sign" : -1042332501,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 57265867214248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "16" : {
            "sign" : -1095695048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 52059879285680,
            "rowCount" : 1301496982142,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "5" : {
            "sign" : -94607737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 23376888263740907,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : -1841973738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 106529891442001440,
            "rowCount" : 2219372738375030,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "6" : {
            "sign" : -593013174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 88832175402215448,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 2017412316,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 299248218533232263949364,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -634055439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 62471855142816,
            "rowCount" : 1301496982142,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "14" : {
            "sign" : 1788255999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 57265867214248,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "0" : {
            "sign" : 26693949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "2" : {
            "sign" : -548353689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 299248218533232263949364,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1713482083,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 42952544,
            "rowCount" : 1342267,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : 1616702386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 88774909535001200,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 839099283,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 299248218533232263949364,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 55051797704,
        "inputRowCount" : 2292240917
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ],
        "3" : [ 130614, 126774, 125762, 128817, 126788, 127386, 125594, 126469, 125535, 132120, 130415, 127613, 129020, 126821, 124842, 128178, 127840, 127680, 127481, 128772, 127034, 129708, 126540, 128178, 123972, 130280, 126457, 131172, 130021, 127041, 129117, 124963, 124000, 129857, 128110, 127684, 130316, 125029, 123026, 125551, 124968, 126807, 126136, 131465, 126355, 124896, 127549, 130124, 129233, 124752, 126391, 128682, 123582, 125613, 123837, 127015, 125821, 125688, 127180, 126405, 125232, 125979, 123341, 130202, 127353, 125956, 129985, 127268, 128554, 129065, 128455, 123395, 128275, 129422, 126613, 125178, 129474, 128327, 129772, 128337, 122532, 124253, 128476, 122274, 128838, 125080, 127826, 125322, 130039, 128540, 128121, 129812, 124894, 128767, 129079, 130046, 128767, 121340, 124126, 124750, 122196, 130916, 126245, 127183, 126764, 124461, 125719, 130976, 124896, 125847, 129027, 125583, 124594, 127549, 127140, 130966, 123043, 126802, 127549, 124601, 123123, 128124, 132742, 125956, 135558, 131588, 128730, 124473, 127251, 126866, 125752, 128540, 123863, 126131, 125466, 126885, 130746, 127218, 126249, 131395, 125750, 127481, 123211, 129630, 130668, 125911, 124859, 129623, 129623, 126942, 127426, 122830, 129297, 127989, 126956, 128029, 125552, 129318, 129528, 125407, 125194, 126121, 126757, 127570, 128540, 128902, 129391, 126720, 127275, 128980, 128902, 131207, 129396, 125180, 127183, 124095, 125821, 120943, 127599, 128306, 129105, 133910, 124199, 126835, 131311, 129460, 132316, 126405, 125029, 124360, 128841, 125762, 126507, 123468, 126334, 126322, 131484, 125367, 127183, 129151 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 15,
        "FinishedTasksTotalTimeInMs" : 42761.0,
        "FinishedTasksDistributionInMs" : [ 341.0, 524.0, 2950.0, 4336.0, 5632.0 ]
      },
      "StartTimeInMs" : 1702226846005,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10307,
        "IOBytes" : {
          "Total" : 193345034,
          "Details" : {
            "IR" : 20129636,
            "IW" : 0,
            "SR" : 110645594,
            "SW" : 62569804
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -920141231,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "4" : {
            "sign" : -2096245786,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 892250521644744,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "9" : {
            "sign" : -39998088,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33556480,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull((avg(ctr_total_return) * 1.2)#143), BroadcastQueryStage 13 "
          },
          "5" : {
            "sign" : -110484730,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1296076260,
            "rowCount" : 64803813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : -449468643,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4925089788,
            "rowCount" : 64803813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 2018181851,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 859204206028272,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1489604926,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 810116008,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 859204206028272,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -460533264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : -997708078,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 859204206028272,
            "rowCount" : 4130789452059,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            :     +- LogicalQueryStage Filter isnotnull((avg(ctr_total_return) * 1.2)#143), BroadcastQueryStage 13\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 97676376,
        "inputRowCount" : 1334457
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226854126,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 2186,
        "IOBytes" : {
          "Total" : 26064792,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 26064792,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -1236782413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 51434819581040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "4" : {
            "sign" : 1362308792,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 179932209528857939520,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "15" : {
            "sign" : 756966553,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7643130,
            "rowCount" : 254771,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "11" : {
            "sign" : -1713482114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 42436832,
            "rowCount" : 1326151,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 1344926587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 51434819581040,
            "rowCount" : 1285870489526,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "13" : {
            "sign" : 904785518,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "16" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "5" : {
            "sign" : -1904093430,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 13535478837645,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : -1841973738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 61721783497248,
            "rowCount" : 1285870489526,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "6" : {
            "sign" : -744230837,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 51434819583054,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : -641391061,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 173268053620381719537,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "14" : {
            "sign" : -305173568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "0" : {
            "sign" : -52463984,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 802805818,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 173268053620381719537,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1616702386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 51434819581040,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 1240172514,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 173268053620381719537,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalQueryStage",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 94401370,
        "inputRowCount" : 2614291
      },
      "PD" : {
        "2" : [ 130174, 125055, 124906, 128817, 126010, 125180, 123314, 125613, 123823, 130621, 129772, 125965, 127734, 126043, 123615, 126615, 125485, 126394, 125833, 126566, 125109, 129708, 125244, 125674, 123116, 129502, 124745, 131172, 129538, 125485, 127469, 123017, 124000, 128358, 125258, 126828, 128313, 122454, 121612, 124610, 122750, 126029, 125280, 129025, 124267, 124118, 126906, 129481, 127228, 122955, 125748, 126970, 121355, 122494, 122690, 127015, 124322, 124189, 121976, 125322, 121477, 122333, 122485, 130202, 125828, 125100, 128337, 123279, 126672, 127481, 125887, 121839, 126048, 127497, 125050, 124471, 128767, 127285, 129772, 127694, 121676, 122433, 128077, 120775, 127982, 123368, 126970, 124615, 129261, 126270, 123688, 126743, 123246, 127743, 127580, 127457, 126131, 120562, 123270, 124043, 120191, 129034, 124027, 125041, 126121, 122813, 123993, 129143, 123482, 125847, 127677, 123702, 124594, 127549, 125849, 128604, 121409, 124312, 126128, 123374, 121560, 127481, 129836, 124660, 133676, 130810, 127096, 122033, 124896, 125232, 124118, 126977, 123863, 125353, 124759, 125464, 129890, 126277, 125393, 128742, 124894, 124984, 123211, 127833, 130668, 124199, 124859, 127684, 128767, 124724, 126719, 122187, 127663, 127133, 126956, 125438, 123618, 127684, 128178, 122338, 123780, 126121, 126050, 126927, 126956, 126121, 127807, 125864, 124492, 124199, 126540, 129708, 126892, 125180, 126540, 124095, 123026, 120087, 126892, 126114, 126977, 130479, 123615, 125272, 131311, 126308, 129890, 123882, 124589, 123582, 126614, 124050, 124339, 123468, 124135, 125381, 127247, 124589, 126327, 128668 ],
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226846272,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 10040,
        "IOBytes" : {
          "Total" : 149244891,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 110645594,
            "SW" : 38599297
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "34" : {
            "sign" : -751035216,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 468000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
          },
          "12" : {
            "sign" : -1182126050,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 213763200,
            "rowCount" : 6680100,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
          },
          "8" : {
            "sign" : -1864765015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "19" : {
            "sign" : -1424883994,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#28], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -261138935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 205961220,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "4" : {
            "sign" : 1231493418,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1671392844,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "15" : {
            "sign" : -956948140,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 989985600,
            "rowCount" : 6874900,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#4, wr_item_sk#5, wr_refunded_customer_sk#6, wr_refunded_cdemo_sk#7, wr_refunded_hdemo_sk#8, wr_refunded_addr_sk#9, wr_returning_customer_sk#10, wr_returning_cdemo_sk#11, wr_returning_hdemo_sk#12, wr_returning_addr_sk#13, wr_web_page_sk#14, wr_reason_sk#15, wr_order_number#16L, wr_return_quantity#17, wr_return_amt#18, wr_return_tax#19, wr_return_amt_inc_tax#20, wr_fee#21, wr_return_ship_cost#22, wr_refunded_cash#23, wr_reversed_charge#24, wr_account_credit#25, wr_net_loss#26, wr_returned_date_sk#27], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : 1043734172,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 160322400,
            "rowCount" : 6680100,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
          },
          "9" : {
            "sign" : -2026574359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "33" : {
            "sign" : 1840968793,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 15064448000000,
            "rowCount" : 63296000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#128 = c_current_addr_sk#73) "
          },
          "22" : {
            "sign" : -886147850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "26" : {
            "sign" : 1439705874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 160322400,
            "rowCount" : 6680100,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
          },
          "37" : {
            "sign" : 135221129,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 2097152,
            "rowCount" : 31648,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#128], BroadcastQueryStage 6 "
          },
          "13" : {
            "sign" : -2045343919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175586516,
            "rowCount" : 6270947,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
          },
          "24" : {
            "sign" : -745981009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "35" : {
            "sign" : 543595436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73)) "
          },
          "16" : {
            "sign" : 732514785,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#28] "
          },
          "5" : {
            "sign" : 1461937126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 137307480,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : 1259297446,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "21" : {
            "sign" : -880626402,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "32" : {
            "sign" : 531315512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14558080000000,
            "rowCount" : 63296000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
          },
          "6" : {
            "sign" : -1767674417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 439383936,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "36" : {
            "sign" : 838642660,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 500000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#69, c_customer_id#70, c_current_cdemo_sk#71, c_current_hdemo_sk#72, c_current_addr_sk#73, c_first_shipto_date_sk#74, c_first_sales_date_sk#75, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1448531645,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1273740767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28)) "
          },
          "25" : {
            "sign" : -1784470940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "14" : {
            "sign" : 1968979628,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 903016368,
            "rowCount" : 6270947,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27]) "
          },
          "31" : {
            "sign" : 1372296461,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5 "
          },
          "0" : {
            "sign" : -1548744750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          },
          "27" : {
            "sign" : 1999788062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 213763200,
            "rowCount" : 6680100,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
          },
          "2" : {
            "sign" : 903129768,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1601037564,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#28, d_date_id#29, d_date#30, d_month_seq#31, d_week_seq#32, d_quarter_seq#33, d_year#34, d_dow#35, d_moy#36, d_dom#37, d_qoy#38, d_fy_year#39, d_fy_quarter_seq#40, d_fy_week_seq#41, d_day_name#42, d_quarter_name#43, d_holiday#44, d_weekend#45, d_following_holiday#46, d_first_dom#47, d_last_dom#48, d_same_day_ly#49, d_same_day_lq#50, d_current_day#51, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -1424883901,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#28], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 877628050,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "29" : {
            "sign" : -1108806795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 945478080,
            "rowCount" : 6565820,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27]) "
          },
          "3" : {
            "sign" : -894939974,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          },
          "28" : {
            "sign" : 781408304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183842960,
            "rowCount" : 6565820,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalRelation",
          "toId" : 35,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Filter",
          "toId" : 34,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalQueryStage",
          "toId" : 33,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Join",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :     :           :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :     :           :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :     :           :     :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27])\n            :     :           :     :     :  +- Project [d_date_sk#28]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :                    :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :                    :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :                    :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n            :                    :     :     :  +- Project [d_date_sk#28]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n            +- Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n               +- Join Inner, (ca_address_sk#128 = c_current_addr_sk#73)\n                  :- Project [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n                  :  +- Filter (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73))\n                  :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#69,c_customer_id#70,c_current_cdemo_sk#71,c_current_hdemo_sk#72,c_current_addr_sk#73,c_first_shipto_date_sk#74,c_first_sales_date_sk#75,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86] parquet\n                  +- LogicalQueryStage Project [ca_address_sk#128], BroadcastQueryStage 6\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2532502728,
        "inputRowCount" : 17721852
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6635.0,
        "FinishedTasksDistributionInMs" : [ 1354.0, 1656.0, 1809.0, 1816.0, 1816.0 ]
      },
      "StartTimeInMs" : 1702226830072,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 26240,
        "IOBytes" : {
          "Total" : 347335144,
          "Details" : {
            "IR" : 134575611,
            "IW" : 0,
            "SR" : 110645594,
            "SW" : 102113939
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1182126050,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 73244660960,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
          },
          "8" : {
            "sign" : -1864765015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "19" : {
            "sign" : -1424883994,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#28], BroadcastQueryStage 0 "
          },
          "23" : {
            "sign" : -261138935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7643130,
            "rowCount" : 254771,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "4" : {
            "sign" : -909960782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1671392844,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "15" : {
            "sign" : -956948140,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 989985600,
            "rowCount" : 6874900,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#4, wr_item_sk#5, wr_refunded_customer_sk#6, wr_refunded_cdemo_sk#7, wr_refunded_hdemo_sk#8, wr_refunded_addr_sk#9, wr_returning_customer_sk#10, wr_returning_cdemo_sk#11, wr_returning_hdemo_sk#12, wr_returning_addr_sk#13, wr_web_page_sk#14, wr_reason_sk#15, wr_order_number#16L, wr_return_quantity#17, wr_return_amt#18, wr_return_tax#19, wr_return_amt_inc_tax#20, wr_fee#21, wr_return_ship_cost#22, wr_refunded_cash#23, wr_reversed_charge#24, wr_account_credit#25, wr_net_loss#26, wr_returned_date_sk#27], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : 1043734172,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 54933495720,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
          },
          "9" : {
            "sign" : -2026574359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "22" : {
            "sign" : -886147850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "26" : {
            "sign" : 1439705874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 57516583200,
            "rowCount" : 2396524300,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
          },
          "13" : {
            "sign" : -2045343919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 175586516,
            "rowCount" : 6270947,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
          },
          "24" : {
            "sign" : -745981009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "16" : {
            "sign" : 732514785,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#28] "
          },
          "5" : {
            "sign" : 1461937126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5094360,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : 1259297446,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "21" : {
            "sign" : -880626402,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "32" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 462336800,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "6" : {
            "sign" : -1767674417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16301952,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 898074289,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -1273740767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 141696,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28)) "
          },
          "25" : {
            "sign" : -1784470940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "14" : {
            "sign" : 1968979628,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 903016368,
            "rowCount" : 6270947,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27]) "
          },
          "31" : {
            "sign" : 1372296461,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5 "
          },
          "0" : {
            "sign" : -878230182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          },
          "27" : {
            "sign" : 1999788062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 76688777600,
            "rowCount" : 2396524300,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
          },
          "2" : {
            "sign" : 2110866352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1601037564,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#28, d_date_id#29, d_date#30, d_month_seq#31, d_week_seq#32, d_quarter_seq#33, d_year#34, d_dow#35, d_moy#36, d_dom#37, d_qoy#38, d_fy_year#39, d_fy_quarter_seq#40, d_fy_week_seq#41, d_day_name#42, d_quarter_name#43, d_holiday#44, d_weekend#45, d_following_holiday#46, d_first_dom#47, d_last_dom#48, d_same_day_ly#49, d_same_day_lq#50, d_current_day#51, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "30" : {
            "sign" : -1424883901,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#28], BroadcastQueryStage 3 "
          },
          "7" : {
            "sign" : 877628050,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "29" : {
            "sign" : -1108806795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 945478080,
            "rowCount" : 6565820,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27]) "
          },
          "3" : {
            "sign" : 864692506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          },
          "28" : {
            "sign" : 781408304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 183842960,
            "rowCount" : 6565820,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalRelation",
          "toId" : 17,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Filter",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Aggregate",
          "toId" : 22,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Aggregate",
          "toId" : 21,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :     :           :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :     :           :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :     :           :     :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27])\n            :     :           :     :     :  +- Project [d_date_sk#28]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :                    :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :                    :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :                    :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n            :                    :     :     :  +- Project [d_date_sk#28]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2494831544,
        "inputRowCount" : 17699942
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 11,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 8505.0,
        "FinishedTasksDistributionInMs" : [ 43.0, 294.0, 549.0, 1656.0, 1816.0 ]
      },
      "StartTimeInMs" : 1702226830782,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 25530,
        "IOBytes" : {
          "Total" : 347241582,
          "Details" : {
            "IR" : 134482049,
            "IW" : 0,
            "SR" : 110645594,
            "SW" : 102113939
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "8" : {
            "sign" : -920141231,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "4" : {
            "sign" : 157900606,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 17495108267544,
            "rowCount" : 80995871609,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "11" : {
            "sign" : 756966553,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7643130,
            "rowCount" : 254771,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))]) "
          },
          "9" : {
            "sign" : 904785518,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "5" : {
            "sign" : 1536073788,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 25413260,
            "rowCount" : 1270663,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : -305173568,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "6" : {
            "sign" : 297719545,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 88946410,
            "rowCount" : 1270663,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 1356267345,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 16847141294672,
            "rowCount" : 80995871609,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -408099306,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1505282240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 16847141294672,
            "rowCount" : 80995871609,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : -460533264,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 775044232,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 16847141294672,
            "rowCount" : 80995871609,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Aggregate",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- LogicalQueryStage Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127], HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))])\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 71763026,
        "inputRowCount" : 1589177
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226850126,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6186,
        "IOBytes" : {
          "Total" : 97445708,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 78143432,
            "SW" : 19302276
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          },
          "8" : {
            "sign" : -1236782413,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "19" : {
            "sign" : 1372296461,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5 "
          },
          "4" : {
            "sign" : 403347045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3507081726384,
            "rowCount" : 16236489474,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "15" : {
            "sign" : 1451639062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7643130,
            "rowCount" : 254771,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "11" : {
            "sign" : -1713482114,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 54933495720,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8 "
          },
          "9" : {
            "sign" : 1344926587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "13" : {
            "sign" : -1042332501,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "16" : {
            "sign" : -1095695048,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "5" : {
            "sign" : -94607737,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5094360,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "10" : {
            "sign" : -1841973738,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "6" : {
            "sign" : -593013174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 16301952,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "1" : {
            "sign" : 2017412316,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 3377189810592,
            "rowCount" : 16236489474,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "17" : {
            "sign" : -634055439,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "14" : {
            "sign" : 1788255999,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "0" : {
            "sign" : 26693949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "2" : {
            "sign" : -548353689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 3377189810592,
            "rowCount" : 16236489474,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "18" : {
            "sign" : -1713482083,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 57516583200,
            "rowCount" : 2396524300,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 9 "
          },
          "7" : {
            "sign" : 1616702386,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : 839099283,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3377189810592,
            "rowCount" : 16236489474,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 15,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Aggregate",
          "toId" : 14,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 14,
          "fromName" : "Aggregate",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 8\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- LogicalQueryStage Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18], ShuffleQueryStage 9\n            :                    +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "IM" : {
        "inputSizeInBytes" : 112513792848,
        "inputRowCount" : 4687422950
      },
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 3,
        "FinishedTasksNum" : 34,
        "FinishedTasksTotalTimeInMs" : 60297.0,
        "FinishedTasksDistributionInMs" : [ 341.0, 493.0, 1354.0, 2498.0, 5632.0 ]
      },
      "StartTimeInMs" : 1702226837023,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 19289,
        "IOBytes" : {
          "Total" : 251074934,
          "Details" : {
            "IR" : 45083172,
            "IW" : 0,
            "SR" : 110645594,
            "SW" : 95346168
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -886147850,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              },
              "compileTime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          }
        },
        "links" : [ ],
        "rawPlan" : "Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n+- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n   +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n      +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n         :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n         :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n         :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n         :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n         :     :     :  +- Project [d_date_sk#28]\n         :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n         :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n         :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n         :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n         +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1740042276,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ctr_state#126, ctr_total_return#127] Keys [1]: [ctr_state#126] Functions [1]: [partial_avg(ctr_total_return#127)] Aggregate Attributes [2]: [sum#163, count#164L] Results [3]: [ctr_state#126, sum#165, count#166L] "
          },
          "1" : {
            "sign" : 161248449,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 50828560,
            "rowCount" : 1270714,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [wr_returning_customer_sk#10, ca_state#64, sum#168L] Keys [2]: [wr_returning_customer_sk#10, ca_state#64] Functions [1]: [sum(UnscaledValue(wr_return_amt#18))] Aggregate Attributes [1]: [sum(UnscaledValue(wr_return_amt#18))#141L] Results [2]: [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18))#141L,17,2) AS ctr_total_return#127] "
          },
          "2" : {
            "sign" : -1813550870,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 7643130,
            "rowCount" : 254771,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [wr_returning_customer_sk#10, ca_state#64, sum#168L] Arguments: 10 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[ctr_state#126], functions=[partial_avg(ctr_total_return#127)], output=[ctr_state#126, sum#165, count#166L])\n+- HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))], output=[ctr_state#126, ctr_total_return#127])\n   +- ShuffleQueryStage 10\n      +- Exchange hashpartitioning(wr_returning_customer_sk#10, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=1480]\n         +- *(11) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#168L])\n            +- *(11) Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n               +- *(11) SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n                  :- *(9) Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                  :  +- AQEShuffleRead coalesced\n                  :     +- ShuffleQueryStage 9\n                  :        +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1089]\n                  :           +- *(8) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n                  :              +- *(8) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n                  :                 :- *(8) Filter isnotnull(wr_returning_addr_sk#13)\n                  :                 :  +- *(8) ColumnarToRow\n                  :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n                  :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n                  :                 +- BroadcastQueryStage 3\n                  :                    +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                  +- *(10) Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n                     +- AQEShuffleRead coalesced\n                        +- ShuffleQueryStage 5\n                           +- ReusedExchange [ca_address_sk#56, ca_state#64], Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 50828560,
        "inputRowCount" : 1270714
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "4" : [ 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979, 101979 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 1343,
        "TotalTasksDurationInMs" : 1335,
        "IOBytes" : {
          "Total" : 19302276,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 19297911,
            "SW" : 4365
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -956948140,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 989985600,
                "rowCount" : 6874900
              },
              "compileTime" : {
                "sizeInBytes" : 989985600,
                "rowCount" : 6874900
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#4, wr_item_sk#5, wr_refunded_customer_sk#6, wr_refunded_cdemo_sk#7, wr_refunded_hdemo_sk#8, wr_refunded_addr_sk#9, wr_returning_customer_sk#10, wr_returning_cdemo_sk#11, wr_returning_hdemo_sk#12, wr_returning_addr_sk#13, wr_web_page_sk#14, wr_reason_sk#15, wr_order_number#16L, wr_return_quantity#17, wr_return_amt#18, wr_return_tax#19, wr_return_amt_inc_tax#20, wr_fee#21, wr_return_ship_cost#22, wr_refunded_cash#23, wr_reversed_charge#24, wr_account_credit#25, wr_net_loss#26, wr_returned_date_sk#27], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1424883994,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1051496,
                "rowCount" : 365
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#28], BroadcastQueryStage 0 "
          },
          "1" : {
            "sign" : -1182126050,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 73244660960,
                "rowCount" : 2288895655
              },
              "compileTime" : {
                "sizeInBytes" : 73244660960,
                "rowCount" : 2288895655
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
          },
          "0" : {
            "sign" : 1043734172,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 54933495720,
                "rowCount" : 2288895655
              },
              "compileTime" : {
                "sizeInBytes" : 54933495720,
                "rowCount" : 2288895655
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
          },
          "2" : {
            "sign" : -2045343919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 175586516,
                "rowCount" : 6270947
              },
              "compileTime" : {
                "sizeInBytes" : 175586516,
                "rowCount" : 6270947
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
          },
          "3" : {
            "sign" : 1968979628,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 903016368,
                "rowCount" : 6270947
              },
              "compileTime" : {
                "sizeInBytes" : 903016368,
                "rowCount" : 6270947
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n+- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n   :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n   :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27])\n   :     :  +- Project [d_date_sk#28]\n   :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n   +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 0\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 1534130876,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#28] Arguments: 0 "
          },
          "1" : {
            "sign" : -1498555209,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 73244660960,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [wr_returned_date_sk#27] Right keys [1]: [d_date_sk#28] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -431104417,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 54933495720,
            "rowCount" : 2288895655,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] Input [5]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27, d_date_sk#28] "
          },
          "2" : {
            "sign" : 1440771652,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 175586516,
            "rowCount" : 6270947,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] Condition : (isnotnull(wr_returning_addr_sk#13) AND isnotnull(wr_returning_customer_sk#10)) "
          },
          "3" : {
            "sign" : 1900575028,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 175586516,
            "rowCount" : 6270947,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_returns Output [4]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns/wr_returned_date_sk=2450821, ... 2178 entries] PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpruning#159)] PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)] ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_returns",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n+- BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n   :- Filter (isnotnull(wr_returning_addr_sk#13) AND isnotnull(wr_returning_customer_sk#10))\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13), isnotnull(wr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n   :        +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n   :           +- AdaptiveSparkPlan isFinalPlan=false\n   :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1005]\n   :                 +- Project [d_date_sk#28]\n   :                    +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n         +- *(1) Project [d_date_sk#28]\n            +- *(1) Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 176638012,
        "inputRowCount" : 6271312
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 10,
        "FinishedTasksNum" : 11,
        "FinishedTasksTotalTimeInMs" : 9082.0,
        "FinishedTasksDistributionInMs" : [ 43.0, 294.0, 549.0, 1656.0, 1816.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 15097,
        "TotalTasksDurationInMs" : 57844,
        "IOBytes" : {
          "Total" : 44100143,
          "Details" : {
            "IR" : 20129636,
            "IW" : 0,
            "SR" : 0,
            "SW" : 23970507
          }
        }
      }
    },
    "11" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -909960782,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1671392844,
                "rowCount" : 6906582
              },
              "compileTime" : {
                "sizeInBytes" : 1671392844,
                "rowCount" : 6906582
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ctr_customer_sk#125 = c_customer_sk#69) "
          },
          "5" : {
            "sign" : 1520064732,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 13293376,
                "rowCount" : 63743
              },
              "compileTime" : {
                "sizeInBytes" : 462336800,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7 "
          },
          "1" : {
            "sign" : 898074289,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1616140188,
                "rowCount" : 6906582
              },
              "compileTime" : {
                "sizeInBytes" : 1616140188,
                "rowCount" : 6906582
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : -878230182,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20800,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 20800,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2110866352,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1616140188,
                "rowCount" : 6906582
              },
              "compileTime" : {
                "sizeInBytes" : 1616140188,
                "rowCount" : 6906582
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : 864692506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1616140188,
                "rowCount" : 6906582
              },
              "compileTime" : {
                "sizeInBytes" : 1616140188,
                "rowCount" : 6906582
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], true\n      +- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n         +- Join Inner, (ctr_customer_sk#125 = c_customer_sk#69)\n            :- Project [ctr_customer_sk#125, ctr_total_return#127]\n            :  +- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n            :     :- Filter isnotnull(ctr_total_return#127)\n            :     :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :     :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :     :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :     :           :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :     :           :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :     :           :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :     :           :     :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27])\n            :     :           :     :     :  +- Project [d_date_sk#28]\n            :     :           :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :     :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n            :     +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            :        +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n            :           +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            :              +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n            :                 +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :                    :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :                    :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :                    :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :                    :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n            :                    :     :     :  +- Project [d_date_sk#28]\n            :                    :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :                    :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :                    :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :                    :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n            :                    +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n            +- LogicalQueryStage Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], ShuffleQueryStage 7\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -40054892,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 13293376,
            "rowCount" : 63743,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [13]: [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] Arguments: 7 "
          },
          "1" : {
            "sign" : -2040708258,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1616140188,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [13]: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] Input [15]: [ctr_customer_sk#125, ctr_total_return#127, c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
          },
          "0" : {
            "sign" : 204892265,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 20800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [13]: [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] Arguments: 100, [c_customer_id#70 ASC NULLS FIRST, c_salutation#76 ASC NULLS FIRST, c_first_name#77 ASC NULLS FIRST, c_last_name#78 ASC NULLS FIRST, c_preferred_cust_flag#79 ASC NULLS FIRST, c_birth_day#80 ASC NULLS FIRST, c_birth_month#81 ASC NULLS FIRST, c_birth_year#82 ASC NULLS FIRST, c_birth_country#83 ASC NULLS FIRST, c_login#84 ASC NULLS FIRST, c_email_address#85 ASC NULLS FIRST, c_last_review_date#86 ASC NULLS FIRST, ctr_total_return#127 ASC NULLS FIRST], [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127] "
          },
          "2" : {
            "sign" : 793238202,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1671392844,
            "rowCount" : 6906582,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ctr_customer_sk#125] Right keys [1]: [c_customer_sk#69] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -1826085327,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 32777048,
            "rowCount" : 320830,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [ctr_customer_sk#125, ctr_total_return#127] Arguments: 14 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#70 ASC NULLS FIRST,c_salutation#76 ASC NULLS FIRST,c_first_name#77 ASC NULLS FIRST,c_last_name#78 ASC NULLS FIRST,c_preferred_cust_flag#79 ASC NULLS FIRST,c_birth_day#80 ASC NULLS FIRST,c_birth_month#81 ASC NULLS FIRST,c_birth_year#82 ASC NULLS FIRST,c_birth_country#83 ASC NULLS FIRST,c_login#84 ASC NULLS FIRST,c_email_address#85 ASC NULLS FIRST,c_last_review_date#86 ASC NULLS FIRST,ctr_total_return#127 ASC NULLS FIRST], output=[c_customer_id#70,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86,ctr_total_return#127])\n+- Project [c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ctr_total_return#127]\n   +- BroadcastHashJoin [ctr_customer_sk#125], [c_customer_sk#69], Inner, BuildLeft, false\n      :- BroadcastQueryStage 14\n      :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1897]\n      :     +- *(17) Project [ctr_customer_sk#125, ctr_total_return#127]\n      :        +- *(17) BroadcastHashJoin [ctr_state#126], [ctr_state#126#158], Inner, BuildRight, (cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143), false\n      :           :- *(17) Filter isnotnull(ctr_total_return#127)\n      :           :  +- *(17) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))], output=[ctr_customer_sk#125, ctr_state#126, ctr_total_return#127])\n      :           :     +- AQEShuffleRead coalesced\n      :           :        +- ShuffleQueryStage 11\n      :           :           +- Exchange hashpartitioning(wr_returning_customer_sk#10, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=1619]\n      :           :              +- *(14) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#162L])\n      :           :                 +- *(14) Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n      :           :                    +- *(14) SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n      :           :                       :- *(12) Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :           :                       :  +- AQEShuffleRead coalesced\n      :           :                       :     +- ShuffleQueryStage 8\n      :           :                       :        +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1034]\n      :           :                       :           +- *(7) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n      :           :                       :              +- *(7) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n      :           :                       :                 :- *(7) Filter (isnotnull(wr_returning_addr_sk#13) AND isnotnull(wr_returning_customer_sk#10))\n      :           :                       :                 :  +- *(7) ColumnarToRow\n      :           :                       :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13), isnotnull(wr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n      :           :                       :                 :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n      :           :                       :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                              +- == Final Plan ==\n                                                                                 BroadcastQueryStage 1\n                                                                                 +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                                              +- == Initial Plan ==\n                                                                                 BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1005]\n                                                                                 +- Project [d_date_sk#28]\n                                                                                    +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n                                                                                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :           :                       :                 +- BroadcastQueryStage 0\n      :           :                       :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      :           :                       :                       +- *(1) Project [d_date_sk#28]\n      :           :                       :                          +- *(1) Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n      :           :                       :                             +- *(1) ColumnarToRow\n      :           :                       :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :           :                       +- *(13) Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n      :           :                          +- AQEShuffleRead coalesced\n      :           :                             +- ShuffleQueryStage 1\n      :           :                                +- Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n      :           :                                   +- *(2) Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n      :           :                                      +- *(2) ColumnarToRow\n      :           :                                         +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_state#64] Batched: true, DataFilters: [isnotnull(ca_address_sk#56), isnotnull(ca_state#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n      :           +- BroadcastQueryStage 13\n      :              +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=1834]\n      :                 +- *(16) Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n      :                    +- *(16) HashAggregate(keys=[ctr_state#126], functions=[avg(ctr_total_return#127)], output=[(avg(ctr_total_return) * 1.2)#143, ctr_state#126#158])\n      :                       +- AQEShuffleRead coalesced\n      :                          +- ShuffleQueryStage 12\n      :                             +- Exchange hashpartitioning(ctr_state#126, 200), ENSURE_REQUIREMENTS, [plan_id=1760]\n      :                                +- *(15) HashAggregate(keys=[ctr_state#126], functions=[partial_avg(ctr_total_return#127)], output=[ctr_state#126, sum#165, count#166L])\n      :                                   +- *(15) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))], output=[ctr_state#126, ctr_total_return#127])\n      :                                      +- AQEShuffleRead coalesced\n      :                                         +- ShuffleQueryStage 10\n      :                                            +- Exchange hashpartitioning(wr_returning_customer_sk#10, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=1480]\n      :                                               +- *(11) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#168L])\n      :                                                  +- *(11) Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n      :                                                     +- *(11) SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n      :                                                        :- *(9) Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :                                                        :  +- AQEShuffleRead coalesced\n      :                                                        :     +- ShuffleQueryStage 9\n      :                                                        :        +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1089]\n      :                                                        :           +- *(8) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n      :                                                        :              +- *(8) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n      :                                                        :                 :- *(8) Filter isnotnull(wr_returning_addr_sk#13)\n      :                                                        :                 :  +- *(8) ColumnarToRow\n      :                                                        :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n      :                                                        :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n      :                                                        :                 +- BroadcastQueryStage 3\n      :                                                        :                    +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      :                                                        +- *(10) Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n      :                                                           +- AQEShuffleRead coalesced\n      :                                                              +- ShuffleQueryStage 5\n      :                                                                 +- ReusedExchange [ca_address_sk#56, ca_state#64], Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n      +- ShuffleQueryStage 7\n         +- Exchange hashpartitioning(c_customer_sk#69, 200), ENSURE_REQUIREMENTS, [plan_id=764]\n            +- *(6) Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n               +- *(6) BroadcastHashJoin [c_current_addr_sk#73], [ca_address_sk#128], Inner, BuildRight, false\n                  :- *(6) Filter (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73))\n                  :  +- *(6) ColumnarToRow\n                  :     +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#69,c_customer_id#70,c_current_addr_sk#73,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86] Batched: true, DataFilters: [isnotnull(c_customer_sk#69), isnotnull(c_current_addr_sk#73)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...\n                  +- BroadcastQueryStage 6\n                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=494]\n                        +- *(5) Project [ca_address_sk#128]\n                           +- *(5) Filter ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128))\n                              +- *(5) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#128,ca_state#136] Batched: true, DataFilters: [isnotnull(ca_state#136), (ca_state#136 = IL), isnotnull(ca_address_sk#128)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 46070424,
        "inputRowCount" : 384573
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "1" : [ 32493, 32493, 43249, 35743, 39317, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 39317, 35743, 35743, 35743, 39317, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 32493, 35743, 32493, 32493, 35743, 35743, 32493, 35743, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 32493, 32493, 35743, 39317, 32493, 35743, 35743, 35743, 35743, 32493, 39317, 35743, 32493, 35743, 32493, 39317, 35743, 39317, 35743, 32493, 32493, 39317, 39317, 32493, 35743, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 32493, 35743, 35743, 32493, 35743, 35743, 35743, 32493, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 35743, 35743, 39317, 35743, 35743, 32493, 32493, 35743, 35743, 39317, 35743, 32493, 32493, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 35743, 39317, 35743, 32493, 35743, 29539, 39317, 35743, 39317, 35743, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 32493, 32493, 35743, 35743, 35743, 32493, 35743, 39317, 39317, 35743, 39317, 39317, 35743, 35743, 35743, 35743, 35743, 35743, 32493, 32493, 32493, 35743, 35743, 35743, 35743, 39317, 39317, 32493, 29539, 39317, 35743, 35743, 35743, 32493, 39317, 35743, 35743, 32493, 35743 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 11,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 26 ],
      "Objectives" : {
        "DurationInMs" : 576,
        "TotalTasksDurationInMs" : 572,
        "IOBytes" : {
          "Total" : 6767771,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 6767771,
            "SW" : 0
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -880626402,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              },
              "compileTime" : {
                "sizeInBytes" : 2014,
                "rowCount" : 53
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull((avg(ctr_total_return) * 1.2)#143) "
          }
        },
        "links" : [ ],
        "rawPlan" : "Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n+- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n   +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n      +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n         +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n            :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n            :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n            :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n            :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n            :     :     :  +- Project [d_date_sk#28]\n            :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n            :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n            :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n            :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n            +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1370115709,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [(avg(ctr_total_return) * 1.2)#143, ctr_state#126#158] Condition : isnotnull((avg(ctr_total_return) * 1.2)#143) "
          },
          "1" : {
            "sign" : -2114732319,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 2856,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [ctr_state#126, sum#165, count#166L] Keys [1]: [ctr_state#126] Functions [1]: [avg(ctr_total_return#127)] Aggregate Attributes [1]: [avg(ctr_total_return#127)#142] Results [2]: [(avg(ctr_total_return#127)#142 * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158] "
          },
          "2" : {
            "sign" : 541754615,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 2014,
            "rowCount" : 53,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [ctr_state#126, sum#165, count#166L] Arguments: 12 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n+- HashAggregate(keys=[ctr_state#126], functions=[avg(ctr_total_return#127)], output=[(avg(ctr_total_return) * 1.2)#143, ctr_state#126#158])\n   +- ShuffleQueryStage 12\n      +- Exchange hashpartitioning(ctr_state#126, 200), ENSURE_REQUIREMENTS, [plan_id=1760]\n         +- *(15) HashAggregate(keys=[ctr_state#126], functions=[partial_avg(ctr_total_return#127)], output=[ctr_state#126, sum#165, count#166L])\n            +- *(15) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))], output=[ctr_state#126, ctr_total_return#127])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 10\n                     +- Exchange hashpartitioning(wr_returning_customer_sk#10, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=1480]\n                        +- *(11) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#168L])\n                           +- *(11) Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n                              +- *(11) SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n                                 :- *(9) Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                                 :  +- AQEShuffleRead coalesced\n                                 :     +- ShuffleQueryStage 9\n                                 :        +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1089]\n                                 :           +- *(8) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n                                 :              +- *(8) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n                                 :                 :- *(8) Filter isnotnull(wr_returning_addr_sk#13)\n                                 :                 :  +- *(8) ColumnarToRow\n                                 :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n                                 :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n                                 :                 +- BroadcastQueryStage 3\n                                 :                    +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                 +- *(10) Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n                                    +- AQEShuffleRead coalesced\n                                       +- ShuffleQueryStage 5\n                                          +- ReusedExchange [ca_address_sk#56, ca_state#64], Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2856,
        "inputRowCount" : 51
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "6" : [ 0, 0, 0, 0, 129, 0, 0, 0, 0, 97, 97, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 97, 0, 129, 0, 97, 0, 0, 97, 97, 0, 0, 0, 97, 97, 0, 0, 0, 0, 97, 129, 97, 0, 0, 97, 97, 0, 0, 97, 97, 0, 0, 97, 0, 97, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 97, 97, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 97, 0, 129, 0, 0, 0, 0, 97, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 97, 0, 97, 0, 0, 0, 0, 0, 129, 0, 0, 0, 97, 0, 0, 0, 97, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 97 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 20 ],
      "Objectives" : {
        "DurationInMs" : 90,
        "TotalTasksDurationInMs" : 82,
        "IOBytes" : {
          "Total" : 4365,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 4365,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : -956948140,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 989985600,
                "rowCount" : 6874900
              },
              "compileTime" : {
                "sizeInBytes" : 989985600,
                "rowCount" : 6874900
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [wr_returned_time_sk#4, wr_item_sk#5, wr_refunded_customer_sk#6, wr_refunded_cdemo_sk#7, wr_refunded_hdemo_sk#8, wr_refunded_addr_sk#9, wr_returning_customer_sk#10, wr_returning_cdemo_sk#11, wr_returning_hdemo_sk#12, wr_returning_addr_sk#13, wr_web_page_sk#14, wr_reason_sk#15, wr_order_number#16L, wr_return_quantity#17, wr_return_amt#18, wr_return_tax#19, wr_return_amt_inc_tax#20, wr_fee#21, wr_return_ship_cost#22, wr_refunded_cash#23, wr_reversed_charge#24, wr_account_credit#25, wr_net_loss#26, wr_returned_date_sk#27], `spark_catalog`.`tpcds_100`.`web_returns`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -1424883901,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1051496,
                "rowCount" : 365
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#28], BroadcastQueryStage 3 "
          },
          "1" : {
            "sign" : 1999788062,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 76688777600,
                "rowCount" : 2396524300
              },
              "compileTime" : {
                "sizeInBytes" : 76688777600,
                "rowCount" : 2396524300
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returned_date_sk#27 = d_date_sk#28) "
          },
          "0" : {
            "sign" : 1439705874,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 57516583200,
                "rowCount" : 2396524300
              },
              "compileTime" : {
                "sizeInBytes" : 57516583200,
                "rowCount" : 2396524300
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] "
          },
          "2" : {
            "sign" : 781408304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 183842960,
                "rowCount" : 6565820
              },
              "compileTime" : {
                "sizeInBytes" : 183842960,
                "rowCount" : 6565820
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] "
          },
          "3" : {
            "sign" : -1108806795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 945478080,
                "rowCount" : 6565820
              },
              "compileTime" : {
                "sizeInBytes" : 945478080,
                "rowCount" : 6565820
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27]) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n+- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n   :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n   :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n   :     :  +- Project [d_date_sk#28]\n   :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n   :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n   +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : 32010163,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1051496,
            "rowCount" : 365,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#28] Arguments: 3 "
          },
          "1" : {
            "sign" : 1992837652,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 76688777600,
            "rowCount" : 2396524300,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [wr_returned_date_sk#27] Right keys [1]: [d_date_sk#28] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : 1489334724,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 57516583200,
            "rowCount" : 2396524300,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] Input [5]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27, d_date_sk#28] "
          },
          "2" : {
            "sign" : 621891916,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 183842960,
            "rowCount" : 6565820,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] Condition : isnotnull(wr_returning_addr_sk#13) "
          },
          "3" : {
            "sign" : 962868417,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 183842960,
            "rowCount" : 6565820,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_returns Output [4]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_returns/wr_returned_date_sk=2450821, ... 2178 entries] PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpruning#159)] PushedFilters: [IsNotNull(wr_returning_addr_sk)] ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_returns",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n+- BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n   :- Filter isnotnull(wr_returning_addr_sk#13)\n   :  +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n   :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n   +- BroadcastQueryStage 3\n      +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 184894456,
        "inputRowCount" : 6566185
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 10,
        "FinishedTasksNum" : 11,
        "FinishedTasksTotalTimeInMs" : 9082.0,
        "FinishedTasksDistributionInMs" : [ 43.0, 294.0, 549.0, 1656.0, 1816.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 14939,
        "TotalTasksDurationInMs" : 22066,
        "IOBytes" : {
          "Total" : 44365609,
          "Details" : {
            "IR" : 20120900,
            "IW" : 0,
            "SR" : 0,
            "SW" : 24244709
          }
        }
      }
    },
    "10" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1461937126,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5094360,
                "rowCount" : 254718
              },
              "compileTime" : {
                "sizeInBytes" : 5094360,
                "rowCount" : 254718
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ctr_customer_sk#125, ctr_total_return#127] "
          },
          "1" : {
            "sign" : -1767674417,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16301952,
                "rowCount" : 254718
              },
              "compileTime" : {
                "sizeInBytes" : 16301952,
                "rowCount" : 254718
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158)) "
          },
          "2" : {
            "sign" : 877628050,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8660412,
                "rowCount" : 254718
              },
              "compileTime" : {
                "sizeInBytes" : 8660412,
                "rowCount" : 254718
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ctr_total_return#127) "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ctr_customer_sk#125, ctr_total_return#127]\n+- Join Inner, ((cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) AND (ctr_state#126 = ctr_state#126#158))\n   :- Filter isnotnull(ctr_total_return#127)\n   :  +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n   :     +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n   :        +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n   :           :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n   :           :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n   :           :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n   :           :     :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27])\n   :           :     :     :  +- Project [d_date_sk#28]\n   :           :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   :           :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n   :           :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n   :           :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 0\n   :           +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n   +- Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n      +- Aggregate [ctr_state#126], [(avg(ctr_total_return#127) * 1.2) AS (avg(ctr_total_return) * 1.2)#143, ctr_state#126 AS ctr_state#126#158]\n         +- Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n            +- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n               +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n                  :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n                  :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n                  :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n                  :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n                  :     :     :  +- Project [d_date_sk#28]\n                  :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n                  :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n                  :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n                  :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n                  +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -890678136,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [wr_returning_customer_sk#10, ca_state#64, sum#162L] Arguments: 11 "
          },
          "5" : {
            "sign" : 271474487,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33556480,
            "rowCount" : 51,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [(avg(ctr_total_return) * 1.2)#143, ctr_state#126#158] Arguments: 13 "
          },
          "1" : {
            "sign" : 773557780,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 16301952,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ctr_state#126] Right keys [1]: [ctr_state#126#158] Join type: Inner Join condition: (cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143) "
          },
          "0" : {
            "sign" : -712970917,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5094360,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ctr_customer_sk#125, ctr_total_return#127] Input [5]: [ctr_customer_sk#125, ctr_state#126, ctr_total_return#127, (avg(ctr_total_return) * 1.2)#143, ctr_state#126#158] "
          },
          "2" : {
            "sign" : -1805709560,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ctr_customer_sk#125, ctr_state#126, ctr_total_return#127] Condition : isnotnull(ctr_total_return#127) "
          },
          "3" : {
            "sign" : -388807435,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 50826520,
            "rowCount" : 1270663,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [wr_returning_customer_sk#10, ca_state#64, sum#162L] Keys [2]: [wr_returning_customer_sk#10, ca_state#64] Functions [1]: [sum(UnscaledValue(wr_return_amt#18))] Aggregate Attributes [1]: [sum(UnscaledValue(wr_return_amt#18))#141L] Results [3]: [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18))#141L,17,2) AS ctr_total_return#127] "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "HashAggregate",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ctr_customer_sk#125, ctr_total_return#127]\n+- BroadcastHashJoin [ctr_state#126], [ctr_state#126#158], Inner, BuildRight, (cast(ctr_total_return#127 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#143), false\n   :- Filter isnotnull(ctr_total_return#127)\n   :  +- HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))], output=[ctr_customer_sk#125, ctr_state#126, ctr_total_return#127])\n   :     +- ShuffleQueryStage 11\n   :        +- Exchange hashpartitioning(wr_returning_customer_sk#10, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=1619]\n   :           +- *(14) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#162L])\n   :              +- *(14) Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n   :                 +- *(14) SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n   :                    :- *(12) Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n   :                    :  +- AQEShuffleRead coalesced\n   :                    :     +- ShuffleQueryStage 8\n   :                    :        +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1034]\n   :                    :           +- *(7) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n   :                    :              +- *(7) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n   :                    :                 :- *(7) Filter (isnotnull(wr_returning_addr_sk#13) AND isnotnull(wr_returning_customer_sk#10))\n   :                    :                 :  +- *(7) ColumnarToRow\n   :                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13), isnotnull(wr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n   :                    :                 :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n   :                    :                 :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                            +- == Final Plan ==\n                                                               BroadcastQueryStage 1\n                                                               +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                            +- == Initial Plan ==\n                                                               BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1005]\n                                                               +- Project [d_date_sk#28]\n                                                                  +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n                                                                     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :                    :                 +- BroadcastQueryStage 0\n   :                    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n   :                    :                       +- *(1) Project [d_date_sk#28]\n   :                    :                          +- *(1) Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   :                    :                             +- *(1) ColumnarToRow\n   :                    :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n   :                    +- *(13) Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n   :                       +- AQEShuffleRead coalesced\n   :                          +- ShuffleQueryStage 1\n   :                             +- Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n   :                                +- *(2) Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n   :                                   +- *(2) ColumnarToRow\n   :                                      +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_state#64] Batched: true, DataFilters: [isnotnull(ca_address_sk#56), isnotnull(ca_state#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n   +- BroadcastQueryStage 13\n      +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=1834]\n         +- *(16) Filter isnotnull((avg(ctr_total_return) * 1.2)#143)\n            +- *(16) HashAggregate(keys=[ctr_state#126], functions=[avg(ctr_total_return#127)], output=[(avg(ctr_total_return) * 1.2)#143, ctr_state#126#158])\n               +- AQEShuffleRead coalesced\n                  +- ShuffleQueryStage 12\n                     +- Exchange hashpartitioning(ctr_state#126, 200), ENSURE_REQUIREMENTS, [plan_id=1760]\n                        +- *(15) HashAggregate(keys=[ctr_state#126], functions=[partial_avg(ctr_total_return#127)], output=[ctr_state#126, sum#165, count#166L])\n                           +- *(15) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[sum(UnscaledValue(wr_return_amt#18))], output=[ctr_state#126, ctr_total_return#127])\n                              +- AQEShuffleRead coalesced\n                                 +- ShuffleQueryStage 10\n                                    +- Exchange hashpartitioning(wr_returning_customer_sk#10, ca_state#64, 200), ENSURE_REQUIREMENTS, [plan_id=1480]\n                                       +- *(11) HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#168L])\n                                          +- *(11) Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n                                             +- *(11) SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n                                                :- *(9) Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n                                                :  +- AQEShuffleRead coalesced\n                                                :     +- ShuffleQueryStage 9\n                                                :        +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1089]\n                                                :           +- *(8) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n                                                :              +- *(8) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n                                                :                 :- *(8) Filter isnotnull(wr_returning_addr_sk#13)\n                                                :                 :  +- *(8) ColumnarToRow\n                                                :                 :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n                                                :                 :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n                                                :                 +- BroadcastQueryStage 3\n                                                :                    +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                                +- *(10) Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n                                                   +- AQEShuffleRead coalesced\n                                                      +- ShuffleQueryStage 5\n                                                         +- ReusedExchange [ca_address_sk#56, ca_state#64], Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 84383000,
        "inputRowCount" : 1270714
      },
      "InitialPartitionNum" : 200,
      "PD" : {

      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 10,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 24 ],
      "Objectives" : {
        "DurationInMs" : 1215,
        "TotalTasksDurationInMs" : 1208,
        "IOBytes" : {
          "Total" : 19297021,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 19297021,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -261138935,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7643130,
                "rowCount" : 254771
              },
              "compileTime" : {
                "sizeInBytes" : 7643130,
                "rowCount" : 254771
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "1" : {
            "sign" : -745981009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 233422716,
                "rowCount" : 6865374
              },
              "compileTime" : {
                "sizeInBytes" : 233422716,
                "rowCount" : 6865374
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "2" : {
            "sign" : -1784470940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 288345708,
                "rowCount" : 6865374
              },
              "compileTime" : {
                "sizeInBytes" : 288345708,
                "rowCount" : 6865374
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "3" : {
            "sign" : 1372296461,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 31028032,
                "rowCount" : 969626
              },
              "compileTime" : {
                "sizeInBytes" : 25210276,
                "rowCount" : 969626
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [wr_returning_customer_sk#10, ca_state#64], [ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n+- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n   +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n      :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n      :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n      :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n      :     :  +- Filter ((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND dynamicpruning#160 [wr_returned_date_sk#27])\n      :     :     :  +- Project [d_date_sk#28]\n      :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n      :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 3\n      +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -856534607,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 42952544,
            "rowCount" : 1342267,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] Arguments: 9 "
          },
          "5" : {
            "sign" : -1004027431,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#56, ca_state#64] Arguments: [ca_address_sk#56 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : -758519203,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#56, ca_state#64] Arguments: 5 "
          },
          "1" : {
            "sign" : 588939988,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] Input [5]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, ca_address_sk#56, ca_state#64] "
          },
          "0" : {
            "sign" : 868648310,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 7643130,
            "rowCount" : 254771,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] Keys [2]: [wr_returning_customer_sk#10, ca_state#64] Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#18))] Aggregate Attributes [1]: [sum#167L] Results [3]: [wr_returning_customer_sk#10, ca_state#64, sum#168L] "
          },
          "2" : {
            "sign" : -352617467,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [wr_returning_addr_sk#13] Right keys [1]: [ca_address_sk#56] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : 939150861,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] Arguments: [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#168L])\n+- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n   +- SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n      :- Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 9\n      :     +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1089]\n      :        +- *(8) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n      :           +- *(8) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n      :              :- *(8) Filter isnotnull(wr_returning_addr_sk#13)\n      :              :  +- *(8) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n      :              :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n      :              +- BroadcastQueryStage 3\n      :                 +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      +- Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 5\n            +- ReusedExchange [ca_address_sk#56, ca_state#64], Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 73980576,
        "inputRowCount" : 2311893
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "3" : [ 130614, 126774, 125762, 128817, 126788, 127386, 125594, 126469, 125535, 132120, 130415, 127613, 129020, 126821, 124842, 128178, 127840, 127680, 127481, 128772, 127034, 129708, 126540, 128178, 123972, 130280, 126457, 131172, 130021, 127041, 129117, 124963, 124000, 129857, 128110, 127684, 130316, 125029, 123026, 125551, 124968, 126807, 126136, 131465, 126355, 124896, 127549, 130124, 129233, 124752, 126391, 128682, 123582, 125613, 123837, 127015, 125821, 125688, 127180, 126405, 125232, 125979, 123341, 130202, 127353, 125956, 129985, 127268, 128554, 129065, 128455, 123395, 128275, 129422, 126613, 125178, 129474, 128327, 129772, 128337, 122532, 124253, 128476, 122274, 128838, 125080, 127826, 125322, 130039, 128540, 128121, 129812, 124894, 128767, 129079, 130046, 128767, 121340, 124126, 124750, 122196, 130916, 126245, 127183, 126764, 124461, 125719, 130976, 124896, 125847, 129027, 125583, 124594, 127549, 127140, 130966, 123043, 126802, 127549, 124601, 123123, 128124, 132742, 125956, 135558, 131588, 128730, 124473, 127251, 126866, 125752, 128540, 123863, 126131, 125466, 126885, 130746, 127218, 126249, 131395, 125750, 127481, 123211, 129630, 130668, 125911, 124859, 129623, 129623, 126942, 127426, 122830, 129297, 127989, 126956, 128029, 125552, 129318, 129528, 125407, 125194, 126121, 126757, 127570, 128540, 128902, 129391, 126720, 127275, 128980, 128902, 131207, 129396, 125180, 127183, 124095, 125821, 120943, 127599, 128306, 129105, 133910, 124199, 126835, 131311, 129460, 132316, 126405, 125029, 124360, 128841, 125762, 126507, 123468, 126334, 126322, 131484, 125367, 127183, 129151 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 15,
        "FinishedTasksTotalTimeInMs" : 42761.0,
        "FinishedTasksDistributionInMs" : [ 341.0, 524.0, 2950.0, 4336.0, 5632.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 6227,
        "TotalTasksDurationInMs" : 6214,
        "IOBytes" : {
          "Total" : 52074275,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 32776364,
            "SW" : 19297911
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1206138307,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 215484,
                "rowCount" : 17957
              },
              "compileTime" : {
                "sizeInBytes" : 215484,
                "rowCount" : 17957
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#128] "
          },
          "1" : {
            "sign" : -1893856506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4417422,
                "rowCount" : 17957
              },
              "compileTime" : {
                "sizeInBytes" : 4417422,
                "rowCount" : 17957
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128)) "
          },
          "2" : {
            "sign" : 2138409469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#128, ca_address_id#129, ca_street_number#130, ca_street_name#131, ca_street_type#132, ca_suite_number#133, ca_city#134, ca_county#135, ca_state#136, ca_zip#137, ca_country#138, ca_gmt_offset#139, ca_location_type#140], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#128]\n+- Filter ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#128,ca_address_id#129,ca_street_number#130,ca_street_name#131,ca_street_type#132,ca_suite_number#133,ca_city#134,ca_county#135,ca_state#136,ca_zip#137,ca_country#138,ca_gmt_offset#139,ca_location_type#140] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 3170953,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 215484,
            "rowCount" : 17957,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#128] Input [2]: [ca_address_sk#128, ca_state#136] "
          },
          "1" : {
            "sign" : -1811544864,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 215484,
            "rowCount" : 17957,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#128, ca_state#136] Condition : ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128)) "
          },
          "2" : {
            "sign" : 1567627977,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 215484,
            "rowCount" : 17957,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#128, ca_state#136] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_state:string> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#128]\n+- Filter ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#128,ca_state#136] Batched: true, DataFilters: [isnotnull(ca_state#136), (ca_state#136 = IL), isnotnull(ca_address_sk#128)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 215484,
        "inputRowCount" : 17957
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 1 ],
      "Objectives" : {
        "DurationInMs" : 19183,
        "TotalTasksDurationInMs" : 25785,
        "IOBytes" : {
          "Total" : 13364291,
          "Details" : {
            "IR" : 4832636,
            "IW" : 0,
            "SR" : 0,
            "SW" : 8531655
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 732514785,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 6912,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#28] "
          },
          "1" : {
            "sign" : -1273740767,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              },
              "compileTime" : {
                "sizeInBytes" : 141696,
                "rowCount" : 576
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28)) "
          },
          "2" : {
            "sign" : -1601037564,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#28, d_date_id#29, d_date#30, d_month_seq#31, d_week_seq#32, d_quarter_seq#33, d_year#34, d_dow#35, d_moy#36, d_dom#37, d_qoy#38, d_fy_year#39, d_fy_quarter_seq#40, d_fy_week_seq#41, d_day_name#42, d_quarter_name#43, d_holiday#44, d_weekend#45, d_following_holiday#46, d_first_dom#47, d_last_dom#48, d_same_day_ly#49, d_same_day_lq#50, d_current_day#51, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#28]\n+- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 373270648,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#28] Input [2]: [d_date_sk#28, d_year#34] "
          },
          "1" : {
            "sign" : -1333559112,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#28, d_year#34] Condition : ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28)) "
          },
          "2" : {
            "sign" : -356129765,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6912,
            "rowCount" : 576,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#28, d_year#34] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#28]\n+- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6912,
        "inputRowCount" : 576
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 2 ],
      "Objectives" : {
        "DurationInMs" : 4395,
        "TotalTasksDurationInMs" : 4389,
        "IOBytes" : {
          "Total" : 93562,
          "Details" : {
            "IR" : 93562,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 541426365,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 25210276,
                "rowCount" : 969626
              },
              "compileTime" : {
                "sizeInBytes" : 25210276,
                "rowCount" : 969626
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#56, ca_state#64] "
          },
          "1" : {
            "sign" : 1824332727,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 238527996,
                "rowCount" : 969626
              },
              "compileTime" : {
                "sizeInBytes" : 238527996,
                "rowCount" : 969626
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64)) "
          },
          "2" : {
            "sign" : -402689684,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#56, ca_address_id#57, ca_street_number#58, ca_street_name#59, ca_street_type#60, ca_suite_number#61, ca_city#62, ca_county#63, ca_state#64, ca_zip#65, ca_country#66, ca_gmt_offset#67, ca_location_type#68], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#56, ca_state#64]\n+- Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_address_id#57,ca_street_number#58,ca_street_name#59,ca_street_type#60,ca_suite_number#61,ca_city#62,ca_county#63,ca_state#64,ca_zip#65,ca_country#66,ca_gmt_offset#67,ca_location_type#68] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1644002547,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#56, ca_state#64] Condition : (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64)) "
          },
          "1" : {
            "sign" : -297905992,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 25210276,
            "rowCount" : 969626,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#56, ca_state#64] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)] ReadSchema: struct<ca_address_sk:int,ca_state:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n+- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_state#64] Batched: true, DataFilters: [isnotnull(ca_address_sk#56), isnotnull(ca_state#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25210276,
        "inputRowCount" : 969626
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 3603,
        "TotalTasksDurationInMs" : 9058,
        "IOBytes" : {
          "Total" : 4832884,
          "Details" : {
            "IR" : 4832884,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1864765015,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8660412,
                "rowCount" : 254718
              },
              "compileTime" : {
                "sizeInBytes" : 8660412,
                "rowCount" : 254718
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127] "
          },
          "1" : {
            "sign" : -2026574359,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 233422716,
                "rowCount" : 6865374
              },
              "compileTime" : {
                "sizeInBytes" : 233422716,
                "rowCount" : 6865374
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] "
          },
          "2" : {
            "sign" : 1259297446,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 288345708,
                "rowCount" : 6865374
              },
              "compileTime" : {
                "sizeInBytes" : 288345708,
                "rowCount" : 6865374
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (wr_returning_addr_sk#13 = ca_address_sk#56) "
          },
          "3" : {
            "sign" : 1372296337,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 31028032,
                "rowCount" : 969626
              },
              "compileTime" : {
                "sizeInBytes" : 25210276,
                "rowCount" : 969626
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [wr_returning_customer_sk#10, ca_state#64], [wr_returning_customer_sk#10 AS ctr_customer_sk#125, ca_state#64 AS ctr_state#126, MakeDecimal(sum(UnscaledValue(wr_return_amt#18)),17,2) AS ctr_total_return#127]\n+- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n   +- Join Inner, (wr_returning_addr_sk#13 = ca_address_sk#56)\n      :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n      :  +- Join Inner, (wr_returned_date_sk#27 = d_date_sk#28)\n      :     :- Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, wr_returned_date_sk#27]\n      :     :  +- Filter (((isnotnull(wr_returned_date_sk#27) AND isnotnull(wr_returning_addr_sk#13)) AND isnotnull(wr_returning_customer_sk#10)) AND dynamicpruning#159 [wr_returned_date_sk#27])\n      :     :     :  +- Project [d_date_sk#28]\n      :     :     :     +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n      :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_date_id#29,d_date#30,d_month_seq#31,d_week_seq#32,d_quarter_seq#33,d_year#34,d_dow#35,d_moy#36,d_dom#37,d_qoy#38,d_fy_year#39,d_fy_quarter_seq#40,d_fy_week_seq#41,d_day_name#42,d_quarter_name#43,d_holiday#44,d_weekend#45,d_following_holiday#46,d_first_dom#47,d_last_dom#48,d_same_day_ly#49,d_same_day_lq#50,d_current_day#51,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_returns[wr_returned_time_sk#4,wr_item_sk#5,wr_refunded_customer_sk#6,wr_refunded_cdemo_sk#7,wr_refunded_hdemo_sk#8,wr_refunded_addr_sk#9,wr_returning_customer_sk#10,wr_returning_cdemo_sk#11,wr_returning_hdemo_sk#12,wr_returning_addr_sk#13,wr_web_page_sk#14,wr_reason_sk#15,wr_order_number#16L,wr_return_quantity#17,wr_return_amt#18,wr_return_tax#19,wr_return_amt_inc_tax#20,wr_fee#21,wr_return_ship_cost#22,wr_refunded_cash#23,wr_reversed_charge#24,wr_account_credit#25,wr_net_loss#26,wr_returned_date_sk#27] parquet\n      :     +- LogicalQueryStage Project [d_date_sk#28], BroadcastQueryStage 0\n      +- LogicalQueryStage Project [ca_address_sk#56, ca_state#64], ShuffleQueryStage 1\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1434488097,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 42436832,
            "rowCount" : 1326151,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] Arguments: 8 "
          },
          "5" : {
            "sign" : -2083267836,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [2]: [ca_address_sk#56, ca_state#64] Arguments: [ca_address_sk#56 ASC NULLS FIRST], false, 0 "
          },
          "6" : {
            "sign" : 1946570536,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 31028032,
            "rowCount" : 969626,
            "isRuntime" : true,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [ca_address_sk#56, ca_state#64] Arguments: 1 "
          },
          "1" : {
            "sign" : -1768626717,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 233422716,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] Input [5]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18, ca_address_sk#56, ca_state#64] "
          },
          "0" : {
            "sign" : 1904810813,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 8660412,
            "rowCount" : 254718,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [3]: [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64] Keys [2]: [wr_returning_customer_sk#10, ca_state#64] Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#18))] Aggregate Attributes [1]: [sum#161L] Results [3]: [wr_returning_customer_sk#10, ca_state#64, sum#162L] "
          },
          "2" : {
            "sign" : -1801771500,
            "className" : "org.apache.spark.sql.execution.joins.SortMergeJoinExec",
            "sizeInBytes" : 288345708,
            "rowCount" : 6865374,
            "isRuntime" : false,
            "predicate" : " (unknown) SortMergeJoin Left keys [1]: [wr_returning_addr_sk#13] Right keys [1]: [ca_address_sk#56] Join type: Inner Join condition: None "
          },
          "3" : {
            "sign" : -1654446653,
            "className" : "org.apache.spark.sql.execution.SortExec",
            "sizeInBytes" : -1,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Input [3]: [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18] Arguments: [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0 "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "ShuffleQueryStage",
          "toId" : 3,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "ShuffleQueryStage",
          "toId" : 5,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Sort",
          "toId" : 2,
          "toName" : "SortMergeJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "SortMergeJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[wr_returning_customer_sk#10, ca_state#64], functions=[partial_sum(UnscaledValue(wr_return_amt#18))], output=[wr_returning_customer_sk#10, ca_state#64, sum#162L])\n+- Project [wr_returning_customer_sk#10, wr_return_amt#18, ca_state#64]\n   +- SortMergeJoin [wr_returning_addr_sk#13], [ca_address_sk#56], Inner\n      :- Sort [wr_returning_addr_sk#13 ASC NULLS FIRST], false, 0\n      :  +- ShuffleQueryStage 8\n      :     +- Exchange hashpartitioning(wr_returning_addr_sk#13, 200), ENSURE_REQUIREMENTS, [plan_id=1034]\n      :        +- *(7) Project [wr_returning_customer_sk#10, wr_returning_addr_sk#13, wr_return_amt#18]\n      :           +- *(7) BroadcastHashJoin [wr_returned_date_sk#27], [d_date_sk#28], Inner, BuildRight, false\n      :              :- *(7) Filter (isnotnull(wr_returning_addr_sk#13) AND isnotnull(wr_returning_customer_sk#10))\n      :              :  +- *(7) ColumnarToRow\n      :              :     +- FileScan parquet spark_catalog.tpcds_100.web_returns[wr_returning_customer_sk#10,wr_returning_addr_sk#13,wr_return_amt#18,wr_returned_date_sk#27] Batched: true, DataFilters: [isnotnull(wr_returning_addr_sk#13), isnotnull(wr_returning_customer_sk#10)], Format: Parquet, Location: InMemoryFileIndex(2179 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_re..., PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpru..., PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>\n      :              :           +- SubqueryBroadcast dynamicpruning#159, 0, [d_date_sk#28], [id=#1008]\n      :              :              +- AdaptiveSparkPlan isFinalPlan=true\n                                       +- == Final Plan ==\n                                          BroadcastQueryStage 1\n                                          +- ReusedExchange [d_date_sk#28], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n                                       +- == Initial Plan ==\n                                          BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1005]\n                                          +- Project [d_date_sk#28]\n                                             +- Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n                                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      :              +- BroadcastQueryStage 0\n      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=375]\n      :                    +- *(1) Project [d_date_sk#28]\n      :                       +- *(1) Filter ((isnotnull(d_year#34) AND (d_year#34 = 2002)) AND isnotnull(d_date_sk#28))\n      :                          +- *(1) ColumnarToRow\n      :                             +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#28,d_year#34] Batched: true, DataFilters: [isnotnull(d_year#34), (d_year#34 = 2002), isnotnull(d_date_sk#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>\n      +- Sort [ca_address_sk#56 ASC NULLS FIRST], false, 0\n         +- ShuffleQueryStage 1\n            +- Exchange hashpartitioning(ca_address_sk#56, 200), ENSURE_REQUIREMENTS, [plan_id=396]\n               +- *(2) Filter (isnotnull(ca_address_sk#56) AND isnotnull(ca_state#64))\n                  +- *(2) ColumnarToRow\n                     +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#56,ca_state#64] Batched: true, DataFilters: [isnotnull(ca_address_sk#56), isnotnull(ca_state#64)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 73464864,
        "inputRowCount" : 2295777
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 130174, 125055, 124906, 128817, 126010, 125180, 123314, 125613, 123823, 130621, 129772, 125965, 127734, 126043, 123615, 126615, 125485, 126394, 125833, 126566, 125109, 129708, 125244, 125674, 123116, 129502, 124745, 131172, 129538, 125485, 127469, 123017, 124000, 128358, 125258, 126828, 128313, 122454, 121612, 124610, 122750, 126029, 125280, 129025, 124267, 124118, 126906, 129481, 127228, 122955, 125748, 126970, 121355, 122494, 122690, 127015, 124322, 124189, 121976, 125322, 121477, 122333, 122485, 130202, 125828, 125100, 128337, 123279, 126672, 127481, 125887, 121839, 126048, 127497, 125050, 124471, 128767, 127285, 129772, 127694, 121676, 122433, 128077, 120775, 127982, 123368, 126970, 124615, 129261, 126270, 123688, 126743, 123246, 127743, 127580, 127457, 126131, 120562, 123270, 124043, 120191, 129034, 124027, 125041, 126121, 122813, 123993, 129143, 123482, 125847, 127677, 123702, 124594, 127549, 125849, 128604, 121409, 124312, 126128, 123374, 121560, 127481, 129836, 124660, 133676, 130810, 127096, 122033, 124896, 125232, 124118, 126977, 123863, 125353, 124759, 125464, 129890, 126277, 125393, 128742, 124894, 124984, 123211, 127833, 130668, 124199, 124859, 127684, 128767, 124724, 126719, 122187, 127663, 127133, 126956, 125438, 123618, 127684, 128178, 122338, 123780, 126121, 126050, 126927, 126956, 126121, 127807, 125864, 124492, 124199, 126540, 129708, 126892, 125180, 126540, 124095, 123026, 120087, 126892, 126114, 126977, 130479, 123615, 125272, 131311, 126308, 129890, 123882, 124589, 123582, 126614, 124050, 124339, 123468, 124135, 125381, 127247, 124589, 126327, 128668 ],
        "0" : [ 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 47574, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 47574, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 47574, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 43249, 47574, 43249, 43249, 47574 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 3739,
        "TotalTasksDurationInMs" : 3731,
        "IOBytes" : {
          "Total" : 51799183,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 32502162,
            "SW" : 19297021
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 838642660,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [c_customer_sk#69, c_customer_id#70, c_current_cdemo_sk#71, c_current_hdemo_sk#72, c_current_addr_sk#73, c_first_shipto_date_sk#74, c_first_sales_date_sk#75, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86], `spark_catalog`.`tpcds_100`.`customer`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1312794105,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 478418080,
                "rowCount" : 2010160
              },
              "compileTime" : {
                "sizeInBytes" : 478418080,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ca_address_sk#128 = c_current_addr_sk#73) "
          },
          "0" : {
            "sign" : 527468780,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 462336800,
                "rowCount" : 2010160
              },
              "compileTime" : {
                "sizeInBytes" : 462336800,
                "rowCount" : 2010160
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
          },
          "2" : {
            "sign" : -751035216,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 468000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 468000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] "
          },
          "3" : {
            "sign" : 543595436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              },
              "compileTime" : {
                "sizeInBytes" : 500000000,
                "rowCount" : 2000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73)) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n+- Join Inner, (ca_address_sk#128 = c_current_addr_sk#73)\n   :- Project [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n   :  +- Filter (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73))\n   :     +- Relation spark_catalog.tpcds_100.customer[c_customer_sk#69,c_customer_id#70,c_current_cdemo_sk#71,c_current_hdemo_sk#72,c_current_addr_sk#73,c_first_shipto_date_sk#74,c_first_sales_date_sk#75,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86] parquet\n   +- Project [ca_address_sk#128]\n      +- Filter ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128))\n         +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#128,ca_address_id#129,ca_street_number#130,ca_street_name#131,ca_street_type#132,ca_suite_number#133,ca_city#134,ca_county#135,ca_state#136,ca_zip#137,ca_country#138,ca_gmt_offset#139,ca_location_type#140] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -1453823953,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 2097152,
            "rowCount" : 31648,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#128] Arguments: 6 "
          },
          "1" : {
            "sign" : -1645119796,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 478418080,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [c_current_addr_sk#73] Right keys [1]: [ca_address_sk#128] Join type: Inner Join condition: None "
          },
          "0" : {
            "sign" : -797242947,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 462336800,
            "rowCount" : 2010160,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [13]: [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] Input [15]: [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86, ca_address_sk#128] "
          },
          "2" : {
            "sign" : -187992545,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 468000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [14]: [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] Condition : (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73)) "
          },
          "3" : {
            "sign" : 1882477287,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 468000000,
            "rowCount" : 2000000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer Output [14]: [c_customer_sk#69, c_customer_id#70, c_current_addr_sk#73, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer] PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)] ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:string> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [c_customer_sk#69, c_customer_id#70, c_salutation#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_day#80, c_birth_month#81, c_birth_year#82, c_birth_country#83, c_login#84, c_email_address#85, c_last_review_date#86]\n+- BroadcastHashJoin [c_current_addr_sk#73], [ca_address_sk#128], Inner, BuildRight, false\n   :- Filter (isnotnull(c_customer_sk#69) AND isnotnull(c_current_addr_sk#73))\n   :  +- FileScan parquet spark_catalog.tpcds_100.customer[c_customer_sk#69,c_customer_id#70,c_current_addr_sk#73,c_salutation#76,c_first_name#77,c_last_name#78,c_preferred_cust_flag#79,c_birth_day#80,c_birth_month#81,c_birth_year#82,c_birth_country#83,c_login#84,c_email_address#85,c_last_review_date#86] Batched: true, DataFilters: [isnotnull(c_customer_sk#69), isnotnull(c_current_addr_sk#73)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...\n   +- BroadcastQueryStage 6\n      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=494]\n         +- *(5) Project [ca_address_sk#128]\n            +- *(5) Filter ((isnotnull(ca_state#136) AND (ca_state#136 = IL)) AND isnotnull(ca_address_sk#128))\n               +- *(5) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#128,ca_state#136] Batched: true, DataFilters: [isnotnull(ca_state#136), (ca_state#136 = IL), isnotnull(ca_address_sk#128)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 470097152,
        "inputRowCount" : 2031648
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 6635.0,
        "FinishedTasksDistributionInMs" : [ 1354.0, 1656.0, 1809.0, 1816.0, 1816.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 6798,
        "TotalTasksDurationInMs" : 30079,
        "IOBytes" : {
          "Total" : 96166648,
          "Details" : {
            "IR" : 89398877,
            "IW" : 0,
            "SR" : 0,
            "SW" : 6767771
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226825737,
  "SQLEndTimeInMs" : 1702226856312,
  "Objectives" : {
    "DurationInMs" : 30575,
    "IOBytes" : {
      "Total" : 352168028,
      "Details" : {
        "IR" : 139408495,
        "IW" : 0,
        "SR" : 110645594,
        "SW" : 102113939
      }
    }
  }
}
