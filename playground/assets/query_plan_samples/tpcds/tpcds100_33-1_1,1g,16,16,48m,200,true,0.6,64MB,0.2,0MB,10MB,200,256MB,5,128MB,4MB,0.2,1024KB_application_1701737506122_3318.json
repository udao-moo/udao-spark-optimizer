{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 155981915,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3264000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#202, i_manufact_id#215] "
        },
        "34" : {
          "sign" : 1534588901,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4432520384,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#161) "
        },
        "67" : {
          "sign" : -2002194846,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3264000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#278 = i_manufact_id#345) "
        },
        "12" : {
          "sign" : 1997528281,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 7354676784,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
        },
        "66" : {
          "sign" : -1038388340,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#252, ca_address_id#253, ca_street_number#254, ca_street_name#255, ca_street_type#256, ca_suite_number#257, ca_city#258, ca_county#259, ca_state#260, ca_zip#261, ca_country#262, ca_gmt_offset#263, ca_location_type#264], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "51" : {
          "sign" : -120464388,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 20540,
          "rowCount" : 1027,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#278], [i_manufact_id#278, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#5] "
        },
        "8" : {
          "sign" : 1522804592,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5504661760,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
        },
        "73" : {
          "sign" : 23213801,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#332, i_item_id#333, i_rec_start_date#334, i_rec_end_date#335, i_item_desc#336, i_current_price#337, i_wholesale_cost#338, i_brand_id#339, i_brand#340, i_class_id#341, i_class#342, i_category_id#343, i_category#344, i_manufact_id#345, i_manufact#346, i_size#347, i_formulation#348, i_color#349, i_units#350, i_container#351, i_manager_id#352, i_product_name#353], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "19" : {
          "sign" : -1312455616,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 109927068,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58)) "
        },
        "23" : {
          "sign" : -1729853405,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
        },
        "62" : {
          "sign" : -1597857051,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 1999) AND (d_moy#232 = 3))) AND isnotnull(d_date_sk#224)) "
        },
        "4" : {
          "sign" : -1938942038,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
          "sizeInBytes" : 61620,
          "rowCount" : 3081,
          "isRuntime" : false,
          "predicate" : " (unknown) Union Arguments: false, false "
        },
        "40" : {
          "sign" : -1082958336,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#161, d_date_id#162, d_date#163, d_month_seq#164, d_week_seq#165, d_quarter_seq#166, d_year#167, d_dow#168, d_moy#169, d_dom#170, d_qoy#171, d_fy_year#172, d_fy_quarter_seq#173, d_fy_week_seq#174, d_day_name#175, d_quarter_name#176, d_holiday#177, d_weekend#178, d_following_holiday#179, d_first_dom#180, d_last_dom#181, d_same_day_ly#182, d_same_day_lq#183, d_current_day#184, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "15" : {
          "sign" : 1696782129,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
        },
        "11" : {
          "sign" : 2080078526,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8497298720,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
        },
        "9" : {
          "sign" : -1326280990,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7706526464,
          "rowCount" : 275233088,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
        },
        "44" : {
          "sign" : 815700974,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3264000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#215 = i_manufact_id#323) "
        },
        "33" : {
          "sign" : -1418584364,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3324390288,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
        },
        "22" : {
          "sign" : -1786653221,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3264000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_manufact_id#84] "
        },
        "56" : {
          "sign" : 1626457587,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1667894520,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
        },
        "55" : {
          "sign" : 1483264987,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2015528872,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#252) "
        },
        "26" : {
          "sign" : 1727944990,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8669952,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#300) AND (i_category#300 = Books)) "
        },
        "50" : {
          "sign" : -1643866209,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#310, i_item_id#311, i_rec_start_date#312, i_rec_end_date#313, i_item_desc#314, i_current_price#315, i_wholesale_cost#316, i_brand_id#317, i_brand#318, i_class_id#319, i_class#320, i_category_id#321, i_category#322, i_manufact_id#323, i_manufact#324, i_size#325, i_formulation#326, i_color#327, i_units#328, i_container#329, i_manager_id#330, i_product_name#331], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "37" : {
          "sign" : 899995805,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "68" : {
          "sign" : -1507056550,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3264000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#265, i_manufact_id#278] "
        },
        "61" : {
          "sign" : -1332932623,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#224] "
        },
        "13" : {
          "sign" : -1220409563,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 39925388256,
          "rowCount" : 262667028,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#371 [ss_sold_date_sk#29]) "
        },
        "46" : {
          "sign" : 1034201051,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#202) "
        },
        "24" : {
          "sign" : 655949841,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "35" : {
          "sign" : 979061091,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3991556324,
          "rowCount" : 142555583,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
        },
        "16" : {
          "sign" : 1883297142,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
        },
        "5" : {
          "sign" : -645862982,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 20540,
          "rowCount" : 1027,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#1] "
        },
        "72" : {
          "sign" : 925778942,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8669952,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#344) AND (i_category#344 = Books)) "
        },
        "10" : {
          "sign" : -1995119979,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6372974040,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
        },
        "59" : {
          "sign" : 282466322,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14968824624,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#373 [ws_sold_date_sk#160]) "
        },
        "48" : {
          "sign" : 2013420311,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 244224,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_manufact_id#323] "
        },
        "21" : {
          "sign" : -872445524,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3264000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#84 = i_manufact_id#301) "
        },
        "54" : {
          "sign" : -1057087896,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1439663480,
          "rowCount" : 71983174,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
        },
        "43" : {
          "sign" : -436579858,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#189, ca_address_id#190, ca_street_number#191, ca_street_name#192, ca_street_type#193, ca_suite_number#194, ca_city#195, ca_county#196, ca_state#197, ca_zip#198, ca_country#199, ca_gmt_offset#200, ca_location_type#201], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "65" : {
          "sign" : 621874635,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 109927068,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#263) AND (ca_gmt_offset#263 = -6.00)) AND isnotnull(ca_address_sk#252)) "
        },
        "71" : {
          "sign" : -916594015,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 244224,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_manufact_id#345] "
        },
        "57" : {
          "sign" : 71747937,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2223859360,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#224) "
        },
        "32" : {
          "sign" : -109400149,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4014046764,
          "rowCount" : 143358813,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#189) "
        },
        "49" : {
          "sign" : 1437093044,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 8669952,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#322) AND (i_category#322 = Books)) "
        },
        "6" : {
          "sign" : 14494604,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5745158420,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
        },
        "36" : {
          "sign" : -1133844737,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29651561264,
          "rowCount" : 142555583,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#372 [cs_sold_date_sk#126]) "
        },
        "1" : {
          "sign" : 1136821158,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 86268,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : 864069677,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 18450,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 1999) AND (d_moy#169 = 3))) AND isnotnull(d_date_sk#161)) "
        },
        "17" : {
          "sign" : -607567904,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "25" : {
          "sign" : 428005185,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 244224,
          "rowCount" : 20352,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_manufact_id#301] "
        },
        "60" : {
          "sign" : 542040227,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "14" : {
          "sign" : 1918777458,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "47" : {
          "sign" : 798586169,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#202, i_item_id#203, i_rec_start_date#204, i_rec_end_date#205, i_item_desc#206, i_current_price#207, i_wholesale_cost#208, i_brand_id#209, i_brand#210, i_class_id#211, i_class#212, i_category_id#213, i_category#214, i_manufact_id#215, i_manufact#216, i_size#217, i_formulation#218, i_color#219, i_units#220, i_container#221, i_manager_id#222, i_product_name#223], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "31" : {
          "sign" : -1914511459,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2867176260,
          "rowCount" : 143358813,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
        },
        "69" : {
          "sign" : -2010901740,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#265) "
        },
        "58" : {
          "sign" : 1545070539,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2015034084,
          "rowCount" : 71965503,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
        },
        "64" : {
          "sign" : 1625158004,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5362296,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#252] "
        },
        "53" : {
          "sign" : 199704969,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 2013673340,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#265) "
        },
        "42" : {
          "sign" : -1008435370,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 109927068,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#200) AND (ca_gmt_offset#200 = -6.00)) AND isnotnull(ca_address_sk#189)) "
        },
        "0" : {
          "sign" : 1920037901,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 2800,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 783351469,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 246000000,
          "rowCount" : 1000000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#58, ca_address_id#59, ca_street_number#60, ca_street_name#61, ca_street_type#62, ca_suite_number#63, ca_city#64, ca_county#65, ca_state#66, ca_zip#67, ca_country#68, ca_gmt_offset#69, ca_location_type#70], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : 763558921,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#288, i_item_id#289, i_rec_start_date#290, i_rec_end_date#291, i_item_desc#292, i_current_price#293, i_wholesale_cost#294, i_brand_id#295, i_brand#296, i_class_id#297, i_class#298, i_category_id#299, i_category#300, i_manufact_id#301, i_manufact#302, i_size#303, i_formulation#304, i_color#305, i_units#306, i_container#307, i_manager_id#308, i_product_name#309], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "70" : {
          "sign" : 1487742197,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#265, i_item_id#266, i_rec_start_date#267, i_rec_end_date#268, i_item_desc#269, i_current_price#270, i_wholesale_cost#271, i_brand_id#272, i_brand#273, i_class_id#274, i_class#275, i_category_id#276, i_category#277, i_manufact_id#278, i_manufact#279, i_size#280, i_formulation#281, i_color#282, i_units#283, i_container#284, i_manager_id#285, i_product_name#286], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "2" : {
          "sign" : 163380515,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 86268,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [total_sales#0 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : 188055425,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 900,
          "rowCount" : 75,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#161] "
        },
        "18" : {
          "sign" : 808682787,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5362296,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#58] "
        },
        "30" : {
          "sign" : -553581269,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 4028484684,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#202) "
        },
        "7" : {
          "sign" : -1958780862,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8043221788,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
        },
        "29" : {
          "sign" : 14693551,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2877489060,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#215] "
        },
        "41" : {
          "sign" : -391299856,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5362296,
          "rowCount" : 446858,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ca_address_sk#189] "
        },
        "63" : {
          "sign" : -513036944,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#224, d_date_id#225, d_date#226, d_month_seq#227, d_week_seq#228, d_quarter_seq#229, d_year#230, d_dow#231, d_moy#232, d_dom#233, d_qoy#234, d_fy_year#235, d_fy_quarter_seq#236, d_fy_week_seq#237, d_day_name#238, d_quarter_name#239, d_holiday#240, d_weekend#241, d_following_holiday#242, d_first_dom#243, d_last_dom#244, d_same_day_ly#245, d_same_day_lq#246, d_current_day#247, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 2075201100,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 86268,
          "rowCount" : -1,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#1) AS total_sales#0] "
        },
        "52" : {
          "sign" : -1165385683,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1438338100,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#278] "
        },
        "28" : {
          "sign" : 1300908601,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 20540,
          "rowCount" : 1027,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#215], [i_manufact_id#215, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#3] "
        }
      },
      "links" : [ {
        "fromId" : 14,
        "fromName" : "LogicalRelation",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "LogicalRelation",
        "toId" : 16,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Filter",
        "toId" : 15,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 13,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 13,
        "fromName" : "Filter",
        "toId" : 12,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 15,
        "fromName" : "Project",
        "toId" : 11,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Join",
        "toId" : 10,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 9,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Join",
        "toId" : 8,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Project",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "LogicalRelation",
        "toId" : 23,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "Filter",
        "toId" : 22,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 22,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "LogicalRelation",
        "toId" : 26,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "Filter",
        "toId" : 25,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Project",
        "toId" : 21,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Join",
        "toId" : 7,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Join",
        "toId" : 6,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Project",
        "toId" : 5,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 37,
        "fromName" : "LogicalRelation",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "LogicalRelation",
        "toId" : 39,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Filter",
        "toId" : 38,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 36,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 36,
        "fromName" : "Filter",
        "toId" : 35,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "Project",
        "toId" : 34,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Join",
        "toId" : 33,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "LogicalRelation",
        "toId" : 42,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Filter",
        "toId" : 41,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 32,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Join",
        "toId" : 31,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Project",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "LogicalRelation",
        "toId" : 46,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "Filter",
        "toId" : 45,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 45,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "LogicalRelation",
        "toId" : 49,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "Filter",
        "toId" : 48,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Project",
        "toId" : 44,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Join",
        "toId" : 30,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Join",
        "toId" : 29,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "Project",
        "toId" : 28,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "LogicalRelation",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 59,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 59,
        "fromName" : "Filter",
        "toId" : 58,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 57,
        "fromName" : "Join",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Join",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 70,
        "fromName" : "LogicalRelation",
        "toId" : 69,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "Filter",
        "toId" : 68,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 73,
        "fromName" : "LogicalRelation",
        "toId" : 72,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 72,
        "fromName" : "Filter",
        "toId" : 71,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 71,
        "fromName" : "Project",
        "toId" : 67,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Join",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Join",
        "toId" : 52,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Project",
        "toId" : 51,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Aggregate",
        "toId" : 4,
        "toName" : "Union",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Union",
        "toId" : 3,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Aggregate",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#0 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#1) AS total_sales#0]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#1]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#371 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- Project [d_date_sk#30]\n            :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#58]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n            :        +- Join LeftSemi, (i_manufact_id#84 = i_manufact_id#301)\n            :           :- Project [i_item_sk#71, i_manufact_id#84]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- Project [i_manufact_id#301]\n            :              +- Filter (isnotnull(i_category#300) AND (i_category#300 = Books))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#288,i_item_id#289,i_rec_start_date#290,i_rec_end_date#291,i_item_desc#292,i_current_price#293,i_wholesale_cost#294,i_brand_id#295,i_brand#296,i_class_id#297,i_class#298,i_category_id#299,i_category#300,i_manufact_id#301,i_manufact#302,i_size#303,i_formulation#304,i_color#305,i_units#306,i_container#307,i_manager_id#308,i_product_name#309] parquet\n            :- Aggregate [i_manufact_id#215], [i_manufact_id#215, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#3]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#215]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#202)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#189)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#161)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#372 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#161]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 1999) AND (d_moy#169 = 3))) AND isnotnull(d_date_sk#161))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#161,d_date_id#162,d_date#163,d_month_seq#164,d_week_seq#165,d_quarter_seq#166,d_year#167,d_dow#168,d_moy#169,d_dom#170,d_qoy#171,d_fy_year#172,d_fy_quarter_seq#173,d_fy_week_seq#174,d_day_name#175,d_quarter_name#176,d_holiday#177,d_weekend#178,d_following_holiday#179,d_first_dom#180,d_last_dom#181,d_same_day_ly#182,d_same_day_lq#183,d_current_day#184,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- Project [d_date_sk#161]\n            :        :     :        +- Filter (((isnotnull(d_year#167) AND isnotnull(d_moy#169)) AND ((d_year#167 = 1999) AND (d_moy#169 = 3))) AND isnotnull(d_date_sk#161))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#161,d_date_id#162,d_date#163,d_month_seq#164,d_week_seq#165,d_quarter_seq#166,d_year#167,d_dow#168,d_moy#169,d_dom#170,d_qoy#171,d_fy_year#172,d_fy_quarter_seq#173,d_fy_week_seq#174,d_day_name#175,d_quarter_name#176,d_holiday#177,d_weekend#178,d_following_holiday#179,d_first_dom#180,d_last_dom#181,d_same_day_ly#182,d_same_day_lq#183,d_current_day#184,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#189]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#200) AND (ca_gmt_offset#200 = -6.00)) AND isnotnull(ca_address_sk#189))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#189,ca_address_id#190,ca_street_number#191,ca_street_name#192,ca_street_type#193,ca_suite_number#194,ca_city#195,ca_county#196,ca_state#197,ca_zip#198,ca_country#199,ca_gmt_offset#200,ca_location_type#201] parquet\n            :        +- Join LeftSemi, (i_manufact_id#215 = i_manufact_id#323)\n            :           :- Project [i_item_sk#202, i_manufact_id#215]\n            :           :  +- Filter isnotnull(i_item_sk#202)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#202,i_item_id#203,i_rec_start_date#204,i_rec_end_date#205,i_item_desc#206,i_current_price#207,i_wholesale_cost#208,i_brand_id#209,i_brand#210,i_class_id#211,i_class#212,i_category_id#213,i_category#214,i_manufact_id#215,i_manufact#216,i_size#217,i_formulation#218,i_color#219,i_units#220,i_container#221,i_manager_id#222,i_product_name#223] parquet\n            :           +- Project [i_manufact_id#323]\n            :              +- Filter (isnotnull(i_category#322) AND (i_category#322 = Books))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#310,i_item_id#311,i_rec_start_date#312,i_rec_end_date#313,i_item_desc#314,i_current_price#315,i_wholesale_cost#316,i_brand_id#317,i_brand#318,i_class_id#319,i_class#320,i_category_id#321,i_category#322,i_manufact_id#323,i_manufact#324,i_size#325,i_formulation#326,i_color#327,i_units#328,i_container#329,i_manager_id#330,i_product_name#331] parquet\n            +- Aggregate [i_manufact_id#278], [i_manufact_id#278, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#5]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#278]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#265)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#252)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#224)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#373 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#224]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 1999) AND (d_moy#232 = 3))) AND isnotnull(d_date_sk#224))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#224,d_date_id#225,d_date#226,d_month_seq#227,d_week_seq#228,d_quarter_seq#229,d_year#230,d_dow#231,d_moy#232,d_dom#233,d_qoy#234,d_fy_year#235,d_fy_quarter_seq#236,d_fy_week_seq#237,d_day_name#238,d_quarter_name#239,d_holiday#240,d_weekend#241,d_following_holiday#242,d_first_dom#243,d_last_dom#244,d_same_day_ly#245,d_same_day_lq#246,d_current_day#247,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- Project [d_date_sk#224]\n                     :     :        +- Filter (((isnotnull(d_year#230) AND isnotnull(d_moy#232)) AND ((d_year#230 = 1999) AND (d_moy#232 = 3))) AND isnotnull(d_date_sk#224))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#224,d_date_id#225,d_date#226,d_month_seq#227,d_week_seq#228,d_quarter_seq#229,d_year#230,d_dow#231,d_moy#232,d_dom#233,d_qoy#234,d_fy_year#235,d_fy_quarter_seq#236,d_fy_week_seq#237,d_day_name#238,d_quarter_name#239,d_holiday#240,d_weekend#241,d_following_holiday#242,d_first_dom#243,d_last_dom#244,d_same_day_ly#245,d_same_day_lq#246,d_current_day#247,... 4 more fields] parquet\n                     :     +- Project [ca_address_sk#252]\n                     :        +- Filter ((isnotnull(ca_gmt_offset#263) AND (ca_gmt_offset#263 = -6.00)) AND isnotnull(ca_address_sk#252))\n                     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#252,ca_address_id#253,ca_street_number#254,ca_street_name#255,ca_street_type#256,ca_suite_number#257,ca_city#258,ca_county#259,ca_state#260,ca_zip#261,ca_country#262,ca_gmt_offset#263,ca_location_type#264] parquet\n                     +- Join LeftSemi, (i_manufact_id#278 = i_manufact_id#345)\n                        :- Project [i_item_sk#265, i_manufact_id#278]\n                        :  +- Filter isnotnull(i_item_sk#265)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#265,i_item_id#266,i_rec_start_date#267,i_rec_end_date#268,i_item_desc#269,i_current_price#270,i_wholesale_cost#271,i_brand_id#272,i_brand#273,i_class_id#274,i_class#275,i_category_id#276,i_category#277,i_manufact_id#278,i_manufact#279,i_size#280,i_formulation#281,i_color#282,i_units#283,i_container#284,i_manager_id#285,i_product_name#286] parquet\n                        +- Project [i_manufact_id#345]\n                           +- Filter (isnotnull(i_category#344) AND (i_category#344 = Books))\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#332,i_item_id#333,i_rec_start_date#334,i_rec_end_date#335,i_item_desc#336,i_current_price#337,i_wholesale_cost#338,i_brand_id#339,i_brand#340,i_class_id#341,i_class#342,i_category_id#343,i_category#344,i_manufact_id#345,i_manufact#346,i_size#347,i_formulation#348,i_color#349,i_units#350,i_container#351,i_manager_id#352,i_product_name#353] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 87893609146,
      "inputRowCount" : 494745141
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -961213276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 739460,
            "rowCount" : 30982,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : -1741943710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : -1182772250,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 359616,
            "rowCount" : 14984,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1408478578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1035244,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 686933351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2007774589,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1035244,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 797632839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 359304,
            "rowCount" : 14971,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -590123960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1035244,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 739460,
        "inputRowCount" : 30982
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 14,
        "FinishedTasksTotalTimeInMs" : 21187.0,
        "FinishedTasksDistributionInMs" : [ 1088.0, 1359.0, 1512.0, 1610.0, 2322.0 ]
      },
      "StartTimeInMs" : 1702226905222,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1662,
        "IOBytes" : {
          "Total" : 24798398,
          "Details" : {
            "IR" : 23142269,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 456710
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1452539529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -288594114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -1226834412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71891702896572000,
            "rowCount" : 3594585144828600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : -132731490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1001172577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 61620,
            "rowCount" : 3081,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 1823698909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19696886205597000,
            "rowCount" : 984844310279850,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : 1696782129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -57387197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 313725772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 100648384055200800,
            "rowCount" : 3594585144828600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 1511209776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : 435144868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#435] "
          },
          "26" : {
            "sign" : 2125612885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 1463239750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : 1591165194,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : -350353406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39017320511517000,
            "rowCount" : 1950866025575850,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : 1883297142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : 631970068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1709469512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : 1500619301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : -415681872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 401577342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : -619151890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -816036138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
          },
          "36" : {
            "sign" : -699362834,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : 1199987009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1968037319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -1768298038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 54624248716123800,
            "rowCount" : 1950866025575850,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 1321508721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : -1739201150,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -702902716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : 81566076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 817100982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -820424376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : 1565907174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1330709009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#498] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 1706487724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 546747749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : 395728536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27575640687835800,
            "rowCount" : 984844310279850,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : 285701371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -440205207,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -330070233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520), BroadcastQueryStage 15\n            :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542), BroadcastQueryStage 17\n            +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86667545104,
        "inputRowCount" : 492238437
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 1,
        "FinishedTasksTotalTimeInMs" : 102.0,
        "FinishedTasksDistributionInMs" : [ 102.0, 102.0, 102.0, 102.0, 102.0 ]
      },
      "StartTimeInMs" : 1702226900799,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6085,
        "IOBytes" : {
          "Total" : 45940404,
          "Details" : {
            "IR" : 43541566,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 1199419
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -961213276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 1078560,
            "rowCount" : 44940,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : -1741943710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 359640,
            "rowCount" : 14985,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : -1182772250,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 359616,
            "rowCount" : 14984,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1408478578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 1509984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 686933351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2007774589,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 1509984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 797632839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 359304,
            "rowCount" : 14971,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -590123960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1509984,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1078560,
        "inputRowCount" : 44940
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226905399,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1485,
        "IOBytes" : {
          "Total" : 1293038,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 93619
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1452539529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -288594114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -1226834412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71891702896572000,
            "rowCount" : 3594585144828600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : -132731490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 11114122765026128967000,
            "rowCount" : 396932955893790320250,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1001172577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 26573731399548621990000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 1823698909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19696886205597000,
            "rowCount" : 984844310279850,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : 1696782129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -57387197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 313725772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 100648384055200800,
            "rowCount" : 3594585144828600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 1511209776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : 435144868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7938659117875806405000,
            "rowCount" : 396932955893790320250,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#435] "
          },
          "26" : {
            "sign" : 2125612885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 1463239750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4007626951821793605000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : 1591165194,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : -350353406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39017320511517000,
            "rowCount" : 1950866025575850,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : 1883297142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : 631970068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 14627445329851021980000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1709469512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : 1500619301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : -415681872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7938659117875806405000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 401577342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : -619151890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -816036138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14627445329851021980000,
            "rowCount" : 731372266492551099000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
          },
          "36" : {
            "sign" : -699362834,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020608,
            "rowCount" : 203465,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : 1199987009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 37203223959368070786000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1968037319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 5610677732550511047000,
            "rowCount" : 200381347591089680250,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -1768298038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 54624248716123800,
            "rowCount" : 1950866025575850,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 1321508721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : -1739201150,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -702902716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : 81566076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 817100982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020608,
            "rowCount" : 203465,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -820424376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : 1565907174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 37203223959368070786000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1330709009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4007626951821793605000,
            "rowCount" : 200381347591089680250,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#498] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 1706487724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 20478423461791430772000,
            "rowCount" : 731372266492551099000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 546747749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : 395728536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27575640687835800,
            "rowCount" : 984844310279850,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : 285701371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 37203223959368070786000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -440205207,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10020608,
            "rowCount" : 203465,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -330070233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520), BroadcastQueryStage 15\n            :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542), BroadcastQueryStage 17\n            +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86687814928,
        "inputRowCount" : 492236832
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226902137,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4747,
        "IOBytes" : {
          "Total" : 44812604,
          "Details" : {
            "IR" : 42413766,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 1199419
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "0" : {
            "sign" : 785506316,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 1411640007,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 143856,
            "rowCount" : 2997,
            "isRuntime" : true,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -965733470,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 143856,
            "rowCount" : 2997,
            "isRuntime" : true,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "3" : {
            "sign" : -2081096191,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 143856,
            "rowCount" : 2997,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374], HashAggregate(keys=[i_manufact_id#84], functions=[sum(total_sales#375)]) "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- LogicalQueryStage Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374], HashAggregate(keys=[i_manufact_id#84], functions=[sum(total_sales#375)])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 143856,
        "inputRowCount" : 2997
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226906360,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 524,
        "IOBytes" : {
          "Total" : 93619,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 93619,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -961213276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 61620,
            "rowCount" : 3081,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : -1741943710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : -1182772250,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1408478578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 686933351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2007774589,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 797632839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -590123960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 61620,
        "inputRowCount" : 3081
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226902752,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4132,
        "IOBytes" : {
          "Total" : 44812604,
          "Details" : {
            "IR" : 42413766,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 1199419
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -50097411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -288594114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 401577342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -1226834412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -1263473722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 61620,
            "rowCount" : 3081,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 1570001532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#435 = i_manufact_id#542) "
          },
          "15" : {
            "sign" : 1696782129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -57387197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 313725772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : -323998350,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 244224,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_manufact_id#542], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : 546747749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : 1500619301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 1321508721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : -57950670,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#435] "
          },
          "50" : {
            "sign" : -702902716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -736008719,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_manufact_id#498] "
          },
          "13" : {
            "sign" : 1591165194,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 1291748136,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#498] "
          },
          "24" : {
            "sign" : 1985701112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 244224,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_manufact_id#520], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : -1739201150,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : 1883297142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1443497934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1709469512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : 1823698909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1786653221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_manufact_id#84] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -330070233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : 395728536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -1399375504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
          },
          "36" : {
            "sign" : -619151890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : 1539950506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 824315802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : -1188067312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#498 = i_manufact_id#564) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -2042419542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -820424376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : -40264729,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 244224,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_manufact_id#564], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : -1452539529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : 650254115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -26640880,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#84 = i_manufact_id#520) "
          },
          "27" : {
            "sign" : 26362504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : -2003695155,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 2125612885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : -23300582,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -1768298038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : 1270261403,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_manufact_id#435] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -431727324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : 1511209776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : -350353406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520)\n            :           :- Project [i_item_sk#71, i_manufact_id#84]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_manufact_id#520], BroadcastQueryStage 2\n            :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542)\n            :           :- Project [i_item_sk#422, i_manufact_id#435]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_manufact_id#542], BroadcastQueryStage 8\n            +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564)\n                        :- Project [i_item_sk#485, i_manufact_id#498]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_manufact_id#564], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86860953016,
        "inputRowCount" : 492315717
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 5224.0,
        "FinishedTasksDistributionInMs" : [ 1265.0, 1289.0, 1314.0, 1356.0, 1356.0 ]
      },
      "StartTimeInMs" : 1702226900359,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6525,
        "IOBytes" : {
          "Total" : 50408649,
          "Details" : {
            "IR" : 48009811,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 1199419
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -50097411,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "34" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "12" : {
            "sign" : -288594114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : 401577342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "8" : {
            "sign" : -1226834412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 182137899,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#485) "
          },
          "4" : {
            "sign" : -1263473722,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 61620,
            "rowCount" : 3081,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 1570001532,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#435 = i_manufact_id#542) "
          },
          "15" : {
            "sign" : 1696782129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -57387197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 313725772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : -323998350,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056576,
            "rowCount" : 20290,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_manufact_id#542], BroadcastQueryStage 8 "
          },
          "33" : {
            "sign" : 546747749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "22" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "56" : {
            "sign" : 1500619301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444)) "
          },
          "55" : {
            "sign" : 1321508721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "26" : {
            "sign" : -57950670,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#435] "
          },
          "50" : {
            "sign" : -702902716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "37" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -736008719,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#485, i_manufact_id#498] "
          },
          "13" : {
            "sign" : 1591165194,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 1291748136,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#498] "
          },
          "24" : {
            "sign" : 1985701112,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056576,
            "rowCount" : 20290,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_manufact_id#520], BroadcastQueryStage 2 "
          },
          "35" : {
            "sign" : -1739201150,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "16" : {
            "sign" : 1883297142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : -1443497934,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1709469512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "59" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "48" : {
            "sign" : 1823698909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "21" : {
            "sign" : -1786653221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_manufact_id#84] "
          },
          "54" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "43" : {
            "sign" : 1107577657,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#422, i_item_id#423, i_rec_start_date#424, i_rec_end_date#425, i_item_desc#426, i_current_price#427, i_wholesale_cost#428, i_brand_id#429, i_brand#430, i_class_id#431, i_class#432, i_category_id#433, i_category#434, i_manufact_id#435, i_manufact#436, i_size#437, i_formulation#438, i_color#439, i_units#440, i_container#441, i_manager_id#442, i_product_name#443], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "57" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "32" : {
            "sign" : -330070233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "49" : {
            "sign" : 395728536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "6" : {
            "sign" : -1399375504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
          },
          "36" : {
            "sign" : -619151890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381)) "
          },
          "1" : {
            "sign" : 1539950506,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : 824315802,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "60" : {
            "sign" : -1188067312,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#498 = i_manufact_id#564) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : -2042419542,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "31" : {
            "sign" : -820424376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "58" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "64" : {
            "sign" : -40264729,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1056576,
            "rowCount" : 20290,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_manufact_id#564], BroadcastQueryStage 14 "
          },
          "53" : {
            "sign" : -1452539529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "42" : {
            "sign" : -724494949,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#422) "
          },
          "0" : {
            "sign" : 650254115,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : -26640880,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#84 = i_manufact_id#520) "
          },
          "27" : {
            "sign" : 26362504,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "2" : {
            "sign" : -2003695155,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 2125612885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "7" : {
            "sign" : -23300582,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : -1768298038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "41" : {
            "sign" : 1270261403,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#422, i_manufact_id#435] "
          },
          "63" : {
            "sign" : 1453502028,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 86904000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#485, i_item_id#486, i_rec_start_date#487, i_rec_end_date#488, i_item_desc#489, i_current_price#490, i_wholesale_cost#491, i_brand_id#492, i_brand#493, i_class_id#494, i_class#495, i_category_id#496, i_category#497, i_manufact_id#498, i_manufact#499, i_size#500, i_formulation#501, i_color#502, i_units#503, i_container#504, i_manager_id#505, i_product_name#506], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -431727324,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : 1511209776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "28" : {
            "sign" : -350353406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "LogicalQueryStage",
          "toId" : 20,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "Join",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalRelation",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 33,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 33,
          "fromName" : "Filter",
          "toId" : 32,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Project",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "LogicalQueryStage",
          "toId" : 31,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Join",
          "toId" : 30,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalQueryStage",
          "toId" : 29,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Join",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "LogicalRelation",
          "toId" : 42,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Filter",
          "toId" : 41,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Project",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalQueryStage",
          "toId" : 40,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "LogicalRelation",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "LogicalRelation",
          "toId" : 56,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Filter",
          "toId" : 55,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 53,
          "fromName" : "Filter",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "LogicalRelation",
          "toId" : 62,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Filter",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalQueryStage",
          "toId" : 60,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Join",
          "toId" : 47,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Join",
          "toId" : 46,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520)\n            :           :- Project [i_item_sk#71, i_manufact_id#84]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- LogicalQueryStage Project [i_manufact_id#520], BroadcastQueryStage 2\n            :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542)\n            :           :- Project [i_item_sk#422, i_manufact_id#435]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- LogicalQueryStage Project [i_manufact_id#542], BroadcastQueryStage 8\n            +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564)\n                        :- Project [i_item_sk#485, i_manufact_id#498]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- LogicalQueryStage Project [i_manufact_id#564], BroadcastQueryStage 14\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86863390072,
        "inputRowCount" : 492315531
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226900504,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6380,
        "IOBytes" : {
          "Total" : 45940404,
          "Details" : {
            "IR" : 43541566,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 1199419
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "4" : {
            "sign" : -961213276,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 400384,
            "rowCount" : 17025,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "5" : {
            "sign" : -1741943710,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))]) "
          },
          "6" : {
            "sign" : -1182772250,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))]) "
          },
          "1" : {
            "sign" : -1408478578,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 560537,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 686933351,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 2007774589,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 560537,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 797632839,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 359304,
            "rowCount" : 14971,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))]) "
          },
          "3" : {
            "sign" : -590123960,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 560537,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          }
        },
        "links" : [ {
          "fromId" : 5,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- LogicalQueryStage Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375], HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))])\n            :- LogicalQueryStage Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377], HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))])\n            +- LogicalQueryStage Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379], HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 400384,
        "inputRowCount" : 17025
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 2,
        "FinishedTasksNum" : 28,
        "FinishedTasksTotalTimeInMs" : 26545.0,
        "FinishedTasksDistributionInMs" : [ 220.0, 419.0, 1088.0, 1512.0, 2322.0 ]
      },
      "StartTimeInMs" : 1702226905071,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1813,
        "IOBytes" : {
          "Total" : 38129896,
          "Details" : {
            "IR" : 36105395,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 825082
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1452539529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14968824624,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "34" : {
            "sign" : 223472588,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#381], BroadcastQueryStage 4 "
          },
          "12" : {
            "sign" : -288594114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "51" : {
            "sign" : -772210292,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#472], BroadcastQueryStage 12 "
          },
          "8" : {
            "sign" : -1226834412,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71891702896572000,
            "rowCount" : 3594585144828600,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          },
          "19" : {
            "sign" : 1204149022,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#58], BroadcastQueryStage 1 "
          },
          "23" : {
            "sign" : -132731490,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "4" : {
            "sign" : -1001172577,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "sizeInBytes" : 61620,
            "rowCount" : 3081,
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          },
          "40" : {
            "sign" : 1823698909,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 19696886205597000,
            "rowCount" : 984844310279850,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          },
          "15" : {
            "sign" : 1696782129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "11" : {
            "sign" : -57387197,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 260565691776,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "9" : {
            "sign" : 313725772,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 100648384055200800,
            "rowCount" : 3594585144828600,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "44" : {
            "sign" : 1511209776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "33" : {
            "sign" : 470547457,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#381, d_date_id#382, d_date#383, d_month_seq#384, d_week_seq#385, d_quarter_seq#386, d_year#387, d_dow#388, d_moy#389, d_dom#390, d_qoy#391, d_fy_year#392, d_fy_quarter_seq#393, d_fy_week_seq#394, d_day_name#395, d_quarter_name#396, d_holiday#397, d_weekend#398, d_following_holiday#399, d_first_dom#400, d_last_dom#401, d_same_day_ly#402, d_same_day_lq#403, d_current_day#404, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "22" : {
            "sign" : 435144868,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#435] "
          },
          "26" : {
            "sign" : 2125612885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 106061353752,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "50" : {
            "sign" : -1360363427,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#444], BroadcastQueryStage 10 "
          },
          "37" : {
            "sign" : 1463239750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "13" : {
            "sign" : 1591165194,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 39925388256,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "46" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "24" : {
            "sign" : -350353406,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 39017320511517000,
            "rowCount" : 1950866025575850,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "35" : {
            "sign" : 1773770563,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [ca_address_sk#409], BroadcastQueryStage 6 "
          },
          "16" : {
            "sign" : 1883297142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
          },
          "5" : {
            "sign" : 631970068,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "10" : {
            "sign" : -1709469512,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 195424268832,
            "rowCount" : 8142677868,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "48" : {
            "sign" : 1500619301,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444)) "
          },
          "21" : {
            "sign" : -415681872,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "43" : {
            "sign" : 401577342,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 71389778976,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "32" : {
            "sign" : -619151890,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 18450,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381)) "
          },
          "49" : {
            "sign" : 1327199472,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#444, d_date_id#445, d_date#446, d_month_seq#447, d_week_seq#448, d_quarter_seq#449, d_year#450, d_dow#451, d_moy#452, d_dom#453, d_qoy#454, d_fy_year#455, d_fy_quarter_seq#456, d_fy_week_seq#457, d_day_name#458, d_quarter_name#459, d_holiday#460, d_weekend#461, d_following_holiday#462, d_first_dom#463, d_last_dom#464, d_same_day_ly#465, d_same_day_lq#466, d_current_day#467, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "6" : {
            "sign" : -816036138,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
          },
          "36" : {
            "sign" : -699362834,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542), BroadcastQueryStage 17 "
          },
          "1" : {
            "sign" : 1199987009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1968037319,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "17" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "25" : {
            "sign" : -1768298038,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 54624248716123800,
            "rowCount" : 1950866025575850,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "14" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "47" : {
            "sign" : 1321508721,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#444] "
          },
          "31" : {
            "sign" : -1739201150,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#381] "
          },
          "42" : {
            "sign" : -702902716,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 53542334232,
            "rowCount" : 2230930593,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "0" : {
            "sign" : 81566076,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 817100982,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520), BroadcastQueryStage 15 "
          },
          "27" : {
            "sign" : -820424376,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 141415138336,
            "rowCount" : 4419223073,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "2" : {
            "sign" : 1565907174,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : 1330709009,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#498] "
          },
          "18" : {
            "sign" : -711428433,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#30], BroadcastQueryStage 0 "
          },
          "30" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "7" : {
            "sign" : 1706487724,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "29" : {
            "sign" : 546747749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29651561264,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "41" : {
            "sign" : 395728536,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 27575640687835800,
            "rowCount" : 984844310279850,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "3" : {
            "sign" : 285701371,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          },
          "52" : {
            "sign" : -440205207,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564), BroadcastQueryStage 19 "
          },
          "28" : {
            "sign" : -330070233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          }
        },
        "links" : [ {
          "fromId" : 14,
          "fromName" : "LogicalRelation",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "LogicalRelation",
          "toId" : 16,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Filter",
          "toId" : 15,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 15,
          "fromName" : "Project",
          "toId" : 13,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 13,
          "fromName" : "Filter",
          "toId" : 12,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Project",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Join",
          "toId" : 10,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Project",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Join",
          "toId" : 8,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Project",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Join",
          "toId" : 6,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Project",
          "toId" : 5,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalRelation",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "LogicalRelation",
          "toId" : 32,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Filter",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 28,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Project",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "LogicalQueryStage",
          "toId" : 27,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Join",
          "toId" : 26,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "Project",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "LogicalQueryStage",
          "toId" : 25,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Join",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "LogicalQueryStage",
          "toId" : 23,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "Join",
          "toId" : 22,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 22,
          "fromName" : "Project",
          "toId" : 21,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalRelation",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "LogicalRelation",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 47,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "Project",
          "toId" : 45,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 45,
          "fromName" : "Filter",
          "toId" : 44,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "Project",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 43,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Join",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "LogicalQueryStage",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 37,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Aggregate",
          "toId" : 4,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Union",
          "toId" : 3,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Aggregate",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#30], BroadcastQueryStage 0\n            :        :     +- LogicalQueryStage Project [ca_address_sk#58], BroadcastQueryStage 1\n            :        +- LogicalQueryStage Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520), BroadcastQueryStage 15\n            :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- LogicalQueryStage Project [d_date_sk#381], BroadcastQueryStage 4\n            :        :     +- LogicalQueryStage Project [ca_address_sk#409], BroadcastQueryStage 6\n            :        +- LogicalQueryStage Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542), BroadcastQueryStage 17\n            +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- LogicalQueryStage Project [d_date_sk#444], BroadcastQueryStage 10\n                     :     +- LogicalQueryStage Project [ca_address_sk#472], BroadcastQueryStage 12\n                     +- LogicalQueryStage Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86667545104,
        "inputRowCount" : 492238437
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 5,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702226900723,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 6161,
        "IOBytes" : {
          "Total" : 45940404,
          "Details" : {
            "IR" : 43541566,
            "IW" : 0,
            "SR" : 1199419,
            "SW" : 1199419
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -444187624,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2800,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 2800,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "1" : {
            "sign" : 682176435,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86268,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 86268,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 1948659054,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86268,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 86268,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [total_sales#374 ASC NULLS FIRST], true "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [total_sales#374 ASC NULLS FIRST], true\n      +- Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n         +- Union false, false\n            :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n            :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n            :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n            :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n            :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n            :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n            :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n            :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n            :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n            :        :     :     :     :  +- Project [d_date_sk#30]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n            :        :     :     +- Project [d_date_sk#30]\n            :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#58]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n            :        +- Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520)\n            :           :- Project [i_item_sk#71, i_manufact_id#84]\n            :           :  +- Filter isnotnull(i_item_sk#71)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n            :           +- Project [i_manufact_id#520]\n            :              +- Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n            :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n            :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n            :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n            :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n            :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n            :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n            :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n            :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n            :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n            :        :     :     :     :  +- Project [d_date_sk#381]\n            :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n            :        :     :     +- Project [d_date_sk#381]\n            :        :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n            :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n            :        :     +- Project [ca_address_sk#409]\n            :        :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -6.00)) AND isnotnull(ca_address_sk#409))\n            :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n            :        +- Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542)\n            :           :- Project [i_item_sk#422, i_manufact_id#435]\n            :           :  +- Filter isnotnull(i_item_sk#422)\n            :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n            :           +- Project [i_manufact_id#542]\n            :              +- Filter (isnotnull(i_category#541) AND (i_category#541 = Books))\n            :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n            +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n               +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n                     :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n                     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n                     :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n                     :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n                     :     :     :     :  +- Project [d_date_sk#444]\n                     :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n                     :     :     +- Project [d_date_sk#444]\n                     :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n                     :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n                     :     +- Project [ca_address_sk#472]\n                     :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -6.00)) AND isnotnull(ca_address_sk#472))\n                     :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n                     +- Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564)\n                        :- Project [i_item_sk#485, i_manufact_id#498]\n                        :  +- Filter isnotnull(i_item_sk#485)\n                        :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n                        +- Project [i_manufact_id#564]\n                           +- Filter (isnotnull(i_category#563) AND (i_category#563 = Books))\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 563784922,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 2800,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [2]: [i_manufact_id#84, total_sales#374] Arguments: 100, [total_sales#374 ASC NULLS FIRST], [i_manufact_id#84, total_sales#374] "
          },
          "1" : {
            "sign" : -839237167,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 143856,
            "rowCount" : 2997,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [3]: [i_manufact_id#84, sum#590, isEmpty#591] Keys [1]: [i_manufact_id#84] Functions [1]: [sum(total_sales#375)] Aggregate Attributes [1]: [sum(total_sales#375)#582] Results [2]: [i_manufact_id#84, sum(total_sales#375)#582 AS total_sales#374] "
          },
          "2" : {
            "sign" : -165776439,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [3]: [i_manufact_id#84, sum#590, isEmpty#591] Arguments: 23 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[total_sales#374 ASC NULLS FIRST], output=[i_manufact_id#84,total_sales#374])\n+- HashAggregate(keys=[i_manufact_id#84], functions=[sum(total_sales#375)], output=[i_manufact_id#84, total_sales#374])\n   +- ShuffleQueryStage 23\n      +- Exchange hashpartitioning(i_manufact_id#84, 200), ENSURE_REQUIREMENTS, [plan_id=2378]\n         +- *(19) HashAggregate(keys=[i_manufact_id#84], functions=[partial_sum(total_sales#375)], output=[i_manufact_id#84, sum#590, isEmpty#591])\n            +- Union\n               :- *(16) HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_manufact_id#84, total_sales#375])\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 20\n               :        +- Exchange hashpartitioning(i_manufact_id#84, 200), ENSURE_REQUIREMENTS, [plan_id=2034]\n               :           +- *(13) HashAggregate(keys=[i_manufact_id#84], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_manufact_id#84, sum#593L])\n               :              +- *(13) Project [ss_ext_sales_price#21, i_manufact_id#84]\n               :                 +- *(13) BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n               :                    :- *(13) Project [ss_item_sk#8, ss_ext_sales_price#21]\n               :                    :  +- *(13) BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n               :                    :     :- *(13) Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n               :                    :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n               :                    :     :     :- *(13) Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n               :                    :     :     :  +- *(13) ColumnarToRow\n               :                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n               :                    :     :     :           +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n               :                    :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                                  +- == Final Plan ==\n                                                                     BroadcastQueryStage 1\n                                                                     +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                                                  +- == Initial Plan ==\n                                                                     BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1978]\n                                                                     +- Project [d_date_sk#30]\n                                                                        +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n                                                                           +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :                    :     :     +- BroadcastQueryStage 0\n               :                    :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n               :                    :     :           +- *(1) Project [d_date_sk#30]\n               :                    :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n               :                    :     :                 +- *(1) ColumnarToRow\n               :                    :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n               :                    :     +- BroadcastQueryStage 1\n               :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n               :                    :           +- *(2) Project [ca_address_sk#58]\n               :                    :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n               :                    :                 +- *(2) ColumnarToRow\n               :                    :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n               :                    +- BroadcastQueryStage 15\n               :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n               :                          +- *(10) BroadcastHashJoin [i_manufact_id#84], [i_manufact_id#520], LeftSemi, BuildRight, false\n               :                             :- *(10) Filter isnotnull(i_item_sk#71)\n               :                             :  +- *(10) ColumnarToRow\n               :                             :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_manufact_id#84] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>\n               :                             +- BroadcastQueryStage 2\n               :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=594]\n               :                                   +- *(3) Project [i_manufact_id#520]\n               :                                      +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n               :                                         +- *(3) ColumnarToRow\n               :                                            +- FileScan parquet spark_catalog.tpcds_100.item[i_category#519,i_manufact_id#520] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Books)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books)], ReadSchema: struct<i_category:string,i_manufact_id:int>\n               :- *(17) HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_manufact_id#435, total_sales#377])\n               :  +- AQEShuffleRead coalesced\n               :     +- ShuffleQueryStage 21\n               :        +- Exchange hashpartitioning(i_manufact_id#435, 200), ENSURE_REQUIREMENTS, [plan_id=2127]\n               :           +- *(14) HashAggregate(keys=[i_manufact_id#435], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_manufact_id#435, sum#595L])\n               :              +- *(14) Project [cs_ext_sales_price#115, i_manufact_id#435]\n               :                 +- *(14) BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n               :                    :- *(14) Project [cs_item_sk#107, cs_ext_sales_price#115]\n               :                    :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n               :                    :     :- *(14) Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n               :                    :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n               :                    :     :     :- *(14) Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n               :                    :     :     :  +- *(14) ColumnarToRow\n               :                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n               :                    :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n               :                    :     :     +- BroadcastQueryStage 4\n               :                    :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n               :                    :     +- BroadcastQueryStage 6\n               :                    :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n               :                    +- BroadcastQueryStage 17\n               :                       +- ReusedExchange [i_item_sk#422, i_manufact_id#435], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n               +- *(18) HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_manufact_id#498, total_sales#379])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 22\n                        +- Exchange hashpartitioning(i_manufact_id#498, 200), ENSURE_REQUIREMENTS, [plan_id=2220]\n                           +- *(15) HashAggregate(keys=[i_manufact_id#498], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_manufact_id#498, sum#597L])\n                              +- *(15) Project [ws_ext_sales_price#149, i_manufact_id#498]\n                                 +- *(15) BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n                                    :- *(15) Project [ws_item_sk#129, ws_ext_sales_price#149]\n                                    :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n                                    :     :- *(15) Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                                    :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n                                    :     :     :- *(15) Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n                                    :     :     :  +- *(15) ColumnarToRow\n                                    :     :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                                    :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n                                    :     :     +- BroadcastQueryStage 10\n                                    :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                    :     +- BroadcastQueryStage 12\n                                    :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n                                    +- BroadcastQueryStage 19\n                                       +- ReusedExchange [i_item_sk#485, i_manufact_id#498], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 143856,
        "inputRowCount" : 2997
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "3" : [ 498, 621, 318, 567, 426, 684, 426, 426, 663, 483, 513, 621, 513, 549, 426, 375, 513, 387, 468, 567, 318, 828, 318, 426, 483, 387, 426, 513, 387, 426, 730, 567, 684, 753, 426, 264, 567, 513, 730, 468, 707, 318, 387, 387, 549, 426, 318, 513, 567, 567, 513, 567, 387, 567, 318, 426, 567, 567, 426, 318, 684, 426, 375, 621, 387, 468, 426, 426, 264, 498, 567, 318, 483, 426, 567, 567, 468, 387, 387, 318, 426, 387, 426, 621, 387, 684, 621, 363, 621, 426, 375, 468, 0, 483, 426, 663, 291, 684, 468, 684, 621, 828, 513, 753, 426, 567, 684, 567, 621, 567, 621, 351, 684, 730, 513, 567, 387, 426, 567, 387, 426, 387, 603, 264, 483, 513, 567, 426, 498, 468, 567, 513, 621, 387, 318, 426, 387, 513, 351, 426, 567, 567, 426, 426, 318, 567, 621, 426, 426, 351, 513, 549, 684, 753, 603, 684, 621, 567, 468, 513, 567, 549, 426, 684, 684, 513, 291, 387, 621, 468, 621, 567, 513, 621, 621, 426, 426, 426, 351, 387, 0, 426, 567, 567, 621, 426, 468, 426, 426, 387, 567, 426, 387, 426, 684, 468, 387, 387, 567, 426 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 18 ],
      "Objectives" : {
        "DurationInMs" : 358,
        "TotalTasksDurationInMs" : 346,
        "IOBytes" : {
          "Total" : 93619,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 93619,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1591165194,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 39925388256,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29]) "
          },
          "4" : {
            "sign" : -857905763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7706526464,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 7706526464,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_addr_sk#12 = ca_address_sk#58) "
          },
          "9" : {
            "sign" : 1918777458,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#7, ss_item_sk#8, ss_customer_sk#9, ss_cdemo_sk#10, ss_hdemo_sk#11, ss_addr_sk#12, ss_store_sk#13, ss_promo_sk#14, ss_ticket_number#15L, ss_quantity#16, ss_wholesale_cost#17, ss_list_price#18, ss_sales_price#19, ss_ext_discount_amt#20, ss_ext_sales_price#21, ss_ext_wholesale_cost#22, ss_ext_list_price#23, ss_ext_tax#24, ss_coupon_amt#25, ss_net_paid#26, ss_net_paid_inc_tax#27, ss_net_profit#28, ss_sold_date_sk#29], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : -815008134,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 6372974040,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] "
          },
          "6" : {
            "sign" : 470163897,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              },
              "compileTime" : {
                "sizeInBytes" : 8497298720,
                "rowCount" : 265540585
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#29 = d_date_sk#30) "
          },
          "1" : {
            "sign" : 925457331,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 5745158420,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#21, i_manufact_id#84] "
          },
          "0" : {
            "sign" : 1521066795,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20540,
                "rowCount" : 1027
              },
              "compileTime" : {
                "sizeInBytes" : 20540,
                "rowCount" : 1027
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375] "
          },
          "2" : {
            "sign" : 1416051923,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8043221788,
                "rowCount" : 287257921
              },
              "compileTime" : {
                "sizeInBytes" : 8043221788,
                "rowCount" : 287257921
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#8 = i_item_sk#71) "
          },
          "7" : {
            "sign" : -288594114,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7354676784,
                "rowCount" : 262667028
              },
              "compileTime" : {
                "sizeInBytes" : 7354676784,
                "rowCount" : 262667028
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] "
          },
          "3" : {
            "sign" : 513721579,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5504661760,
                "rowCount" : 275233088
              },
              "compileTime" : {
                "sizeInBytes" : 5504661760,
                "rowCount" : 275233088
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#8, ss_ext_sales_price#21] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n+- Project [ss_ext_sales_price#21, i_manufact_id#84]\n   +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n      :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n      :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n      :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n      :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n      :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n      :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n      :     :     :     :  +- Project [d_date_sk#30]\n      :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n      :     :     +- Project [d_date_sk#30]\n      :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#58]\n      :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n      +- Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520)\n         :- Project [i_item_sk#71, i_manufact_id#84]\n         :  +- Filter isnotnull(i_item_sk#71)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n         +- Project [i_manufact_id#520]\n            +- Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1392162042,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)] PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : 1446426442,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 7706526464,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_addr_sk#12] Right keys [1]: [ca_address_sk#58] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 1701139712,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 10020608,
            "rowCount" : 203465,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#71, i_manufact_id#84] Arguments: 15 "
          },
          "9" : {
            "sign" : 835431804,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#30] Arguments: 0 "
          },
          "5" : {
            "sign" : -638214266,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 6372974040,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21] Input [5]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29, d_date_sk#30] "
          },
          "10" : {
            "sign" : -617104300,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#58] Arguments: 1 "
          },
          "6" : {
            "sign" : 453493253,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8497298720,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#29] Right keys [1]: [d_date_sk#30] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : 777372684,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5745158420,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_ext_sales_price#21, i_manufact_id#84] Input [4]: [ss_item_sk#8, ss_ext_sales_price#21, i_item_sk#71, i_manufact_id#84] "
          },
          "0" : {
            "sign" : -1920595964,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ss_ext_sales_price#21, i_manufact_id#84] Keys [1]: [i_manufact_id#84] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#21))] Aggregate Attributes [1]: [sum#592L] Results [2]: [i_manufact_id#84, sum#593L] "
          },
          "2" : {
            "sign" : 725308644,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 8043221788,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#8] Right keys [1]: [i_item_sk#71] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1429356747,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 7354676784,
            "rowCount" : 262667028,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29] Condition : (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8)) "
          },
          "3" : {
            "sign" : 658323108,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5504661760,
            "rowCount" : 275233088,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_item_sk#8, ss_ext_sales_price#21] Input [4]: [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ca_address_sk#58] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_manufact_id#84], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_manufact_id#84, sum#593L])\n+- Project [ss_ext_sales_price#21, i_manufact_id#84]\n   +- BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n      :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n      :  +- BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n      :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n      :     :  +- BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :     :     :        +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n      :     :     :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1978]\n      :     :     :                 +- Project [d_date_sk#30]\n      :     :     :                    +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n      :     :     :                       +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     :     +- BroadcastQueryStage 0\n      :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     :           +- *(1) Project [d_date_sk#30]\n      :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n      :     :                 +- *(1) ColumnarToRow\n      :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n      :     +- BroadcastQueryStage 1\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      :           +- *(2) Project [ca_address_sk#58]\n      :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n      :                 +- *(2) ColumnarToRow\n      :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n      +- BroadcastQueryStage 15\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n            +- *(10) BroadcastHashJoin [i_manufact_id#84], [i_manufact_id#520], LeftSemi, BuildRight, false\n               :- *(10) Filter isnotnull(i_item_sk#71)\n               :  +- *(10) ColumnarToRow\n               :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_manufact_id#84] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>\n               +- BroadcastQueryStage 2\n                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=594]\n                     +- *(3) Project [i_manufact_id#520]\n                        +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n                           +- *(3) ColumnarToRow\n                              +- FileScan parquet spark_catalog.tpcds_100.item[i_category#519,i_manufact_id#520] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Books)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books)], ReadSchema: struct<i_category:string,i_manufact_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 7390523432,
        "inputRowCount" : 263311974
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 2823,
        "TotalTasksDurationInMs" : 23988,
        "IOBytes" : {
          "Total" : 23505360,
          "Details" : {
            "IR" : 23142269,
            "IW" : 0,
            "SR" : 0,
            "SW" : 363091
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 546747749,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29651561264,
                "rowCount" : 142555583
              },
              "compileTime" : {
                "sizeInBytes" : 29651561264,
                "rowCount" : 142555583
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126]) "
          },
          "4" : {
            "sign" : 1877246332,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4014046764,
                "rowCount" : 143358813
              },
              "compileTime" : {
                "sizeInBytes" : 4014046764,
                "rowCount" : 143358813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_bill_addr_sk#98 = ca_address_sk#409) "
          },
          "9" : {
            "sign" : 899995805,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#93, cs_ship_date_sk#94, cs_bill_customer_sk#95, cs_bill_cdemo_sk#96, cs_bill_hdemo_sk#97, cs_bill_addr_sk#98, cs_ship_customer_sk#99, cs_ship_cdemo_sk#100, cs_ship_hdemo_sk#101, cs_ship_addr_sk#102, cs_call_center_sk#103, cs_catalog_page_sk#104, cs_ship_mode_sk#105, cs_warehouse_sk#106, cs_item_sk#107, cs_promo_sk#108, cs_order_number#109L, cs_quantity#110, cs_wholesale_cost#111, cs_list_price#112, cs_sales_price#113, cs_ext_discount_amt#114, cs_ext_sales_price#115, cs_ext_wholesale_cost#116, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 993264409,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 3324390288,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] "
          },
          "6" : {
            "sign" : -408668224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              },
              "compileTime" : {
                "sizeInBytes" : 4432520384,
                "rowCount" : 138516262
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#126 = d_date_sk#381) "
          },
          "1" : {
            "sign" : 527115127,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2877489060,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 2877489060,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#115, i_manufact_id#435] "
          },
          "0" : {
            "sign" : -977905643,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20540,
                "rowCount" : 1027
              },
              "compileTime" : {
                "sizeInBytes" : 20540,
                "rowCount" : 1027
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377] "
          },
          "2" : {
            "sign" : 1120082599,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4028484684,
                "rowCount" : 143874453
              },
              "compileTime" : {
                "sizeInBytes" : 4028484684,
                "rowCount" : 143874453
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#107 = i_item_sk#422) "
          },
          "7" : {
            "sign" : -330070233,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3991556324,
                "rowCount" : 142555583
              },
              "compileTime" : {
                "sizeInBytes" : 3991556324,
                "rowCount" : 142555583
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] "
          },
          "3" : {
            "sign" : 1677852152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2867176260,
                "rowCount" : 143358813
              },
              "compileTime" : {
                "sizeInBytes" : 2867176260,
                "rowCount" : 143358813
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#107, cs_ext_sales_price#115] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n+- Project [cs_ext_sales_price#115, i_manufact_id#435]\n   +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n      :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n      :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n      :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n      :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n      :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n      :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n      :     :     :     :  +- Project [d_date_sk#381]\n      :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n      :     :     +- Project [d_date_sk#381]\n      :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#409]\n      :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -6.00)) AND isnotnull(ca_address_sk#409))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n      +- Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542)\n         :- Project [i_item_sk#422, i_manufact_id#435]\n         :  +- Filter isnotnull(i_item_sk#422)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n         +- Project [i_manufact_id#542]\n            +- Filter (isnotnull(i_category#541) AND (i_category#541 = Books))\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -461501026,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#585)] PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)] ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : -1765733773,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4014046764,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_bill_addr_sk#98] Right keys [1]: [ca_address_sk#409] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : 1495316196,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 10020608,
            "rowCount" : 203465,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#422, i_manufact_id#435] Arguments: 17 "
          },
          "9" : {
            "sign" : -1584134031,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#381] Arguments: 4 "
          },
          "5" : {
            "sign" : -38563942,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3324390288,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115] Input [5]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126, d_date_sk#381] "
          },
          "10" : {
            "sign" : -1647213909,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#409] Arguments: 6 "
          },
          "6" : {
            "sign" : -1410070225,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4432520384,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#126] Right keys [1]: [d_date_sk#381] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -386613817,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2877489060,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_ext_sales_price#115, i_manufact_id#435] Input [4]: [cs_item_sk#107, cs_ext_sales_price#115, i_item_sk#422, i_manufact_id#435] "
          },
          "0" : {
            "sign" : -552656297,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [cs_ext_sales_price#115, i_manufact_id#435] Keys [1]: [i_manufact_id#435] Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#115))] Aggregate Attributes [1]: [sum#594L] Results [2]: [i_manufact_id#435, sum#595L] "
          },
          "2" : {
            "sign" : -1413960887,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4028484684,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#107] Right keys [1]: [i_item_sk#422] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1716942357,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3991556324,
            "rowCount" : 142555583,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126] Condition : (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107)) "
          },
          "3" : {
            "sign" : -872800459,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 2867176260,
            "rowCount" : 143358813,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_item_sk#107, cs_ext_sales_price#115] Input [4]: [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, ca_address_sk#409] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_manufact_id#435], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_manufact_id#435, sum#595L])\n+- Project [cs_ext_sales_price#115, i_manufact_id#435]\n   +- BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n      :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n      :  +- BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n      :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n      :     :  +- BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n      :     :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n      :     :     +- BroadcastQueryStage 4\n      :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     +- BroadcastQueryStage 6\n      :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      +- BroadcastQueryStage 17\n         +- ReusedExchange [i_item_sk#422, i_manufact_id#435], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4027402972,
        "inputRowCount" : 143200529
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 2557,
        "TotalTasksDurationInMs" : 7906,
        "IOBytes" : {
          "Total" : 13331498,
          "Details" : {
            "IR" : 12963126,
            "IW" : 0,
            "SR" : 0,
            "SW" : 368372
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1452539529,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 14968824624,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160]) "
          },
          "4" : {
            "sign" : -627707136,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015528872,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 2015528872,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_bill_addr_sk#133 = ca_address_sk#472) "
          },
          "9" : {
            "sign" : 542040227,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#127, ws_ship_date_sk#128, ws_item_sk#129, ws_bill_customer_sk#130, ws_bill_cdemo_sk#131, ws_bill_hdemo_sk#132, ws_bill_addr_sk#133, ws_ship_customer_sk#134, ws_ship_cdemo_sk#135, ws_ship_hdemo_sk#136, ws_ship_addr_sk#137, ws_web_page_sk#138, ws_web_site_sk#139, ws_ship_mode_sk#140, ws_warehouse_sk#141, ws_promo_sk#142, ws_order_number#143L, ws_quantity#144, ws_wholesale_cost#145, ws_list_price#146, ws_sales_price#147, ws_ext_discount_amt#148, ws_ext_sales_price#149, ws_ext_wholesale_cost#150, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "5" : {
            "sign" : 1857375064,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 1667894520,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] "
          },
          "6" : {
            "sign" : -1250906404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              },
              "compileTime" : {
                "sizeInBytes" : 2223859360,
                "rowCount" : 69495605
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#160 = d_date_sk#444) "
          },
          "1" : {
            "sign" : 1865060681,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1438338100,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 1438338100,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#149, i_manufact_id#498] "
          },
          "0" : {
            "sign" : -615616420,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20540,
                "rowCount" : 1027
              },
              "compileTime" : {
                "sizeInBytes" : 20540,
                "rowCount" : 1027
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379] "
          },
          "2" : {
            "sign" : -1917958071,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2013673340,
                "rowCount" : 71916905
              },
              "compileTime" : {
                "sizeInBytes" : 2013673340,
                "rowCount" : 71916905
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#129 = i_item_sk#485) "
          },
          "7" : {
            "sign" : 1511209776,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2015034084,
                "rowCount" : 71965503
              },
              "compileTime" : {
                "sizeInBytes" : 2015034084,
                "rowCount" : 71965503
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] "
          },
          "3" : {
            "sign" : 299669581,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1439663480,
                "rowCount" : 71983174
              },
              "compileTime" : {
                "sizeInBytes" : 1439663480,
                "rowCount" : 71983174
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#129, ws_ext_sales_price#149] "
          }
        },
        "links" : [ {
          "fromId" : 9,
          "fromName" : "LogicalRelation",
          "toId" : 8,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Filter",
          "toId" : 7,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Project",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n+- Project [ws_ext_sales_price#149, i_manufact_id#498]\n   +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n      :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n      :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n      :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n      :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n      :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n      :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n      :     :     :     :  +- Project [d_date_sk#444]\n      :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n      :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n      :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n      :     :     +- Project [d_date_sk#444]\n      :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n      :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n      :     +- Project [ca_address_sk#472]\n      :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -6.00)) AND isnotnull(ca_address_sk#472))\n      :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n      +- Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564)\n         :- Project [i_item_sk#485, i_manufact_id#498]\n         :  +- Filter isnotnull(i_item_sk#485)\n         :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n         +- Project [i_manufact_id#564]\n            +- Filter (isnotnull(i_category#563) AND (i_category#563 = Books))\n               +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1410899089,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#585)] PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)> "
          },
          "4" : {
            "sign" : 987362741,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2015528872,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_bill_addr_sk#133] Right keys [1]: [ca_address_sk#472] Join type: Inner Join condition: None "
          },
          "11" : {
            "sign" : -1507391550,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 10020608,
            "rowCount" : 203465,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#485, i_manufact_id#498] Arguments: 19 "
          },
          "9" : {
            "sign" : -1974113210,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048824,
            "rowCount" : 31,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#444] Arguments: 10 "
          },
          "5" : {
            "sign" : -1474784617,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1667894520,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149] Input [5]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160, d_date_sk#444] "
          },
          "10" : {
            "sign" : -635629642,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 24777216,
            "rowCount" : 441450,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [ca_address_sk#472] Arguments: 12 "
          },
          "6" : {
            "sign" : 884086137,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2223859360,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#160] Right keys [1]: [d_date_sk#444] Join type: Inner Join condition: None "
          },
          "1" : {
            "sign" : -1610833311,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1438338100,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_ext_sales_price#149, i_manufact_id#498] Input [4]: [ws_item_sk#129, ws_ext_sales_price#149, i_item_sk#485, i_manufact_id#498] "
          },
          "0" : {
            "sign" : -128079632,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ws_ext_sales_price#149, i_manufact_id#498] Keys [1]: [i_manufact_id#498] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#149))] Aggregate Attributes [1]: [sum#596L] Results [2]: [i_manufact_id#498, sum#597L] "
          },
          "2" : {
            "sign" : -2052093389,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2013673340,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#129] Right keys [1]: [i_item_sk#485] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1617441468,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 2015034084,
            "rowCount" : 71965503,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160] Condition : (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129)) "
          },
          "3" : {
            "sign" : -1531481582,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1439663480,
            "rowCount" : 71983174,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_item_sk#129, ws_ext_sales_price#149] Input [4]: [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ca_address_sk#472] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 6,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "BroadcastHashJoin",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_manufact_id#498], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_manufact_id#498, sum#597L])\n+- Project [ws_ext_sales_price#149, i_manufact_id#498]\n   +- BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n      :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n      :  +- BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n      :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n      :     :  +- BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n      :     :     :- Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n      :     :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :     :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n      :     :     +- BroadcastQueryStage 10\n      :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n      :     +- BroadcastQueryStage 12\n      :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n      +- BroadcastQueryStage 19\n         +- ReusedExchange [i_item_sk#485, i_manufact_id#498], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 2050880732,
        "inputRowCount" : 72610449
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 2314,
        "TotalTasksDurationInMs" : 4491,
        "IOBytes" : {
          "Total" : 6682708,
          "Details" : {
            "IR" : 6308371,
            "IW" : 0,
            "SR" : 0,
            "SW" : 374337
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 808682787,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5362296,
                "rowCount" : 446858
              },
              "compileTime" : {
                "sizeInBytes" : 5362296,
                "rowCount" : 446858
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ca_address_sk#58] "
          },
          "1" : {
            "sign" : -1312455616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 109927068,
                "rowCount" : 446858
              },
              "compileTime" : {
                "sizeInBytes" : 109927068,
                "rowCount" : 446858
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58)) "
          },
          "2" : {
            "sign" : 783351469,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              },
              "compileTime" : {
                "sizeInBytes" : 246000000,
                "rowCount" : 1000000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ca_address_sk#58, ca_address_id#59, ca_street_number#60, ca_street_name#61, ca_street_type#62, ca_suite_number#63, ca_city#64, ca_county#65, ca_state#66, ca_zip#67, ca_country#68, ca_gmt_offset#69, ca_location_type#70], `spark_catalog`.`tpcds_100`.`customer_address`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#58]\n+- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1920688038,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [ca_address_sk#58] Input [2]: [ca_address_sk#58, ca_gmt_offset#69] "
          },
          "1" : {
            "sign" : -817639575,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [ca_address_sk#58, ca_gmt_offset#69] Condition : ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58)) "
          },
          "2" : {
            "sign" : 812335580,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 5362296,
            "rowCount" : 446858,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.customer_address Output [2]: [ca_address_sk#58, ca_gmt_offset#69] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_address] PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)] ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.customer_address",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [ca_address_sk#58]\n+- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5362296,
        "inputRowCount" : 446858
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1811,
        "TotalTasksDurationInMs" : 7016,
        "IOBytes" : {
          "Total" : 4468245,
          "Details" : {
            "IR" : 4468245,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1696782129,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 900,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#30] "
          },
          "1" : {
            "sign" : 1883297142,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              },
              "compileTime" : {
                "sizeInBytes" : 18450,
                "rowCount" : 75
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30)) "
          },
          "2" : {
            "sign" : -607567904,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#30, d_date_id#31, d_date#32, d_month_seq#33, d_week_seq#34, d_quarter_seq#35, d_year#36, d_dow#37, d_moy#38, d_dom#39, d_qoy#40, d_fy_year#41, d_fy_quarter_seq#42, d_fy_week_seq#43, d_day_name#44, d_quarter_name#45, d_holiday#46, d_weekend#47, d_following_holiday#48, d_first_dom#49, d_last_dom#50, d_same_day_ly#51, d_same_day_lq#52, d_current_day#53, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#30]\n+- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1253422867,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#30] Input [3]: [d_date_sk#30, d_year#36, d_moy#38] "
          },
          "1" : {
            "sign" : 1923635074,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [d_date_sk#30, d_year#36, d_moy#38] Condition : ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30)) "
          },
          "2" : {
            "sign" : -374609788,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 900,
            "rowCount" : 75,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [3]: [d_date_sk#30, d_year#36, d_moy#38] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#30]\n+- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 900,
        "inputRowCount" : 75
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1553,
        "TotalTasksDurationInMs" : 1547,
        "IOBytes" : {
          "Total" : 93950,
          "Details" : {
            "IR" : 93950,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -334795474,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 244224,
                "rowCount" : 20352
              },
              "compileTime" : {
                "sizeInBytes" : 244224,
                "rowCount" : 20352
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_manufact_id#520] "
          },
          "1" : {
            "sign" : 1730914252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8669952,
                "rowCount" : 20352
              },
              "compileTime" : {
                "sizeInBytes" : 8669952,
                "rowCount" : 20352
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(i_category#519) AND (i_category#519 = Books)) "
          },
          "2" : {
            "sign" : 707494135,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#507, i_item_id#508, i_rec_start_date#509, i_rec_end_date#510, i_item_desc#511, i_current_price#512, i_wholesale_cost#513, i_brand_id#514, i_brand#515, i_class_id#516, i_class#517, i_category_id#518, i_category#519, i_manufact_id#520, i_manufact#521, i_size#522, i_formulation#523, i_color#524, i_units#525, i_container#526, i_manager_id#527, i_product_name#528], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_manufact_id#520]\n+- Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 128972146,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 244224,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [i_manufact_id#520] Input [2]: [i_category#519, i_manufact_id#520] "
          },
          "1" : {
            "sign" : 1553598100,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 244224,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_category#519, i_manufact_id#520] Condition : (isnotnull(i_category#519) AND (i_category#519 = Books)) "
          },
          "2" : {
            "sign" : 1729052361,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 244224,
            "rowCount" : 20352,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_category#519, i_manufact_id#520] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books)] ReadSchema: struct<i_category:string,i_manufact_id:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_manufact_id#520]\n+- Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n   +- FileScan parquet spark_catalog.tpcds_100.item[i_category#519,i_manufact_id#520] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Books)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books)], ReadSchema: struct<i_category:string,i_manufact_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 244224,
        "inputRowCount" : 20352
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 1686,
        "TotalTasksDurationInMs" : 6765,
        "IOBytes" : {
          "Total" : 416235,
          "Details" : {
            "IR" : 416235,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1180932025,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86268,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 86268,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374] "
          },
          "1" : {
            "sign" : -1913415275,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Union",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 61620,
                "rowCount" : 3081
              },
              "compileTime" : {
                "sizeInBytes" : 61620,
                "rowCount" : 3081
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Union Arguments: false, false "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_manufact_id#84], [i_manufact_id#84, sum(total_sales#375) AS total_sales#374]\n+- Union false, false\n   :- Aggregate [i_manufact_id#84], [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21)),17,2) AS total_sales#375]\n   :  +- Project [ss_ext_sales_price#21, i_manufact_id#84]\n   :     +- Join Inner, (ss_item_sk#8 = i_item_sk#71)\n   :        :- Project [ss_item_sk#8, ss_ext_sales_price#21]\n   :        :  +- Join Inner, (ss_addr_sk#12 = ca_address_sk#58)\n   :        :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n   :        :     :  +- Join Inner, (ss_sold_date_sk#29 = d_date_sk#30)\n   :        :     :     :- Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21, ss_sold_date_sk#29]\n   :        :     :     :  +- Filter (((isnotnull(ss_sold_date_sk#29) AND isnotnull(ss_addr_sk#12)) AND isnotnull(ss_item_sk#8)) AND dynamicpruning#585 [ss_sold_date_sk#29])\n   :        :     :     :     :  +- Project [d_date_sk#30]\n   :        :     :     :     :     +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n   :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n   :        :     :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#7,ss_item_sk#8,ss_customer_sk#9,ss_cdemo_sk#10,ss_hdemo_sk#11,ss_addr_sk#12,ss_store_sk#13,ss_promo_sk#14,ss_ticket_number#15L,ss_quantity#16,ss_wholesale_cost#17,ss_list_price#18,ss_sales_price#19,ss_ext_discount_amt#20,ss_ext_sales_price#21,ss_ext_wholesale_cost#22,ss_ext_list_price#23,ss_ext_tax#24,ss_coupon_amt#25,ss_net_paid#26,ss_net_paid_inc_tax#27,ss_net_profit#28,ss_sold_date_sk#29] parquet\n   :        :     :     +- Project [d_date_sk#30]\n   :        :     :        +- Filter (((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND ((d_year#36 = 1999) AND (d_moy#38 = 3))) AND isnotnull(d_date_sk#30))\n   :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_date_id#31,d_date#32,d_month_seq#33,d_week_seq#34,d_quarter_seq#35,d_year#36,d_dow#37,d_moy#38,d_dom#39,d_qoy#40,d_fy_year#41,d_fy_quarter_seq#42,d_fy_week_seq#43,d_day_name#44,d_quarter_name#45,d_holiday#46,d_weekend#47,d_following_holiday#48,d_first_dom#49,d_last_dom#50,d_same_day_ly#51,d_same_day_lq#52,d_current_day#53,... 4 more fields] parquet\n   :        :     +- Project [ca_address_sk#58]\n   :        :        +- Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_address_id#59,ca_street_number#60,ca_street_name#61,ca_street_type#62,ca_suite_number#63,ca_city#64,ca_county#65,ca_state#66,ca_zip#67,ca_country#68,ca_gmt_offset#69,ca_location_type#70] parquet\n   :        +- Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520)\n   :           :- Project [i_item_sk#71, i_manufact_id#84]\n   :           :  +- Filter isnotnull(i_item_sk#71)\n   :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n   :           +- Project [i_manufact_id#520]\n   :              +- Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n   :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n   :- Aggregate [i_manufact_id#435], [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115)),17,2) AS total_sales#377]\n   :  +- Project [cs_ext_sales_price#115, i_manufact_id#435]\n   :     +- Join Inner, (cs_item_sk#107 = i_item_sk#422)\n   :        :- Project [cs_item_sk#107, cs_ext_sales_price#115]\n   :        :  +- Join Inner, (cs_bill_addr_sk#98 = ca_address_sk#409)\n   :        :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n   :        :     :  +- Join Inner, (cs_sold_date_sk#126 = d_date_sk#381)\n   :        :     :     :- Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115, cs_sold_date_sk#126]\n   :        :     :     :  +- Filter (((isnotnull(cs_sold_date_sk#126) AND isnotnull(cs_bill_addr_sk#98)) AND isnotnull(cs_item_sk#107)) AND dynamicpruning#586 [cs_sold_date_sk#126])\n   :        :     :     :     :  +- Project [d_date_sk#381]\n   :        :     :     :     :     +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n   :        :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n   :        :     :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#93,cs_ship_date_sk#94,cs_bill_customer_sk#95,cs_bill_cdemo_sk#96,cs_bill_hdemo_sk#97,cs_bill_addr_sk#98,cs_ship_customer_sk#99,cs_ship_cdemo_sk#100,cs_ship_hdemo_sk#101,cs_ship_addr_sk#102,cs_call_center_sk#103,cs_catalog_page_sk#104,cs_ship_mode_sk#105,cs_warehouse_sk#106,cs_item_sk#107,cs_promo_sk#108,cs_order_number#109L,cs_quantity#110,cs_wholesale_cost#111,cs_list_price#112,cs_sales_price#113,cs_ext_discount_amt#114,cs_ext_sales_price#115,cs_ext_wholesale_cost#116,... 10 more fields] parquet\n   :        :     :     +- Project [d_date_sk#381]\n   :        :     :        +- Filter (((isnotnull(d_year#387) AND isnotnull(d_moy#389)) AND ((d_year#387 = 1999) AND (d_moy#389 = 3))) AND isnotnull(d_date_sk#381))\n   :        :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#381,d_date_id#382,d_date#383,d_month_seq#384,d_week_seq#385,d_quarter_seq#386,d_year#387,d_dow#388,d_moy#389,d_dom#390,d_qoy#391,d_fy_year#392,d_fy_quarter_seq#393,d_fy_week_seq#394,d_day_name#395,d_quarter_name#396,d_holiday#397,d_weekend#398,d_following_holiday#399,d_first_dom#400,d_last_dom#401,d_same_day_ly#402,d_same_day_lq#403,d_current_day#404,... 4 more fields] parquet\n   :        :     +- Project [ca_address_sk#409]\n   :        :        +- Filter ((isnotnull(ca_gmt_offset#420) AND (ca_gmt_offset#420 = -6.00)) AND isnotnull(ca_address_sk#409))\n   :        :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#409,ca_address_id#410,ca_street_number#411,ca_street_name#412,ca_street_type#413,ca_suite_number#414,ca_city#415,ca_county#416,ca_state#417,ca_zip#418,ca_country#419,ca_gmt_offset#420,ca_location_type#421] parquet\n   :        +- Join LeftSemi, (i_manufact_id#435 = i_manufact_id#542)\n   :           :- Project [i_item_sk#422, i_manufact_id#435]\n   :           :  +- Filter isnotnull(i_item_sk#422)\n   :           :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#422,i_item_id#423,i_rec_start_date#424,i_rec_end_date#425,i_item_desc#426,i_current_price#427,i_wholesale_cost#428,i_brand_id#429,i_brand#430,i_class_id#431,i_class#432,i_category_id#433,i_category#434,i_manufact_id#435,i_manufact#436,i_size#437,i_formulation#438,i_color#439,i_units#440,i_container#441,i_manager_id#442,i_product_name#443] parquet\n   :           +- Project [i_manufact_id#542]\n   :              +- Filter (isnotnull(i_category#541) AND (i_category#541 = Books))\n   :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#529,i_item_id#530,i_rec_start_date#531,i_rec_end_date#532,i_item_desc#533,i_current_price#534,i_wholesale_cost#535,i_brand_id#536,i_brand#537,i_class_id#538,i_class#539,i_category_id#540,i_category#541,i_manufact_id#542,i_manufact#543,i_size#544,i_formulation#545,i_color#546,i_units#547,i_container#548,i_manager_id#549,i_product_name#550] parquet\n   +- Aggregate [i_manufact_id#498], [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149)),17,2) AS total_sales#379]\n      +- Project [ws_ext_sales_price#149, i_manufact_id#498]\n         +- Join Inner, (ws_item_sk#129 = i_item_sk#485)\n            :- Project [ws_item_sk#129, ws_ext_sales_price#149]\n            :  +- Join Inner, (ws_bill_addr_sk#133 = ca_address_sk#472)\n            :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n            :     :  +- Join Inner, (ws_sold_date_sk#160 = d_date_sk#444)\n            :     :     :- Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149, ws_sold_date_sk#160]\n            :     :     :  +- Filter (((isnotnull(ws_sold_date_sk#160) AND isnotnull(ws_bill_addr_sk#133)) AND isnotnull(ws_item_sk#129)) AND dynamicpruning#587 [ws_sold_date_sk#160])\n            :     :     :     :  +- Project [d_date_sk#444]\n            :     :     :     :     +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n            :     :     :     :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n            :     :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#127,ws_ship_date_sk#128,ws_item_sk#129,ws_bill_customer_sk#130,ws_bill_cdemo_sk#131,ws_bill_hdemo_sk#132,ws_bill_addr_sk#133,ws_ship_customer_sk#134,ws_ship_cdemo_sk#135,ws_ship_hdemo_sk#136,ws_ship_addr_sk#137,ws_web_page_sk#138,ws_web_site_sk#139,ws_ship_mode_sk#140,ws_warehouse_sk#141,ws_promo_sk#142,ws_order_number#143L,ws_quantity#144,ws_wholesale_cost#145,ws_list_price#146,ws_sales_price#147,ws_ext_discount_amt#148,ws_ext_sales_price#149,ws_ext_wholesale_cost#150,... 10 more fields] parquet\n            :     :     +- Project [d_date_sk#444]\n            :     :        +- Filter (((isnotnull(d_year#450) AND isnotnull(d_moy#452)) AND ((d_year#450 = 1999) AND (d_moy#452 = 3))) AND isnotnull(d_date_sk#444))\n            :     :           +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#444,d_date_id#445,d_date#446,d_month_seq#447,d_week_seq#448,d_quarter_seq#449,d_year#450,d_dow#451,d_moy#452,d_dom#453,d_qoy#454,d_fy_year#455,d_fy_quarter_seq#456,d_fy_week_seq#457,d_day_name#458,d_quarter_name#459,d_holiday#460,d_weekend#461,d_following_holiday#462,d_first_dom#463,d_last_dom#464,d_same_day_ly#465,d_same_day_lq#466,d_current_day#467,... 4 more fields] parquet\n            :     +- Project [ca_address_sk#472]\n            :        +- Filter ((isnotnull(ca_gmt_offset#483) AND (ca_gmt_offset#483 = -6.00)) AND isnotnull(ca_address_sk#472))\n            :           +- Relation spark_catalog.tpcds_100.customer_address[ca_address_sk#472,ca_address_id#473,ca_street_number#474,ca_street_name#475,ca_street_type#476,ca_suite_number#477,ca_city#478,ca_county#479,ca_state#480,ca_zip#481,ca_country#482,ca_gmt_offset#483,ca_location_type#484] parquet\n            +- Join LeftSemi, (i_manufact_id#498 = i_manufact_id#564)\n               :- Project [i_item_sk#485, i_manufact_id#498]\n               :  +- Filter isnotnull(i_item_sk#485)\n               :     +- Relation spark_catalog.tpcds_100.item[i_item_sk#485,i_item_id#486,i_rec_start_date#487,i_rec_end_date#488,i_item_desc#489,i_current_price#490,i_wholesale_cost#491,i_brand_id#492,i_brand#493,i_class_id#494,i_class#495,i_category_id#496,i_category#497,i_manufact_id#498,i_manufact#499,i_size#500,i_formulation#501,i_color#502,i_units#503,i_container#504,i_manager_id#505,i_product_name#506] parquet\n               +- Project [i_manufact_id#564]\n                  +- Filter (isnotnull(i_category#563) AND (i_category#563 = Books))\n                     +- Relation spark_catalog.tpcds_100.item[i_item_sk#551,i_item_id#552,i_rec_start_date#553,i_rec_end_date#554,i_item_desc#555,i_current_price#556,i_wholesale_cost#557,i_brand_id#558,i_brand#559,i_class_id#560,i_class#561,i_category_id#562,i_category#563,i_manufact_id#564,i_manufact#565,i_size#566,i_formulation#567,i_color#568,i_units#569,i_container#570,i_manager_id#571,i_product_name#572] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -716702524,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 359616,
            "rowCount" : 14984,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_manufact_id#435, sum#595L] Keys [1]: [i_manufact_id#435] Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#115))] Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#115))#580L] Results [2]: [i_manufact_id#435, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#115))#580L,17,2) AS total_sales#377] "
          },
          "5" : {
            "sign" : -551993266,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_manufact_id#435, sum#595L] Arguments: 21 "
          },
          "6" : {
            "sign" : 523410191,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 359304,
            "rowCount" : 14971,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_manufact_id#498, sum#597L] Keys [1]: [i_manufact_id#498] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#149))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#149))#581L] Results [2]: [i_manufact_id#498, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#149))#581L,17,2) AS total_sales#379] "
          },
          "1" : {
            "sign" : -1575088498,
            "className" : "org.apache.spark.sql.execution.UnionExec",
            "sizeInBytes" : 61620,
            "rowCount" : 3081,
            "isRuntime" : false,
            "predicate" : " (unknown) Union "
          },
          "0" : {
            "sign" : 988966963,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 86268,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_manufact_id#84, total_sales#375] Keys [1]: [i_manufact_id#84] Functions [1]: [partial_sum(total_sales#375)] Aggregate Attributes [2]: [sum#588, isEmpty#589] Results [3]: [i_manufact_id#84, sum#590, isEmpty#591] "
          },
          "2" : {
            "sign" : -538649072,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 359640,
            "rowCount" : 14985,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_manufact_id#84, sum#593L] Keys [1]: [i_manufact_id#84] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#21))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#21))#579L] Results [2]: [i_manufact_id#84, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#21))#579L,17,2) AS total_sales#375] "
          },
          "7" : {
            "sign" : -144853608,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_manufact_id#498, sum#597L] Arguments: 22 "
          },
          "3" : {
            "sign" : 1257874818,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 20540,
            "rowCount" : 1027,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_manufact_id#84, sum#593L] Arguments: 20 "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "ShuffleQueryStage",
          "toId" : 2,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "ShuffleQueryStage",
          "toId" : 4,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "HashAggregate",
          "toId" : 1,
          "toName" : "Union",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Union",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_manufact_id#84], functions=[partial_sum(total_sales#375)], output=[i_manufact_id#84, sum#590, isEmpty#591])\n+- Union\n   :- HashAggregate(keys=[i_manufact_id#84], functions=[sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_manufact_id#84, total_sales#375])\n   :  +- ShuffleQueryStage 20\n   :     +- Exchange hashpartitioning(i_manufact_id#84, 200), ENSURE_REQUIREMENTS, [plan_id=2034]\n   :        +- *(13) HashAggregate(keys=[i_manufact_id#84], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#21))], output=[i_manufact_id#84, sum#593L])\n   :           +- *(13) Project [ss_ext_sales_price#21, i_manufact_id#84]\n   :              +- *(13) BroadcastHashJoin [ss_item_sk#8], [i_item_sk#71], Inner, BuildRight, false\n   :                 :- *(13) Project [ss_item_sk#8, ss_ext_sales_price#21]\n   :                 :  +- *(13) BroadcastHashJoin [ss_addr_sk#12], [ca_address_sk#58], Inner, BuildRight, false\n   :                 :     :- *(13) Project [ss_item_sk#8, ss_addr_sk#12, ss_ext_sales_price#21]\n   :                 :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight, false\n   :                 :     :     :- *(13) Filter (isnotnull(ss_addr_sk#12) AND isnotnull(ss_item_sk#8))\n   :                 :     :     :  +- *(13) ColumnarToRow\n   :                 :     :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#8,ss_addr_sk#12,ss_ext_sales_price#21,ss_sold_date_sk#29] Batched: true, DataFilters: [isnotnull(ss_addr_sk#12), isnotnull(ss_item_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#29), dynamicpruningexpression(ss_sold_date_sk#29 IN dynamicpruning#585)], PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>\n   :                 :     :     :           +- SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n   :                 :     :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                   +- == Final Plan ==\n                                                      BroadcastQueryStage 1\n                                                      +- ReusedExchange [d_date_sk#30], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                                                   +- == Initial Plan ==\n                                                      BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1978]\n                                                      +- Project [d_date_sk#30]\n                                                         +- Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n                                                            +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     :     +- BroadcastQueryStage 0\n   :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n   :                 :     :           +- *(1) Project [d_date_sk#30]\n   :                 :     :              +- *(1) Filter ((((isnotnull(d_year#36) AND isnotnull(d_moy#38)) AND (d_year#36 = 1999)) AND (d_moy#38 = 3)) AND isnotnull(d_date_sk#30))\n   :                 :     :                 +- *(1) ColumnarToRow\n   :                 :     :                    +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#30,d_year#36,d_moy#38] Batched: true, DataFilters: [isnotnull(d_year#36), isnotnull(d_moy#38), (d_year#36 = 1999), (d_moy#38 = 3), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1999), EqualTo(d_moy,3), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>\n   :                 :     +- BroadcastQueryStage 1\n   :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n   :                 :           +- *(2) Project [ca_address_sk#58]\n   :                 :              +- *(2) Filter ((isnotnull(ca_gmt_offset#69) AND (ca_gmt_offset#69 = -6.00)) AND isnotnull(ca_address_sk#58))\n   :                 :                 +- *(2) ColumnarToRow\n   :                 :                    +- FileScan parquet spark_catalog.tpcds_100.customer_address[ca_address_sk#58,ca_gmt_offset#69] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#69), (ca_gmt_offset#69 = -6.00), isnotnull(ca_address_sk#58)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/customer_..., PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-6.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>\n   :                 +- BroadcastQueryStage 15\n   :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n   :                       +- *(10) BroadcastHashJoin [i_manufact_id#84], [i_manufact_id#520], LeftSemi, BuildRight, false\n   :                          :- *(10) Filter isnotnull(i_item_sk#71)\n   :                          :  +- *(10) ColumnarToRow\n   :                          :     +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_manufact_id#84] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>\n   :                          +- BroadcastQueryStage 2\n   :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=594]\n   :                                +- *(3) Project [i_manufact_id#520]\n   :                                   +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n   :                                      +- *(3) ColumnarToRow\n   :                                         +- FileScan parquet spark_catalog.tpcds_100.item[i_category#519,i_manufact_id#520] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Books)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books)], ReadSchema: struct<i_category:string,i_manufact_id:int>\n   :- HashAggregate(keys=[i_manufact_id#435], functions=[sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_manufact_id#435, total_sales#377])\n   :  +- ShuffleQueryStage 21\n   :     +- Exchange hashpartitioning(i_manufact_id#435, 200), ENSURE_REQUIREMENTS, [plan_id=2127]\n   :        +- *(14) HashAggregate(keys=[i_manufact_id#435], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#115))], output=[i_manufact_id#435, sum#595L])\n   :           +- *(14) Project [cs_ext_sales_price#115, i_manufact_id#435]\n   :              +- *(14) BroadcastHashJoin [cs_item_sk#107], [i_item_sk#422], Inner, BuildRight, false\n   :                 :- *(14) Project [cs_item_sk#107, cs_ext_sales_price#115]\n   :                 :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#98], [ca_address_sk#409], Inner, BuildRight, false\n   :                 :     :- *(14) Project [cs_bill_addr_sk#98, cs_item_sk#107, cs_ext_sales_price#115]\n   :                 :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#126], [d_date_sk#381], Inner, BuildRight, false\n   :                 :     :     :- *(14) Filter (isnotnull(cs_bill_addr_sk#98) AND isnotnull(cs_item_sk#107))\n   :                 :     :     :  +- *(14) ColumnarToRow\n   :                 :     :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_bill_addr_sk#98,cs_item_sk#107,cs_ext_sales_price#115,cs_sold_date_sk#126] Batched: true, DataFilters: [isnotnull(cs_bill_addr_sk#98), isnotnull(cs_item_sk#107)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#126), dynamicpruningexpression(cs_sold_date_sk#126 IN dynamicpruning#5..., PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n   :                 :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n   :                 :     :     +- BroadcastQueryStage 4\n   :                 :     :        +- ReusedExchange [d_date_sk#381], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n   :                 :     +- BroadcastQueryStage 6\n   :                 :        +- ReusedExchange [ca_address_sk#409], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n   :                 +- BroadcastQueryStage 17\n   :                    +- ReusedExchange [i_item_sk#422, i_manufact_id#435], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n   +- HashAggregate(keys=[i_manufact_id#498], functions=[sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_manufact_id#498, total_sales#379])\n      +- ShuffleQueryStage 22\n         +- Exchange hashpartitioning(i_manufact_id#498, 200), ENSURE_REQUIREMENTS, [plan_id=2220]\n            +- *(15) HashAggregate(keys=[i_manufact_id#498], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#149))], output=[i_manufact_id#498, sum#597L])\n               +- *(15) Project [ws_ext_sales_price#149, i_manufact_id#498]\n                  +- *(15) BroadcastHashJoin [ws_item_sk#129], [i_item_sk#485], Inner, BuildRight, false\n                     :- *(15) Project [ws_item_sk#129, ws_ext_sales_price#149]\n                     :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#133], [ca_address_sk#472], Inner, BuildRight, false\n                     :     :- *(15) Project [ws_item_sk#129, ws_bill_addr_sk#133, ws_ext_sales_price#149]\n                     :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#160], [d_date_sk#444], Inner, BuildRight, false\n                     :     :     :- *(15) Filter (isnotnull(ws_bill_addr_sk#133) AND isnotnull(ws_item_sk#129))\n                     :     :     :  +- *(15) ColumnarToRow\n                     :     :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#129,ws_bill_addr_sk#133,ws_ext_sales_price#149,ws_sold_date_sk#160] Batched: true, DataFilters: [isnotnull(ws_bill_addr_sk#133), isnotnull(ws_item_sk#129)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#5..., PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>\n                     :     :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#585, 0, [d_date_sk#30], [id=#1981]\n                     :     :     +- BroadcastQueryStage 10\n                     :     :        +- ReusedExchange [d_date_sk#444], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=552]\n                     :     +- BroadcastQueryStage 12\n                     :        +- ReusedExchange [ca_address_sk#472], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=573]\n                     +- BroadcastQueryStage 19\n                        +- ReusedExchange [i_item_sk#485, i_manufact_id#498], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1302]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1078560,
        "inputRowCount" : 44940
      },
      "InitialPartitionNum" : 0,
      "PD" : {
        "2" : [ 1935, 2475, 1200, 2186, 1722, 2691, 1744, 1767, 2817, 2104, 1889, 2475, 1923, 2117, 1645, 1455, 2326, 1438, 1911, 2228, 1200, 3108, 1200, 1678, 1935, 1455, 1744, 1974, 1581, 1779, 3015, 2200, 2619, 3189, 1645, 990, 2144, 1962, 2961, 1935, 3051, 1200, 1590, 1455, 2144, 1700, 1200, 1935, 2200, 2243, 1948, 2014, 1455, 2187, 1200, 1656, 2298, 2186, 1733, 1200, 2835, 1700, 1455, 2401, 1590, 1974, 1645, 1735, 990, 1961, 2229, 1200, 2130, 1645, 2312, 2214, 1935, 1455, 1455, 1200, 1755, 1464, 1755, 2400, 1482, 2745, 2445, 1455, 2460, 1656, 1455, 1974, 0, 1935, 1755, 2763, 1200, 2835, 1974, 2661, 2505, 3378, 1935, 2943, 1755, 2172, 2709, 2214, 2430, 2200, 2520, 1455, 2691, 2889, 2130, 2130, 1491, 1744, 2228, 1464, 1735, 1455, 2387, 990, 1948, 2130, 2144, 1711, 1923, 1851, 2312, 1974, 2460, 1455, 1200, 1623, 1455, 1924, 1455, 1612, 2228, 2200, 1755, 1656, 1200, 2535, 2460, 1755, 1755, 1446, 1948, 2312, 2745, 3147, 2475, 2601, 2385, 2186, 1935, 1935, 2312, 2298, 1678, 2691, 2691, 1961, 1200, 1446, 2475, 2104, 2356, 2214, 2013, 2415, 2312, 1700, 1744, 1755, 1455, 1500, 0, 1601, 2284, 2257, 2460, 1755, 1935, 1678, 1735, 1473, 2133, 1744, 1464, 1656, 2709, 1948, 1546, 1455, 2201, 1744 ],
        "1" : [ 1899, 2490, 1200, 2186, 1700, 2655, 1667, 1744, 2817, 2130, 1935, 2340, 1827, 2130, 1625, 1455, 2228, 1455, 1935, 2159, 1200, 3051, 1200, 1612, 1935, 1455, 1755, 1961, 1464, 1700, 2853, 2118, 2430, 3147, 1689, 990, 2172, 1851, 2907, 1935, 3033, 1200, 1500, 1428, 2117, 1755, 1200, 1948, 2147, 2104, 1935, 1948, 1455, 2091, 1200, 1612, 2312, 2119, 1755, 1200, 2727, 1722, 1455, 2355, 1590, 1899, 1594, 1744, 990, 1962, 2228, 1200, 1974, 1656, 2340, 2093, 1935, 1419, 1455, 1200, 1744, 1455, 1755, 2385, 1500, 2619, 2370, 1455, 2400, 1656, 1455, 1887, 0, 1900, 1755, 2799, 1200, 2799, 1911, 2619, 2430, 3168, 1815, 2889, 1755, 2158, 2655, 2172, 2430, 2186, 2445, 1455, 2640, 2781, 2117, 2052, 1464, 1755, 2107, 1464, 1755, 1455, 2341, 990, 1935, 1935, 2228, 1755, 1863, 1803, 2256, 1900, 2343, 1410, 1200, 1634, 1455, 1779, 1455, 1667, 2175, 2144, 1755, 1656, 1200, 2550, 2355, 1755, 1744, 1455, 1815, 2242, 2637, 3108, 2520, 2556, 2385, 2172, 1935, 1935, 2312, 2172, 1667, 2709, 2643, 1827, 1200, 1437, 2400, 2130, 2371, 2040, 1887, 2446, 2312, 1612, 1755, 1755, 1455, 1455, 0, 1678, 2172, 2229, 2356, 1755, 1923, 1645, 1755, 1482, 2158, 1755, 1464, 1689, 2637, 1935, 1590, 1455, 2040, 1722 ],
        "0" : [ 1851, 2550, 1200, 2078, 1700, 2601, 1634, 1678, 2781, 2066, 1948, 2284, 1803, 2117, 1556, 1455, 2130, 1455, 1948, 2091, 1200, 2979, 1200, 1590, 1887, 1464, 1744, 1948, 1464, 1700, 2817, 2091, 2400, 3072, 1656, 990, 2159, 1827, 2889, 1935, 3069, 1200, 1455, 1383, 2117, 1744, 1200, 1935, 2052, 2052, 1923, 1935, 1455, 2026, 1200, 1623, 2270, 2065, 1733, 1200, 2709, 1656, 1455, 2326, 1563, 1887, 1556, 1755, 990, 1936, 2186, 1200, 1923, 1625, 2298, 2052, 1911, 1374, 1455, 1200, 1733, 1455, 1744, 2326, 1464, 2640, 2370, 1446, 2340, 1625, 1455, 1875, 0, 1924, 1755, 2712, 1200, 2799, 1911, 2619, 2340, 3189, 1803, 2799, 1755, 2130, 2637, 2091, 2284, 2145, 2387, 1455, 2553, 2709, 1988, 2027, 1482, 1744, 2013, 1455, 1755, 1455, 2285, 990, 1923, 1935, 2242, 1755, 1815, 1779, 2158, 1827, 2214, 1356, 1200, 1612, 1482, 1827, 1455, 1601, 2159, 2132, 1744, 1634, 1200, 2520, 2340, 1744, 1755, 1455, 1827, 2214, 2568, 3069, 2535, 2520, 2328, 2174, 1923, 1935, 2188, 2130, 1612, 2550, 2490, 1791, 1200, 1347, 2285, 2092, 2342, 1961, 1863, 2385, 2284, 1623, 1744, 1744, 1446, 1437, 0, 1634, 2130, 2200, 2242, 1744, 1923, 1667, 1755, 1482, 2144, 1755, 1473, 1590, 2640, 1923, 1581, 1455, 1987, 1689 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 756,
        "TotalTasksDurationInMs" : 1958,
        "IOBytes" : {
          "Total" : 1199419,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 1105800,
            "SW" : 93619
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 167081304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3264000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 3264000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (i_manufact_id#84 = i_manufact_id#520) "
          },
          "1" : {
            "sign" : -1786653221,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3264000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 3264000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#71, i_manufact_id#84] "
          },
          "2" : {
            "sign" : -1729853405,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(i_item_sk#71) "
          },
          "3" : {
            "sign" : 655949841,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#71, i_item_id#72, i_rec_start_date#73, i_rec_end_date#74, i_item_desc#75, i_current_price#76, i_wholesale_cost#77, i_brand_id#78, i_brand#79, i_class_id#80, i_class#81, i_category_id#82, i_category#83, i_manufact_id#84, i_manufact#85, i_size#86, i_formulation#87, i_color#88, i_units#89, i_container#90, i_manager_id#91, i_product_name#92], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "LogicalRelation",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Join",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Join LeftSemi, (i_manufact_id#84 = i_manufact_id#520)\n:- Project [i_item_sk#71, i_manufact_id#84]\n:  +- Filter isnotnull(i_item_sk#71)\n:     +- Relation spark_catalog.tpcds_100.item[i_item_sk#71,i_item_id#72,i_rec_start_date#73,i_rec_end_date#74,i_item_desc#75,i_current_price#76,i_wholesale_cost#77,i_brand_id#78,i_brand#79,i_class_id#80,i_class#81,i_category_id#82,i_category#83,i_manufact_id#84,i_manufact#85,i_size#86,i_formulation#87,i_color#88,i_units#89,i_container#90,i_manager_id#91,i_product_name#92] parquet\n+- Project [i_manufact_id#520]\n   +- Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n      +- Relation spark_catalog.tpcds_100.item[i_item_sk#507,i_item_id#508,i_rec_start_date#509,i_rec_end_date#510,i_item_desc#511,i_current_price#512,i_wholesale_cost#513,i_brand_id#514,i_brand#515,i_class_id#516,i_class#517,i_category_id#518,i_category#519,i_manufact_id#520,i_manufact#521,i_size#522,i_formulation#523,i_color#524,i_units#525,i_container#526,i_manager_id#527,i_product_name#528] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 2048554816,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [i_manufact_id#84] Right keys [1]: [i_manufact_id#520] Join type: LeftSemi Join condition: None "
          },
          "1" : {
            "sign" : -1809424416,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#71, i_manufact_id#84] Condition : isnotnull(i_item_sk#71) "
          },
          "2" : {
            "sign" : 584099278,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3264000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#71, i_manufact_id#84] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk)] ReadSchema: struct<i_item_sk:int,i_manufact_id:int> "
          },
          "3" : {
            "sign" : -1303275849,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1056576,
            "rowCount" : 20290,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [i_manufact_id#520] Arguments: 2 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "BroadcastQueryStage",
          "toId" : 0,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "BroadcastHashJoin [i_manufact_id#84], [i_manufact_id#520], LeftSemi, BuildRight, false\n:- Filter isnotnull(i_item_sk#71)\n:  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#71,i_manufact_id#84] Batched: true, DataFilters: [isnotnull(i_item_sk#71)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>\n+- BroadcastQueryStage 2\n   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=594]\n      +- *(3) Project [i_manufact_id#520]\n         +- *(3) Filter (isnotnull(i_category#519) AND (i_category#519 = Books))\n            +- *(3) ColumnarToRow\n               +- FileScan parquet spark_catalog.tpcds_100.item[i_category#519,i_manufact_id#520] Batched: true, DataFilters: [isnotnull(i_category#519), (i_category#519 = Books)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Books)], ReadSchema: struct<i_category:string,i_manufact_id:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 4320576,
        "inputRowCount" : 224290
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 1375,
        "TotalTasksDurationInMs" : 3374,
        "IOBytes" : {
          "Total" : 1127800,
          "Details" : {
            "IR" : 1127800,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702226897972,
  "SQLEndTimeInMs" : 1702226906884,
  "Objectives" : {
    "DurationInMs" : 8912,
    "IOBytes" : {
      "Total" : 50918834,
      "Details" : {
        "IR" : 48519996,
        "IW" : 0,
        "SR" : 1199419,
        "SW" : 1199419
      }
    }
  }
}
