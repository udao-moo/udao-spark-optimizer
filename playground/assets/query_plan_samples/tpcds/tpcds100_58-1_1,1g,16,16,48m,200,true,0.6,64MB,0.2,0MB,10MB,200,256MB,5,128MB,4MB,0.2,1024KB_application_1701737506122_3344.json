{
  "CompileTimeLQP" : {
    "LQP" : {
      "operators" : {
        "45" : {
          "sign" : 1346787225,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#382) AND (d_week_seq#382 = scalar-subquery#10 [])) "
        },
        "34" : {
          "sign" : 1361032772,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 2770325240,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111] "
        },
        "67" : {
          "sign" : -1995552696,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#207, i_item_id#208] "
        },
        "12" : {
          "sign" : 254996121,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7435136380,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#61) "
        },
        "66" : {
          "sign" : -1001092430,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#406, d_date_id#407, d_date#408, d_month_seq#409, d_week_seq#410, d_quarter_seq#411, d_year#412, d_dow#413, d_moy#414, d_dom#415, d_qoy#416, d_fy_year#417, d_fy_quarter_seq#418, d_fy_week_seq#419, d_day_name#420, d_quarter_name#421, d_holiday#422, d_weekend#423, d_following_holiday#424, d_first_dom#425, d_last_dom#426, d_same_day_ly#427, d_same_day_lq#428, d_current_day#429, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "51" : {
          "sign" : -694336061,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#208], [i_item_id#208 AS item_id#12, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#13] "
        },
        "8" : {
          "sign" : 295979905,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#40], [i_item_id#40 AS item_id#4, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#5] "
        },
        "19" : {
          "sign" : 697739377,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#61) "
        },
        "23" : {
          "sign" : 350849060,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#350, d_date_id#351, d_date#352, d_month_seq#353, d_week_seq#354, d_quarter_seq#355, d_year#356, d_dow#357, d_moy#358, d_dom#359, d_qoy#360, d_fy_year#361, d_fy_quarter_seq#362, d_fy_week_seq#363, d_day_name#364, d_quarter_name#365, d_holiday#366, d_weekend#367, d_following_holiday#368, d_first_dom#369, d_last_dom#370, d_same_day_ly#371, d_same_day_lq#372, d_current_day#373, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "62" : {
          "sign" : -609482840,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#229) "
        },
        "4" : {
          "sign" : -1756333214,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 9155696,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#4 = item_id#12) AND (cast(ss_item_rev#5 as decimal(19,3)) >= (0.9 * ws_item_rev#13))) AND (cast(ss_item_rev#5 as decimal(20,3)) <= (1.1 * ws_item_rev#13))) AND (cast(cs_item_rev#9 as decimal(19,3)) >= (0.9 * ws_item_rev#13))) AND (cast(cs_item_rev#9 as decimal(20,3)) <= (1.1 * ws_item_rev#13))) AND (cast(ws_item_rev#13 as decimal(19,3)) >= (0.9 * ss_item_rev#5))) AND (cast(ws_item_rev#13 as decimal(20,3)) <= (1.1 * ss_item_rev#5))) AND (cast(ws_item_rev#13 as decimal(19,3)) >= (0.9 * cs_item_rev#9))) AND (cast(ws_item_rev#13 as decimal(20,3)) <= (1.1 * cs_item_rev#9))) "
        },
        "40" : {
          "sign" : -1912200232,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1168784,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#181 = d_date#380) "
        },
        "15" : {
          "sign" : 437822322,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "11" : {
          "sign" : -1691940203,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5310811700,
          "rowCount" : 265540585,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30] "
        },
        "9" : {
          "sign" : -166679406,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12639348524,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#30, i_item_id#40] "
        },
        "44" : {
          "sign" : -1328093825,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#380] "
        },
        "33" : {
          "sign" : 706542687,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 7481471556,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#103 = i_item_sk#157) "
        },
        "22" : {
          "sign" : 894285332,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#354) AND (d_week_seq#354 = scalar-subquery#6 [])) "
        },
        "56" : {
          "sign" : -964311123,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1727606976,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] "
        },
        "55" : {
          "sign" : -1408725452,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1945876940,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#156 = d_date_sk#229) "
        },
        "26" : {
          "sign" : 1110715186,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#258, d_date_id#259, d_date#260, d_month_seq#261, d_week_seq#262, d_quarter_seq#263, d_year#264, d_dow#265, d_moy#266, d_dom#267, d_qoy#268, d_fy_year#269, d_fy_quarter_seq#270, d_fy_week_seq#271, d_day_name#272, d_quarter_name#273, d_holiday#274, d_weekend#275, d_following_holiday#276, d_first_dom#277, d_last_dom#278, d_same_day_ly#279, d_same_day_lq#280, d_current_day#281, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "50" : {
          "sign" : -406703865,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#13) "
        },
        "37" : {
          "sign" : 1618637706,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#446 [cs_sold_date_sk#122]) "
        },
        "68" : {
          "sign" : 1285138599,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#207) AND isnotnull(i_item_id#208)) "
        },
        "61" : {
          "sign" : 125735785,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1168784,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#229, d_date#231] "
        },
        "13" : {
          "sign" : -72889039,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6601088472,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] "
        },
        "46" : {
          "sign" : -1165219482,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#378, d_date_id#379, d_date#380, d_month_seq#381, d_week_seq#382, d_quarter_seq#383, d_year#384, d_dow#385, d_moy#386, d_dom#387, d_qoy#388, d_fy_year#389, d_fy_quarter_seq#390, d_fy_week_seq#391, d_day_name#392, d_quarter_name#393, d_holiday#394, d_weekend#395, d_following_holiday#396, d_first_dom#397, d_last_dom#398, d_same_day_ly#399, d_same_day_lq#400, d_current_day#401, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "24" : {
          "sign" : -678836297,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_week_seq#262] "
        },
        "35" : {
          "sign" : 760296652,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3878455336,
          "rowCount" : 138516262,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#122 = d_date_sk#179) "
        },
        "16" : {
          "sign" : 849206190,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
        },
        "5" : {
          "sign" : 813885125,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 5410184,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [item_id#4, ss_item_rev#5, cs_item_rev#9] "
        },
        "10" : {
          "sign" : 110899686,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 14937411892,
          "rowCount" : 287257921,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#39) "
        },
        "59" : {
          "sign" : 1325101554,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#229] "
        },
        "48" : {
          "sign" : -607751305,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#157) AND isnotnull(i_item_id#158)) "
        },
        "21" : {
          "sign" : 1945636295,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#352] "
        },
        "54" : {
          "sign" : 423304479,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1389912100,
          "rowCount" : 69495605,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145] "
        },
        "43" : {
          "sign" : 1846140932,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#179, d_date_id#180, d_date#181, d_month_seq#182, d_week_seq#183, d_quarter_seq#184, d_year#185, d_dow#186, d_moy#187, d_dom#188, d_qoy#189, d_fy_year#190, d_fy_quarter_seq#191, d_fy_week_seq#192, d_day_name#193, d_quarter_name#194, d_holiday#195, d_weekend#196, d_following_holiday#197, d_first_dom#198, d_last_dom#199, d_same_day_ly#200, d_same_day_lq#201, d_current_day#202, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "65" : {
          "sign" : 1977890857,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#410) AND (d_week_seq#410 = scalar-subquery#14 [])) "
        },
        "57" : {
          "sign" : 1097830706,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#447 [ws_sold_date_sk#156]) "
        },
        "32" : {
          "sign" : 1992949935,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 6330475932,
          "rowCount" : 143874453,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#111, i_item_id#158] "
        },
        "49" : {
          "sign" : 1273813775,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#157, i_item_id#158, i_rec_start_date#159, i_rec_end_date#160, i_item_desc#161, i_current_price#162, i_wholesale_cost#163, i_brand_id#164, i_brand#165, i_class_id#166, i_class#167, i_category_id#168, i_category#169, i_manufact_id#170, i_manufact#171, i_size#172, i_formulation#173, i_color#174, i_units#175, i_container#176, i_manager_id#177, i_product_name#178], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "6" : {
          "sign" : -1151424950,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 8323360,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#4 = item_id#8) AND (cast(ss_item_rev#5 as decimal(19,3)) >= (0.9 * cs_item_rev#9))) AND (cast(ss_item_rev#5 as decimal(20,3)) <= (1.1 * cs_item_rev#9))) AND (cast(cs_item_rev#9 as decimal(19,3)) >= (0.9 * ss_item_rev#5))) AND (cast(cs_item_rev#9 as decimal(20,3)) <= (1.1 * ss_item_rev#5))) "
        },
        "36" : {
          "sign" : -554451309,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3438552408,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] "
        },
        "1" : {
          "sign" : -1193704023,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
          "sizeInBytes" : 12901208,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) LocalLimit Arguments: 100 "
        },
        "39" : {
          "sign" : 1179063871,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#179] "
        },
        "17" : {
          "sign" : 595468641,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1168784,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#352) "
        },
        "25" : {
          "sign" : -717527162,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 246,
          "rowCount" : 1,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19)) "
        },
        "60" : {
          "sign" : 865545373,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 1168784,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#231 = d_date#408) "
        },
        "14" : {
          "sign" : -679958718,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 41806893656,
          "rowCount" : 275045353,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#445 [ss_sold_date_sk#38]) "
        },
        "47" : {
          "sign" : -383775016,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#157, i_item_id#158] "
        },
        "31" : {
          "sign" : -1159790840,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Aggregate Arguments: [i_item_id#158], [i_item_id#158 AS item_id#8, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#9] "
        },
        "69" : {
          "sign" : -77053441,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#207, i_item_id#208, i_rec_start_date#209, i_rec_end_date#210, i_item_desc#211, i_current_price#212, i_wholesale_cost#213, i_brand_id#214, i_brand#215, i_class_id#216, i_class#217, i_category_id#218, i_category#219, i_manufact_id#220, i_manufact#221, i_size#222, i_formulation#223, i_color#224, i_units#225, i_container#226, i_manager_id#227, i_product_name#228], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "58" : {
          "sign" : -1073099478,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 14972593792,
          "rowCount" : 71983624,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#123, ws_ship_date_sk#124, ws_item_sk#125, ws_bill_customer_sk#126, ws_bill_cdemo_sk#127, ws_bill_hdemo_sk#128, ws_bill_addr_sk#129, ws_ship_customer_sk#130, ws_ship_cdemo_sk#131, ws_ship_hdemo_sk#132, ws_ship_addr_sk#133, ws_web_page_sk#134, ws_web_site_sk#135, ws_ship_mode_sk#136, ws_warehouse_sk#137, ws_promo_sk#138, ws_order_number#139L, ws_quantity#140, ws_wholesale_cost#141, ws_list_price#142, ws_sales_price#143, ws_ext_discount_amt#144, ws_ext_sales_price#145, ws_ext_wholesale_cost#146, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "64" : {
          "sign" : 1242308062,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 876588,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date#408] "
        },
        "53" : {
          "sign" : -1190352910,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
          "sizeInBytes" : 3739679060,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#125 = i_item_sk#207) "
        },
        "42" : {
          "sign" : -1121559581,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#179) "
        },
        "0" : {
          "sign" : 1358474050,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
          "sizeInBytes" : 11600,
          "rowCount" : 100,
          "isRuntime" : false,
          "predicate" : " (unknown) GlobalLimit Arguments: 100 "
        },
        "20" : {
          "sign" : 311601156,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#61, d_date_id#62, d_date#63, d_month_seq#64, d_week_seq#65, d_quarter_seq#66, d_year#67, d_dow#68, d_moy#69, d_dom#70, d_qoy#71, d_fy_year#72, d_fy_quarter_seq#73, d_fy_week_seq#74, d_day_name#75, d_quarter_name#76, d_holiday#77, d_weekend#78, d_following_holiday#79, d_first_dom#80, d_last_dom#81, d_same_day_ly#82, d_same_day_lq#83, d_current_day#84, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "27" : {
          "sign" : -1664788045,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 8160000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [i_item_sk#39, i_item_id#40] "
        },
        "2" : {
          "sign" : -827791892,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
          "sizeInBytes" : 12901208,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Sort Arguments: [item_id#4 ASC NULLS FIRST, ss_item_rev#5 ASC NULLS FIRST], true "
        },
        "38" : {
          "sign" : -1864218542,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 29800787536,
          "rowCount" : 143273017,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#89, cs_ship_date_sk#90, cs_bill_customer_sk#91, cs_bill_cdemo_sk#92, cs_bill_hdemo_sk#93, cs_bill_addr_sk#94, cs_ship_customer_sk#95, cs_ship_cdemo_sk#96, cs_ship_hdemo_sk#97, cs_ship_addr_sk#98, cs_call_center_sk#99, cs_catalog_page_sk#100, cs_ship_mode_sk#101, cs_warehouse_sk#102, cs_item_sk#103, cs_promo_sk#104, cs_order_number#105L, cs_quantity#106, cs_wholesale_cost#107, cs_list_price#108, cs_sales_price#109, cs_ext_discount_amt#110, cs_ext_sales_price#111, cs_ext_wholesale_cost#112, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "18" : {
          "sign" : -422388959,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1168784,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#61, d_date#63] "
        },
        "30" : {
          "sign" : -98329535,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#9) "
        },
        "7" : {
          "sign" : -130596802,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 4577848,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#5) "
        },
        "29" : {
          "sign" : 74022018,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#39, i_item_id#40, i_rec_start_date#41, i_rec_end_date#42, i_item_desc#43, i_current_price#44, i_wholesale_cost#45, i_brand_id#46, i_brand#47, i_class_id#48, i_class#49, i_category_id#50, i_category#51, i_manufact_id#52, i_manufact#53, i_size#54, i_formulation#55, i_color#56, i_units#57, i_container#58, i_manager_id#59, i_product_name#60], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "41" : {
          "sign" : -432323612,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 1168784,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [d_date_sk#179, d_date#181] "
        },
        "63" : {
          "sign" : -521551057,
          "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
          "sizeInBytes" : 17970054,
          "rowCount" : 73049,
          "isRuntime" : false,
          "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#229, d_date_id#230, d_date#231, d_month_seq#232, d_week_seq#233, d_quarter_seq#234, d_year#235, d_dow#236, d_moy#237, d_dom#238, d_qoy#239, d_fy_year#240, d_fy_quarter_seq#241, d_fy_week_seq#242, d_day_name#243, d_quarter_name#244, d_holiday#245, d_weekend#246, d_following_holiday#247, d_first_dom#248, d_last_dom#249, d_same_day_ly#250, d_same_day_lq#251, d_current_day#252, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
        },
        "3" : {
          "sign" : 2062710908,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 12901208,
          "rowCount" : 104042,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [item_id#4, ss_item_rev#5, (((ss_item_rev#5 / ((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13)) / 3) * 100) AS ss_dev#0, cs_item_rev#9, (((cs_item_rev#9 / ((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13)) / 3) * 100) AS cs_dev#1, ws_item_rev#13, (((ws_item_rev#13 / ((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13)) / 3) * 100) AS ws_dev#2, (((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13) / 3) AS average#3] "
        },
        "52" : {
          "sign" : -1827303355,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
          "sizeInBytes" : 3164343820,
          "rowCount" : 71916905,
          "isRuntime" : false,
          "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#145, i_item_id#208] "
        },
        "28" : {
          "sign" : -1490072267,
          "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
          "sizeInBytes" : 86904000,
          "rowCount" : 204000,
          "isRuntime" : false,
          "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40)) "
        }
      },
      "links" : [ {
        "fromId" : 15,
        "fromName" : "LogicalRelation",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 20,
        "fromName" : "LogicalRelation",
        "toId" : 19,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 19,
        "fromName" : "Filter",
        "toId" : 18,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 18,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 23,
        "fromName" : "LogicalRelation",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 26,
        "fromName" : "LogicalRelation",
        "toId" : 25,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 25,
        "fromName" : "Filter",
        "toId" : 24,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 22,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 22,
        "fromName" : "Filter",
        "toId" : 21,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 21,
        "fromName" : "Project",
        "toId" : 17,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 17,
        "fromName" : "Join",
        "toId" : 16,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 14,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 14,
        "fromName" : "Filter",
        "toId" : 13,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 13,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 16,
        "fromName" : "Project",
        "toId" : 12,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 12,
        "fromName" : "Join",
        "toId" : 11,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 11,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 29,
        "fromName" : "LogicalRelation",
        "toId" : 28,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 28,
        "fromName" : "Filter",
        "toId" : 27,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 27,
        "fromName" : "Project",
        "toId" : 10,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 10,
        "fromName" : "Join",
        "toId" : 9,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 9,
        "fromName" : "Project",
        "toId" : 8,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 8,
        "fromName" : "Aggregate",
        "toId" : 7,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 7,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 38,
        "fromName" : "LogicalRelation",
        "toId" : 37,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 43,
        "fromName" : "LogicalRelation",
        "toId" : 42,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 42,
        "fromName" : "Filter",
        "toId" : 41,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 41,
        "fromName" : "Project",
        "toId" : 40,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 46,
        "fromName" : "LogicalRelation",
        "toId" : 45,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 45,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 45,
        "fromName" : "Filter",
        "toId" : 44,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 44,
        "fromName" : "Project",
        "toId" : 40,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 40,
        "fromName" : "Join",
        "toId" : 39,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Project",
        "toId" : 37,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 37,
        "fromName" : "Filter",
        "toId" : 36,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 36,
        "fromName" : "Project",
        "toId" : 35,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 39,
        "fromName" : "Project",
        "toId" : 35,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 35,
        "fromName" : "Join",
        "toId" : 34,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 34,
        "fromName" : "Project",
        "toId" : 33,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 49,
        "fromName" : "LogicalRelation",
        "toId" : 48,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 48,
        "fromName" : "Filter",
        "toId" : 47,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 47,
        "fromName" : "Project",
        "toId" : 33,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 33,
        "fromName" : "Join",
        "toId" : 32,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 32,
        "fromName" : "Project",
        "toId" : 31,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 31,
        "fromName" : "Aggregate",
        "toId" : 30,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 30,
        "fromName" : "Filter",
        "toId" : 6,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 6,
        "fromName" : "Join",
        "toId" : 5,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 5,
        "fromName" : "Project",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 58,
        "fromName" : "LogicalRelation",
        "toId" : 57,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 63,
        "fromName" : "LogicalRelation",
        "toId" : 62,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 62,
        "fromName" : "Filter",
        "toId" : 61,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 61,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 66,
        "fromName" : "LogicalRelation",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 24,
        "fromName" : "Project",
        "toId" : 65,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 65,
        "fromName" : "Filter",
        "toId" : 64,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 64,
        "fromName" : "Project",
        "toId" : 60,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 60,
        "fromName" : "Join",
        "toId" : 59,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "Project",
        "toId" : 57,
        "toName" : "Filter",
        "linkType" : "Subquery"
      }, {
        "fromId" : 57,
        "fromName" : "Filter",
        "toId" : 56,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 56,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 59,
        "fromName" : "Project",
        "toId" : 55,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 55,
        "fromName" : "Join",
        "toId" : 54,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 54,
        "fromName" : "Project",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 69,
        "fromName" : "LogicalRelation",
        "toId" : 68,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 68,
        "fromName" : "Filter",
        "toId" : 67,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 67,
        "fromName" : "Project",
        "toId" : 53,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 53,
        "fromName" : "Join",
        "toId" : 52,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 52,
        "fromName" : "Project",
        "toId" : 51,
        "toName" : "Aggregate",
        "linkType" : "Operator"
      }, {
        "fromId" : 51,
        "fromName" : "Aggregate",
        "toId" : 50,
        "toName" : "Filter",
        "linkType" : "Operator"
      }, {
        "fromId" : 50,
        "fromName" : "Filter",
        "toId" : 4,
        "toName" : "Join",
        "linkType" : "Operator"
      }, {
        "fromId" : 4,
        "fromName" : "Join",
        "toId" : 3,
        "toName" : "Project",
        "linkType" : "Operator"
      }, {
        "fromId" : 3,
        "fromName" : "Project",
        "toId" : 2,
        "toName" : "Sort",
        "linkType" : "Operator"
      }, {
        "fromId" : 2,
        "fromName" : "Sort",
        "toId" : 1,
        "toName" : "LocalLimit",
        "linkType" : "Operator"
      }, {
        "fromId" : 1,
        "fromName" : "LocalLimit",
        "toId" : 0,
        "toName" : "GlobalLimit",
        "linkType" : "Operator"
      } ],
      "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#4 ASC NULLS FIRST, ss_item_rev#5 ASC NULLS FIRST], true\n      +- Project [item_id#4, ss_item_rev#5, (((ss_item_rev#5 / ((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13)) / 3) * 100) AS ss_dev#0, cs_item_rev#9, (((cs_item_rev#9 / ((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13)) / 3) * 100) AS cs_dev#1, ws_item_rev#13, (((ws_item_rev#13 / ((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13)) / 3) * 100) AS ws_dev#2, (((ss_item_rev#5 + cs_item_rev#9) + ws_item_rev#13) / 3) AS average#3]\n         +- Join Inner, (((((((((item_id#4 = item_id#12) AND (cast(ss_item_rev#5 as decimal(19,3)) >= (0.9 * ws_item_rev#13))) AND (cast(ss_item_rev#5 as decimal(20,3)) <= (1.1 * ws_item_rev#13))) AND (cast(cs_item_rev#9 as decimal(19,3)) >= (0.9 * ws_item_rev#13))) AND (cast(cs_item_rev#9 as decimal(20,3)) <= (1.1 * ws_item_rev#13))) AND (cast(ws_item_rev#13 as decimal(19,3)) >= (0.9 * ss_item_rev#5))) AND (cast(ws_item_rev#13 as decimal(20,3)) <= (1.1 * ss_item_rev#5))) AND (cast(ws_item_rev#13 as decimal(19,3)) >= (0.9 * cs_item_rev#9))) AND (cast(ws_item_rev#13 as decimal(20,3)) <= (1.1 * cs_item_rev#9)))\n            :- Project [item_id#4, ss_item_rev#5, cs_item_rev#9]\n            :  +- Join Inner, (((((item_id#4 = item_id#8) AND (cast(ss_item_rev#5 as decimal(19,3)) >= (0.9 * cs_item_rev#9))) AND (cast(ss_item_rev#5 as decimal(20,3)) <= (1.1 * cs_item_rev#9))) AND (cast(cs_item_rev#9 as decimal(19,3)) >= (0.9 * ss_item_rev#5))) AND (cast(cs_item_rev#9 as decimal(20,3)) <= (1.1 * ss_item_rev#5)))\n            :     :- Filter isnotnull(ss_item_rev#5)\n            :     :  +- Aggregate [i_item_id#40], [i_item_id#40 AS item_id#4, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#5]\n            :     :     +- Project [ss_ext_sales_price#30, i_item_id#40]\n            :     :        +- Join Inner, (ss_item_sk#17 = i_item_sk#39)\n            :     :           :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n            :     :           :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#61)\n            :     :           :     :- Project [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38]\n            :     :           :     :  +- Filter ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#445 [ss_sold_date_sk#38])\n            :     :           :     :     :  +- Project [d_date_sk#61]\n            :     :           :     :     :     +- Join LeftSemi, (d_date#63 = d_date#352)\n            :     :           :     :     :        :- Project [d_date_sk#61, d_date#63]\n            :     :           :     :     :        :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :     :     :        +- Project [d_date#352]\n            :     :           :     :     :           +- Filter (isnotnull(d_week_seq#354) AND (d_week_seq#354 = scalar-subquery#6 []))\n            :     :           :     :     :              :  +- Project [d_week_seq#262]\n            :     :           :     :     :              :     +- Filter (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19))\n            :     :           :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#258,d_date_id#259,d_date#260,d_month_seq#261,d_week_seq#262,d_quarter_seq#263,d_year#264,d_dow#265,d_moy#266,d_dom#267,d_qoy#268,d_fy_year#269,d_fy_quarter_seq#270,d_fy_week_seq#271,d_day_name#272,d_quarter_name#273,d_holiday#274,d_weekend#275,d_following_holiday#276,d_first_dom#277,d_last_dom#278,d_same_day_ly#279,d_same_day_lq#280,d_current_day#281,... 4 more fields] parquet\n            :     :           :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#350,d_date_id#351,d_date#352,d_month_seq#353,d_week_seq#354,d_quarter_seq#355,d_year#356,d_dow#357,d_moy#358,d_dom#359,d_qoy#360,d_fy_year#361,d_fy_quarter_seq#362,d_fy_week_seq#363,d_day_name#364,d_quarter_name#365,d_holiday#366,d_weekend#367,d_following_holiday#368,d_first_dom#369,d_last_dom#370,d_same_day_ly#371,d_same_day_lq#372,d_current_day#373,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n            :     :           :     +- Project [d_date_sk#61]\n            :     :           :        +- Join LeftSemi, (d_date#63 = d_date#352)\n            :     :           :           :- Project [d_date_sk#61, d_date#63]\n            :     :           :           :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :           :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :           +- Project [d_date#352]\n            :     :           :              +- Filter (isnotnull(d_week_seq#354) AND (d_week_seq#354 = scalar-subquery#6 []))\n            :     :           :                 :  +- Project [d_week_seq#262]\n            :     :           :                 :     +- Filter (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19))\n            :     :           :                 :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#258,d_date_id#259,d_date#260,d_month_seq#261,d_week_seq#262,d_quarter_seq#263,d_year#264,d_dow#265,d_moy#266,d_dom#267,d_qoy#268,d_fy_year#269,d_fy_quarter_seq#270,d_fy_week_seq#271,d_day_name#272,d_quarter_name#273,d_holiday#274,d_weekend#275,d_following_holiday#276,d_first_dom#277,d_last_dom#278,d_same_day_ly#279,d_same_day_lq#280,d_current_day#281,... 4 more fields] parquet\n            :     :           :                 +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#350,d_date_id#351,d_date#352,d_month_seq#353,d_week_seq#354,d_quarter_seq#355,d_year#356,d_dow#357,d_moy#358,d_dom#359,d_qoy#360,d_fy_year#361,d_fy_quarter_seq#362,d_fy_week_seq#363,d_day_name#364,d_quarter_name#365,d_holiday#366,d_weekend#367,d_following_holiday#368,d_first_dom#369,d_last_dom#370,d_same_day_ly#371,d_same_day_lq#372,d_current_day#373,... 4 more fields] parquet\n            :     :           +- Project [i_item_sk#39, i_item_id#40]\n            :     :              +- Filter (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40))\n            :     :                 +- Relation spark_catalog.tpcds_100.item[i_item_sk#39,i_item_id#40,i_rec_start_date#41,i_rec_end_date#42,i_item_desc#43,i_current_price#44,i_wholesale_cost#45,i_brand_id#46,i_brand#47,i_class_id#48,i_class#49,i_category_id#50,i_category#51,i_manufact_id#52,i_manufact#53,i_size#54,i_formulation#55,i_color#56,i_units#57,i_container#58,i_manager_id#59,i_product_name#60] parquet\n            :     +- Filter isnotnull(cs_item_rev#9)\n            :        +- Aggregate [i_item_id#158], [i_item_id#158 AS item_id#8, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#9]\n            :           +- Project [cs_ext_sales_price#111, i_item_id#158]\n            :              +- Join Inner, (cs_item_sk#103 = i_item_sk#157)\n            :                 :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n            :                 :  +- Join Inner, (cs_sold_date_sk#122 = d_date_sk#179)\n            :                 :     :- Project [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122]\n            :                 :     :  +- Filter ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#446 [cs_sold_date_sk#122])\n            :                 :     :     :  +- Project [d_date_sk#179]\n            :                 :     :     :     +- Join LeftSemi, (d_date#181 = d_date#380)\n            :                 :     :     :        :- Project [d_date_sk#179, d_date#181]\n            :                 :     :     :        :  +- Filter isnotnull(d_date_sk#179)\n            :                 :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#179,d_date_id#180,d_date#181,d_month_seq#182,d_week_seq#183,d_quarter_seq#184,d_year#185,d_dow#186,d_moy#187,d_dom#188,d_qoy#189,d_fy_year#190,d_fy_quarter_seq#191,d_fy_week_seq#192,d_day_name#193,d_quarter_name#194,d_holiday#195,d_weekend#196,d_following_holiday#197,d_first_dom#198,d_last_dom#199,d_same_day_ly#200,d_same_day_lq#201,d_current_day#202,... 4 more fields] parquet\n            :                 :     :     :        +- Project [d_date#380]\n            :                 :     :     :           +- Filter (isnotnull(d_week_seq#382) AND (d_week_seq#382 = scalar-subquery#10 []))\n            :                 :     :     :              :  +- Project [d_week_seq#262]\n            :                 :     :     :              :     +- Filter (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19))\n            :                 :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#258,d_date_id#259,d_date#260,d_month_seq#261,d_week_seq#262,d_quarter_seq#263,d_year#264,d_dow#265,d_moy#266,d_dom#267,d_qoy#268,d_fy_year#269,d_fy_quarter_seq#270,d_fy_week_seq#271,d_day_name#272,d_quarter_name#273,d_holiday#274,d_weekend#275,d_following_holiday#276,d_first_dom#277,d_last_dom#278,d_same_day_ly#279,d_same_day_lq#280,d_current_day#281,... 4 more fields] parquet\n            :                 :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#378,d_date_id#379,d_date#380,d_month_seq#381,d_week_seq#382,d_quarter_seq#383,d_year#384,d_dow#385,d_moy#386,d_dom#387,d_qoy#388,d_fy_year#389,d_fy_quarter_seq#390,d_fy_week_seq#391,d_day_name#392,d_quarter_name#393,d_holiday#394,d_weekend#395,d_following_holiday#396,d_first_dom#397,d_last_dom#398,d_same_day_ly#399,d_same_day_lq#400,d_current_day#401,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#89,cs_ship_date_sk#90,cs_bill_customer_sk#91,cs_bill_cdemo_sk#92,cs_bill_hdemo_sk#93,cs_bill_addr_sk#94,cs_ship_customer_sk#95,cs_ship_cdemo_sk#96,cs_ship_hdemo_sk#97,cs_ship_addr_sk#98,cs_call_center_sk#99,cs_catalog_page_sk#100,cs_ship_mode_sk#101,cs_warehouse_sk#102,cs_item_sk#103,cs_promo_sk#104,cs_order_number#105L,cs_quantity#106,cs_wholesale_cost#107,cs_list_price#108,cs_sales_price#109,cs_ext_discount_amt#110,cs_ext_sales_price#111,cs_ext_wholesale_cost#112,... 10 more fields] parquet\n            :                 :     +- Project [d_date_sk#179]\n            :                 :        +- Join LeftSemi, (d_date#181 = d_date#380)\n            :                 :           :- Project [d_date_sk#179, d_date#181]\n            :                 :           :  +- Filter isnotnull(d_date_sk#179)\n            :                 :           :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#179,d_date_id#180,d_date#181,d_month_seq#182,d_week_seq#183,d_quarter_seq#184,d_year#185,d_dow#186,d_moy#187,d_dom#188,d_qoy#189,d_fy_year#190,d_fy_quarter_seq#191,d_fy_week_seq#192,d_day_name#193,d_quarter_name#194,d_holiday#195,d_weekend#196,d_following_holiday#197,d_first_dom#198,d_last_dom#199,d_same_day_ly#200,d_same_day_lq#201,d_current_day#202,... 4 more fields] parquet\n            :                 :           +- Project [d_date#380]\n            :                 :              +- Filter (isnotnull(d_week_seq#382) AND (d_week_seq#382 = scalar-subquery#10 []))\n            :                 :                 :  +- Project [d_week_seq#262]\n            :                 :                 :     +- Filter (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19))\n            :                 :                 :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#258,d_date_id#259,d_date#260,d_month_seq#261,d_week_seq#262,d_quarter_seq#263,d_year#264,d_dow#265,d_moy#266,d_dom#267,d_qoy#268,d_fy_year#269,d_fy_quarter_seq#270,d_fy_week_seq#271,d_day_name#272,d_quarter_name#273,d_holiday#274,d_weekend#275,d_following_holiday#276,d_first_dom#277,d_last_dom#278,d_same_day_ly#279,d_same_day_lq#280,d_current_day#281,... 4 more fields] parquet\n            :                 :                 +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#378,d_date_id#379,d_date#380,d_month_seq#381,d_week_seq#382,d_quarter_seq#383,d_year#384,d_dow#385,d_moy#386,d_dom#387,d_qoy#388,d_fy_year#389,d_fy_quarter_seq#390,d_fy_week_seq#391,d_day_name#392,d_quarter_name#393,d_holiday#394,d_weekend#395,d_following_holiday#396,d_first_dom#397,d_last_dom#398,d_same_day_ly#399,d_same_day_lq#400,d_current_day#401,... 4 more fields] parquet\n            :                 +- Project [i_item_sk#157, i_item_id#158]\n            :                    +- Filter (isnotnull(i_item_sk#157) AND isnotnull(i_item_id#158))\n            :                       +- Relation spark_catalog.tpcds_100.item[i_item_sk#157,i_item_id#158,i_rec_start_date#159,i_rec_end_date#160,i_item_desc#161,i_current_price#162,i_wholesale_cost#163,i_brand_id#164,i_brand#165,i_class_id#166,i_class#167,i_category_id#168,i_category#169,i_manufact_id#170,i_manufact#171,i_size#172,i_formulation#173,i_color#174,i_units#175,i_container#176,i_manager_id#177,i_product_name#178] parquet\n            +- Filter isnotnull(ws_item_rev#13)\n               +- Aggregate [i_item_id#208], [i_item_id#208 AS item_id#12, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#13]\n                  +- Project [ws_ext_sales_price#145, i_item_id#208]\n                     +- Join Inner, (ws_item_sk#125 = i_item_sk#207)\n                        :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n                        :  +- Join Inner, (ws_sold_date_sk#156 = d_date_sk#229)\n                        :     :- Project [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156]\n                        :     :  +- Filter ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#447 [ws_sold_date_sk#156])\n                        :     :     :  +- Project [d_date_sk#229]\n                        :     :     :     +- Join LeftSemi, (d_date#231 = d_date#408)\n                        :     :     :        :- Project [d_date_sk#229, d_date#231]\n                        :     :     :        :  +- Filter isnotnull(d_date_sk#229)\n                        :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#229,d_date_id#230,d_date#231,d_month_seq#232,d_week_seq#233,d_quarter_seq#234,d_year#235,d_dow#236,d_moy#237,d_dom#238,d_qoy#239,d_fy_year#240,d_fy_quarter_seq#241,d_fy_week_seq#242,d_day_name#243,d_quarter_name#244,d_holiday#245,d_weekend#246,d_following_holiday#247,d_first_dom#248,d_last_dom#249,d_same_day_ly#250,d_same_day_lq#251,d_current_day#252,... 4 more fields] parquet\n                        :     :     :        +- Project [d_date#408]\n                        :     :     :           +- Filter (isnotnull(d_week_seq#410) AND (d_week_seq#410 = scalar-subquery#14 []))\n                        :     :     :              :  +- Project [d_week_seq#262]\n                        :     :     :              :     +- Filter (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19))\n                        :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#258,d_date_id#259,d_date#260,d_month_seq#261,d_week_seq#262,d_quarter_seq#263,d_year#264,d_dow#265,d_moy#266,d_dom#267,d_qoy#268,d_fy_year#269,d_fy_quarter_seq#270,d_fy_week_seq#271,d_day_name#272,d_quarter_name#273,d_holiday#274,d_weekend#275,d_following_holiday#276,d_first_dom#277,d_last_dom#278,d_same_day_ly#279,d_same_day_lq#280,d_current_day#281,... 4 more fields] parquet\n                        :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#406,d_date_id#407,d_date#408,d_month_seq#409,d_week_seq#410,d_quarter_seq#411,d_year#412,d_dow#413,d_moy#414,d_dom#415,d_qoy#416,d_fy_year#417,d_fy_quarter_seq#418,d_fy_week_seq#419,d_day_name#420,d_quarter_name#421,d_holiday#422,d_weekend#423,d_following_holiday#424,d_first_dom#425,d_last_dom#426,d_same_day_ly#427,d_same_day_lq#428,d_current_day#429,... 4 more fields] parquet\n                        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#123,ws_ship_date_sk#124,ws_item_sk#125,ws_bill_customer_sk#126,ws_bill_cdemo_sk#127,ws_bill_hdemo_sk#128,ws_bill_addr_sk#129,ws_ship_customer_sk#130,ws_ship_cdemo_sk#131,ws_ship_hdemo_sk#132,ws_ship_addr_sk#133,ws_web_page_sk#134,ws_web_site_sk#135,ws_ship_mode_sk#136,ws_warehouse_sk#137,ws_promo_sk#138,ws_order_number#139L,ws_quantity#140,ws_wholesale_cost#141,ws_list_price#142,ws_sales_price#143,ws_ext_discount_amt#144,ws_ext_sales_price#145,ws_ext_wholesale_cost#146,... 10 more fields] parquet\n                        :     +- Project [d_date_sk#229]\n                        :        +- Join LeftSemi, (d_date#231 = d_date#408)\n                        :           :- Project [d_date_sk#229, d_date#231]\n                        :           :  +- Filter isnotnull(d_date_sk#229)\n                        :           :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#229,d_date_id#230,d_date#231,d_month_seq#232,d_week_seq#233,d_quarter_seq#234,d_year#235,d_dow#236,d_moy#237,d_dom#238,d_qoy#239,d_fy_year#240,d_fy_quarter_seq#241,d_fy_week_seq#242,d_day_name#243,d_quarter_name#244,d_holiday#245,d_weekend#246,d_following_holiday#247,d_first_dom#248,d_last_dom#249,d_same_day_ly#250,d_same_day_lq#251,d_current_day#252,... 4 more fields] parquet\n                        :           +- Project [d_date#408]\n                        :              +- Filter (isnotnull(d_week_seq#410) AND (d_week_seq#410 = scalar-subquery#14 []))\n                        :                 :  +- Project [d_week_seq#262]\n                        :                 :     +- Filter (isnotnull(d_date#260) AND (d_date#260 = 1998-02-19))\n                        :                 :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#258,d_date_id#259,d_date#260,d_month_seq#261,d_week_seq#262,d_quarter_seq#263,d_year#264,d_dow#265,d_moy#266,d_dom#267,d_qoy#268,d_fy_year#269,d_fy_quarter_seq#270,d_fy_week_seq#271,d_day_name#272,d_quarter_name#273,d_holiday#274,d_weekend#275,d_following_holiday#276,d_first_dom#277,d_last_dom#278,d_same_day_ly#279,d_same_day_lq#280,d_current_day#281,... 4 more fields] parquet\n                        :                 +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#406,d_date_id#407,d_date#408,d_month_seq#409,d_week_seq#410,d_quarter_seq#411,d_year#412,d_dow#413,d_moy#414,d_dom#415,d_qoy#416,d_fy_year#417,d_fy_quarter_seq#418,d_fy_week_seq#419,d_day_name#420,d_quarter_name#421,d_holiday#422,d_weekend#423,d_following_holiday#424,d_first_dom#425,d_last_dom#426,d_same_day_ly#427,d_same_day_lq#428,d_current_day#429,... 4 more fields] parquet\n                        +- Project [i_item_sk#207, i_item_id#208]\n                           +- Filter (isnotnull(i_item_sk#207) AND isnotnull(i_item_id#208))\n                              +- Relation spark_catalog.tpcds_100.item[i_item_sk#207,i_item_id#208,i_rec_start_date#209,i_rec_end_date#210,i_item_desc#211,i_current_price#212,i_wholesale_cost#213,i_brand_id#214,i_brand#215,i_class_id#216,i_class#217,i_category_id#218,i_category#219,i_manufact_id#220,i_manufact#221,i_size#222,i_formulation#223,i_color#224,i_units#225,i_container#226,i_manager_id#227,i_product_name#228] parquet\n"
    },
    "IM" : {
      "inputSizeInBytes" : 86948807308,
      "inputRowCount" : 491352288
    },
    "PD" : { },
    "Configuration" : {
      "theta_c" : [ {
        "spark.executor.memory" : "1g"
      }, {
        "spark.executor.cores" : "1"
      }, {
        "spark.executor.instances" : "16"
      }, {
        "spark.default.parallelism" : "16"
      }, {
        "spark.reducer.maxSizeInFlight" : "48m"
      }, {
        "spark.shuffle.sort.bypassMergeThreshold" : "200"
      }, {
        "spark.shuffle.compress" : "true"
      }, {
        "spark.memory.fraction" : "0.6"
      } ],
      "theta_p" : [ {
        "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
      }, {
        "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
      }, {
        "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
      }, {
        "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
      }, {
        "spark.sql.shuffle.partitions" : "200"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
      }, {
        "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
      }, {
        "spark.sql.files.maxPartitionBytes" : "128MB"
      }, {
        "spark.sql.files.openCostInBytes" : "4MB"
      } ],
      "theta_s" : [ {
        "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
      }, {
        "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
      } ]
    }
  },
  "RuntimeLQPs" : {
    "8" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -637225982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3384346421404599998962728960000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "9" : {
            "sign" : -2085784489,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9222840,
            "rowCount" : 256190,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18 "
          },
          "5" : {
            "sign" : -938129255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 89654562775415844360000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 421229411,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 37748736,
            "rowCount" : 80650,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(ws_item_rev#461), BroadcastQueryStage 19 "
          },
          "6" : {
            "sign" : -468883341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130406636764241228160000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : 1688091762,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 5452558123374077776106618880000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1776805391,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1213948955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 5452558123374077776106618880000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -1982891041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5452558123374077776106618880000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- LogicalQueryStage Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18\n            +- LogicalQueryStage Filter isnotnull(ws_item_rev#461), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 14139531553995576,
        "inputRowCount" : 336840
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 13207.0,
        "FinishedTasksDistributionInMs" : [ 674.0, 821.0, 1432.0, 1822.0, 1885.0 ]
      },
      "StartTimeInMs" : 1702227178673,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1390,
        "IOBytes" : {
          "Total" : 16244915,
          "Details" : {
            "IR" : 5027729,
            "IW" : 0,
            "SR" : 5608593,
            "SW" : 5608593
          }
        }
      }
    },
    "4" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1559005424,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#680, d_date_id#681, d_date#682, d_month_seq#683, d_week_seq#684, d_quarter_seq#685, d_year#686, d_dow#687, d_moy#688, d_dom#689, d_qoy#690, d_fy_year#691, d_fy_quarter_seq#692, d_fy_week_seq#693, d_day_name#694, d_quarter_name#695, d_holiday#696, d_weekend#697, d_following_holiday#698, d_first_dom#699, d_last_dom#700, d_same_day_ly#701, d_same_day_lq#702, d_current_day#703, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : -301033224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 28081511332,
            "rowCount" : 1002911119,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#122 = d_date_sk#486) "
          },
          "12" : {
            "sign" : -254075282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 53908889188,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#61) "
          },
          "66" : {
            "sign" : 1778393320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9 "
          },
          "51" : {
            "sign" : -476950196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 4522875063168000,
            "rowCount" : 102792615072000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#125 = i_item_sk#514) "
          },
          "8" : {
            "sign" : -891100252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453] "
          },
          "19" : {
            "sign" : 697739377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#61) "
          },
          "23" : {
            "sign" : -1127507506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#652, d_date_id#653, d_date#654, d_month_seq#655, d_week_seq#656, d_quarter_seq#657, d_year#658, d_dow#659, d_moy#660, d_dom#661, d_qoy#662, d_fy_year#663, d_fy_quarter_seq#664, d_fy_week_seq#665, d_day_name#666, d_quarter_name#667, d_holiday#668, d_weekend#669, d_following_holiday#670, d_first_dom#671, d_last_dom#672, d_same_day_ly#673, d_same_day_lq#674, d_current_day#675, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : -2133939922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#710] "
          },
          "4" : {
            "sign" : -2000277806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 18485160293502000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "40" : {
            "sign" : -64960456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486, d_date#488] "
          },
          "15" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1235824616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 38506349420,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30] "
          },
          "9" : {
            "sign" : -1252258427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : 392764764084000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#30, i_item_id#40] "
          },
          "44" : {
            "sign" : 1700618236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 [])) "
          },
          "33" : {
            "sign" : 944745252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 20058222380,
            "rowCount" : 1002911119,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111] "
          },
          "22" : {
            "sign" : 645269718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 [])) "
          },
          "56" : {
            "sign" : -1073099478,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#123, ws_ship_date_sk#124, ws_item_sk#125, ws_bill_customer_sk#126, ws_bill_cdemo_sk#127, ws_bill_hdemo_sk#128, ws_bill_addr_sk#129, ws_ship_customer_sk#130, ws_ship_cdemo_sk#131, ws_ship_hdemo_sk#132, ws_ship_addr_sk#133, ws_web_page_sk#134, ws_web_site_sk#135, ws_ship_mode_sk#136, ws_warehouse_sk#137, ws_promo_sk#138, ws_order_number#139L, ws_quantity#140, ws_wholesale_cost#141, ws_list_price#142, ws_sales_price#143, ws_ext_discount_amt#144, ws_ext_sales_price#145, ws_ext_wholesale_cost#146, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "55" : {
            "sign" : -1766908215,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156]) "
          },
          "26" : {
            "sign" : -72738866,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#564, d_date_id#565, d_date#566, d_month_seq#567, d_week_seq#568, d_quarter_seq#569, d_year#570, d_dow#571, d_moy#572, d_dom#573, d_qoy#574, d_fy_year#575, d_fy_quarter_seq#576, d_fy_week_seq#577, d_day_name#578, d_quarter_name#579, d_holiday#580, d_weekend#581, d_following_holiday#582, d_first_dom#583, d_last_dom#584, d_same_day_ly#585, d_same_day_lq#586, d_current_day#587, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "50" : {
            "sign" : 233164152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : 102792615072000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#145, i_item_id#515] "
          },
          "37" : {
            "sign" : -1864218542,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#89, cs_ship_date_sk#90, cs_bill_customer_sk#91, cs_bill_cdemo_sk#92, cs_bill_hdemo_sk#93, cs_bill_addr_sk#94, cs_ship_customer_sk#95, cs_ship_cdemo_sk#96, cs_ship_hdemo_sk#97, cs_ship_addr_sk#98, cs_call_center_sk#99, cs_catalog_page_sk#100, cs_ship_mode_sk#101, cs_warehouse_sk#102, cs_item_sk#103, cs_promo_sk#104, cs_order_number#105L, cs_quantity#106, cs_wholesale_cost#107, cs_list_price#108, cs_sales_price#109, cs_ext_discount_amt#110, cs_ext_sales_price#111, cs_ext_wholesale_cost#112, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 1721363630,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#536, d_date_id#537, d_date#538, d_month_seq#539, d_week_seq#540, d_quarter_seq#541, d_year#542, d_dow#543, d_moy#544, d_dom#545, d_qoy#546, d_fy_year#547, d_fy_quarter_seq#548, d_fy_week_seq#549, d_day_name#550, d_quarter_name#551, d_holiday#552, d_weekend#553, d_following_holiday#554, d_first_dom#555, d_last_dom#556, d_same_day_ly#557, d_same_day_lq#558, d_current_day#559, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -1161100268,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] "
          },
          "46" : {
            "sign" : -456081511,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#486], BroadcastQueryStage 12 "
          },
          "24" : {
            "sign" : -1928143940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#568] "
          },
          "35" : {
            "sign" : -583051964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] "
          },
          "16" : {
            "sign" : -1532259718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
          },
          "5" : {
            "sign" : -1911814557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 14784626150910000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 715026703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 17281649619696000,
            "rowCount" : 392764764084000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#39) "
          },
          "59" : {
            "sign" : -745998978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536, d_date#538] "
          },
          "48" : {
            "sign" : 1553722587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "21" : {
            "sign" : -456411464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#654] "
          },
          "54" : {
            "sign" : 244416326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] "
          },
          "43" : {
            "sign" : 1057760761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#682] "
          },
          "65" : {
            "sign" : 1510702973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#536], BroadcastQueryStage 14 "
          },
          "57" : {
            "sign" : -311003116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536] "
          },
          "32" : {
            "sign" : -1334197382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9002130204144000,
            "rowCount" : 204593868276000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#103 = i_item_sk#464) "
          },
          "49" : {
            "sign" : -1136875996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461] "
          },
          "6" : {
            "sign" : 1932306339,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 21504910764960000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "36" : {
            "sign" : -1872485223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122]) "
          },
          "1" : {
            "sign" : 120554774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 29781647139531000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1229889689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#488 = d_date#682) "
          },
          "17" : {
            "sign" : -1853585085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#654) "
          },
          "25" : {
            "sign" : -1657002750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 246,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19)) "
          },
          "60" : {
            "sign" : 1893585704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#536) "
          },
          "14" : {
            "sign" : 647622355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38]) "
          },
          "47" : {
            "sign" : -679671892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5 "
          },
          "31" : {
            "sign" : 1125027657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : 204593868276000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#111, i_item_id#465] "
          },
          "58" : {
            "sign" : 1494633366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#538 = d_date#710) "
          },
          "64" : {
            "sign" : 994584262,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#708, d_date_id#709, d_date#710, d_month_seq#711, d_week_seq#712, d_quarter_seq#713, d_year#714, d_dow#715, d_moy#716, d_dom#717, d_qoy#718, d_fy_year#719, d_fy_quarter_seq#720, d_fy_week_seq#721, d_day_name#722, d_quarter_name#723, d_holiday#724, d_weekend#725, d_following_holiday#726, d_first_dom#727, d_last_dom#728, d_same_day_ly#729, d_same_day_lq#730, d_current_day#731, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "53" : {
            "sign" : 1547435469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14108790304,
            "rowCount" : 503885368,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#156 = d_date_sk#536) "
          },
          "42" : {
            "sign" : 1033186242,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#486, d_date_id#487, d_date#488, d_month_seq#489, d_week_seq#490, d_quarter_seq#491, d_year#492, d_dow#493, d_moy#494, d_dom#495, d_qoy#496, d_fy_year#497, d_fy_quarter_seq#498, d_fy_week_seq#499, d_day_name#500, d_quarter_name#501, d_holiday#502, d_weekend#503, d_following_holiday#504, d_first_dom#505, d_last_dom#506, d_same_day_ly#507, d_same_day_lq#508, d_current_day#509, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -297956763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 311601156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#61, d_date_id#62, d_date#63, d_month_seq#64, d_week_seq#65, d_quarter_seq#66, d_year#67, d_dow#68, d_moy#69, d_dom#70, d_qoy#71, d_fy_year#72, d_fy_quarter_seq#73, d_fy_week_seq#74, d_day_name#75, d_quarter_name#76, d_holiday#77, d_weekend#78, d_following_holiday#79, d_first_dom#80, d_last_dom#81, d_same_day_ly#82, d_same_day_lq#83, d_current_day#84, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : -382038412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#61], BroadcastQueryStage 10 "
          },
          "2" : {
            "sign" : -1214090033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 29781647139531000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1160890817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486] "
          },
          "18" : {
            "sign" : -422388959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61, d_date#63] "
          },
          "30" : {
            "sign" : 445544164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457] "
          },
          "7" : {
            "sign" : 1835947758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "29" : {
            "sign" : -1043110408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "41" : {
            "sign" : -1674360414,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#486) "
          },
          "63" : {
            "sign" : 1507190347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 [])) "
          },
          "3" : {
            "sign" : -1638635895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 29781647139531000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          },
          "52" : {
            "sign" : -44444404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 10077707360,
            "rowCount" : 503885368,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145] "
          },
          "28" : {
            "sign" : 325104483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1 "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalRelation",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalRelation",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalRelation",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Aggregate",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453]\n            :     :     +- Project [ss_ext_sales_price#30, i_item_id#40]\n            :     :        +- Join Inner, (ss_item_sk#17 = i_item_sk#39)\n            :     :           :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n            :     :           :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#61)\n            :     :           :     :- Project [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38]\n            :     :           :     :  +- Filter ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38])\n            :     :           :     :     :  +- Project [d_date_sk#61]\n            :     :           :     :     :     +- Join LeftSemi, (d_date#63 = d_date#654)\n            :     :           :     :     :        :- Project [d_date_sk#61, d_date#63]\n            :     :           :     :     :        :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :     :     :        +- Project [d_date#654]\n            :     :           :     :     :           +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n            :     :           :     :     :              :  +- Project [d_week_seq#568]\n            :     :           :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :     :           :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :     :           :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#61], BroadcastQueryStage 10\n            :     :           +- LogicalQueryStage Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1\n            :     +- Filter isnotnull(cs_item_rev#457)\n            :        +- Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457]\n            :           +- Project [cs_ext_sales_price#111, i_item_id#465]\n            :              +- Join Inner, (cs_item_sk#103 = i_item_sk#464)\n            :                 :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n            :                 :  +- Join Inner, (cs_sold_date_sk#122 = d_date_sk#486)\n            :                 :     :- Project [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122]\n            :                 :     :  +- Filter ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122])\n            :                 :     :     :  +- Project [d_date_sk#486]\n            :                 :     :     :     +- Join LeftSemi, (d_date#488 = d_date#682)\n            :                 :     :     :        :- Project [d_date_sk#486, d_date#488]\n            :                 :     :     :        :  +- Filter isnotnull(d_date_sk#486)\n            :                 :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#486,d_date_id#487,d_date#488,d_month_seq#489,d_week_seq#490,d_quarter_seq#491,d_year#492,d_dow#493,d_moy#494,d_dom#495,d_qoy#496,d_fy_year#497,d_fy_quarter_seq#498,d_fy_week_seq#499,d_day_name#500,d_quarter_name#501,d_holiday#502,d_weekend#503,d_following_holiday#504,d_first_dom#505,d_last_dom#506,d_same_day_ly#507,d_same_day_lq#508,d_current_day#509,... 4 more fields] parquet\n            :                 :     :     :        +- Project [d_date#682]\n            :                 :     :     :           +- Filter (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 []))\n            :                 :     :     :              :  +- Project [d_week_seq#568]\n            :                 :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :                 :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :                 :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#680,d_date_id#681,d_date#682,d_month_seq#683,d_week_seq#684,d_quarter_seq#685,d_year#686,d_dow#687,d_moy#688,d_dom#689,d_qoy#690,d_fy_year#691,d_fy_quarter_seq#692,d_fy_week_seq#693,d_day_name#694,d_quarter_name#695,d_holiday#696,d_weekend#697,d_following_holiday#698,d_first_dom#699,d_last_dom#700,d_same_day_ly#701,d_same_day_lq#702,d_current_day#703,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#89,cs_ship_date_sk#90,cs_bill_customer_sk#91,cs_bill_cdemo_sk#92,cs_bill_hdemo_sk#93,cs_bill_addr_sk#94,cs_ship_customer_sk#95,cs_ship_cdemo_sk#96,cs_ship_hdemo_sk#97,cs_ship_addr_sk#98,cs_call_center_sk#99,cs_catalog_page_sk#100,cs_ship_mode_sk#101,cs_warehouse_sk#102,cs_item_sk#103,cs_promo_sk#104,cs_order_number#105L,cs_quantity#106,cs_wholesale_cost#107,cs_list_price#108,cs_sales_price#109,cs_ext_discount_amt#110,cs_ext_sales_price#111,cs_ext_wholesale_cost#112,... 10 more fields] parquet\n            :                 :     +- LogicalQueryStage Project [d_date_sk#486], BroadcastQueryStage 12\n            :                 +- LogicalQueryStage Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5\n            +- Filter isnotnull(ws_item_rev#461)\n               +- Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461]\n                  +- Project [ws_ext_sales_price#145, i_item_id#515]\n                     +- Join Inner, (ws_item_sk#125 = i_item_sk#514)\n                        :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n                        :  +- Join Inner, (ws_sold_date_sk#156 = d_date_sk#536)\n                        :     :- Project [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156]\n                        :     :  +- Filter ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156])\n                        :     :     :  +- Project [d_date_sk#536]\n                        :     :     :     +- Join LeftSemi, (d_date#538 = d_date#710)\n                        :     :     :        :- Project [d_date_sk#536, d_date#538]\n                        :     :     :        :  +- Filter isnotnull(d_date_sk#536)\n                        :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#536,d_date_id#537,d_date#538,d_month_seq#539,d_week_seq#540,d_quarter_seq#541,d_year#542,d_dow#543,d_moy#544,d_dom#545,d_qoy#546,d_fy_year#547,d_fy_quarter_seq#548,d_fy_week_seq#549,d_day_name#550,d_quarter_name#551,d_holiday#552,d_weekend#553,d_following_holiday#554,d_first_dom#555,d_last_dom#556,d_same_day_ly#557,d_same_day_lq#558,d_current_day#559,... 4 more fields] parquet\n                        :     :     :        +- Project [d_date#710]\n                        :     :     :           +- Filter (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 []))\n                        :     :     :              :  +- Project [d_week_seq#568]\n                        :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                        :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n                        :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#708,d_date_id#709,d_date#710,d_month_seq#711,d_week_seq#712,d_quarter_seq#713,d_year#714,d_dow#715,d_moy#716,d_dom#717,d_qoy#718,d_fy_year#719,d_fy_quarter_seq#720,d_fy_week_seq#721,d_day_name#722,d_quarter_name#723,d_holiday#724,d_weekend#725,d_following_holiday#726,d_first_dom#727,d_last_dom#728,d_same_day_ly#729,d_same_day_lq#730,d_current_day#731,... 4 more fields] parquet\n                        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#123,ws_ship_date_sk#124,ws_item_sk#125,ws_bill_customer_sk#126,ws_bill_cdemo_sk#127,ws_bill_hdemo_sk#128,ws_bill_addr_sk#129,ws_ship_customer_sk#130,ws_ship_cdemo_sk#131,ws_ship_hdemo_sk#132,ws_ship_addr_sk#133,ws_web_page_sk#134,ws_web_site_sk#135,ws_ship_mode_sk#136,ws_warehouse_sk#137,ws_promo_sk#138,ws_order_number#139L,ws_quantity#140,ws_wholesale_cost#141,ws_list_price#142,ws_sales_price#143,ws_ext_discount_amt#144,ws_ext_sales_price#145,ws_ext_wholesale_cost#146,... 10 more fields] parquet\n                        :     +- LogicalQueryStage Project [d_date_sk#536], BroadcastQueryStage 14\n                        +- LogicalQueryStage Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86638648528,
        "inputRowCount" : 490914015
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227176176,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3887,
        "IOBytes" : {
          "Total" : 31562071,
          "Details" : {
            "IR" : 9047793,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 11257139
          }
        }
      }
    },
    "9" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -637225982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 13852002159220694986191273984000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "9" : {
            "sign" : -2085784489,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 37748736,
            "rowCount" : 97467,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18 "
          },
          "5" : {
            "sign" : -938129255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 366952741390352646144000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 421229411,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 37748736,
            "rowCount" : 80650,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(ws_item_rev#461), BroadcastQueryStage 19 "
          },
          "6" : {
            "sign" : -468883341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 533749442022331121664000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : 1688091762,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 22317114589855564144419274752000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1776805391,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1213948955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 22317114589855564144419274752000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -1982891041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 22317114589855564144419274752000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- LogicalQueryStage Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18\n            +- LogicalQueryStage Filter isnotnull(ws_item_rev#461), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 14139531582521472,
        "inputRowCount" : 178117
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 4,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 13207.0,
        "FinishedTasksDistributionInMs" : [ 674.0, 821.0, 1432.0, 1822.0, 1885.0 ]
      },
      "StartTimeInMs" : 1702227178701,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1362,
        "IOBytes" : {
          "Total" : 16244915,
          "Details" : {
            "IR" : 5027729,
            "IW" : 0,
            "SR" : 5608593,
            "SW" : 5608593
          }
        }
      }
    },
    "5" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1659511152,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))]) "
          },
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -583876317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 264952030688021041253325669011393230848000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "11" : {
            "sign" : 1596320199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "9" : {
            "sign" : 1243576078,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "5" : {
            "sign" : -46450548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 71598320804152395613072944000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : -38148854,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457], HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))]) "
          },
          "6" : {
            "sign" : -74528962,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 104143012078767120891742464000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : -532887217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 426867160552922788685913577851689094144000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 768449520,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1393449914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 426867160552922788685913577851689094144000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -2039462596,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 426867160552922788685913577851689094144000000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- Filter isnotnull(cs_item_rev#457)\n            :        +- LogicalQueryStage Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457], HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))])\n            +- Filter isnotnull(ws_item_rev#461)\n               +- LogicalQueryStage Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 25205444907552000,
        "inputRowCount" : 0
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 16,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227176695,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 3368,
        "IOBytes" : {
          "Total" : 31562071,
          "Details" : {
            "IR" : 9047793,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 11257139
          }
        }
      }
    },
    "10" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 16474280,
            "rowCount" : 411857,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -637225982,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 233099272840489200,
            "rowCount" : 3237489900562350,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "9" : {
            "sign" : -2085784489,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 37748736,
            "rowCount" : 97467,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18 "
          },
          "5" : {
            "sign" : -938129255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1766268513636,
            "rowCount" : 40142466219,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 421229411,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 37748736,
            "rowCount" : 80650,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(ws_item_rev#461), BroadcastQueryStage 19 "
          },
          "6" : {
            "sign" : -468883341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2569117838016,
            "rowCount" : 40142466219,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : 1688091762,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 375548828465232600,
            "rowCount" : 3237489900562350,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1776805391,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1213948955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 375548828465232600,
            "rowCount" : 3237489900562350,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14826852,
            "rowCount" : 411857,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -1982891041,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 375548828465232600,
            "rowCount" : 3237489900562350,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- LogicalQueryStage Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18\n            +- LogicalQueryStage Filter isnotnull(ws_item_rev#461), BroadcastQueryStage 19\n"
      },
      "IM" : {
        "inputSizeInBytes" : 91971752,
        "inputRowCount" : 589974
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227179069,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 994,
        "IOBytes" : {
          "Total" : 5608593,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 5608593,
            "SW" : 0
          }
        }
      }
    },
    "6" : {
      "LQP" : {
        "operators" : {
          "12" : {
            "sign" : -1659511152,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))]) "
          },
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -583876317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 331769770589584111464984318981120000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "11" : {
            "sign" : 1596320199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "9" : {
            "sign" : 1243576078,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 9222840,
            "rowCount" : 256190,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "5" : {
            "sign" : -46450548,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 89654562775415844360000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : -38148854,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 10247600,
            "rowCount" : 256190,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457], HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))]) "
          },
          "6" : {
            "sign" : -74528962,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130406636764241228160000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : -532887217,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 534517963727663290693585847247360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 768449520,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : -1393449914,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 534517963727663290693585847247360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -2039462596,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 534517963727663290693585847247360000000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "LogicalQueryStage",
          "toId" : 9,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "LogicalQueryStage",
          "toId" : 11,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- Filter isnotnull(cs_item_rev#457)\n            :        +- LogicalQueryStage Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457], HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))])\n            +- Filter isnotnull(ws_item_rev#461)\n               +- LogicalQueryStage Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 17840065659863600,
        "inputRowCount" : 256190
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 11,
        "FinishedTasksNum" : 10,
        "FinishedTasksTotalTimeInMs" : 7022.0,
        "FinishedTasksDistributionInMs" : [ 197.0, 243.0, 692.0, 1132.0, 1432.0 ]
      },
      "StartTimeInMs" : 1702227178076,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1987,
        "IOBytes" : {
          "Total" : 25360144,
          "Details" : {
            "IR" : 6406079,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 7696926
          }
        }
      }
    },
    "1" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : 1057760761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#682] "
          },
          "34" : {
            "sign" : -905251343,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7481471556,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#103 = i_item_sk#464) "
          },
          "67" : {
            "sign" : 1507190347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 [])) "
          },
          "12" : {
            "sign" : -426931594,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#61) "
          },
          "66" : {
            "sign" : -2133939922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#710] "
          },
          "51" : {
            "sign" : -679671892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5 "
          },
          "8" : {
            "sign" : -1750928074,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453] "
          },
          "19" : {
            "sign" : 697739377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#61) "
          },
          "23" : {
            "sign" : -1127507506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#652, d_date_id#653, d_date#654, d_month_seq#655, d_week_seq#656, d_quarter_seq#657, d_year#658, d_dow#659, d_moy#660, d_dom#661, d_qoy#662, d_fy_year#663, d_fy_quarter_seq#664, d_fy_week_seq#665, d_day_name#666, d_quarter_name#667, d_holiday#668, d_weekend#669, d_following_holiday#670, d_first_dom#671, d_last_dom#672, d_same_day_ly#673, d_same_day_lq#674, d_current_day#675, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : 1494633366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#538 = d_date#710) "
          },
          "4" : {
            "sign" : 1271166402,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 9155696,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "40" : {
            "sign" : -1160890817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486] "
          },
          "15" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -96130240,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30] "
          },
          "9" : {
            "sign" : 1839529955,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12639348524,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#30, i_item_id#40] "
          },
          "44" : {
            "sign" : 1033186242,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#486, d_date_id#487, d_date#488, d_month_seq#489, d_week_seq#490, d_quarter_seq#491, d_year#492, d_dow#493, d_moy#494, d_dom#495, d_qoy#496, d_fy_year#497, d_fy_quarter_seq#498, d_fy_week_seq#499, d_day_name#500, d_quarter_name#501, d_holiday#502, d_weekend#503, d_following_holiday#504, d_first_dom#505, d_last_dom#506, d_same_day_ly#507, d_same_day_lq#508, d_current_day#509, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "33" : {
            "sign" : 1482787852,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6330475932,
            "rowCount" : 143874453,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#111, i_item_id#465] "
          },
          "22" : {
            "sign" : 645269718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 [])) "
          },
          "56" : {
            "sign" : 385558665,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145] "
          },
          "55" : {
            "sign" : 1615136229,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3739679060,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#125 = i_item_sk#514) "
          },
          "26" : {
            "sign" : -72738866,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#564, d_date_id#565, d_date#566, d_month_seq#567, d_week_seq#568, d_quarter_seq#569, d_year#570, d_dow#571, d_moy#572, d_dom#573, d_qoy#574, d_fy_year#575, d_fy_quarter_seq#576, d_fy_week_seq#577, d_day_name#578, d_quarter_name#579, d_holiday#580, d_weekend#581, d_following_holiday#582, d_first_dom#583, d_last_dom#584, d_same_day_ly#585, d_same_day_lq#586, d_current_day#587, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "50" : {
            "sign" : -1248949944,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date#682], BroadcastQueryStage 3 "
          },
          "37" : {
            "sign" : -583051964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] "
          },
          "68" : {
            "sign" : 994584262,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#708, d_date_id#709, d_date#710, d_month_seq#711, d_week_seq#712, d_quarter_seq#713, d_year#714, d_dow#715, d_moy#716, d_dom#717, d_qoy#718, d_fy_year#719, d_fy_quarter_seq#720, d_fy_week_seq#721, d_day_name#722, d_quarter_name#723, d_holiday#724, d_weekend#725, d_following_holiday#726, d_first_dom#727, d_last_dom#728, d_same_day_ly#729, d_same_day_lq#730, d_current_day#731, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : -311003116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536] "
          },
          "13" : {
            "sign" : -1161100268,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] "
          },
          "46" : {
            "sign" : 1700618236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 [])) "
          },
          "24" : {
            "sign" : -1928143940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#568] "
          },
          "35" : {
            "sign" : -1030600361,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111] "
          },
          "16" : {
            "sign" : -1532259718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
          },
          "5" : {
            "sign" : 1346550882,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5410184,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "72" : {
            "sign" : 1778393320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9 "
          },
          "10" : {
            "sign" : -1764233183,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 14937411892,
            "rowCount" : 287257921,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#39) "
          },
          "59" : {
            "sign" : -1766908215,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156]) "
          },
          "48" : {
            "sign" : 782675330,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486] "
          },
          "21" : {
            "sign" : -456411464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#654] "
          },
          "54" : {
            "sign" : 1441593295,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3164343820,
            "rowCount" : 71916905,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#145, i_item_id#515] "
          },
          "43" : {
            "sign" : -1674360414,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#486) "
          },
          "65" : {
            "sign" : 1721363630,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#536, d_date_id#537, d_date#538, d_month_seq#539, d_week_seq#540, d_quarter_seq#541, d_year#542, d_dow#543, d_moy#544, d_dom#545, d_qoy#546, d_fy_year#547, d_fy_quarter_seq#548, d_fy_week_seq#549, d_day_name#550, d_quarter_name#551, d_holiday#552, d_weekend#553, d_following_holiday#554, d_first_dom#555, d_last_dom#556, d_same_day_ly#557, d_same_day_lq#558, d_current_day#559, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "71" : {
            "sign" : 292910494,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date#710], BroadcastQueryStage 7 "
          },
          "57" : {
            "sign" : 1879628206,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#156 = d_date_sk#536) "
          },
          "32" : {
            "sign" : -334436965,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457] "
          },
          "49" : {
            "sign" : 472446280,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#488 = d_date#682) "
          },
          "6" : {
            "sign" : 49305734,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 8323360,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "36" : {
            "sign" : -1814834885,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#122 = d_date_sk#486) "
          },
          "1" : {
            "sign" : -163086526,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 12901208,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1864218542,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#89, cs_ship_date_sk#90, cs_bill_customer_sk#91, cs_bill_cdemo_sk#92, cs_bill_hdemo_sk#93, cs_bill_addr_sk#94, cs_ship_customer_sk#95, cs_ship_cdemo_sk#96, cs_ship_hdemo_sk#97, cs_ship_addr_sk#98, cs_call_center_sk#99, cs_catalog_page_sk#100, cs_ship_mode_sk#101, cs_warehouse_sk#102, cs_item_sk#103, cs_promo_sk#104, cs_order_number#105L, cs_quantity#106, cs_wholesale_cost#107, cs_list_price#108, cs_sales_price#109, cs_ext_discount_amt#110, cs_ext_sales_price#111, cs_ext_wholesale_cost#112, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "17" : {
            "sign" : -1853585085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#654) "
          },
          "25" : {
            "sign" : -1657002750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 246,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19)) "
          },
          "60" : {
            "sign" : -1073099478,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#123, ws_ship_date_sk#124, ws_item_sk#125, ws_bill_customer_sk#126, ws_bill_cdemo_sk#127, ws_bill_hdemo_sk#128, ws_bill_addr_sk#129, ws_ship_customer_sk#130, ws_ship_cdemo_sk#131, ws_ship_hdemo_sk#132, ws_ship_addr_sk#133, ws_web_page_sk#134, ws_web_site_sk#135, ws_ship_mode_sk#136, ws_warehouse_sk#137, ws_promo_sk#138, ws_order_number#139L, ws_quantity#140, ws_wholesale_cost#141, ws_list_price#142, ws_sales_price#143, ws_ext_discount_amt#144, ws_ext_sales_price#145, ws_ext_wholesale_cost#146, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "14" : {
            "sign" : 647622355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38]) "
          },
          "47" : {
            "sign" : -1559005424,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#680, d_date_id#681, d_date#682, d_month_seq#683, d_week_seq#684, d_quarter_seq#685, d_year#686, d_dow#687, d_moy#688, d_dom#689, d_qoy#690, d_fy_year#691, d_fy_quarter_seq#692, d_fy_week_seq#693, d_day_name#694, d_quarter_name#695, d_holiday#696, d_weekend#697, d_following_holiday#698, d_first_dom#699, d_last_dom#700, d_same_day_ly#701, d_same_day_lq#702, d_current_day#703, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "31" : {
            "sign" : 51394685,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "69" : {
            "sign" : 188581304,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536] "
          },
          "58" : {
            "sign" : 244416326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] "
          },
          "64" : {
            "sign" : 1893585704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#536) "
          },
          "53" : {
            "sign" : 35726717,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461] "
          },
          "42" : {
            "sign" : -64960456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486, d_date#488] "
          },
          "0" : {
            "sign" : 1737273877,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 311601156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#61, d_date_id#62, d_date#63, d_month_seq#64, d_week_seq#65, d_quarter_seq#66, d_year#67, d_dow#68, d_moy#69, d_dom#70, d_qoy#71, d_fy_year#72, d_fy_quarter_seq#73, d_fy_week_seq#74, d_day_name#75, d_quarter_name#76, d_holiday#77, d_weekend#78, d_following_holiday#79, d_first_dom#80, d_last_dom#81, d_same_day_ly#82, d_same_day_lq#83, d_current_day#84, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : 1598160740,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
          },
          "70" : {
            "sign" : -1816252124,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#538 = d_date#710) "
          },
          "2" : {
            "sign" : 514745919,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 12901208,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1872485223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122]) "
          },
          "18" : {
            "sign" : -422388959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61, d_date#63] "
          },
          "30" : {
            "sign" : 325104483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1 "
          },
          "7" : {
            "sign" : -919444902,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "29" : {
            "sign" : 223214822,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 33555456,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date#654], BroadcastQueryStage 0 "
          },
          "41" : {
            "sign" : -1229889689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#488 = d_date#682) "
          },
          "63" : {
            "sign" : -745998978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536, d_date#538] "
          },
          "3" : {
            "sign" : 1593199727,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12901208,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          },
          "52" : {
            "sign" : -248916660,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 4577848,
            "rowCount" : 104042,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "28" : {
            "sign" : 1074671917,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#654) "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalRelation",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "LogicalQueryStage",
          "toId" : 28,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "Join",
          "toId" : 27,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "LogicalRelation",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 44,
          "fromName" : "LogicalRelation",
          "toId" : 43,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Filter",
          "toId" : 42,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalRelation",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 46,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 46,
          "fromName" : "Filter",
          "toId" : 45,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "Project",
          "toId" : 41,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Join",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 38,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 38,
          "fromName" : "Filter",
          "toId" : 37,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "LogicalQueryStage",
          "toId" : 49,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Join",
          "toId" : 48,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 36,
          "fromName" : "Join",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Aggregate",
          "toId" : 31,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "LogicalRelation",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalRelation",
          "toId" : 64,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "Filter",
          "toId" : 63,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 68,
          "fromName" : "LogicalRelation",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 67,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 67,
          "fromName" : "Filter",
          "toId" : 66,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "Project",
          "toId" : 62,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Join",
          "toId" : 61,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "Project",
          "toId" : 59,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 59,
          "fromName" : "Filter",
          "toId" : 58,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 63,
          "fromName" : "Project",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 71,
          "fromName" : "LogicalQueryStage",
          "toId" : 70,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 70,
          "fromName" : "Join",
          "toId" : 69,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 69,
          "fromName" : "Project",
          "toId" : 57,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Join",
          "toId" : 56,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 72,
          "fromName" : "LogicalQueryStage",
          "toId" : 55,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 55,
          "fromName" : "Join",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Aggregate",
          "toId" : 52,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453]\n            :     :     +- Project [ss_ext_sales_price#30, i_item_id#40]\n            :     :        +- Join Inner, (ss_item_sk#17 = i_item_sk#39)\n            :     :           :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n            :     :           :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#61)\n            :     :           :     :- Project [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38]\n            :     :           :     :  +- Filter ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38])\n            :     :           :     :     :  +- Project [d_date_sk#61]\n            :     :           :     :     :     +- Join LeftSemi, (d_date#63 = d_date#654)\n            :     :           :     :     :        :- Project [d_date_sk#61, d_date#63]\n            :     :           :     :     :        :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :     :     :        +- Project [d_date#654]\n            :     :           :     :     :           +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n            :     :           :     :     :              :  +- Project [d_week_seq#568]\n            :     :           :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :     :           :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :     :           :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n            :     :           :     +- Project [d_date_sk#61]\n            :     :           :        +- Join LeftSemi, (d_date#63 = d_date#654)\n            :     :           :           :- Project [d_date_sk#61, d_date#63]\n            :     :           :           :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :           :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :           +- LogicalQueryStage Project [d_date#654], BroadcastQueryStage 0\n            :     :           +- LogicalQueryStage Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1\n            :     +- Filter isnotnull(cs_item_rev#457)\n            :        +- Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457]\n            :           +- Project [cs_ext_sales_price#111, i_item_id#465]\n            :              +- Join Inner, (cs_item_sk#103 = i_item_sk#464)\n            :                 :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n            :                 :  +- Join Inner, (cs_sold_date_sk#122 = d_date_sk#486)\n            :                 :     :- Project [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122]\n            :                 :     :  +- Filter ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122])\n            :                 :     :     :  +- Project [d_date_sk#486]\n            :                 :     :     :     +- Join LeftSemi, (d_date#488 = d_date#682)\n            :                 :     :     :        :- Project [d_date_sk#486, d_date#488]\n            :                 :     :     :        :  +- Filter isnotnull(d_date_sk#486)\n            :                 :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#486,d_date_id#487,d_date#488,d_month_seq#489,d_week_seq#490,d_quarter_seq#491,d_year#492,d_dow#493,d_moy#494,d_dom#495,d_qoy#496,d_fy_year#497,d_fy_quarter_seq#498,d_fy_week_seq#499,d_day_name#500,d_quarter_name#501,d_holiday#502,d_weekend#503,d_following_holiday#504,d_first_dom#505,d_last_dom#506,d_same_day_ly#507,d_same_day_lq#508,d_current_day#509,... 4 more fields] parquet\n            :                 :     :     :        +- Project [d_date#682]\n            :                 :     :     :           +- Filter (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 []))\n            :                 :     :     :              :  +- Project [d_week_seq#568]\n            :                 :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :                 :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :                 :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#680,d_date_id#681,d_date#682,d_month_seq#683,d_week_seq#684,d_quarter_seq#685,d_year#686,d_dow#687,d_moy#688,d_dom#689,d_qoy#690,d_fy_year#691,d_fy_quarter_seq#692,d_fy_week_seq#693,d_day_name#694,d_quarter_name#695,d_holiday#696,d_weekend#697,d_following_holiday#698,d_first_dom#699,d_last_dom#700,d_same_day_ly#701,d_same_day_lq#702,d_current_day#703,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#89,cs_ship_date_sk#90,cs_bill_customer_sk#91,cs_bill_cdemo_sk#92,cs_bill_hdemo_sk#93,cs_bill_addr_sk#94,cs_ship_customer_sk#95,cs_ship_cdemo_sk#96,cs_ship_hdemo_sk#97,cs_ship_addr_sk#98,cs_call_center_sk#99,cs_catalog_page_sk#100,cs_ship_mode_sk#101,cs_warehouse_sk#102,cs_item_sk#103,cs_promo_sk#104,cs_order_number#105L,cs_quantity#106,cs_wholesale_cost#107,cs_list_price#108,cs_sales_price#109,cs_ext_discount_amt#110,cs_ext_sales_price#111,cs_ext_wholesale_cost#112,... 10 more fields] parquet\n            :                 :     +- Project [d_date_sk#486]\n            :                 :        +- Join LeftSemi, (d_date#488 = d_date#682)\n            :                 :           :- Project [d_date_sk#486, d_date#488]\n            :                 :           :  +- Filter isnotnull(d_date_sk#486)\n            :                 :           :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#486,d_date_id#487,d_date#488,d_month_seq#489,d_week_seq#490,d_quarter_seq#491,d_year#492,d_dow#493,d_moy#494,d_dom#495,d_qoy#496,d_fy_year#497,d_fy_quarter_seq#498,d_fy_week_seq#499,d_day_name#500,d_quarter_name#501,d_holiday#502,d_weekend#503,d_following_holiday#504,d_first_dom#505,d_last_dom#506,d_same_day_ly#507,d_same_day_lq#508,d_current_day#509,... 4 more fields] parquet\n            :                 :           +- LogicalQueryStage Project [d_date#682], BroadcastQueryStage 3\n            :                 +- LogicalQueryStage Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5\n            +- Filter isnotnull(ws_item_rev#461)\n               +- Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461]\n                  +- Project [ws_ext_sales_price#145, i_item_id#515]\n                     +- Join Inner, (ws_item_sk#125 = i_item_sk#514)\n                        :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n                        :  +- Join Inner, (ws_sold_date_sk#156 = d_date_sk#536)\n                        :     :- Project [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156]\n                        :     :  +- Filter ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156])\n                        :     :     :  +- Project [d_date_sk#536]\n                        :     :     :     +- Join LeftSemi, (d_date#538 = d_date#710)\n                        :     :     :        :- Project [d_date_sk#536, d_date#538]\n                        :     :     :        :  +- Filter isnotnull(d_date_sk#536)\n                        :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#536,d_date_id#537,d_date#538,d_month_seq#539,d_week_seq#540,d_quarter_seq#541,d_year#542,d_dow#543,d_moy#544,d_dom#545,d_qoy#546,d_fy_year#547,d_fy_quarter_seq#548,d_fy_week_seq#549,d_day_name#550,d_quarter_name#551,d_holiday#552,d_weekend#553,d_following_holiday#554,d_first_dom#555,d_last_dom#556,d_same_day_ly#557,d_same_day_lq#558,d_current_day#559,... 4 more fields] parquet\n                        :     :     :        +- Project [d_date#710]\n                        :     :     :           +- Filter (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 []))\n                        :     :     :              :  +- Project [d_week_seq#568]\n                        :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                        :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n                        :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#708,d_date_id#709,d_date#710,d_month_seq#711,d_week_seq#712,d_quarter_seq#713,d_year#714,d_dow#715,d_moy#716,d_dom#717,d_qoy#718,d_fy_year#719,d_fy_quarter_seq#720,d_fy_week_seq#721,d_day_name#722,d_quarter_name#723,d_holiday#724,d_weekend#725,d_following_holiday#726,d_first_dom#727,d_last_dom#728,d_same_day_ly#729,d_same_day_lq#730,d_current_day#731,... 4 more fields] parquet\n                        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#123,ws_ship_date_sk#124,ws_item_sk#125,ws_bill_customer_sk#126,ws_bill_cdemo_sk#127,ws_bill_hdemo_sk#128,ws_bill_addr_sk#129,ws_ship_customer_sk#130,ws_ship_cdemo_sk#131,ws_ship_hdemo_sk#132,ws_ship_addr_sk#133,ws_web_page_sk#134,ws_web_site_sk#135,ws_ship_mode_sk#136,ws_warehouse_sk#137,ws_promo_sk#138,ws_order_number#139L,ws_quantity#140,ws_wholesale_cost#141,ws_list_price#142,ws_sales_price#143,ws_ext_discount_amt#144,ws_ext_sales_price#145,ws_ext_wholesale_cost#146,... 10 more fields] parquet\n                        :     +- Project [d_date_sk#536]\n                        :        +- Join LeftSemi, (d_date#538 = d_date#710)\n                        :           :- Project [d_date_sk#536, d_date#538]\n                        :           :  +- Filter isnotnull(d_date_sk#536)\n                        :           :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#536,d_date_id#537,d_date#538,d_month_seq#539,d_week_seq#540,d_quarter_seq#541,d_year#542,d_dow#543,d_moy#544,d_dom#545,d_qoy#546,d_fy_year#547,d_fy_quarter_seq#548,d_fy_week_seq#549,d_day_name#550,d_quarter_name#551,d_holiday#552,d_weekend#553,d_following_holiday#554,d_first_dom#555,d_last_dom#556,d_same_day_ly#557,d_same_day_lq#558,d_current_day#559,... 4 more fields] parquet\n                        :           +- LogicalQueryStage Project [d_date#710], BroadcastQueryStage 7\n                        +- LogicalQueryStage Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86759331514,
        "inputRowCount" : 491133162
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 7001.0,
        "FinishedTasksDistributionInMs" : [ 1137.0, 1170.0, 1662.0, 3032.0, 3032.0 ]
      },
      "StartTimeInMs" : 1702227171937,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 8126,
        "IOBytes" : {
          "Total" : 33777626,
          "Details" : {
            "IR" : 11263348,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 11257139
          }
        }
      }
    },
    "2" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1559005424,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#680, d_date_id#681, d_date#682, d_month_seq#683, d_week_seq#684, d_quarter_seq#685, d_year#686, d_dow#687, d_moy#688, d_dom#689, d_qoy#690, d_fy_year#691, d_fy_quarter_seq#692, d_fy_week_seq#693, d_day_name#694, d_quarter_name#695, d_holiday#696, d_weekend#697, d_following_holiday#698, d_first_dom#699, d_last_dom#700, d_same_day_ly#701, d_same_day_lq#702, d_current_day#703, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : -301033224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#122 = d_date_sk#486) "
          },
          "12" : {
            "sign" : -254075282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#61) "
          },
          "66" : {
            "sign" : 1778393320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9 "
          },
          "51" : {
            "sign" : -476950196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 623792550480000,
            "rowCount" : 14177103420000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#125 = i_item_sk#514) "
          },
          "8" : {
            "sign" : -891100252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453] "
          },
          "19" : {
            "sign" : 697739377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#61) "
          },
          "23" : {
            "sign" : -1127507506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#652, d_date_id#653, d_date#654, d_month_seq#655, d_week_seq#656, d_quarter_seq#657, d_year#658, d_dow#659, d_moy#660, d_dom#661, d_qoy#662, d_fy_year#663, d_fy_quarter_seq#664, d_fy_week_seq#665, d_day_name#666, d_quarter_name#667, d_holiday#668, d_weekend#669, d_following_holiday#670, d_first_dom#671, d_last_dom#672, d_same_day_ly#673, d_same_day_lq#674, d_current_day#675, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : -2133939922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#710] "
          },
          "4" : {
            "sign" : -2000277806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2550458743623000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "40" : {
            "sign" : -64960456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486, d_date#488] "
          },
          "15" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1235824616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30] "
          },
          "9" : {
            "sign" : -1252258427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#30, i_item_id#40] "
          },
          "44" : {
            "sign" : 1700618236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 [])) "
          },
          "33" : {
            "sign" : 944745252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111] "
          },
          "22" : {
            "sign" : 645269718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 [])) "
          },
          "56" : {
            "sign" : -1073099478,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#123, ws_ship_date_sk#124, ws_item_sk#125, ws_bill_customer_sk#126, ws_bill_cdemo_sk#127, ws_bill_hdemo_sk#128, ws_bill_addr_sk#129, ws_ship_customer_sk#130, ws_ship_cdemo_sk#131, ws_ship_hdemo_sk#132, ws_ship_addr_sk#133, ws_web_page_sk#134, ws_web_site_sk#135, ws_ship_mode_sk#136, ws_warehouse_sk#137, ws_promo_sk#138, ws_order_number#139L, ws_quantity#140, ws_wholesale_cost#141, ws_list_price#142, ws_sales_price#143, ws_ext_discount_amt#144, ws_ext_sales_price#145, ws_ext_wholesale_cost#146, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "55" : {
            "sign" : -1766908215,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156]) "
          },
          "26" : {
            "sign" : -72738866,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#564, d_date_id#565, d_date#566, d_month_seq#567, d_week_seq#568, d_quarter_seq#569, d_year#570, d_dow#571, d_moy#572, d_dom#573, d_qoy#574, d_fy_year#575, d_fy_quarter_seq#576, d_fy_week_seq#577, d_day_name#578, d_quarter_name#579, d_holiday#580, d_weekend#581, d_following_holiday#582, d_first_dom#583, d_last_dom#584, d_same_day_ly#585, d_same_day_lq#586, d_current_day#587, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "50" : {
            "sign" : 233164152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 510375723120000,
            "rowCount" : 14177103420000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#145, i_item_id#515] "
          },
          "37" : {
            "sign" : -1864218542,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#89, cs_ship_date_sk#90, cs_bill_customer_sk#91, cs_bill_cdemo_sk#92, cs_bill_hdemo_sk#93, cs_bill_addr_sk#94, cs_ship_customer_sk#95, cs_ship_cdemo_sk#96, cs_ship_hdemo_sk#97, cs_ship_addr_sk#98, cs_call_center_sk#99, cs_catalog_page_sk#100, cs_ship_mode_sk#101, cs_warehouse_sk#102, cs_item_sk#103, cs_promo_sk#104, cs_order_number#105L, cs_quantity#106, cs_wholesale_cost#107, cs_list_price#108, cs_sales_price#109, cs_ext_discount_amt#110, cs_ext_sales_price#111, cs_ext_wholesale_cost#112, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 1721363630,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#536, d_date_id#537, d_date#538, d_month_seq#539, d_week_seq#540, d_quarter_seq#541, d_year#542, d_dow#543, d_moy#544, d_dom#545, d_qoy#546, d_fy_year#547, d_fy_quarter_seq#548, d_fy_week_seq#549, d_day_name#550, d_quarter_name#551, d_holiday#552, d_weekend#553, d_following_holiday#554, d_first_dom#555, d_last_dom#556, d_same_day_ly#557, d_same_day_lq#558, d_current_day#559, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -1161100268,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] "
          },
          "46" : {
            "sign" : -456081511,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#486], BroadcastQueryStage 12 "
          },
          "24" : {
            "sign" : -1928143940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#568] "
          },
          "35" : {
            "sign" : -583051964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] "
          },
          "16" : {
            "sign" : -1532259718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
          },
          "5" : {
            "sign" : -1911814557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2040083020503000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 715026703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2383492290960000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#39) "
          },
          "59" : {
            "sign" : -745998978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536, d_date#538] "
          },
          "48" : {
            "sign" : 1553722587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 510375723120000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "21" : {
            "sign" : -456411464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#654] "
          },
          "54" : {
            "sign" : 244416326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] "
          },
          "43" : {
            "sign" : 1057760761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#682] "
          },
          "65" : {
            "sign" : 1510702973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#536], BroadcastQueryStage 14 "
          },
          "57" : {
            "sign" : -311003116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536] "
          },
          "32" : {
            "sign" : -1334197382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1243321967712000,
            "rowCount" : 28257317448000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#103 = i_item_sk#464) "
          },
          "49" : {
            "sign" : -1136875996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 510375723120000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461] "
          },
          "6" : {
            "sign" : 1932306339,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2967393484368000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "36" : {
            "sign" : -1872485223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122]) "
          },
          "1" : {
            "sign" : 120554774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4109072420281500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1229889689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#488 = d_date#682) "
          },
          "17" : {
            "sign" : -1853585085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#654) "
          },
          "25" : {
            "sign" : -1657002750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 246,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19)) "
          },
          "60" : {
            "sign" : 1893585704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#536) "
          },
          "14" : {
            "sign" : 647622355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38]) "
          },
          "47" : {
            "sign" : -679671892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5 "
          },
          "31" : {
            "sign" : 1125027657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1017263428128000,
            "rowCount" : 28257317448000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#111, i_item_id#465] "
          },
          "58" : {
            "sign" : 1494633366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#538 = d_date#710) "
          },
          "64" : {
            "sign" : 994584262,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#708, d_date_id#709, d_date#710, d_month_seq#711, d_week_seq#712, d_quarter_seq#713, d_year#714, d_dow#715, d_moy#716, d_dom#717, d_qoy#718, d_fy_year#719, d_fy_quarter_seq#720, d_fy_week_seq#721, d_day_name#722, d_quarter_name#723, d_holiday#724, d_weekend#725, d_following_holiday#726, d_first_dom#727, d_last_dom#728, d_same_day_ly#729, d_same_day_lq#730, d_current_day#731, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "53" : {
            "sign" : 1547435469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#156 = d_date_sk#536) "
          },
          "42" : {
            "sign" : 1033186242,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#486, d_date_id#487, d_date#488, d_month_seq#489, d_week_seq#490, d_quarter_seq#491, d_year#492, d_dow#493, d_moy#494, d_dom#495, d_qoy#496, d_fy_year#497, d_fy_quarter_seq#498, d_fy_week_seq#499, d_day_name#500, d_quarter_name#501, d_holiday#502, d_weekend#503, d_following_holiday#504, d_first_dom#505, d_last_dom#506, d_same_day_ly#507, d_same_day_lq#508, d_current_day#509, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -297956763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 311601156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#61, d_date_id#62, d_date#63, d_month_seq#64, d_week_seq#65, d_quarter_seq#66, d_year#67, d_dow#68, d_moy#69, d_dom#70, d_qoy#71, d_fy_year#72, d_fy_quarter_seq#73, d_fy_week_seq#74, d_day_name#75, d_quarter_name#76, d_holiday#77, d_weekend#78, d_following_holiday#79, d_first_dom#80, d_last_dom#81, d_same_day_ly#82, d_same_day_lq#83, d_current_day#84, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : -382038412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#61], BroadcastQueryStage 10 "
          },
          "2" : {
            "sign" : -1214090033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4109072420281500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1160890817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486] "
          },
          "18" : {
            "sign" : -422388959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61, d_date#63] "
          },
          "30" : {
            "sign" : 445544164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1017263428128000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457] "
          },
          "7" : {
            "sign" : 1835947758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "29" : {
            "sign" : -1043110408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1017263428128000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "41" : {
            "sign" : -1674360414,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#486) "
          },
          "63" : {
            "sign" : 1507190347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 [])) "
          },
          "3" : {
            "sign" : -1638635895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4109072420281500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          },
          "52" : {
            "sign" : -44444404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145] "
          },
          "28" : {
            "sign" : 325104483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1 "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalRelation",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalRelation",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalRelation",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Aggregate",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453]\n            :     :     +- Project [ss_ext_sales_price#30, i_item_id#40]\n            :     :        +- Join Inner, (ss_item_sk#17 = i_item_sk#39)\n            :     :           :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n            :     :           :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#61)\n            :     :           :     :- Project [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38]\n            :     :           :     :  +- Filter ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38])\n            :     :           :     :     :  +- Project [d_date_sk#61]\n            :     :           :     :     :     +- Join LeftSemi, (d_date#63 = d_date#654)\n            :     :           :     :     :        :- Project [d_date_sk#61, d_date#63]\n            :     :           :     :     :        :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :     :     :        +- Project [d_date#654]\n            :     :           :     :     :           +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n            :     :           :     :     :              :  +- Project [d_week_seq#568]\n            :     :           :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :     :           :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :     :           :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#61], BroadcastQueryStage 10\n            :     :           +- LogicalQueryStage Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1\n            :     +- Filter isnotnull(cs_item_rev#457)\n            :        +- Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457]\n            :           +- Project [cs_ext_sales_price#111, i_item_id#465]\n            :              +- Join Inner, (cs_item_sk#103 = i_item_sk#464)\n            :                 :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n            :                 :  +- Join Inner, (cs_sold_date_sk#122 = d_date_sk#486)\n            :                 :     :- Project [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122]\n            :                 :     :  +- Filter ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122])\n            :                 :     :     :  +- Project [d_date_sk#486]\n            :                 :     :     :     +- Join LeftSemi, (d_date#488 = d_date#682)\n            :                 :     :     :        :- Project [d_date_sk#486, d_date#488]\n            :                 :     :     :        :  +- Filter isnotnull(d_date_sk#486)\n            :                 :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#486,d_date_id#487,d_date#488,d_month_seq#489,d_week_seq#490,d_quarter_seq#491,d_year#492,d_dow#493,d_moy#494,d_dom#495,d_qoy#496,d_fy_year#497,d_fy_quarter_seq#498,d_fy_week_seq#499,d_day_name#500,d_quarter_name#501,d_holiday#502,d_weekend#503,d_following_holiday#504,d_first_dom#505,d_last_dom#506,d_same_day_ly#507,d_same_day_lq#508,d_current_day#509,... 4 more fields] parquet\n            :                 :     :     :        +- Project [d_date#682]\n            :                 :     :     :           +- Filter (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 []))\n            :                 :     :     :              :  +- Project [d_week_seq#568]\n            :                 :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :                 :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :                 :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#680,d_date_id#681,d_date#682,d_month_seq#683,d_week_seq#684,d_quarter_seq#685,d_year#686,d_dow#687,d_moy#688,d_dom#689,d_qoy#690,d_fy_year#691,d_fy_quarter_seq#692,d_fy_week_seq#693,d_day_name#694,d_quarter_name#695,d_holiday#696,d_weekend#697,d_following_holiday#698,d_first_dom#699,d_last_dom#700,d_same_day_ly#701,d_same_day_lq#702,d_current_day#703,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#89,cs_ship_date_sk#90,cs_bill_customer_sk#91,cs_bill_cdemo_sk#92,cs_bill_hdemo_sk#93,cs_bill_addr_sk#94,cs_ship_customer_sk#95,cs_ship_cdemo_sk#96,cs_ship_hdemo_sk#97,cs_ship_addr_sk#98,cs_call_center_sk#99,cs_catalog_page_sk#100,cs_ship_mode_sk#101,cs_warehouse_sk#102,cs_item_sk#103,cs_promo_sk#104,cs_order_number#105L,cs_quantity#106,cs_wholesale_cost#107,cs_list_price#108,cs_sales_price#109,cs_ext_discount_amt#110,cs_ext_sales_price#111,cs_ext_wholesale_cost#112,... 10 more fields] parquet\n            :                 :     +- LogicalQueryStage Project [d_date_sk#486], BroadcastQueryStage 12\n            :                 +- LogicalQueryStage Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5\n            +- Filter isnotnull(ws_item_rev#461)\n               +- Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461]\n                  +- Project [ws_ext_sales_price#145, i_item_id#515]\n                     +- Join Inner, (ws_item_sk#125 = i_item_sk#514)\n                        :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n                        :  +- Join Inner, (ws_sold_date_sk#156 = d_date_sk#536)\n                        :     :- Project [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156]\n                        :     :  +- Filter ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156])\n                        :     :     :  +- Project [d_date_sk#536]\n                        :     :     :     +- Join LeftSemi, (d_date#538 = d_date#710)\n                        :     :     :        :- Project [d_date_sk#536, d_date#538]\n                        :     :     :        :  +- Filter isnotnull(d_date_sk#536)\n                        :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#536,d_date_id#537,d_date#538,d_month_seq#539,d_week_seq#540,d_quarter_seq#541,d_year#542,d_dow#543,d_moy#544,d_dom#545,d_qoy#546,d_fy_year#547,d_fy_quarter_seq#548,d_fy_week_seq#549,d_day_name#550,d_quarter_name#551,d_holiday#552,d_weekend#553,d_following_holiday#554,d_first_dom#555,d_last_dom#556,d_same_day_ly#557,d_same_day_lq#558,d_current_day#559,... 4 more fields] parquet\n                        :     :     :        +- Project [d_date#710]\n                        :     :     :           +- Filter (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 []))\n                        :     :     :              :  +- Project [d_week_seq#568]\n                        :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                        :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n                        :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#708,d_date_id#709,d_date#710,d_month_seq#711,d_week_seq#712,d_quarter_seq#713,d_year#714,d_dow#715,d_moy#716,d_dom#717,d_qoy#718,d_fy_year#719,d_fy_quarter_seq#720,d_fy_week_seq#721,d_day_name#722,d_quarter_name#723,d_holiday#724,d_weekend#725,d_following_holiday#726,d_first_dom#727,d_last_dom#728,d_same_day_ly#729,d_same_day_lq#730,d_current_day#731,... 4 more fields] parquet\n                        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#123,ws_ship_date_sk#124,ws_item_sk#125,ws_bill_customer_sk#126,ws_bill_cdemo_sk#127,ws_bill_hdemo_sk#128,ws_bill_addr_sk#129,ws_ship_customer_sk#130,ws_ship_cdemo_sk#131,ws_ship_hdemo_sk#132,ws_ship_addr_sk#133,ws_web_page_sk#134,ws_web_site_sk#135,ws_ship_mode_sk#136,ws_warehouse_sk#137,ws_promo_sk#138,ws_order_number#139L,ws_quantity#140,ws_wholesale_cost#141,ws_list_price#142,ws_sales_price#143,ws_ext_discount_amt#144,ws_ext_sales_price#145,ws_ext_wholesale_cost#146,... 10 more fields] parquet\n                        :     +- LogicalQueryStage Project [d_date_sk#536], BroadcastQueryStage 14\n                        +- LogicalQueryStage Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86638132396,
        "inputRowCount" : 491133141
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227175147,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4916,
        "IOBytes" : {
          "Total" : 32158411,
          "Details" : {
            "IR" : 9644133,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 11257139
          }
        }
      }
    },
    "7" : {
      "LQP" : {
        "operators" : {
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -518535436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 460144153843297584583396320000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "11" : {
            "sign" : -1659511152,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 5702680,
            "rowCount" : 142567,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))]) "
          },
          "9" : {
            "sign" : -2085784489,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 9222840,
            "rowCount" : 256190,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18 "
          },
          "5" : {
            "sign" : -938129255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 89654562775415844360000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 1596320199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 5132412,
            "rowCount" : 142567,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "6" : {
            "sign" : -468883341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 130406636764241228160000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : -712720040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 741343358969757219606582960000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1190673601,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 303641559,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 741343358969757219606582960000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -1487779317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 741343358969757219606582960000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- LogicalQueryStage Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18\n            +- Filter isnotnull(ws_item_rev#461)\n               +- LogicalQueryStage Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))])\n"
      },
      "IM" : {
        "inputSizeInBytes" : 14139531521949520,
        "inputRowCount" : 398757
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 7,
        "FinishedTasksNum" : 7,
        "FinishedTasksTotalTimeInMs" : 7637.0,
        "FinishedTasksDistributionInMs" : [ 674.0, 692.0, 1132.0, 1432.0, 1566.0 ]
      },
      "StartTimeInMs" : 1702227178129,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 1934,
        "IOBytes" : {
          "Total" : 21893461,
          "Details" : {
            "IR" : 5027729,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 5608593
          }
        }
      }
    },
    "3" : {
      "LQP" : {
        "operators" : {
          "45" : {
            "sign" : -1559005424,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#680, d_date_id#681, d_date#682, d_month_seq#683, d_week_seq#684, d_quarter_seq#685, d_year#686, d_dow#687, d_moy#688, d_dom#689, d_qoy#690, d_fy_year#691, d_fy_quarter_seq#692, d_fy_week_seq#693, d_day_name#694, d_quarter_name#695, d_holiday#696, d_weekend#697, d_following_holiday#698, d_first_dom#699, d_last_dom#700, d_same_day_ly#701, d_same_day_lq#702, d_current_day#703, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "34" : {
            "sign" : -301033224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 3878455336,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#122 = d_date_sk#486) "
          },
          "12" : {
            "sign" : -254075282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 7435136380,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#61) "
          },
          "66" : {
            "sign" : 1778393320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9 "
          },
          "51" : {
            "sign" : -476950196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 623792550480000,
            "rowCount" : 14177103420000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#125 = i_item_sk#514) "
          },
          "8" : {
            "sign" : -891100252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453] "
          },
          "19" : {
            "sign" : 697739377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#61) "
          },
          "23" : {
            "sign" : -1127507506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#652, d_date_id#653, d_date#654, d_month_seq#655, d_week_seq#656, d_quarter_seq#657, d_year#658, d_dow#659, d_moy#660, d_dom#661, d_qoy#662, d_fy_year#663, d_fy_quarter_seq#664, d_fy_week_seq#665, d_day_name#666, d_quarter_name#667, d_holiday#668, d_weekend#669, d_following_holiday#670, d_first_dom#671, d_last_dom#672, d_same_day_ly#673, d_same_day_lq#674, d_current_day#675, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "62" : {
            "sign" : -2133939922,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#710] "
          },
          "4" : {
            "sign" : -2000277806,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2550458743623000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "40" : {
            "sign" : -64960456,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486, d_date#488] "
          },
          "15" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "11" : {
            "sign" : -1235824616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 5310811700,
            "rowCount" : 265540585,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30] "
          },
          "9" : {
            "sign" : -1252258427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#30, i_item_id#40] "
          },
          "44" : {
            "sign" : 1700618236,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 [])) "
          },
          "33" : {
            "sign" : 944745252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2770325240,
            "rowCount" : 138516262,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111] "
          },
          "22" : {
            "sign" : 645269718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 [])) "
          },
          "56" : {
            "sign" : -1073099478,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#123, ws_ship_date_sk#124, ws_item_sk#125, ws_bill_customer_sk#126, ws_bill_cdemo_sk#127, ws_bill_hdemo_sk#128, ws_bill_addr_sk#129, ws_ship_customer_sk#130, ws_ship_cdemo_sk#131, ws_ship_hdemo_sk#132, ws_ship_addr_sk#133, ws_web_page_sk#134, ws_web_site_sk#135, ws_ship_mode_sk#136, ws_warehouse_sk#137, ws_promo_sk#138, ws_order_number#139L, ws_quantity#140, ws_wholesale_cost#141, ws_list_price#142, ws_sales_price#143, ws_ext_discount_amt#144, ws_ext_sales_price#145, ws_ext_wholesale_cost#146, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "55" : {
            "sign" : -1766908215,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 14972593792,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156]) "
          },
          "26" : {
            "sign" : -72738866,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#564, d_date_id#565, d_date#566, d_month_seq#567, d_week_seq#568, d_quarter_seq#569, d_year#570, d_dow#571, d_moy#572, d_dom#573, d_qoy#574, d_fy_year#575, d_fy_quarter_seq#576, d_fy_week_seq#577, d_day_name#578, d_quarter_name#579, d_holiday#580, d_weekend#581, d_following_holiday#582, d_first_dom#583, d_last_dom#584, d_same_day_ly#585, d_same_day_lq#586, d_current_day#587, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "50" : {
            "sign" : 233164152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 510375723120000,
            "rowCount" : 14177103420000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#145, i_item_id#515] "
          },
          "37" : {
            "sign" : -1864218542,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#89, cs_ship_date_sk#90, cs_bill_customer_sk#91, cs_bill_cdemo_sk#92, cs_bill_hdemo_sk#93, cs_bill_addr_sk#94, cs_ship_customer_sk#95, cs_ship_cdemo_sk#96, cs_ship_hdemo_sk#97, cs_ship_addr_sk#98, cs_call_center_sk#99, cs_catalog_page_sk#100, cs_ship_mode_sk#101, cs_warehouse_sk#102, cs_item_sk#103, cs_promo_sk#104, cs_order_number#105L, cs_quantity#106, cs_wholesale_cost#107, cs_list_price#108, cs_sales_price#109, cs_ext_discount_amt#110, cs_ext_sales_price#111, cs_ext_wholesale_cost#112, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "61" : {
            "sign" : 1721363630,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#536, d_date_id#537, d_date#538, d_month_seq#539, d_week_seq#540, d_quarter_seq#541, d_year#542, d_dow#543, d_moy#544, d_dom#545, d_qoy#546, d_fy_year#547, d_fy_quarter_seq#548, d_fy_week_seq#549, d_day_name#550, d_quarter_name#551, d_holiday#552, d_weekend#553, d_following_holiday#554, d_first_dom#555, d_last_dom#556, d_same_day_ly#557, d_same_day_lq#558, d_current_day#559, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "13" : {
            "sign" : -1161100268,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] "
          },
          "46" : {
            "sign" : -456081511,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#486], BroadcastQueryStage 12 "
          },
          "24" : {
            "sign" : -1928143940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#568] "
          },
          "35" : {
            "sign" : -583051964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] "
          },
          "16" : {
            "sign" : -1532259718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
          },
          "5" : {
            "sign" : -1911814557,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 2040083020503000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "10" : {
            "sign" : 715026703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2383492290960000,
            "rowCount" : 54170279340000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#39) "
          },
          "59" : {
            "sign" : -745998978,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536, d_date#538] "
          },
          "48" : {
            "sign" : 1553722587,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 510375723120000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "21" : {
            "sign" : -456411464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#654] "
          },
          "54" : {
            "sign" : 244416326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] "
          },
          "43" : {
            "sign" : 1057760761,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#682] "
          },
          "65" : {
            "sign" : 1510702973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#536], BroadcastQueryStage 14 "
          },
          "57" : {
            "sign" : -311003116,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#536] "
          },
          "32" : {
            "sign" : -1334197382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1243321967712000,
            "rowCount" : 28257317448000,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#103 = i_item_sk#464) "
          },
          "49" : {
            "sign" : -1136875996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 510375723120000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461] "
          },
          "6" : {
            "sign" : 1932306339,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 2967393484368000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "36" : {
            "sign" : -1872485223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 29800787536,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122]) "
          },
          "1" : {
            "sign" : 120554774,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "sizeInBytes" : 4109072420281500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "39" : {
            "sign" : -1229889689,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#488 = d_date#682) "
          },
          "17" : {
            "sign" : -1853585085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#654) "
          },
          "25" : {
            "sign" : -1657002750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 246,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19)) "
          },
          "60" : {
            "sign" : 1893585704,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#536) "
          },
          "14" : {
            "sign" : 647622355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 41806893656,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38]) "
          },
          "47" : {
            "sign" : -679671892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5 "
          },
          "31" : {
            "sign" : 1125027657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1017263428128000,
            "rowCount" : 28257317448000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#111, i_item_id#465] "
          },
          "58" : {
            "sign" : 1494633366,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#538 = d_date#710) "
          },
          "64" : {
            "sign" : 994584262,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#708, d_date_id#709, d_date#710, d_month_seq#711, d_week_seq#712, d_quarter_seq#713, d_year#714, d_dow#715, d_moy#716, d_dom#717, d_qoy#718, d_fy_year#719, d_fy_quarter_seq#720, d_fy_week_seq#721, d_day_name#722, d_quarter_name#723, d_holiday#724, d_weekend#725, d_following_holiday#726, d_first_dom#727, d_last_dom#728, d_same_day_ly#729, d_same_day_lq#730, d_current_day#731, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "53" : {
            "sign" : 1547435469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "sizeInBytes" : 1945876940,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#156 = d_date_sk#536) "
          },
          "42" : {
            "sign" : 1033186242,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#486, d_date_id#487, d_date#488, d_month_seq#489, d_week_seq#490, d_quarter_seq#491, d_year#492, d_dow#493, d_moy#494, d_dom#495, d_qoy#496, d_fy_year#497, d_fy_quarter_seq#498, d_fy_week_seq#499, d_day_name#500, d_quarter_name#501, d_holiday#502, d_weekend#503, d_following_holiday#504, d_first_dom#505, d_last_dom#506, d_same_day_ly#507, d_same_day_lq#508, d_current_day#509, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "0" : {
            "sign" : -297956763,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "20" : {
            "sign" : 311601156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#61, d_date_id#62, d_date#63, d_month_seq#64, d_week_seq#65, d_quarter_seq#66, d_year#67, d_dow#68, d_moy#69, d_dom#70, d_qoy#71, d_fy_year#72, d_fy_quarter_seq#73, d_fy_week_seq#74, d_day_name#75, d_quarter_name#76, d_holiday#77, d_weekend#78, d_following_holiday#79, d_first_dom#80, d_last_dom#81, d_same_day_ly#82, d_same_day_lq#83, d_current_day#84, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "27" : {
            "sign" : -382038412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#61], BroadcastQueryStage 10 "
          },
          "2" : {
            "sign" : -1214090033,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "sizeInBytes" : 4109072420281500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "38" : {
            "sign" : -1160890817,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#486] "
          },
          "18" : {
            "sign" : -422388959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61, d_date#63] "
          },
          "30" : {
            "sign" : 445544164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "sizeInBytes" : 1017263428128000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457] "
          },
          "7" : {
            "sign" : 1835947758,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1950130056240000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "29" : {
            "sign" : -1043110408,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 1017263428128000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "41" : {
            "sign" : -1674360414,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#486) "
          },
          "63" : {
            "sign" : 1507190347,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "sizeInBytes" : 17970054,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 [])) "
          },
          "3" : {
            "sign" : -1638635895,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 4109072420281500,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          },
          "52" : {
            "sign" : -44444404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "sizeInBytes" : 1389912100,
            "rowCount" : 69495605,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145] "
          },
          "28" : {
            "sign" : 325104483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1 "
          }
        },
        "links" : [ {
          "fromId" : 15,
          "fromName" : "LogicalRelation",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 20,
          "fromName" : "LogicalRelation",
          "toId" : 19,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 19,
          "fromName" : "Filter",
          "toId" : 18,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 18,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 23,
          "fromName" : "LogicalRelation",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 26,
          "fromName" : "LogicalRelation",
          "toId" : 25,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 25,
          "fromName" : "Filter",
          "toId" : 24,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 22,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 22,
          "fromName" : "Filter",
          "toId" : 21,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 21,
          "fromName" : "Project",
          "toId" : 17,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 17,
          "fromName" : "Join",
          "toId" : 16,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 16,
          "fromName" : "Project",
          "toId" : 14,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 14,
          "fromName" : "Filter",
          "toId" : 13,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 13,
          "fromName" : "Project",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 27,
          "fromName" : "LogicalQueryStage",
          "toId" : 12,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 12,
          "fromName" : "Join",
          "toId" : 11,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 11,
          "fromName" : "Project",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 28,
          "fromName" : "LogicalQueryStage",
          "toId" : 10,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 10,
          "fromName" : "Join",
          "toId" : 9,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "Project",
          "toId" : 8,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "Aggregate",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 37,
          "fromName" : "LogicalRelation",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 42,
          "fromName" : "LogicalRelation",
          "toId" : 41,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 41,
          "fromName" : "Filter",
          "toId" : 40,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 40,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 45,
          "fromName" : "LogicalRelation",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 44,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 44,
          "fromName" : "Filter",
          "toId" : 43,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 43,
          "fromName" : "Project",
          "toId" : 39,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 39,
          "fromName" : "Join",
          "toId" : 38,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 38,
          "fromName" : "Project",
          "toId" : 36,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 36,
          "fromName" : "Filter",
          "toId" : 35,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 35,
          "fromName" : "Project",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 46,
          "fromName" : "LogicalQueryStage",
          "toId" : 34,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 34,
          "fromName" : "Join",
          "toId" : 33,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 33,
          "fromName" : "Project",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 47,
          "fromName" : "LogicalQueryStage",
          "toId" : 32,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 32,
          "fromName" : "Join",
          "toId" : 31,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 31,
          "fromName" : "Project",
          "toId" : 30,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 30,
          "fromName" : "Aggregate",
          "toId" : 29,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 29,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 56,
          "fromName" : "LogicalRelation",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 61,
          "fromName" : "LogicalRelation",
          "toId" : 60,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 60,
          "fromName" : "Filter",
          "toId" : 59,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 59,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 64,
          "fromName" : "LogicalRelation",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 24,
          "fromName" : "Project",
          "toId" : 63,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 63,
          "fromName" : "Filter",
          "toId" : 62,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 62,
          "fromName" : "Project",
          "toId" : 58,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 58,
          "fromName" : "Join",
          "toId" : 57,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 57,
          "fromName" : "Project",
          "toId" : 55,
          "toName" : "Filter",
          "linkType" : "Subquery"
        }, {
          "fromId" : 55,
          "fromName" : "Filter",
          "toId" : 54,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 54,
          "fromName" : "Project",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 65,
          "fromName" : "LogicalQueryStage",
          "toId" : 53,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 53,
          "fromName" : "Join",
          "toId" : 52,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 52,
          "fromName" : "Project",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 66,
          "fromName" : "LogicalQueryStage",
          "toId" : 51,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 51,
          "fromName" : "Join",
          "toId" : 50,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 50,
          "fromName" : "Project",
          "toId" : 49,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 49,
          "fromName" : "Aggregate",
          "toId" : 48,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 48,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453]\n            :     :     +- Project [ss_ext_sales_price#30, i_item_id#40]\n            :     :        +- Join Inner, (ss_item_sk#17 = i_item_sk#39)\n            :     :           :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n            :     :           :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#61)\n            :     :           :     :- Project [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38]\n            :     :           :     :  +- Filter ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38])\n            :     :           :     :     :  +- Project [d_date_sk#61]\n            :     :           :     :     :     +- Join LeftSemi, (d_date#63 = d_date#654)\n            :     :           :     :     :        :- Project [d_date_sk#61, d_date#63]\n            :     :           :     :     :        :  +- Filter isnotnull(d_date_sk#61)\n            :     :           :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n            :     :           :     :     :        +- Project [d_date#654]\n            :     :           :     :     :           +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n            :     :           :     :     :              :  +- Project [d_week_seq#568]\n            :     :           :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :     :           :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :     :           :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n            :     :           :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n            :     :           :     +- LogicalQueryStage Project [d_date_sk#61], BroadcastQueryStage 10\n            :     :           +- LogicalQueryStage Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1\n            :     +- Filter isnotnull(cs_item_rev#457)\n            :        +- Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457]\n            :           +- Project [cs_ext_sales_price#111, i_item_id#465]\n            :              +- Join Inner, (cs_item_sk#103 = i_item_sk#464)\n            :                 :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n            :                 :  +- Join Inner, (cs_sold_date_sk#122 = d_date_sk#486)\n            :                 :     :- Project [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122]\n            :                 :     :  +- Filter ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122])\n            :                 :     :     :  +- Project [d_date_sk#486]\n            :                 :     :     :     +- Join LeftSemi, (d_date#488 = d_date#682)\n            :                 :     :     :        :- Project [d_date_sk#486, d_date#488]\n            :                 :     :     :        :  +- Filter isnotnull(d_date_sk#486)\n            :                 :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#486,d_date_id#487,d_date#488,d_month_seq#489,d_week_seq#490,d_quarter_seq#491,d_year#492,d_dow#493,d_moy#494,d_dom#495,d_qoy#496,d_fy_year#497,d_fy_quarter_seq#498,d_fy_week_seq#499,d_day_name#500,d_quarter_name#501,d_holiday#502,d_weekend#503,d_following_holiday#504,d_first_dom#505,d_last_dom#506,d_same_day_ly#507,d_same_day_lq#508,d_current_day#509,... 4 more fields] parquet\n            :                 :     :     :        +- Project [d_date#682]\n            :                 :     :     :           +- Filter (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 []))\n            :                 :     :     :              :  +- Project [d_week_seq#568]\n            :                 :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n            :                 :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n            :                 :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#680,d_date_id#681,d_date#682,d_month_seq#683,d_week_seq#684,d_quarter_seq#685,d_year#686,d_dow#687,d_moy#688,d_dom#689,d_qoy#690,d_fy_year#691,d_fy_quarter_seq#692,d_fy_week_seq#693,d_day_name#694,d_quarter_name#695,d_holiday#696,d_weekend#697,d_following_holiday#698,d_first_dom#699,d_last_dom#700,d_same_day_ly#701,d_same_day_lq#702,d_current_day#703,... 4 more fields] parquet\n            :                 :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#89,cs_ship_date_sk#90,cs_bill_customer_sk#91,cs_bill_cdemo_sk#92,cs_bill_hdemo_sk#93,cs_bill_addr_sk#94,cs_ship_customer_sk#95,cs_ship_cdemo_sk#96,cs_ship_hdemo_sk#97,cs_ship_addr_sk#98,cs_call_center_sk#99,cs_catalog_page_sk#100,cs_ship_mode_sk#101,cs_warehouse_sk#102,cs_item_sk#103,cs_promo_sk#104,cs_order_number#105L,cs_quantity#106,cs_wholesale_cost#107,cs_list_price#108,cs_sales_price#109,cs_ext_discount_amt#110,cs_ext_sales_price#111,cs_ext_wholesale_cost#112,... 10 more fields] parquet\n            :                 :     +- LogicalQueryStage Project [d_date_sk#486], BroadcastQueryStage 12\n            :                 +- LogicalQueryStage Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5\n            +- Filter isnotnull(ws_item_rev#461)\n               +- Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461]\n                  +- Project [ws_ext_sales_price#145, i_item_id#515]\n                     +- Join Inner, (ws_item_sk#125 = i_item_sk#514)\n                        :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n                        :  +- Join Inner, (ws_sold_date_sk#156 = d_date_sk#536)\n                        :     :- Project [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156]\n                        :     :  +- Filter ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156])\n                        :     :     :  +- Project [d_date_sk#536]\n                        :     :     :     +- Join LeftSemi, (d_date#538 = d_date#710)\n                        :     :     :        :- Project [d_date_sk#536, d_date#538]\n                        :     :     :        :  +- Filter isnotnull(d_date_sk#536)\n                        :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#536,d_date_id#537,d_date#538,d_month_seq#539,d_week_seq#540,d_quarter_seq#541,d_year#542,d_dow#543,d_moy#544,d_dom#545,d_qoy#546,d_fy_year#547,d_fy_quarter_seq#548,d_fy_week_seq#549,d_day_name#550,d_quarter_name#551,d_holiday#552,d_weekend#553,d_following_holiday#554,d_first_dom#555,d_last_dom#556,d_same_day_ly#557,d_same_day_lq#558,d_current_day#559,... 4 more fields] parquet\n                        :     :     :        +- Project [d_date#710]\n                        :     :     :           +- Filter (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 []))\n                        :     :     :              :  +- Project [d_week_seq#568]\n                        :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                        :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n                        :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#708,d_date_id#709,d_date#710,d_month_seq#711,d_week_seq#712,d_quarter_seq#713,d_year#714,d_dow#715,d_moy#716,d_dom#717,d_qoy#718,d_fy_year#719,d_fy_quarter_seq#720,d_fy_week_seq#721,d_day_name#722,d_quarter_name#723,d_holiday#724,d_weekend#725,d_following_holiday#726,d_first_dom#727,d_last_dom#728,d_same_day_ly#729,d_same_day_lq#730,d_current_day#731,... 4 more fields] parquet\n                        :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#123,ws_ship_date_sk#124,ws_item_sk#125,ws_bill_customer_sk#126,ws_bill_cdemo_sk#127,ws_bill_hdemo_sk#128,ws_bill_addr_sk#129,ws_ship_customer_sk#130,ws_ship_cdemo_sk#131,ws_ship_hdemo_sk#132,ws_ship_addr_sk#133,ws_web_page_sk#134,ws_web_site_sk#135,ws_ship_mode_sk#136,ws_warehouse_sk#137,ws_promo_sk#138,ws_order_number#139L,ws_quantity#140,ws_wholesale_cost#141,ws_list_price#142,ws_sales_price#143,ws_ext_discount_amt#144,ws_ext_sales_price#145,ws_ext_wholesale_cost#146,... 10 more fields] parquet\n                        :     +- LogicalQueryStage Project [d_date_sk#536], BroadcastQueryStage 14\n                        +- LogicalQueryStage Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9\n"
      },
      "IM" : {
        "inputSizeInBytes" : 86638132396,
        "inputRowCount" : 491133141
      },
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "StartTimeInMs" : 1702227175242,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "Objectives" : {
        "DurationInMs" : 4821,
        "IOBytes" : {
          "Total" : 32158411,
          "Details" : {
            "IR" : 9644133,
            "IW" : 0,
            "SR" : 11257139,
            "SW" : 11257139
          }
        }
      }
    }
  },
  "RuntimeQSs" : {
    "8" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1596320199,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5132412,
                "rowCount" : 142567
              },
              "compileTime" : {
                "sizeInBytes" : 5132412,
                "rowCount" : 142567
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ws_item_rev#461) "
          },
          "1" : {
            "sign" : -1659511152,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 5702680,
                "rowCount" : 142567
              },
              "compileTime" : {
                "sizeInBytes" : 3700534142592000,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))]) "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(ws_item_rev#461)\n+- LogicalQueryStage Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1341967610,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 5132412,
            "rowCount" : 142567,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [2]: [item_id#460, ws_item_rev#461] Condition : isnotnull(ws_item_rev#461) "
          },
          "1" : {
            "sign" : 142368869,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 5702680,
            "rowCount" : 142567,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#515, sum#755L] Keys [1]: [i_item_id#515] Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#145))] Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#145))#738L] Results [2]: [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145))#738L,17,2) AS ws_item_rev#461] "
          },
          "2" : {
            "sign" : 1566532236,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#515, sum#755L] Arguments: 17 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(ws_item_rev#461)\n+- HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))], output=[item_id#460, ws_item_rev#461])\n   +- ShuffleQueryStage 17\n      +- Exchange hashpartitioning(i_item_id#515, 200), ENSURE_REQUIREMENTS, [plan_id=2054]\n         +- *(12) HashAggregate(keys=[i_item_id#515], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#145))], output=[i_item_id#515, sum#755L])\n            +- *(12) Project [ws_ext_sales_price#145, i_item_id#515]\n               +- *(12) BroadcastHashJoin [ws_item_sk#125], [i_item_sk#514], Inner, BuildRight, false\n                  :- *(12) Project [ws_item_sk#125, ws_ext_sales_price#145]\n                  :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#156], [d_date_sk#536], Inner, BuildRight, false\n                  :     :- *(12) Filter isnotnull(ws_item_sk#125)\n                  :     :  +- *(12) ColumnarToRow\n                  :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#125,ws_ext_sales_price#145,ws_sold_date_sk#156] Batched: true, DataFilters: [isnotnull(ws_item_sk#125)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#156), dynamicpruningexpression(ws_sold_date_sk#156 IN dynamicpruning#7..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>\n                  :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n                  :     +- BroadcastQueryStage 14\n                  :        +- ReusedExchange [d_date_sk#536], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n                  +- BroadcastQueryStage 9\n                     +- ReusedExchange [i_item_sk#514, i_item_id#515], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 5702680,
        "inputRowCount" : 142567
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "2" : [ 10555, 10642, 11382, 10375, 10657, 11721, 10375, 10796, 10349, 11104, 10811, 10236, 10642, 10210, 10668, 10401, 11089, 10766, 10236, 11429, 10488, 9932, 11382, 11382, 10236, 11382, 10553, 11382, 10657, 11738, 10992, 11706, 10796, 11536, 11722, 10950, 12370, 10106, 10488, 10781, 11228, 11413, 11131, 10657, 10961, 11398, 10518, 10071, 10827, 10781, 11074, 10730, 10764, 11291, 11259, 11536, 10236, 10134, 10950, 9954, 11567, 10375, 10935, 11228, 11690, 10082, 10859, 11722, 11301, 10950, 11567, 10853, 11074, 11089, 10657, 10781, 12758, 11567, 11706, 10920, 10210, 10260, 11382, 10221, 10668, 10221, 11552, 10386, 9561, 10838, 10961, 11536, 10488, 10364, 12030, 11074, 11413, 11737, 10503, 10082, 10627, 9409, 11382, 10951, 10781, 10642, 10642, 10811, 11259, 11274, 10642, 11120, 10514, 11089, 10503, 10375, 11074, 10966, 11844, 10935, 10503, 10950, 11120, 11722, 9967, 10386, 11090, 11105, 11398, 10920, 10961, 10657, 10935, 11115, 11243, 11105, 11567, 11397, 11259, 10503, 11259, 12030, 10796, 11860, 10699, 10360, 10796, 10781, 11567, 11568, 10529, 10781, 10236, 10375, 11908, 11429, 11089, 11567, 11444, 10920, 11567, 10950, 11599, 11089, 11567, 10935, 10529, 11089, 9967, 10673, 10981, 11105, 10961, 11074, 10951, 10232, 11706, 9943, 11552, 10642, 11908, 10349, 10920, 10210, 11907, 10657, 11382, 9828, 10935, 10920, 10781, 11089, 10699, 10236, 10132, 11131, 10657, 10796, 11722, 11615 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 7,
        "FinishedTasksNum" : 7,
        "FinishedTasksTotalTimeInMs" : 7637.0,
        "FinishedTasksDistributionInMs" : [ 674.0, 692.0, 1132.0, 1432.0, 1566.0 ]
      },
      "QueryStageOptimizationId" : 8,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 13 ],
      "Objectives" : {
        "DurationInMs" : 318,
        "TotalTasksDurationInMs" : 312,
        "IOBytes" : {
          "Total" : 2088333,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 2088333,
            "SW" : 0
          }
        }
      }
    },
    "4" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -382038412,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1048632,
                "rowCount" : 7
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#61], BroadcastQueryStage 10 "
          },
          "4" : {
            "sign" : -254075282,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 53908889188,
                "rowCount" : 1925317471
              },
              "compileTime" : {
                "sizeInBytes" : 53908889188,
                "rowCount" : 1925317471
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_sold_date_sk#38 = d_date_sk#61) "
          },
          "9" : {
            "sign" : 325104483,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18409216,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1 "
          },
          "5" : {
            "sign" : -1161100268,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 6601088472,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 6601088472,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] "
          },
          "6" : {
            "sign" : 647622355,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38]) "
          },
          "1" : {
            "sign" : -1252258427,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14139531507024000,
                "rowCount" : 392764764084000
              },
              "compileTime" : {
                "sizeInBytes" : 14139531507024000,
                "rowCount" : 392764764084000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_ext_sales_price#30, i_item_id#40] "
          },
          "0" : {
            "sign" : -891100252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14139531507024000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 14139531507024000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453] "
          },
          "2" : {
            "sign" : 715026703,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17281649619696000,
                "rowCount" : 392764764084000
              },
              "compileTime" : {
                "sizeInBytes" : 17281649619696000,
                "rowCount" : 392764764084000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ss_item_sk#17 = i_item_sk#39) "
          },
          "7" : {
            "sign" : 437822322,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              },
              "compileTime" : {
                "sizeInBytes" : 41806893656,
                "rowCount" : 275045353
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ss_sold_time_sk#16, ss_item_sk#17, ss_customer_sk#18, ss_cdemo_sk#19, ss_hdemo_sk#20, ss_addr_sk#21, ss_store_sk#22, ss_promo_sk#23, ss_ticket_number#24L, ss_quantity#25, ss_wholesale_cost#26, ss_list_price#27, ss_sales_price#28, ss_ext_discount_amt#29, ss_ext_sales_price#30, ss_ext_wholesale_cost#31, ss_ext_list_price#32, ss_ext_tax#33, ss_coupon_amt#34, ss_net_paid#35, ss_net_paid_inc_tax#36, ss_net_profit#37, ss_sold_date_sk#38], `spark_catalog`.`tpcds_100`.`store_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -1235824616,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 38506349420,
                "rowCount" : 1925317471
              },
              "compileTime" : {
                "sizeInBytes" : 38506349420,
                "rowCount" : 1925317471
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ss_item_sk#17, ss_ext_sales_price#30] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalRelation",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453]\n+- Project [ss_ext_sales_price#30, i_item_id#40]\n   +- Join Inner, (ss_item_sk#17 = i_item_sk#39)\n      :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n      :  +- Join Inner, (ss_sold_date_sk#38 = d_date_sk#61)\n      :     :- Project [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38]\n      :     :  +- Filter ((isnotnull(ss_item_sk#17) AND isnotnull(ss_sold_date_sk#38)) AND dynamicpruning#747 [ss_sold_date_sk#38])\n      :     :     :  +- Project [d_date_sk#61]\n      :     :     :     +- Join LeftSemi, (d_date#63 = d_date#654)\n      :     :     :        :- Project [d_date_sk#61, d_date#63]\n      :     :     :        :  +- Filter isnotnull(d_date_sk#61)\n      :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n      :     :     :        +- Project [d_date#654]\n      :     :     :           +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n      :     :     :              :  +- Project [d_week_seq#568]\n      :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n      :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n      :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.store_sales[ss_sold_time_sk#16,ss_item_sk#17,ss_customer_sk#18,ss_cdemo_sk#19,ss_hdemo_sk#20,ss_addr_sk#21,ss_store_sk#22,ss_promo_sk#23,ss_ticket_number#24L,ss_quantity#25,ss_wholesale_cost#26,ss_list_price#27,ss_sales_price#28,ss_ext_discount_amt#29,ss_ext_sales_price#30,ss_ext_wholesale_cost#31,ss_ext_list_price#32,ss_ext_tax#33,ss_coupon_amt#34,ss_net_paid#35,ss_net_paid_inc_tax#36,ss_net_profit#37,ss_sold_date_sk#38] parquet\n      :     +- LogicalQueryStage Project [d_date_sk#61], BroadcastQueryStage 10\n      +- LogicalQueryStage Project [i_item_sk#39, i_item_id#40], BroadcastQueryStage 1\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -898545256,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#39, i_item_id#40] Arguments: 1 "
          },
          "4" : {
            "sign" : -1484114979,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 53908889188,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_sold_date_sk#38] Right keys [1]: [d_date_sk#61] Join type: Inner Join condition: None "
          },
          "5" : {
            "sign" : -720940765,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] Condition : isnotnull(ss_item_sk#17) "
          },
          "6" : {
            "sign" : 1255174672,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 6601088472,
            "rowCount" : 275045353,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.store_sales Output [3]: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_sales/ss_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#747)] PushedFilters: [IsNotNull(ss_item_sk)] ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)> "
          },
          "1" : {
            "sign" : -1636220035,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : 392764764084000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_ext_sales_price#30, i_item_id#40] Input [4]: [ss_item_sk#17, ss_ext_sales_price#30, i_item_sk#39, i_item_id#40] "
          },
          "0" : {
            "sign" : -1264700279,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ss_ext_sales_price#30, i_item_id#40] Keys [1]: [i_item_id#40] Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#30))] Aggregate Attributes [1]: [sum#750L] Results [2]: [i_item_id#40, sum#751L] "
          },
          "2" : {
            "sign" : -376740087,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 17281649619696000,
            "rowCount" : 392764764084000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ss_item_sk#17] Right keys [1]: [i_item_sk#39] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -1196594212,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#61] Arguments: 10 "
          },
          "3" : {
            "sign" : -1227342087,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 38506349420,
            "rowCount" : 1925317471,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ss_item_sk#17, ss_ext_sales_price#30] Input [4]: [ss_item_sk#17, ss_ext_sales_price#30, ss_sold_date_sk#38, d_date_sk#61] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.store_sales",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#40], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#30))], output=[i_item_id#40, sum#751L])\n+- Project [ss_ext_sales_price#30, i_item_id#40]\n   +- BroadcastHashJoin [ss_item_sk#17], [i_item_sk#39], Inner, BuildRight, false\n      :- Project [ss_item_sk#17, ss_ext_sales_price#30]\n      :  +- BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#61], Inner, BuildRight, false\n      :     :- Filter isnotnull(ss_item_sk#17)\n      :     :  +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_ext_sales_price#30,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#747)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :     :        +- SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n      :     :           +- AdaptiveSparkPlan isFinalPlan=false\n      :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1838]\n      :     :                 +- Project [d_date_sk#61]\n      :     :                    +- BroadcastHashJoin [d_date#63], [d_date#654], LeftSemi, BuildRight, false\n      :     :                       :- Filter isnotnull(d_date_sk#61)\n      :     :                       :  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date#63] Batched: true, DataFilters: [isnotnull(d_date_sk#61)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>\n      :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=250]\n      :     :                          +- Project [d_date#654]\n      :     :                             +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#242]))\n      :     :                                :  +- Subquery subquery#454, [id=#242]\n      :     :                                :     +- AdaptiveSparkPlan isFinalPlan=false\n      :     :                                :        +- Project [d_week_seq#568]\n      :     :                                :           +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n      :     :                                :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      :     :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#654,d_week_seq#656] Batched: true, DataFilters: [isnotnull(d_week_seq#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      :     +- BroadcastQueryStage 10\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n      :           +- *(7) Project [d_date_sk#61]\n      :              +- *(7) BroadcastHashJoin [d_date#63], [d_date#654], LeftSemi, BuildRight, false\n      :                 :- *(7) Filter isnotnull(d_date_sk#61)\n      :                 :  +- *(7) ColumnarToRow\n      :                 :     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date#63] Batched: true, DataFilters: [isnotnull(d_date_sk#61)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>\n      :                 +- BroadcastQueryStage 0\n      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=542]\n      :                       +- *(1) Project [d_date#654]\n      :                          +- *(1) Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#259]))\n      :                             :  +- Subquery subquery#454, [id=#259]\n      :                             :     +- AdaptiveSparkPlan isFinalPlan=true\n                                             +- == Final Plan ==\n                                                *(1) Project [d_week_seq#568]\n                                                +- *(1) Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                                                   +- *(1) ColumnarToRow\n                                                      +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n                                             +- == Initial Plan ==\n                                                Project [d_week_seq#568]\n                                                +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                                                   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      :                             +- *(1) ColumnarToRow\n      :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#654,d_week_seq#656] Batched: true, DataFilters: [isnotnull(d_week_seq#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      +- BroadcastQueryStage 1\n         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n            +- *(2) Filter (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40))\n               +- *(2) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#39,i_item_id#40] Batched: true, DataFilters: [isnotnull(i_item_sk#39), isnotnull(i_item_id#40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 6620546320,
        "inputRowCount" : 275249360
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 4,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 7 ],
      "Objectives" : {
        "DurationInMs" : 2544,
        "TotalTasksDurationInMs" : 22606,
        "IOBytes" : {
          "Total" : 10636322,
          "Details" : {
            "IR" : 5027729,
            "IW" : 0,
            "SR" : 0,
            "SW" : 5608593
          }
        }
      }
    },
    "9" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -1327915929,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 16474280,
                "rowCount" : 411857
              },
              "compileTime" : {
                "sizeInBytes" : 14139531507024000,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))]) "
          },
          "4" : {
            "sign" : -518535436,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 460144153843297584583396320000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 460144153843297584583396320000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "9" : {
            "sign" : -2085784489,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 37748736,
                "rowCount" : 97467
              },
              "compileTime" : {
                "sizeInBytes" : 9222840,
                "rowCount" : 256190
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18 "
          },
          "5" : {
            "sign" : -938129255,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1766268513636,
                "rowCount" : 40142466219
              },
              "compileTime" : {
                "sizeInBytes" : 1766268513636,
                "rowCount" : 40142466219
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, cs_item_rev#457] "
          },
          "6" : {
            "sign" : -468883341,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 2569117838016,
                "rowCount" : 40142466219
              },
              "compileTime" : {
                "sizeInBytes" : 2569117838016,
                "rowCount" : 40142466219
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "1" : {
            "sign" : -712720040,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.LocalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 741343358969757219606582960000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 741343358969757219606582960000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LocalLimit Arguments: 100 "
          },
          "0" : {
            "sign" : 1190673601,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.GlobalLimit",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 11600,
                "rowCount" : 100
              },
              "compileTime" : {
                "sizeInBytes" : 11600,
                "rowCount" : 100
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) GlobalLimit Arguments: 100 "
          },
          "2" : {
            "sign" : 303641559,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Sort",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 741343358969757219606582960000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 741343358969757219606582960000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Sort Arguments: [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true "
          },
          "7" : {
            "sign" : 1452668143,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14826852,
                "rowCount" : 411857
              },
              "compileTime" : {
                "sizeInBytes" : 14826852,
                "rowCount" : 411857
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(ss_item_rev#453) "
          },
          "3" : {
            "sign" : -1487779317,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 741343358969757219606582960000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 741343358969757219606582960000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] "
          }
        },
        "links" : [ {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 7,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "Filter",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 6,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Join",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Sort",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Sort",
          "toId" : 1,
          "toName" : "LocalLimit",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "LocalLimit",
          "toId" : 0,
          "toName" : "GlobalLimit",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "GlobalLimit 100\n+- LocalLimit 100\n   +- Sort [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], true\n      +- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n         +- Join Inner, (((((((((item_id#452 = item_id#460) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457)))\n            :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n            :  +- Join Inner, (((((item_id#452 = item_id#456) AND (cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453)))\n            :     :- Filter isnotnull(ss_item_rev#453)\n            :     :  +- LogicalQueryStage Aggregate [i_item_id#40], [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30)),17,2) AS ss_item_rev#453], HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))])\n            :     +- LogicalQueryStage Filter isnotnull(cs_item_rev#457), BroadcastQueryStage 18\n            +- Filter isnotnull(ws_item_rev#461)\n               +- LogicalQueryStage Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461], HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -1937621644,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 37748736,
            "rowCount" : 97467,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [item_id#456, cs_item_rev#457] Arguments: 18 "
          },
          "4" : {
            "sign" : -715107289,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 2569117838016,
            "rowCount" : 40142466219,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [item_id#452] Right keys [1]: [item_id#456] Join type: Inner Join condition: ((((cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457)) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) "
          },
          "9" : {
            "sign" : -1316463625,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 37748736,
            "rowCount" : 80650,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [item_id#460, ws_item_rev#461] Arguments: 19 "
          },
          "5" : {
            "sign" : 1110539106,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 14826852,
            "rowCount" : 411857,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [2]: [item_id#452, ss_item_rev#453] Condition : isnotnull(ss_item_rev#453) "
          },
          "6" : {
            "sign" : 1763425654,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 16474280,
            "rowCount" : 411857,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#40, sum#751L] Keys [1]: [i_item_id#40] Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#30))] Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#30))#736L] Results [2]: [i_item_id#40 AS item_id#452, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30))#736L,17,2) AS ss_item_rev#453] "
          },
          "1" : {
            "sign" : -352792783,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 741343358969757219606582960000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [8]: [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451] Input [5]: [item_id#452, ss_item_rev#453, cs_item_rev#457, item_id#460, ws_item_rev#461] "
          },
          "0" : {
            "sign" : -2070285321,
            "className" : "org.apache.spark.sql.execution.TakeOrderedAndProjectExec",
            "sizeInBytes" : 11600,
            "rowCount" : 100,
            "isRuntime" : false,
            "predicate" : " (unknown) TakeOrderedAndProject Input [8]: [item_id#452, ss_item_rev#453, ss_dev#448, cs_item_rev#457, cs_dev#449, ws_item_rev#461, ws_dev#450, average#451] Arguments: 100, [item_id#452 ASC NULLS FIRST, ss_item_rev#453 ASC NULLS FIRST], [item_id#452, ss_item_rev#453, ss_dev#448, cs_item_rev#457, cs_dev#449, ws_item_rev#461, ws_dev#450, average#451] "
          },
          "2" : {
            "sign" : -694927116,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 460144153843297584583396320000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [item_id#452] Right keys [1]: [item_id#460] Join type: Inner Join condition: ((((((((cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461)) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) "
          },
          "7" : {
            "sign" : 626910697,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 14139531507024000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#40, sum#751L] Arguments: 15 "
          },
          "3" : {
            "sign" : -542542047,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 1766268513636,
            "rowCount" : 40142466219,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [3]: [item_id#452, ss_item_rev#453, cs_item_rev#457] Input [4]: [item_id#452, ss_item_rev#453, item_id#456, cs_item_rev#457] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "ShuffleQueryStage",
          "toId" : 6,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "HashAggregate",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "TakeOrderedAndProject",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "TakeOrderedAndProject(limit=100, orderBy=[item_id#452 ASC NULLS FIRST,ss_item_rev#453 ASC NULLS FIRST], output=[item_id#452,ss_item_rev#453,ss_dev#448,cs_item_rev#457,cs_dev#449,ws_item_rev#461,ws_dev#450,average#451])\n+- Project [item_id#452, ss_item_rev#453, (((ss_item_rev#453 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ss_dev#448, cs_item_rev#457, (((cs_item_rev#457 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS cs_dev#449, ws_item_rev#461, (((ws_item_rev#461 / ((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461)) / 3) * 100) AS ws_dev#450, (((ss_item_rev#453 + cs_item_rev#457) + ws_item_rev#461) / 3) AS average#451]\n   +- BroadcastHashJoin [item_id#452], [item_id#460], Inner, BuildRight, ((((((((cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * ws_item_rev#461)) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ws_item_rev#461))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ws_item_rev#461))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * ss_item_rev#453))) AND (cast(ws_item_rev#461 as decimal(19,3)) >= (0.9 * cs_item_rev#457))) AND (cast(ws_item_rev#461 as decimal(20,3)) <= (1.1 * cs_item_rev#457))), false\n      :- Project [item_id#452, ss_item_rev#453, cs_item_rev#457]\n      :  +- BroadcastHashJoin [item_id#452], [item_id#456], Inner, BuildRight, ((((cast(ss_item_rev#453 as decimal(19,3)) >= (0.9 * cs_item_rev#457)) AND (cast(ss_item_rev#453 as decimal(20,3)) <= (1.1 * cs_item_rev#457))) AND (cast(cs_item_rev#457 as decimal(19,3)) >= (0.9 * ss_item_rev#453))) AND (cast(cs_item_rev#457 as decimal(20,3)) <= (1.1 * ss_item_rev#453))), false\n      :     :- Filter isnotnull(ss_item_rev#453)\n      :     :  +- HashAggregate(keys=[i_item_id#40], functions=[sum(UnscaledValue(ss_ext_sales_price#30))], output=[item_id#452, ss_item_rev#453])\n      :     :     +- ShuffleQueryStage 15\n      :     :        +- Exchange hashpartitioning(i_item_id#40, 200), ENSURE_REQUIREMENTS, [plan_id=1888]\n      :     :           +- *(10) HashAggregate(keys=[i_item_id#40], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#30))], output=[i_item_id#40, sum#751L])\n      :     :              +- *(10) Project [ss_ext_sales_price#30, i_item_id#40]\n      :     :                 +- *(10) BroadcastHashJoin [ss_item_sk#17], [i_item_sk#39], Inner, BuildRight, false\n      :     :                    :- *(10) Project [ss_item_sk#17, ss_ext_sales_price#30]\n      :     :                    :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#38], [d_date_sk#61], Inner, BuildRight, false\n      :     :                    :     :- *(10) Filter isnotnull(ss_item_sk#17)\n      :     :                    :     :  +- *(10) ColumnarToRow\n      :     :                    :     :     +- FileScan parquet spark_catalog.tpcds_100.store_sales[ss_item_sk#17,ss_ext_sales_price#30,ss_sold_date_sk#38] Batched: true, DataFilters: [isnotnull(ss_item_sk#17)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/store_..., PartitionFilters: [isnotnull(ss_sold_date_sk#38), dynamicpruningexpression(ss_sold_date_sk#38 IN dynamicpruning#747)], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>\n      :     :                    :     :           +- SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n      :     :                    :     :              +- AdaptiveSparkPlan isFinalPlan=true\n                                                         +- == Final Plan ==\n                                                            BroadcastQueryStage 3\n                                                            +- ReusedExchange [d_date_sk#61], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n                                                         +- == Initial Plan ==\n                                                            BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1838]\n                                                            +- Project [d_date_sk#61]\n                                                               +- BroadcastHashJoin [d_date#63], [d_date#654], LeftSemi, BuildRight, false\n                                                                  :- Filter isnotnull(d_date_sk#61)\n                                                                  :  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date#63] Batched: true, DataFilters: [isnotnull(d_date_sk#61)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>\n                                                                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=250]\n                                                                     +- Project [d_date#654]\n                                                                        +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#242]))\n                                                                           :  +- Subquery subquery#454, [id=#242]\n                                                                           :     +- AdaptiveSparkPlan isFinalPlan=false\n                                                                           :        +- Project [d_week_seq#568]\n                                                                           :           +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                                                                           :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n                                                                           +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#654,d_week_seq#656] Batched: true, DataFilters: [isnotnull(d_week_seq#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      :     :                    :     +- BroadcastQueryStage 10\n      :     :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n      :     :                    :           +- *(7) Project [d_date_sk#61]\n      :     :                    :              +- *(7) BroadcastHashJoin [d_date#63], [d_date#654], LeftSemi, BuildRight, false\n      :     :                    :                 :- *(7) Filter isnotnull(d_date_sk#61)\n      :     :                    :                 :  +- *(7) ColumnarToRow\n      :     :                    :                 :     +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date#63] Batched: true, DataFilters: [isnotnull(d_date_sk#61)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>\n      :     :                    :                 +- BroadcastQueryStage 0\n      :     :                    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=542]\n      :     :                    :                       +- *(1) Project [d_date#654]\n      :     :                    :                          +- *(1) Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#259]))\n      :     :                    :                             :  +- Subquery subquery#454, [id=#259]\n      :     :                    :                             :     +- AdaptiveSparkPlan isFinalPlan=true\n                                                                        +- == Final Plan ==\n                                                                           *(1) Project [d_week_seq#568]\n                                                                           +- *(1) Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                                                                              +- *(1) ColumnarToRow\n                                                                                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n                                                                        +- == Initial Plan ==\n                                                                           Project [d_week_seq#568]\n                                                                           +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                                                                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      :     :                    :                             +- *(1) ColumnarToRow\n      :     :                    :                                +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#654,d_week_seq#656] Batched: true, DataFilters: [isnotnull(d_week_seq#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>\n      :     :                    +- BroadcastQueryStage 1\n      :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n      :     :                          +- *(2) Filter (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40))\n      :     :                             +- *(2) ColumnarToRow\n      :     :                                +- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#39,i_item_id#40] Batched: true, DataFilters: [isnotnull(i_item_sk#39), isnotnull(i_item_id#40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n      :     +- BroadcastQueryStage 18\n      :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=2235]\n      :           +- *(13) Filter isnotnull(cs_item_rev#457)\n      :              +- *(13) HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))], output=[item_id#456, cs_item_rev#457])\n      :                 +- AQEShuffleRead coalesced\n      :                    +- ShuffleQueryStage 16\n      :                       +- Exchange hashpartitioning(i_item_id#465, 200), ENSURE_REQUIREMENTS, [plan_id=1970]\n      :                          +- *(11) HashAggregate(keys=[i_item_id#465], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#111))], output=[i_item_id#465, sum#753L])\n      :                             +- *(11) Project [cs_ext_sales_price#111, i_item_id#465]\n      :                                +- *(11) BroadcastHashJoin [cs_item_sk#103], [i_item_sk#464], Inner, BuildRight, false\n      :                                   :- *(11) Project [cs_item_sk#103, cs_ext_sales_price#111]\n      :                                   :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#122], [d_date_sk#486], Inner, BuildRight, false\n      :                                   :     :- *(11) Filter isnotnull(cs_item_sk#103)\n      :                                   :     :  +- *(11) ColumnarToRow\n      :                                   :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#103,cs_ext_sales_price#111,cs_sold_date_sk#122] Batched: true, DataFilters: [isnotnull(cs_item_sk#103)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#122), dynamicpruningexpression(cs_sold_date_sk#122 IN dynamicpruning#7..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n      :                                   :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n      :                                   :     +- BroadcastQueryStage 12\n      :                                   :        +- ReusedExchange [d_date_sk#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n      :                                   +- BroadcastQueryStage 5\n      :                                      +- ReusedExchange [i_item_sk#464, i_item_id#465], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n      +- BroadcastQueryStage 19\n         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=2293]\n            +- *(14) Filter isnotnull(ws_item_rev#461)\n               +- *(14) HashAggregate(keys=[i_item_id#515], functions=[sum(UnscaledValue(ws_ext_sales_price#145))], output=[item_id#460, ws_item_rev#461])\n                  +- AQEShuffleRead coalesced\n                     +- ShuffleQueryStage 17\n                        +- Exchange hashpartitioning(i_item_id#515, 200), ENSURE_REQUIREMENTS, [plan_id=2054]\n                           +- *(12) HashAggregate(keys=[i_item_id#515], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#145))], output=[i_item_id#515, sum#755L])\n                              +- *(12) Project [ws_ext_sales_price#145, i_item_id#515]\n                                 +- *(12) BroadcastHashJoin [ws_item_sk#125], [i_item_sk#514], Inner, BuildRight, false\n                                    :- *(12) Project [ws_item_sk#125, ws_ext_sales_price#145]\n                                    :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#156], [d_date_sk#536], Inner, BuildRight, false\n                                    :     :- *(12) Filter isnotnull(ws_item_sk#125)\n                                    :     :  +- *(12) ColumnarToRow\n                                    :     :     +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#125,ws_ext_sales_price#145,ws_sold_date_sk#156] Batched: true, DataFilters: [isnotnull(ws_item_sk#125)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#156), dynamicpruningexpression(ws_sold_date_sk#156 IN dynamicpruning#7..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>\n                                    :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n                                    :     +- BroadcastQueryStage 14\n                                    :        +- ReusedExchange [d_date_sk#536], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n                                    +- BroadcastQueryStage 9\n                                       +- ReusedExchange [i_item_sk#514, i_item_id#515], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 91971752,
        "inputRowCount" : 589974
      },
      "InitialPartitionNum" : 1,
      "PD" : {
        "0" : [ 29533, 29134, 31610, 26848, 28336, 32050, 27574, 28735, 27973, 29134, 29932, 27937, 28372, 28735, 27937, 28735, 28735, 27937, 28336, 30771, 28336, 29134, 28735, 29533, 28336, 30331, 29134, 29932, 27211, 30372, 27937, 30372, 30771, 29932, 30331, 30730, 31610, 29134, 30771, 27211, 29932, 30730, 29533, 27973, 30372, 28735, 29932, 27937, 27574, 29533, 29973, 28735, 29134, 29533, 28735, 30331, 28735, 29932, 27973, 28336, 32930, 28735, 29533, 29134, 30771, 28336, 28735, 30771, 28372, 29134, 30812, 29533, 29533, 27973, 28735, 29134, 32050, 28735, 32930, 28336, 28336, 27973, 29533, 27937, 29134, 28735, 29932, 29533, 28336, 28336, 30331, 30730, 28372, 28336, 30730, 30331, 29533, 31170, 28735, 27574, 27937, 27574, 29932, 29932, 29932, 28336, 28372, 28735, 30771, 29533, 30331, 30372, 27610, 29134, 28735, 28372, 29134, 30331, 32490, 28771, 28336, 29932, 30331, 28336, 27574, 29134, 29932, 29932, 30730, 30730, 27973, 28735, 29932, 29932, 29134, 29134, 30771, 30730, 32050, 27973, 31170, 30331, 30331, 31211, 28735, 30331, 29533, 29932, 30730, 30771, 28735, 29134, 29533, 28735, 29932, 31610, 28336, 31610, 30730, 28735, 31211, 31610, 31610, 27973, 31610, 29134, 28336, 30331, 26485, 29134, 29533, 29574, 28372, 28735, 30730, 28735, 29932, 27610, 29533, 29533, 31610, 28336, 29533, 29533, 30771, 29134, 31170, 27247, 29170, 28372, 29134, 30331, 29533, 27574, 28336, 28372, 29533, 29533, 29569, 29533 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 9,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 15 ],
      "Objectives" : {
        "DurationInMs" : 787,
        "TotalTasksDurationInMs" : 776,
        "IOBytes" : {
          "Total" : 5608593,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 5608593,
            "SW" : 0
          }
        }
      }
    },
    "5" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : -456081511,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1048632,
                "rowCount" : 7
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#486], BroadcastQueryStage 12 "
          },
          "4" : {
            "sign" : -301033224,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 28081511332,
                "rowCount" : 1002911119
              },
              "compileTime" : {
                "sizeInBytes" : 28081511332,
                "rowCount" : 1002911119
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_sold_date_sk#122 = d_date_sk#486) "
          },
          "9" : {
            "sign" : -679671892,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18409216,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5 "
          },
          "5" : {
            "sign" : -583051964,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3438552408,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 3438552408,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] "
          },
          "6" : {
            "sign" : -1872485223,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122]) "
          },
          "1" : {
            "sign" : 1125027657,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7365379257936000,
                "rowCount" : 204593868276000
              },
              "compileTime" : {
                "sizeInBytes" : 7365379257936000,
                "rowCount" : 204593868276000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_ext_sales_price#111, i_item_id#465] "
          },
          "0" : {
            "sign" : 445544164,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 7365379257936000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 7365379257936000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457] "
          },
          "2" : {
            "sign" : -1334197382,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9002130204144000,
                "rowCount" : 204593868276000
              },
              "compileTime" : {
                "sizeInBytes" : 9002130204144000,
                "rowCount" : 204593868276000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (cs_item_sk#103 = i_item_sk#464) "
          },
          "7" : {
            "sign" : -1864218542,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              },
              "compileTime" : {
                "sizeInBytes" : 29800787536,
                "rowCount" : 143273017
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [cs_sold_time_sk#89, cs_ship_date_sk#90, cs_bill_customer_sk#91, cs_bill_cdemo_sk#92, cs_bill_hdemo_sk#93, cs_bill_addr_sk#94, cs_ship_customer_sk#95, cs_ship_cdemo_sk#96, cs_ship_hdemo_sk#97, cs_ship_addr_sk#98, cs_call_center_sk#99, cs_catalog_page_sk#100, cs_ship_mode_sk#101, cs_warehouse_sk#102, cs_item_sk#103, cs_promo_sk#104, cs_order_number#105L, cs_quantity#106, cs_wholesale_cost#107, cs_list_price#108, cs_sales_price#109, cs_ext_discount_amt#110, cs_ext_sales_price#111, cs_ext_wholesale_cost#112, ... 10 more fields], `spark_catalog`.`tpcds_100`.`catalog_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : 944745252,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 20058222380,
                "rowCount" : 1002911119
              },
              "compileTime" : {
                "sizeInBytes" : 20058222380,
                "rowCount" : 1002911119
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [cs_item_sk#103, cs_ext_sales_price#111] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalRelation",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457]\n+- Project [cs_ext_sales_price#111, i_item_id#465]\n   +- Join Inner, (cs_item_sk#103 = i_item_sk#464)\n      :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n      :  +- Join Inner, (cs_sold_date_sk#122 = d_date_sk#486)\n      :     :- Project [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122]\n      :     :  +- Filter ((isnotnull(cs_item_sk#103) AND isnotnull(cs_sold_date_sk#122)) AND dynamicpruning#748 [cs_sold_date_sk#122])\n      :     :     :  +- Project [d_date_sk#486]\n      :     :     :     +- Join LeftSemi, (d_date#488 = d_date#682)\n      :     :     :        :- Project [d_date_sk#486, d_date#488]\n      :     :     :        :  +- Filter isnotnull(d_date_sk#486)\n      :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#486,d_date_id#487,d_date#488,d_month_seq#489,d_week_seq#490,d_quarter_seq#491,d_year#492,d_dow#493,d_moy#494,d_dom#495,d_qoy#496,d_fy_year#497,d_fy_quarter_seq#498,d_fy_week_seq#499,d_day_name#500,d_quarter_name#501,d_holiday#502,d_weekend#503,d_following_holiday#504,d_first_dom#505,d_last_dom#506,d_same_day_ly#507,d_same_day_lq#508,d_current_day#509,... 4 more fields] parquet\n      :     :     :        +- Project [d_date#682]\n      :     :     :           +- Filter (isnotnull(d_week_seq#684) AND (d_week_seq#684 = scalar-subquery#458 []))\n      :     :     :              :  +- Project [d_week_seq#568]\n      :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n      :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n      :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#680,d_date_id#681,d_date#682,d_month_seq#683,d_week_seq#684,d_quarter_seq#685,d_year#686,d_dow#687,d_moy#688,d_dom#689,d_qoy#690,d_fy_year#691,d_fy_quarter_seq#692,d_fy_week_seq#693,d_day_name#694,d_quarter_name#695,d_holiday#696,d_weekend#697,d_following_holiday#698,d_first_dom#699,d_last_dom#700,d_same_day_ly#701,d_same_day_lq#702,d_current_day#703,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.catalog_sales[cs_sold_time_sk#89,cs_ship_date_sk#90,cs_bill_customer_sk#91,cs_bill_cdemo_sk#92,cs_bill_hdemo_sk#93,cs_bill_addr_sk#94,cs_ship_customer_sk#95,cs_ship_cdemo_sk#96,cs_ship_hdemo_sk#97,cs_ship_addr_sk#98,cs_call_center_sk#99,cs_catalog_page_sk#100,cs_ship_mode_sk#101,cs_warehouse_sk#102,cs_item_sk#103,cs_promo_sk#104,cs_order_number#105L,cs_quantity#106,cs_wholesale_cost#107,cs_list_price#108,cs_sales_price#109,cs_ext_discount_amt#110,cs_ext_sales_price#111,cs_ext_wholesale_cost#112,... 10 more fields] parquet\n      :     +- LogicalQueryStage Project [d_date_sk#486], BroadcastQueryStage 12\n      +- LogicalQueryStage Project [i_item_sk#464, i_item_id#465], BroadcastQueryStage 5\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : -365427107,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#464, i_item_id#465] Arguments: 5 "
          },
          "4" : {
            "sign" : -856308738,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 28081511332,
            "rowCount" : 1002911119,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_sold_date_sk#122] Right keys [1]: [d_date_sk#486] Join type: Inner Join condition: None "
          },
          "5" : {
            "sign" : -1967810880,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] Condition : isnotnull(cs_item_sk#103) "
          },
          "6" : {
            "sign" : -1259650111,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 3438552408,
            "rowCount" : 143273017,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.catalog_sales Output [3]: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalog_sales/cs_sold_date_sk=2450815, ... 1835 entries] PartitionFilters: [isnotnull(cs_sold_date_sk#122), dynamicpruningexpression(cs_sold_date_sk#122 IN dynamicpruning#747)] PushedFilters: [IsNotNull(cs_item_sk)] ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)> "
          },
          "1" : {
            "sign" : 2036548178,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : 204593868276000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_ext_sales_price#111, i_item_id#465] Input [4]: [cs_item_sk#103, cs_ext_sales_price#111, i_item_sk#464, i_item_id#465] "
          },
          "0" : {
            "sign" : 1923528714,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [cs_ext_sales_price#111, i_item_id#465] Keys [1]: [i_item_id#465] Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#111))] Aggregate Attributes [1]: [sum#752L] Results [2]: [i_item_id#465, sum#753L] "
          },
          "2" : {
            "sign" : 439698087,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 9002130204144000,
            "rowCount" : 204593868276000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [cs_item_sk#103] Right keys [1]: [i_item_sk#464] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -187275033,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#486] Arguments: 12 "
          },
          "3" : {
            "sign" : -1238889628,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 20058222380,
            "rowCount" : 1002911119,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [cs_item_sk#103, cs_ext_sales_price#111] Input [4]: [cs_item_sk#103, cs_ext_sales_price#111, cs_sold_date_sk#122, d_date_sk#486] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.catalog_sales",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#465], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#111))], output=[i_item_id#465, sum#753L])\n+- Project [cs_ext_sales_price#111, i_item_id#465]\n   +- BroadcastHashJoin [cs_item_sk#103], [i_item_sk#464], Inner, BuildRight, false\n      :- Project [cs_item_sk#103, cs_ext_sales_price#111]\n      :  +- BroadcastHashJoin [cs_sold_date_sk#122], [d_date_sk#486], Inner, BuildRight, false\n      :     :- Filter isnotnull(cs_item_sk#103)\n      :     :  +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#103,cs_ext_sales_price#111,cs_sold_date_sk#122] Batched: true, DataFilters: [isnotnull(cs_item_sk#103)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#122), dynamicpruningexpression(cs_sold_date_sk#122 IN dynamicpruning#7..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n      :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n      :     +- BroadcastQueryStage 12\n      :        +- ReusedExchange [d_date_sk#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n      +- BroadcastQueryStage 5\n         +- ReusedExchange [i_item_sk#464, i_item_id#465], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 3458010256,
        "inputRowCount" : 143477024
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 5,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 8 ],
      "Objectives" : {
        "DurationInMs" : 1462,
        "TotalTasksDurationInMs" : 4356,
        "IOBytes" : {
          "Total" : 6201927,
          "Details" : {
            "IR" : 2641714,
            "IW" : 0,
            "SR" : 0,
            "SW" : 3560213
          }
        }
      }
    },
    "6" : {
      "QSLogical" : {
        "operators" : {
          "8" : {
            "sign" : 1510702973,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1048632,
                "rowCount" : 7
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [d_date_sk#536], BroadcastQueryStage 14 "
          },
          "4" : {
            "sign" : 1547435469,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14108790304,
                "rowCount" : 503885368
              },
              "compileTime" : {
                "sizeInBytes" : 14108790304,
                "rowCount" : 503885368
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_sold_date_sk#156 = d_date_sk#536) "
          },
          "9" : {
            "sign" : 1778393320,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 18409216,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9 "
          },
          "5" : {
            "sign" : 244416326,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1727606976,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 1727606976,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] "
          },
          "6" : {
            "sign" : -1766908215,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156]) "
          },
          "1" : {
            "sign" : 233164152,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3700534142592000,
                "rowCount" : 102792615072000
              },
              "compileTime" : {
                "sizeInBytes" : 3700534142592000,
                "rowCount" : 102792615072000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_ext_sales_price#145, i_item_id#515] "
          },
          "0" : {
            "sign" : -1136875996,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 3700534142592000,
                "rowCount" : -1
              },
              "compileTime" : {
                "sizeInBytes" : 3700534142592000,
                "rowCount" : -1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Aggregate Arguments: [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461] "
          },
          "2" : {
            "sign" : -476950196,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 4522875063168000,
                "rowCount" : 102792615072000
              },
              "compileTime" : {
                "sizeInBytes" : 4522875063168000,
                "rowCount" : 102792615072000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: Inner, (ws_item_sk#125 = i_item_sk#514) "
          },
          "7" : {
            "sign" : -1073099478,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              },
              "compileTime" : {
                "sizeInBytes" : 14972593792,
                "rowCount" : 71983624
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [ws_sold_time_sk#123, ws_ship_date_sk#124, ws_item_sk#125, ws_bill_customer_sk#126, ws_bill_cdemo_sk#127, ws_bill_hdemo_sk#128, ws_bill_addr_sk#129, ws_ship_customer_sk#130, ws_ship_cdemo_sk#131, ws_ship_hdemo_sk#132, ws_ship_addr_sk#133, ws_web_page_sk#134, ws_web_site_sk#135, ws_ship_mode_sk#136, ws_warehouse_sk#137, ws_promo_sk#138, ws_order_number#139L, ws_quantity#140, ws_wholesale_cost#141, ws_list_price#142, ws_sales_price#143, ws_ext_discount_amt#144, ws_ext_sales_price#145, ws_ext_wholesale_cost#146, ... 10 more fields], `spark_catalog`.`tpcds_100`.`web_sales`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "3" : {
            "sign" : -44444404,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10077707360,
                "rowCount" : 503885368
              },
              "compileTime" : {
                "sizeInBytes" : 10077707360,
                "rowCount" : 503885368
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [ws_item_sk#125, ws_ext_sales_price#145] "
          }
        },
        "links" : [ {
          "fromId" : 7,
          "fromName" : "LogicalRelation",
          "toId" : 6,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 6,
          "fromName" : "Filter",
          "toId" : 5,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Project",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "LogicalQueryStage",
          "toId" : 4,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "Join",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 9,
          "fromName" : "LogicalQueryStage",
          "toId" : 2,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Join",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "Aggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Aggregate [i_item_id#515], [i_item_id#515 AS item_id#460, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#145)),17,2) AS ws_item_rev#461]\n+- Project [ws_ext_sales_price#145, i_item_id#515]\n   +- Join Inner, (ws_item_sk#125 = i_item_sk#514)\n      :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n      :  +- Join Inner, (ws_sold_date_sk#156 = d_date_sk#536)\n      :     :- Project [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156]\n      :     :  +- Filter ((isnotnull(ws_item_sk#125) AND isnotnull(ws_sold_date_sk#156)) AND dynamicpruning#749 [ws_sold_date_sk#156])\n      :     :     :  +- Project [d_date_sk#536]\n      :     :     :     +- Join LeftSemi, (d_date#538 = d_date#710)\n      :     :     :        :- Project [d_date_sk#536, d_date#538]\n      :     :     :        :  +- Filter isnotnull(d_date_sk#536)\n      :     :     :        :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#536,d_date_id#537,d_date#538,d_month_seq#539,d_week_seq#540,d_quarter_seq#541,d_year#542,d_dow#543,d_moy#544,d_dom#545,d_qoy#546,d_fy_year#547,d_fy_quarter_seq#548,d_fy_week_seq#549,d_day_name#550,d_quarter_name#551,d_holiday#552,d_weekend#553,d_following_holiday#554,d_first_dom#555,d_last_dom#556,d_same_day_ly#557,d_same_day_lq#558,d_current_day#559,... 4 more fields] parquet\n      :     :     :        +- Project [d_date#710]\n      :     :     :           +- Filter (isnotnull(d_week_seq#712) AND (d_week_seq#712 = scalar-subquery#462 []))\n      :     :     :              :  +- Project [d_week_seq#568]\n      :     :     :              :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n      :     :     :              :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n      :     :     :              +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#708,d_date_id#709,d_date#710,d_month_seq#711,d_week_seq#712,d_quarter_seq#713,d_year#714,d_dow#715,d_moy#716,d_dom#717,d_qoy#718,d_fy_year#719,d_fy_quarter_seq#720,d_fy_week_seq#721,d_day_name#722,d_quarter_name#723,d_holiday#724,d_weekend#725,d_following_holiday#726,d_first_dom#727,d_last_dom#728,d_same_day_ly#729,d_same_day_lq#730,d_current_day#731,... 4 more fields] parquet\n      :     :     +- Relation spark_catalog.tpcds_100.web_sales[ws_sold_time_sk#123,ws_ship_date_sk#124,ws_item_sk#125,ws_bill_customer_sk#126,ws_bill_cdemo_sk#127,ws_bill_hdemo_sk#128,ws_bill_addr_sk#129,ws_ship_customer_sk#130,ws_ship_cdemo_sk#131,ws_ship_hdemo_sk#132,ws_ship_addr_sk#133,ws_web_page_sk#134,ws_web_site_sk#135,ws_ship_mode_sk#136,ws_warehouse_sk#137,ws_promo_sk#138,ws_order_number#139L,ws_quantity#140,ws_wholesale_cost#141,ws_list_price#142,ws_sales_price#143,ws_ext_discount_amt#144,ws_ext_sales_price#145,ws_ext_wholesale_cost#146,... 10 more fields] parquet\n      :     +- LogicalQueryStage Project [d_date_sk#536], BroadcastQueryStage 14\n      +- LogicalQueryStage Project [i_item_sk#514, i_item_id#515], BroadcastQueryStage 9\n"
      },
      "QSPhysical" : {
        "operators" : {
          "8" : {
            "sign" : 2108884129,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 18409216,
            "rowCount" : 204000,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [2]: [i_item_sk#514, i_item_id#515] Arguments: 9 "
          },
          "4" : {
            "sign" : 744827301,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 14108790304,
            "rowCount" : 503885368,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_sold_date_sk#156] Right keys [1]: [d_date_sk#536] Join type: Inner Join condition: None "
          },
          "5" : {
            "sign" : -209620472,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [3]: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] Condition : isnotnull(ws_item_sk#125) "
          },
          "6" : {
            "sign" : -1403131611,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1727606976,
            "rowCount" : 71983624,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.web_sales Output [3]: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sales/ws_sold_date_sk=2450816, ... 1822 entries] PartitionFilters: [isnotnull(ws_sold_date_sk#156), dynamicpruningexpression(ws_sold_date_sk#156 IN dynamicpruning#747)] PushedFilters: [IsNotNull(ws_item_sk)] ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)> "
          },
          "1" : {
            "sign" : -1550233839,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : 102792615072000,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_ext_sales_price#145, i_item_id#515] Input [4]: [ws_item_sk#125, ws_ext_sales_price#145, i_item_sk#514, i_item_id#515] "
          },
          "0" : {
            "sign" : -1127497764,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 3700534142592000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) HashAggregate Input [2]: [ws_ext_sales_price#145, i_item_id#515] Keys [1]: [i_item_id#515] Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#145))] Aggregate Attributes [1]: [sum#754L] Results [2]: [i_item_id#515, sum#755L] "
          },
          "2" : {
            "sign" : 821709897,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 4522875063168000,
            "rowCount" : 102792615072000,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [ws_item_sk#125] Right keys [1]: [i_item_sk#514] Join type: Inner Join condition: None "
          },
          "7" : {
            "sign" : -481316021,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 1048632,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date_sk#536] Arguments: 14 "
          },
          "3" : {
            "sign" : 1068400458,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 10077707360,
            "rowCount" : 503885368,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [2]: [ws_item_sk#125, ws_ext_sales_price#145] Input [4]: [ws_item_sk#125, ws_ext_sales_price#145, ws_sold_date_sk#156, d_date_sk#536] "
          }
        },
        "links" : [ {
          "fromId" : 6,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.web_sales",
          "toId" : 5,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 5,
          "fromName" : "Filter",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 7,
          "fromName" : "BroadcastQueryStage",
          "toId" : 4,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastHashJoin",
          "toId" : 3,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Project",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 8,
          "fromName" : "BroadcastQueryStage",
          "toId" : 2,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "BroadcastHashJoin",
          "toId" : 1,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Project",
          "toId" : 0,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "HashAggregate(keys=[i_item_id#515], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#145))], output=[i_item_id#515, sum#755L])\n+- Project [ws_ext_sales_price#145, i_item_id#515]\n   +- BroadcastHashJoin [ws_item_sk#125], [i_item_sk#514], Inner, BuildRight, false\n      :- Project [ws_item_sk#125, ws_ext_sales_price#145]\n      :  +- BroadcastHashJoin [ws_sold_date_sk#156], [d_date_sk#536], Inner, BuildRight, false\n      :     :- Filter isnotnull(ws_item_sk#125)\n      :     :  +- FileScan parquet spark_catalog.tpcds_100.web_sales[ws_item_sk#125,ws_ext_sales_price#145,ws_sold_date_sk#156] Batched: true, DataFilters: [isnotnull(ws_item_sk#125)], Format: Parquet, Location: InMemoryFileIndex(1823 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/web_sa..., PartitionFilters: [isnotnull(ws_sold_date_sk#156), dynamicpruningexpression(ws_sold_date_sk#156 IN dynamicpruning#7..., PushedFilters: [IsNotNull(ws_item_sk)], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>\n      :     :        +- ReusedSubquery SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n      :     +- BroadcastQueryStage 14\n      :        +- ReusedExchange [d_date_sk#536], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n      +- BroadcastQueryStage 9\n         +- ReusedExchange [i_item_sk#514, i_item_id#515], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 1747064824,
        "inputRowCount" : 72187631
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 6,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 9 ],
      "Objectives" : {
        "DurationInMs" : 1422,
        "TotalTasksDurationInMs" : 1483,
        "IOBytes" : {
          "Total" : 3466683,
          "Details" : {
            "IR" : 1378350,
            "IW" : 0,
            "SR" : 0,
            "SW" : 2088333
          }
        }
      }
    },
    "1" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -456411464,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date#654] "
          },
          "1" : {
            "sign" : 645269718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 [])) "
          },
          "2" : {
            "sign" : -1127507506,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#652, d_date_id#653, d_date#654, d_month_seq#655, d_week_seq#656, d_quarter_seq#657, d_year#658, d_dow#659, d_moy#660, d_dom#661, d_qoy#662, d_fy_year#663, d_fy_quarter_seq#664, d_fy_week_seq#665, d_day_name#666, d_quarter_name#667, d_holiday#668, d_weekend#669, d_following_holiday#670, d_first_dom#671, d_last_dom#672, d_same_day_ly#673, d_same_day_lq#674, d_current_day#675, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date#654]\n+- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n   :  +- Project [d_week_seq#568]\n   :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n   :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 897609832,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date#654] Input [2]: [d_date#654, d_week_seq#656] "
          },
          "1" : {
            "sign" : 1491915472,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date#654, d_week_seq#656] Condition : (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#259])) "
          },
          "2" : {
            "sign" : 1974580902,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date#654, d_week_seq#656] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_week_seq)] ReadSchema: struct<d_date:date,d_week_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date#654]\n+- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#259]))\n   :  +- Subquery subquery#454, [id=#259]\n   :     +- AdaptiveSparkPlan isFinalPlan=false\n   :        +- Project [d_week_seq#568]\n   :           +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n   :              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#654,d_week_seq#656] Batched: true, DataFilters: [isnotnull(d_week_seq#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 876588,
        "inputRowCount" : 73049
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 0,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 5 ],
      "Objectives" : {
        "DurationInMs" : 1301,
        "TotalTasksDurationInMs" : 1296,
        "IOBytes" : {
          "Total" : 425346,
          "Details" : {
            "IR" : 425346,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "0" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1928143940,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 12,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 12,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_week_seq#568] "
          },
          "1" : {
            "sign" : -1657002750,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 246,
                "rowCount" : 1
              },
              "compileTime" : {
                "sizeInBytes" : 246,
                "rowCount" : 1
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19)) "
          },
          "2" : {
            "sign" : -72738866,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#564, d_date_id#565, d_date#566, d_month_seq#567, d_week_seq#568, d_quarter_seq#569, d_year#570, d_dow#571, d_moy#572, d_dom#573, d_qoy#574, d_fy_year#575, d_fy_quarter_seq#576, d_fy_week_seq#577, d_day_name#578, d_quarter_name#579, d_holiday#580, d_weekend#581, d_following_holiday#582, d_first_dom#583, d_last_dom#584, d_same_day_ly#585, d_same_day_lq#586, d_current_day#587, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_week_seq#568]\n+- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n   +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -1525921048,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_week_seq#568] Input [2]: [d_date#566, d_week_seq#568] "
          },
          "1" : {
            "sign" : -930291666,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date#566, d_week_seq#568] Condition : (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19)) "
          },
          "2" : {
            "sign" : -1494095110,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 12,
            "rowCount" : 1,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date#566, d_week_seq#568] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)] ReadSchema: struct<d_date:date,d_week_seq:int> "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_week_seq#568]\n+- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n   +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 12,
        "inputRowCount" : 1
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 2,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 3 ],
      "Objectives" : {
        "DurationInMs" : 1592,
        "TotalTasksDurationInMs" : 1565,
        "IOBytes" : {
          "Total" : 160945,
          "Details" : {
            "IR" : 160945,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "2" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : -1664788045,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 8160000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [i_item_sk#39, i_item_id#40] "
          },
          "1" : {
            "sign" : -1490072267,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40)) "
          },
          "2" : {
            "sign" : 74022018,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              },
              "compileTime" : {
                "sizeInBytes" : 86904000,
                "rowCount" : 204000
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [i_item_sk#39, i_item_id#40, i_rec_start_date#41, i_rec_end_date#42, i_item_desc#43, i_current_price#44, i_wholesale_cost#45, i_brand_id#46, i_brand#47, i_class_id#48, i_class#49, i_category_id#50, i_category#51, i_manufact_id#52, i_manufact#53, i_size#54, i_formulation#55, i_color#56, i_units#57, i_container#58, i_manager_id#59, i_product_name#60], `spark_catalog`.`tpcds_100`.`item`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "LogicalRelation",
          "toId" : 1,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Filter",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [i_item_sk#39, i_item_id#40]\n+- Filter (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40))\n   +- Relation spark_catalog.tpcds_100.item[i_item_sk#39,i_item_id#40,i_rec_start_date#41,i_rec_end_date#42,i_item_desc#43,i_current_price#44,i_wholesale_cost#45,i_brand_id#46,i_brand#47,i_class_id#48,i_class#49,i_category_id#50,i_category#51,i_manufact_id#52,i_manufact#53,i_size#54,i_formulation#55,i_color#56,i_units#57,i_container#58,i_manager_id#59,i_product_name#60] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : -38447968,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [i_item_sk#39, i_item_id#40] Condition : (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40)) "
          },
          "1" : {
            "sign" : 1188393133,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 8160000,
            "rowCount" : 204000,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.item Output [2]: [i_item_sk#39, i_item_id#40] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item] PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)] ReadSchema: struct<i_item_sk:int,i_item_id:string> "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.item",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter (isnotnull(i_item_sk#39) AND isnotnull(i_item_id#40))\n+- FileScan parquet spark_catalog.tpcds_100.item[i_item_sk#39,i_item_id#40] Batched: true, DataFilters: [isnotnull(i_item_sk#39), isnotnull(i_item_id#40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)], ReadSchema: struct<i_item_sk:int,i_item_id:string>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 8160000,
        "inputRowCount" : 204000
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 0,
        "FinishedTasksNum" : 0,
        "FinishedTasksTotalTimeInMs" : 0.0,
        "FinishedTasksDistributionInMs" : [ 0.0, 0.0, 0.0, 0.0, 0.0 ]
      },
      "QueryStageOptimizationId" : 1,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 4 ],
      "Objectives" : {
        "DurationInMs" : 6115,
        "TotalTasksDurationInMs" : 13110,
        "IOBytes" : {
          "Total" : 1619215,
          "Details" : {
            "IR" : 1619215,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    },
    "7" : {
      "QSLogical" : {
        "operators" : {
          "0" : {
            "sign" : 1243576078,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 9222840,
                "rowCount" : 256190
              },
              "compileTime" : {
                "sizeInBytes" : 9222840,
                "rowCount" : 256190
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Arguments: isnotnull(cs_item_rev#457) "
          },
          "1" : {
            "sign" : -38148854,
            "className" : "org.apache.spark.sql.execution.adaptive.LogicalQueryStage",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 10247600,
                "rowCount" : 256190
              },
              "compileTime" : {
                "sizeInBytes" : 7365379257936000,
                "rowCount" : -1
              }
            },
            "isRuntime" : true,
            "predicate" : " (unknown) LogicalQueryStage Arguments: Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457], HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))]) "
          }
        },
        "links" : [ {
          "fromId" : 1,
          "fromName" : "LogicalQueryStage",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cs_item_rev#457)\n+- LogicalQueryStage Aggregate [i_item_id#465], [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111)),17,2) AS cs_item_rev#457], HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))])\n"
      },
      "QSPhysical" : {
        "operators" : {
          "0" : {
            "sign" : 1667260104,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 9222840,
            "rowCount" : 256190,
            "isRuntime" : true,
            "predicate" : " (unknown) Filter Input [2]: [item_id#456, cs_item_rev#457] Condition : isnotnull(cs_item_rev#457) "
          },
          "1" : {
            "sign" : -1646992130,
            "className" : "org.apache.spark.sql.execution.aggregate.HashAggregateExec",
            "sizeInBytes" : 10247600,
            "rowCount" : 256190,
            "isRuntime" : true,
            "predicate" : " (unknown) HashAggregate Input [2]: [i_item_id#465, sum#753L] Keys [1]: [i_item_id#465] Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#111))] Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#111))#737L] Results [2]: [i_item_id#465 AS item_id#456, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#111))#737L,17,2) AS cs_item_rev#457] "
          },
          "2" : {
            "sign" : -1648421982,
            "className" : "org.apache.spark.sql.execution.adaptive.ShuffleQueryStageExec",
            "sizeInBytes" : 7365379257936000,
            "rowCount" : -1,
            "isRuntime" : false,
            "predicate" : " (unknown) ShuffleQueryStage Output [2]: [i_item_id#465, sum#753L] Arguments: 16 "
          }
        },
        "links" : [ {
          "fromId" : 2,
          "fromName" : "ShuffleQueryStage",
          "toId" : 1,
          "toName" : "HashAggregate",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "HashAggregate",
          "toId" : 0,
          "toName" : "Filter",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Filter isnotnull(cs_item_rev#457)\n+- HashAggregate(keys=[i_item_id#465], functions=[sum(UnscaledValue(cs_ext_sales_price#111))], output=[item_id#456, cs_item_rev#457])\n   +- ShuffleQueryStage 16\n      +- Exchange hashpartitioning(i_item_id#465, 200), ENSURE_REQUIREMENTS, [plan_id=1970]\n         +- *(11) HashAggregate(keys=[i_item_id#465], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#111))], output=[i_item_id#465, sum#753L])\n            +- *(11) Project [cs_ext_sales_price#111, i_item_id#465]\n               +- *(11) BroadcastHashJoin [cs_item_sk#103], [i_item_sk#464], Inner, BuildRight, false\n                  :- *(11) Project [cs_item_sk#103, cs_ext_sales_price#111]\n                  :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#122], [d_date_sk#486], Inner, BuildRight, false\n                  :     :- *(11) Filter isnotnull(cs_item_sk#103)\n                  :     :  +- *(11) ColumnarToRow\n                  :     :     +- FileScan parquet spark_catalog.tpcds_100.catalog_sales[cs_item_sk#103,cs_ext_sales_price#111,cs_sold_date_sk#122] Batched: true, DataFilters: [isnotnull(cs_item_sk#103)], Format: Parquet, Location: InMemoryFileIndex(1836 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/catalo..., PartitionFilters: [isnotnull(cs_sold_date_sk#122), dynamicpruningexpression(cs_sold_date_sk#122 IN dynamicpruning#7..., PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>\n                  :     :           +- ReusedSubquery SubqueryBroadcast dynamicpruning#747, 0, [d_date_sk#61], [id=#1846]\n                  :     +- BroadcastQueryStage 12\n                  :        +- ReusedExchange [d_date_sk#486], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1105]\n                  +- BroadcastQueryStage 5\n                     +- ReusedExchange [i_item_sk#464, i_item_id#465], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=564]\n"
      },
      "IM" : {
        "inputSizeInBytes" : 10247600,
        "inputRowCount" : 256190
      },
      "InitialPartitionNum" : 200,
      "PD" : {
        "1" : [ 18338, 18884, 19380, 17121, 17842, 21019, 16916, 18834, 17144, 18586, 19132, 17842, 18611, 18090, 18338, 18090, 19380, 18090, 18586, 19653, 19431, 18338, 18611, 18090, 18338, 19428, 18586, 19380, 18090, 19380, 17210, 18859, 18586, 18884, 20174, 19380, 19107, 18138, 18386, 17144, 19628, 19628, 17842, 17144, 19380, 19405, 18090, 17369, 17594, 18090, 18611, 17594, 18338, 17842, 18586, 18338, 17594, 18090, 17842, 17665, 19380, 18859, 19107, 19380, 19678, 18363, 19132, 19901, 18834, 19107, 19653, 18586, 19355, 18611, 18884, 18834, 20473, 18884, 20447, 18363, 18363, 17842, 19453, 17617, 18611, 18361, 18338, 18611, 19082, 18361, 18361, 19082, 17865, 17865, 19628, 19107, 18586, 19355, 18363, 17617, 18113, 17167, 18361, 18113, 18113, 19082, 17640, 18611, 18611, 19380, 18884, 18834, 17617, 18586, 17842, 17617, 18834, 18363, 21292, 18113, 18090, 19107, 18859, 19107, 18338, 18338, 18338, 18834, 19380, 18338, 18090, 17412, 19380, 19901, 18090, 18834, 19107, 19380, 20174, 18338, 19107, 19901, 19901, 19628, 17594, 18859, 18609, 19107, 20174, 19428, 17865, 19355, 19132, 19380, 18090, 19901, 17890, 20746, 19107, 19082, 19380, 19082, 19901, 18586, 20174, 18363, 18338, 18859, 16919, 18113, 18586, 18859, 17842, 18090, 19653, 17392, 19107, 17617, 18090, 18611, 19628, 18363, 18338, 17617, 19927, 18113, 19901, 16489, 17938, 18586, 18859, 19380, 19082, 17369, 18090, 17392, 18859, 18586, 19380, 19155 ]
      },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 9,
        "FinishedTasksNum" : 12,
        "FinishedTasksTotalTimeInMs" : 7311.0,
        "FinishedTasksDistributionInMs" : [ 114.0, 218.0, 674.0, 1132.0, 1432.0 ]
      },
      "QueryStageOptimizationId" : 7,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 11 ],
      "Objectives" : {
        "DurationInMs" : 413,
        "TotalTasksDurationInMs" : 404,
        "IOBytes" : {
          "Total" : 3560213,
          "Details" : {
            "IR" : 0,
            "IW" : 0,
            "SR" : 3560213,
            "SW" : 0
          }
        }
      }
    },
    "3" : {
      "QSLogical" : {
        "operators" : {
          "4" : {
            "sign" : 311601156,
            "className" : "org.apache.spark.sql.execution.datasources.LogicalRelation",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) LogicalRelation Arguments: parquet, [d_date_sk#61, d_date_id#62, d_date#63, d_month_seq#64, d_week_seq#65, d_quarter_seq#66, d_year#67, d_dow#68, d_moy#69, d_dom#70, d_qoy#71, d_fy_year#72, d_fy_quarter_seq#73, d_fy_week_seq#74, d_day_name#75, d_quarter_name#76, d_holiday#77, d_weekend#78, d_following_holiday#79, d_first_dom#80, d_last_dom#81, d_same_day_ly#82, d_same_day_lq#83, d_current_day#84, ... 4 more fields], `spark_catalog`.`tpcds_100`.`date_dim`, org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe, false "
          },
          "1" : {
            "sign" : -1853585085,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Join",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1168784,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 1168784,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Join Arguments: LeftSemi, (d_date#63 = d_date#654) "
          },
          "0" : {
            "sign" : -1532259718,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 876588,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61] "
          },
          "2" : {
            "sign" : -422388959,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Project",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 1168784,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 1168784,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Project Arguments: [d_date_sk#61, d_date#63] "
          },
          "3" : {
            "sign" : 697739377,
            "className" : "org.apache.spark.sql.catalyst.plans.logical.Filter",
            "stats" : {
              "runtime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              },
              "compileTime" : {
                "sizeInBytes" : 17970054,
                "rowCount" : 73049
              }
            },
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Arguments: isnotnull(d_date_sk#61) "
          }
        },
        "links" : [ {
          "fromId" : 4,
          "fromName" : "LogicalRelation",
          "toId" : 3,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 3,
          "fromName" : "Filter",
          "toId" : 2,
          "toName" : "Project",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Project",
          "toId" : 1,
          "toName" : "Join",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "Join",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#61]\n+- Join LeftSemi, (d_date#63 = d_date#654)\n   :- Project [d_date_sk#61, d_date#63]\n   :  +- Filter isnotnull(d_date_sk#61)\n   :     +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date_id#62,d_date#63,d_month_seq#64,d_week_seq#65,d_quarter_seq#66,d_year#67,d_dow#68,d_moy#69,d_dom#70,d_qoy#71,d_fy_year#72,d_fy_quarter_seq#73,d_fy_week_seq#74,d_day_name#75,d_quarter_name#76,d_holiday#77,d_weekend#78,d_following_holiday#79,d_first_dom#80,d_last_dom#81,d_same_day_ly#82,d_same_day_lq#83,d_current_day#84,... 4 more fields] parquet\n   +- Project [d_date#654]\n      +- Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = scalar-subquery#454 []))\n         :  +- Project [d_week_seq#568]\n         :     +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n         :        +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#564,d_date_id#565,d_date#566,d_month_seq#567,d_week_seq#568,d_quarter_seq#569,d_year#570,d_dow#571,d_moy#572,d_dom#573,d_qoy#574,d_fy_year#575,d_fy_quarter_seq#576,d_fy_week_seq#577,d_day_name#578,d_quarter_name#579,d_holiday#580,d_weekend#581,d_following_holiday#582,d_first_dom#583,d_last_dom#584,d_same_day_ly#585,d_same_day_lq#586,d_current_day#587,... 4 more fields] parquet\n         +- Relation spark_catalog.tpcds_100.date_dim[d_date_sk#652,d_date_id#653,d_date#654,d_month_seq#655,d_week_seq#656,d_quarter_seq#657,d_year#658,d_dow#659,d_moy#660,d_dom#661,d_qoy#662,d_fy_year#663,d_fy_quarter_seq#664,d_fy_week_seq#665,d_day_name#666,d_quarter_name#667,d_holiday#668,d_weekend#669,d_following_holiday#670,d_first_dom#671,d_last_dom#672,d_same_day_ly#673,d_same_day_lq#674,d_current_day#675,... 4 more fields] parquet\n"
      },
      "QSPhysical" : {
        "operators" : {
          "4" : {
            "sign" : -254671787,
            "className" : "org.apache.spark.sql.execution.adaptive.BroadcastQueryStageExec",
            "sizeInBytes" : 33555456,
            "rowCount" : 7,
            "isRuntime" : true,
            "predicate" : " (unknown) BroadcastQueryStage Output [1]: [d_date#654] Arguments: 0 "
          },
          "1" : {
            "sign" : 1143821634,
            "className" : "org.apache.spark.sql.execution.joins.BroadcastHashJoinExec",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) BroadcastHashJoin Left keys [1]: [d_date#63] Right keys [1]: [d_date#654] Join type: LeftSemi Join condition: None "
          },
          "0" : {
            "sign" : 150177959,
            "className" : "org.apache.spark.sql.execution.ProjectExec",
            "sizeInBytes" : 876588,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Project Output [1]: [d_date_sk#61] Input [2]: [d_date_sk#61, d_date#63] "
          },
          "2" : {
            "sign" : -748165645,
            "className" : "org.apache.spark.sql.execution.FilterExec",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Filter Input [2]: [d_date_sk#61, d_date#63] Condition : isnotnull(d_date_sk#61) "
          },
          "3" : {
            "sign" : -1899471162,
            "className" : "org.apache.spark.sql.execution.FileSourceScanExec",
            "sizeInBytes" : 1168784,
            "rowCount" : 73049,
            "isRuntime" : false,
            "predicate" : " (unknown) Scan parquet spark_catalog.tpcds_100.date_dim Output [2]: [d_date_sk#61, d_date#63] Batched: true Location: InMemoryFileIndex [hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim] PushedFilters: [IsNotNull(d_date_sk)] ReadSchema: struct<d_date_sk:int,d_date:date> "
          }
        },
        "links" : [ {
          "fromId" : 3,
          "fromName" : "Scan parquet spark_catalog.tpcds_100.date_dim",
          "toId" : 2,
          "toName" : "Filter",
          "linkType" : "Operator"
        }, {
          "fromId" : 2,
          "fromName" : "Filter",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 4,
          "fromName" : "BroadcastQueryStage",
          "toId" : 1,
          "toName" : "BroadcastHashJoin",
          "linkType" : "Operator"
        }, {
          "fromId" : 1,
          "fromName" : "BroadcastHashJoin",
          "toId" : 0,
          "toName" : "Project",
          "linkType" : "Operator"
        } ],
        "rawPlan" : "Project [d_date_sk#61]\n+- BroadcastHashJoin [d_date#63], [d_date#654], LeftSemi, BuildRight, false\n   :- Filter isnotnull(d_date_sk#61)\n   :  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date_sk#61,d_date#63] Batched: true, DataFilters: [isnotnull(d_date_sk#61)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>\n   +- BroadcastQueryStage 0\n      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=542]\n         +- *(1) Project [d_date#654]\n            +- *(1) Filter (isnotnull(d_week_seq#656) AND (d_week_seq#656 = Subquery subquery#454, [id=#259]))\n               :  +- Subquery subquery#454, [id=#259]\n               :     +- AdaptiveSparkPlan isFinalPlan=true\n                        +- == Final Plan ==\n                           *(1) Project [d_week_seq#568]\n                           +- *(1) Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                              +- *(1) ColumnarToRow\n                                 +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n                        +- == Initial Plan ==\n                           Project [d_week_seq#568]\n                           +- Filter (isnotnull(d_date#566) AND (d_date#566 = 1998-02-19))\n                              +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#566,d_week_seq#568] Batched: true, DataFilters: [isnotnull(d_date#566), (d_date#566 = 1998-02-19)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,1998-02-19)], ReadSchema: struct<d_date:date,d_week_seq:int>\n               +- *(1) ColumnarToRow\n                  +- FileScan parquet spark_catalog.tpcds_100.date_dim[d_date#654,d_week_seq#656] Batched: true, DataFilters: [isnotnull(d_week_seq#656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node7-opa:8020/user/spark_benchmark/tpcds_100/dataset/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>\n"
      },
      "IM" : {
        "inputSizeInBytes" : 34724240,
        "inputRowCount" : 73056
      },
      "InitialPartitionNum" : 0,
      "PD" : { },
      "RunningQueryStageSnapshot" : {
        "RunningTasksNum" : 1,
        "FinishedTasksNum" : 4,
        "FinishedTasksTotalTimeInMs" : 7001.0,
        "FinishedTasksDistributionInMs" : [ 1137.0, 1170.0, 1662.0, 3032.0, 3032.0 ]
      },
      "QueryStageOptimizationId" : 3,
      "RuntimeConfiguration" : {
        "theta_p" : [ {
          "spark.sql.adaptive.advisoryPartitionSizeInBytes" : "64MB"
        }, {
          "spark.sql.adaptive.nonEmptyPartitionRatioForBroadcastJoin" : "0.2"
        }, {
          "spark.sql.adaptive.maxShuffledHashJoinLocalMapThreshold" : "0MB"
        }, {
          "spark.sql.adaptive.autoBroadcastJoinThreshold" : "10MB"
        }, {
          "spark.sql.shuffle.partitions" : "200"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionThresholdInBytes" : "256MB"
        }, {
          "spark.sql.adaptive.skewJoin.skewedPartitionFactor" : "5"
        }, {
          "spark.sql.files.maxPartitionBytes" : "128MB"
        }, {
          "spark.sql.files.openCostInBytes" : "4MB"
        } ],
        "theta_s" : [ {
          "spark.sql.adaptive.rebalancePartitionsSmallPartitionFactor" : "0.2"
        }, {
          "spark.sql.adaptive.coalescePartitions.minPartitionSize" : "1024KB"
        } ]
      },
      "RelevantQueryStageIds" : [ 6 ],
      "Objectives" : {
        "DurationInMs" : 4049,
        "TotalTasksDurationInMs" : 4043,
        "IOBytes" : {
          "Total" : 596340,
          "Details" : {
            "IR" : 596340,
            "IW" : 0,
            "SR" : 0,
            "SW" : 0
          }
        }
      }
    }
  },
  "SQLStartTimeInMs" : 1702227168304,
  "SQLEndTimeInMs" : 1702227180063,
  "Objectives" : {
    "DurationInMs" : 11759,
    "IOBytes" : {
      "Total" : 34363917,
      "Details" : {
        "IR" : 11849639,
        "IW" : 0,
        "SR" : 11257139,
        "SW" : 11257139
      }
    }
  }
}
